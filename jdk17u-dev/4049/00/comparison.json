{"files":[{"patch":"@@ -0,0 +1,163 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.ComponentOrientation;\n+import java.awt.Graphics;\n+import java.awt.event.KeyEvent;\n+import javax.swing.Icon;\n+import javax.swing.JCheckBoxMenuItem;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JRadioButtonMenuItem;\n+import javax.swing.KeyStroke;\n+import javax.swing.UIManager;\n+\n+final class MenuItemTestHelper {\n+\n+    public static JFrame getMenuItemTestFrame(boolean isLeft, String lafName) {\n+        boolean applyLookAndFeel = lafName != null;\n+        if (applyLookAndFeel) {\n+            try {\n+                UIManager.setLookAndFeel(lafName);\n+            } catch (Exception e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+\n+        Icon myIcon = new ColoredIcon(Color.RED, 10, 10);\n+        Icon myIcon2 = new ColoredIcon(Color.GREEN, 15, 10);\n+\n+        JMenuBar menuBar = new JMenuBar();\n+        menuBar.add(createViewMenu(myIcon, myIcon2));\n+        menuBar.add(createNoNothingMenu());\n+        menuBar.add(createSomeIconsMenu(myIcon, myIcon2));\n+\n+        String title = (isLeft ? \"(Left-to-right)\" : \"(Right-to-left)\") + \" - Menu Item Test\";\n+        JFrame frame = new JFrame(title);\n+        frame.setJMenuBar(menuBar);\n+        frame.applyComponentOrientation(isLeft\n+                ? ComponentOrientation.LEFT_TO_RIGHT\n+                : ComponentOrientation.RIGHT_TO_LEFT);\n+\n+        if (applyLookAndFeel) {\n+            String shortName = lafName.substring(lafName.lastIndexOf('.') + 1);\n+            JLabel label = new JLabel(\"<HTML><H2>\" + shortName + \"<\/H2><\/HTML>\");\n+            frame.setLayout(new BorderLayout());\n+            frame.add(label, BorderLayout.CENTER);\n+        }\n+\n+        frame.setSize(300, 300);\n+        return frame;\n+    }\n+\n+    public static JFrame getMenuItemTestFrame(boolean isLeft) {\n+        return getMenuItemTestFrame(isLeft, null);\n+    }\n+\n+    private static JMenu createViewMenu(Icon myIcon, Icon myIcon2) {\n+        JMenu menu = new JMenu(\"View\");\n+        menu.setMnemonic('V');\n+        menu.add(new JMenuItem(\"Refresh\"));\n+        menu.add(new JMenuItem(\"Customize...\"));\n+        menu.add(new JCheckBoxMenuItem(\"Show Toolbar\"));\n+        menu.addSeparator();\n+        menu.add(new JRadioButtonMenuItem(\"List\"));\n+        menu.add(new JRadioButtonMenuItem(\"Icons\"));\n+\n+        JRadioButtonMenuItem rm2 = new JRadioButtonMenuItem(\"And icon.\");\n+        rm2.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, KeyEvent.SHIFT_DOWN_MASK));\n+        rm2.setIcon(myIcon2);\n+        menu.add(rm2);\n+\n+        JRadioButtonMenuItem mi3 = new JRadioButtonMenuItem(\"Radio w\/icon\");\n+        mi3.setIcon(myIcon);\n+        menu.add(mi3);\n+\n+        menu.add(new JMenuItem(myIcon2));\n+\n+        JMenuItem mi4 = new JMenuItem(\"Item with icon\");\n+        mi4.setIcon(myIcon);\n+        menu.addSeparator();\n+        menu.add(mi4);\n+\n+        return menu;\n+    }\n+\n+    private static JMenu createNoNothingMenu() {\n+        final JMenu noMenu = new JMenu(\"No nothing\");\n+\n+        for (String label : new String[]{\"One\", \"Two\", \"Threeee\"}) {\n+            JMenuItem item = new JMenuItem(label);\n+            item.addActionListener((e) ->\n+                    PassFailJFrame.log(\"menu.width = \"\n+                            + noMenu.getPopupMenu().getWidth()));\n+            noMenu.add(item);\n+        }\n+\n+        return noMenu;\n+    }\n+\n+    private static JMenu createSomeIconsMenu(Icon myIcon, Icon myIcon2) {\n+        JMenu someIcons = new JMenu(\"Some icons\");\n+\n+        JMenuItem imi1 = new JMenuItem(\"Icon!\");\n+        imi1.setIcon(myIcon);\n+        someIcons.add(imi1);\n+\n+        JMenuItem imi2 = new JMenuItem(\"Wide icon!\");\n+        imi2.setIcon(myIcon2);\n+        someIcons.add(imi2);\n+\n+        someIcons.add(new JCheckBoxMenuItem(\"CheckBox\"));\n+        someIcons.add(new JRadioButtonMenuItem(\"RadioButton\"));\n+\n+        return someIcons;\n+    }\n+\n+    private record ColoredIcon(Color color, int width, int height)\n+            implements Icon {\n+        @Override\n+        public void paintIcon(Component c, Graphics g, int x, int y) {\n+            Color oldColor = g.getColor();\n+            g.setColor(color);\n+            g.fillRect(x, y, width, height);\n+            g.setColor(oldColor);\n+        }\n+\n+        @Override\n+        public int getIconWidth() {\n+            return width;\n+        }\n+\n+        @Override\n+        public int getIconHeight() {\n+            return height;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/MenuItemTest\/MenuItemTestHelper.java","additions":163,"deletions":0,"binary":false,"changes":163,"status":"added"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4729669\n+ * @summary 1.4 REGRESSION: Text edge of different types of JMenuItems are not aligned\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4729669\n+ *\/\n+\n+import java.util.List;\n+import javax.swing.JFrame;\n+\n+public class bug4729669 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        Two windows should appear: Left-to-right and Right-to-left.\n+        Check that text on all the menu items of all menus\n+        is properly vertically aligned.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4729669 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4729669::createTestUI)\n+                .positionTestUIRightColumn()\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static List<JFrame> createTestUI() {\n+        JFrame f1 = MenuItemTestHelper.getMenuItemTestFrame(true);\n+        JFrame f2 = MenuItemTestHelper.getMenuItemTestFrame(false);\n+        return List.of(f1, f2);\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/MenuItemTest\/bug4729669.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6197830\n+ * @requires (os.family == \"linux\")\n+ * @summary Fix for 4729669 does not work on Motif and GTK look and feels\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug6197830\n+ *\/\n+\n+import java.util.List;\n+import javax.swing.JFrame;\n+\n+public class bug6197830 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Four windows should appear: Left-to-right and Right-to-left for\n+            the two different Look and Feels (Motif and GTK).\n+            Check that text on all the menu items of all menus is properly\n+            vertically aligned.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug6197830 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug6197830::createTestUI)\n+                .positionTestUIBottomRowCentered()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static List<JFrame> createTestUI() {\n+        JFrame frame1 = MenuItemTestHelper.getMenuItemTestFrame(true,\n+                \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        JFrame frame2 = MenuItemTestHelper.getMenuItemTestFrame(false,\n+                \"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        JFrame frame3 = MenuItemTestHelper.getMenuItemTestFrame(true,\n+                \"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        JFrame frame4 = MenuItemTestHelper.getMenuItemTestFrame(false,\n+                \"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\");\n+        return List.of(frame1, frame2, frame3, frame4);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/MenuItemTest\/bug6197830.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4207339\n+ * @summary Verifies HTML label support for MenuItems\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4207339\n+ *\/\n+\n+import javax.swing.JPanel;\n+import javax.swing.JMenuItem;\n+\n+public class bug4207339 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        This tests html support in menuItem.\n+        A MenuItem will be shown.\n+        If the MenuItem is showing \"big\" text bigger than rest\n+        and \"red\" text in red color and the text are in multiple lines,\n+        and text \"Yo\" in blue color,\n+        then press Pass else press Fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4207339 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .splitUI(bug4207339::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JPanel createTestUI() {\n+        JPanel panel = new JPanel();\n+        JMenuItem mi = new JMenuItem(\"<html><center>Is this text <font size=+3>big<\/font>\" +\n+                                     \"and <font color=red>red<\/font>?\" +\n+                                     \"<br>And on multiple lines?<br><br>\" +\n+                                     \"<font size=+2 color=blue face=AvantGarde>Yo!<\/font>\" +\n+                                     \"Then press <em><b>PASS<\/b>!<\/center><\/html>\");\n+        panel.add(mi);\n+        return panel;\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4207339.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4327146\n+ * @summary Tests menu width after removeAll()\n+ * @key headful\n+ * @run main bug4327146\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+public class bug4327146 {\n+    private static JButton b;\n+    private static JMenu m;\n+    private static JFrame frame;\n+    private static volatile Point loc;\n+    private static volatile Dimension dim;\n+    private static volatile Rectangle old_popupBounds;\n+    private static volatile Rectangle new_popupBounds;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"bug4327146\");\n+                m = new JMenu(\"Menu\");\n+                m.add(new JMenuItem(\"I'm an ugly bug, fix me right now please!\"));\n+\n+                JMenuBar mbar = new JMenuBar();\n+                mbar.add(m);\n+                frame.setJMenuBar(mbar);\n+\n+                b = new JButton(\"Cut\");\n+                b.addActionListener(e -> {\n+                    m.removeAll();\n+                    m.add(new JMenuItem(\"Fixed :)\"));\n+                });\n+                mbar.add(b);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = b.getLocationOnScreen();\n+                dim = b.getSize();\n+                m.doClick();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            SwingUtilities.invokeAndWait(() -> {\n+                old_popupBounds = m.getPopupMenu().getBounds();\n+            });\n+            robot.mouseMove(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            SwingUtilities.invokeAndWait(() -> {\n+                m.doClick();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            SwingUtilities.invokeAndWait(() -> {\n+                new_popupBounds = m.getPopupMenu().getBounds();\n+            });\n+            if (new_popupBounds.getWidth() >= old_popupBounds.getWidth()) {\n+                System.out.println(\"before cut popup Bounds \" + old_popupBounds);\n+                System.out.println(\"after cut popupBounds \" + new_popupBounds);\n+                throw new RuntimeException(\"JMenu popup width is wrong\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4327146.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4402082\n+ * @requires (os.family == \"windows\")\n+ * @summary Tests that JMenuItem accelerator is rendered correctly.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4402082\n+ *\/\n+\n+import java.awt.Container;\n+import java.awt.GridLayout;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.KeyStroke;\n+import javax.swing.UIManager;\n+\n+public class bug4402082 {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        You see three menu items, each having different look-and-feels.\n+        Each menu item should display accelerator \"F1\" on its right side.\n+        The accelerator should be fully visible. If it is partially\n+        offscreen, or not visible at all, test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"bug4402082 Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(bug4402082::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static JMenuItem getMenuItem(String lnf) {\n+        try {\n+            UIManager.setLookAndFeel(lnf);\n+        } catch (Exception exc) {\n+            System.err.println(\"Could not load LookAndFeel: \" + lnf);\n+        }\n+        JMenuItem mi = new JMenuItem(\"Bad Item\");\n+        mi.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0));\n+        return mi;\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"bug4402082\");\n+        Container pane = frame.getContentPane();\n+        pane.setLayout(new GridLayout(3,1));\n+        pane.add(getMenuItem(\"javax.swing.plaf.metal.MetalLookAndFeel\"));\n+        pane.add(getMenuItem(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\"));\n+        pane.add(getMenuItem(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\"));\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4402082.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -1,186 +0,0 @@\n-\/*\n- * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 4729669\n- * @summary 1.4 REGRESSION: Text edge of different types of JMenuItems are not aligned\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual bug4729669\n- *\/\n-\n-import java.awt.Color;\n-import java.awt.ComponentOrientation;\n-import java.awt.Component;\n-import java.awt.Graphics;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.KeyEvent;\n-\n-import javax.swing.AbstractAction;\n-import javax.swing.Icon;\n-import javax.swing.JCheckBoxMenuItem;\n-import javax.swing.JFrame;\n-import javax.swing.JMenu;\n-import javax.swing.JMenuBar;\n-import javax.swing.JMenuItem;\n-import javax.swing.JRadioButtonMenuItem;\n-import javax.swing.KeyStroke;\n-\n-import java.util.List;\n-\n-public class bug4729669 {\n-\n-    private static final String INSTRUCTIONS = \"\"\"\n-        Two windows should appear: Left-to-right and Right-to-left.\n-        Check that text on all the menu items of all menus\n-        is properly vertically aligned.\"\"\";\n-\n-    public static void main(String[] args) throws Exception {\n-        PassFailJFrame.builder()\n-                .title(\"bug4729669 Instructions\")\n-                .instructions(INSTRUCTIONS)\n-                .columns(35)\n-                .testUI(bug4729669::createTestUI)\n-                .position(PassFailJFrame.Position.TOP_LEFT_CORNER)\n-                .logArea()\n-                .build()\n-                .awaitAndCheck();\n-    }\n-\n-    private static List<JFrame> createTestUI() {\n-        JFrame f1 = MenuItemTest.doMenuItemTest(true);\n-        f1.setLocation(300, 300);\n-        JFrame f2 = MenuItemTest.doMenuItemTest(false);\n-        f2.setLocation(500, 300);\n-        return List.of(f1, f2);\n-    }\n-}\n-\n-class MenuItemTest {\n-    public static JFrame doMenuItemTest(boolean isLeft) {\n-        JMenu menu = new JMenu(\"View\");\n-        menu.setMnemonic('V');\n-\n-        menu.add(new JMenuItem(\"Refresh\"));\n-        menu.add(new JMenuItem(\"Customize...\"));\n-        menu.add(new JCheckBoxMenuItem(\"Show Toolbar\"));\n-        menu.addSeparator();\n-        menu.add(new JRadioButtonMenuItem(\"List\"));\n-        menu.add(new JRadioButtonMenuItem(\"Icons\"));\n-        JRadioButtonMenuItem rm2 = new JRadioButtonMenuItem(\"And icon.\");\n-        rm2.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F1,\n-                                                  KeyEvent.SHIFT_MASK));\n-        menu.add(rm2);\n-        JRadioButtonMenuItem mi3 = new JRadioButtonMenuItem(\"Radio w\/icon\");\n-\n-        Icon myIcon = new Icon() { \/\/ 10 pixel red\n-            public void paintIcon(Component c, Graphics g, int x, int y) {\n-                Color color = g.getColor();\n-                g.setColor(Color.RED);\n-                g.fillRect(x, y, 10, 10);\n-                g.setColor(color);\n-            }\n-\n-            public int getIconWidth() {\n-                return 10;\n-            }\n-\n-            public int getIconHeight() {\n-                return 10;\n-            }\n-        };\n-\n-        Icon myIcon2 = new Icon() { \/\/ 15 pixel green\n-            public void paintIcon(Component c, Graphics g, int x, int y) {\n-                Color color = g.getColor();\n-                g.setColor(Color.GREEN);\n-                g.fillRect(x, y, 15, 10);\n-                g.setColor(color);\n-            }\n-\n-            public int getIconWidth() {\n-                return 15;\n-            }\n-\n-            public int getIconHeight() {\n-                return 10;\n-            }\n-        };\n-\n-        rm2.setIcon(myIcon2);\n-\n-        mi3.setIcon(myIcon);\n-        menu.add(mi3);\n-        menu.add(new JMenuItem(myIcon2));\n-\n-        final JMenu menu2 = new JMenu(\"No nothing\");\n-        menu2.add(\"One\").addActionListener(new AbstractAction() {\n-            public void actionPerformed(ActionEvent e) {\n-                PassFailJFrame.log(\"menu.width = \" + menu2.getPopupMenu().getWidth());\n-            }\n-        });\n-        menu2.add(\"Two\").addActionListener(new AbstractAction() {\n-            public void actionPerformed(ActionEvent e) {\n-                PassFailJFrame.log(\"menu.width = \" + menu2.getPopupMenu().getWidth());\n-            }\n-        });\n-        menu2.add(\"Threeee\").addActionListener(new AbstractAction() {\n-            public void actionPerformed(ActionEvent e) {\n-                PassFailJFrame.log(\"menu.width = \" + menu2.getPopupMenu().getWidth());\n-            }\n-        });\n-\n-        JMenuItem mi4 = new JMenuItem(\"Item with icon\");\n-        mi4.setIcon(myIcon);\n-        menu.addSeparator();\n-        menu.add(mi4);\n-        String title = \"Menu Item Test \" + (isLeft ? \"(Left-to-right)\" : \"(Right-to-left)\");\n-        JFrame frame = new JFrame(title);\n-\n-        JMenuBar menuBar = new JMenuBar();\n-        menuBar.add(menu);\n-        menuBar.add(menu2);\n-\n-        JMenu someIcons = new JMenu(\"Some icons\");\n-        JMenuItem imi1 = new JMenuItem(\"Icon!\");\n-        imi1.setIcon(myIcon);\n-        someIcons.add(imi1);\n-        JMenuItem imi2 = new JMenuItem(\"Wide icon!\");\n-        imi2.setIcon(myIcon2);\n-        someIcons.add(imi2);\n-        someIcons.add(new JCheckBoxMenuItem(\"CheckBox\"));\n-        someIcons.add(new JRadioButtonMenuItem(\"RadioButton\"));\n-        menuBar.add(someIcons);\n-        frame.setJMenuBar(menuBar);\n-        ComponentOrientation co = (isLeft ?\n-                ComponentOrientation.LEFT_TO_RIGHT :\n-                ComponentOrientation.RIGHT_TO_LEFT);\n-        frame.applyComponentOrientation(co);\n-        frame.setSize(300, 300);\n-        int frameX = isLeft ? 0 : 600;\n-        frame.setLocation(frameX, 20);\n-        return frame;\n-    }\n-\n-}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4729669.java","additions":0,"deletions":186,"binary":false,"changes":186,"status":"deleted"}]}