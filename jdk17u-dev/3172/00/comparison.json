{"files":[{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4290656\n+ * @summary Tests if custom AbstractButton implementation fails with Metal L&F\n+ * @key headful\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Graphics;\n+import java.awt.Robot;\n+import javax.swing.AbstractButton;\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.ButtonUI;\n+\n+public class bug4290656 {\n+    static JFrame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                f = new JFrame(\"bug4290656\");\n+                try {\n+                    UIManager.setLookAndFeel(new javax.swing.plaf.metal.MetalLookAndFeel());\n+                } catch (Exception e) {\n+                    throw new RuntimeException(\"Failed to set metal L&F.\");\n+                }\n+\n+                MyCustomButton button = new MyCustomButton();\n+                MyCustomToggleButton toggleButton = new MyCustomToggleButton();\n+                f.getContentPane().add(button, BorderLayout.NORTH);\n+                f.getContentPane().add(toggleButton, BorderLayout.SOUTH);\n+\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+            });\n+\n+            Robot r = new Robot();\n+            r.waitForIdle();\n+            r.delay(1000);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n+\n+class MyCustomButton extends AbstractButton {\n+    private static final String uiClassID = \"ButtonUI\";\n+\n+    public MyCustomButton() {\n+        setModel(new DefaultButtonModel());\n+        init(null, null);\n+    }\n+\n+    public void updateUI() {\n+        setUI((ButtonUI) UIManager.getUI(this));\n+    }\n+\n+    public String getUIClassID() {\n+        return uiClassID;\n+    }\n+\n+    protected void paintBorder(Graphics g) {\n+        super.paintBorder(g);\n+    }\n+}\n+\n+class MyCustomToggleButton extends AbstractButton {\n+    private static final String uiClassID = \"ToggleButtonUI\";\n+\n+    public MyCustomToggleButton() {\n+        setModel(new DefaultButtonModel());\n+        init(null, null);\n+    }\n+\n+    public void updateUI() {\n+        setUI((ButtonUI) UIManager.getUI(this));\n+    }\n+\n+    public String getUIClassID() {\n+        return uiClassID;\n+    }\n+\n+    protected void paintBorder(Graphics g) {\n+        super.paintBorder(g);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/AbstractButton\/bug4290656.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4236213\n+ * @summary Regression test isJavaLAFLockedCorrectly.java Failing with JDK-1.2.2-R\n+ *\/\n+\n+import javax.swing.LookAndFeel;\n+\n+public class isJavaLAFLockedCorrectly {\n+    public static void main(String[] args) {\n+        System.out.println(\" === isJavaLAFLockedCorrectly === \");\n+\n+        LookAndFeel newJLF;\n+        try {\n+            \/\/ try to make a version of the JLF\n+            Class jlfClass = Class.forName(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+            newJLF = (LookAndFeel) (jlfClass.newInstance());\n+        } catch (Exception e) {\n+            \/\/ if any of these things didn't work, throw an exception\n+            throw new RuntimeException(\"JLF not correctly (un)locked \" +\n+                    \"- Class files probably missing\");\n+        }\n+\n+        \/\/ see if the JLF is supported here\n+        \/\/ it sure better be as it's supposed to be supported everywhere\n+        if (newJLF.isSupportedLookAndFeel() == true) {\n+            System.out.println(\"\\t JLF correctly locked\");\n+        } else {\n+            throw new RuntimeException(\"JLF not correctly (un)locked\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/isJavaLAFLockedCorrectly.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ *\/\n+\n+import javax.swing.LookAndFeel;\n+\n+public class isMultiLAFLockedCorrectly {\n+    public static void main(String[] args) {\n+        System.out.println(\" === isMultiLAFLockedCorrectly === \");\n+\n+        LookAndFeel newMulti;\n+        try {\n+            \/\/ try to make a version of the Multi L&F\n+            Class multiClass = Class.forName(\"javax.swing.plaf.multi.MultiLookAndFeel\");\n+            newMulti = (LookAndFeel) (multiClass.newInstance());\n+        } catch (Exception e) {\n+            \/\/ if any of these things didn't work, throw an exception\n+            throw new RuntimeException(\"Multi L&F not correctly locked \" +\n+                    \"- Class files probably missing\");\n+        }\n+\n+        \/\/ see if the Multi L&F is supported here\n+        \/\/ it sure better be as it's supposed to be supported everywhere\n+        if (newMulti.isSupportedLookAndFeel() == true) {\n+            System.out.println(\"\\t Multi L&F correctly locked\");\n+        } else {\n+            throw new RuntimeException(\"Multi L&F not correctly locked\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/isMultiLAFLockedCorrectly.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4221007\n+ * @summary Tests whether MetalInternalFrameTitlePane is public\n+ *\/\n+\n+import javax.swing.JInternalFrame;\n+import javax.swing.plaf.metal.MetalInternalFrameTitlePane;\n+\n+public class bug4221007 {\n+    public static void main(String[] args) {\n+        MetalInternalFrameTitlePane mitftp =\n+                new MetalInternalFrameTitlePane(new JInternalFrame());\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/MetalInternalFrameTitlePane\/bug4221007.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}