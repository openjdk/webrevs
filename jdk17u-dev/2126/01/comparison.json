{"files":[{"patch":"","filename":"make\/data\/charsetmapping\/MS950_HKSCS.map","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"make\/data\/charsetmapping\/HKSCS2008.map","status":"copied"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\/*\n- * @test\n- * @bug 4512215 4818420 4819436\n- * @summary Updated currency data.\n- *\/\n-\n-import java.util.Currency;\n-import java.util.Locale;\n-\n-public class Bug4512215 {\n-\n-    public static void main(String[] args) throws Exception {\n-        testCurrencyDefined(\"XBD\", -1);\n-        testCountryCurrency(\"TJ\", \"TJS\", 2);\n-        testCountryCurrency(\"FO\", \"DKK\", 2);\n-        testCountryCurrency(\"FK\", \"FKP\", 2);\n-\n-        testCountryCurrency(\"AF\", \"AFN\", 2);    \/\/ changed from \"AFA\"\n-\n-        \/\/ Newsletter V-5 on ISO 3166-1 (2002-05-20)\n-        testCountryCurrency(\"TL\", \"USD\", 2);    \/\/ successor to TP\/TPE\n-\n-        \/\/ Newsletter V-8 on ISO 3166-1 (2003-07-23)\n-        testCountryCurrency(\"CS\", \"CSD\", 2);    \/\/ successor to YU\/YUM\n-    }\n-\n-    private static void testCountryCurrency(String country, String currencyCode,\n-            int digits) {\n-        testCurrencyDefined(currencyCode, digits);\n-        Currency currency = Currency.getInstance(new Locale(\"\", country));\n-        if (!currency.getCurrencyCode().equals(currencyCode)) {\n-            throw new RuntimeException(\"[\" + country\n-                    + \"] expected: \" + currencyCode\n-                    + \"; got: \" + currency.getCurrencyCode());\n-        }\n-    }\n-\n-    private static void testCurrencyDefined(String currencyCode, int digits) {\n-        Currency currency = Currency.getInstance(currencyCode);\n-        if (currency.getDefaultFractionDigits() != digits) {\n-            throw new RuntimeException(\"[\" + currencyCode\n-                    + \"] expected: \" + digits\n-                    + \"; got: \" + currency.getDefaultFractionDigits());\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/Currency\/Bug4512215.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,84 +0,0 @@\n-\/*\n- * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\/*\n- * @test\n- * @bug 6807534\n- * @summary check whether the default implementation of\n- *    CurrencNameProvider.getDisplayName(String, Locale) throws appropriate\n- *    exceptions when necessary.\n- *\/\n-\n-import java.util.Locale;\n-import java.util.spi.CurrencyNameProvider;\n-\n-public class Bug6807534 {\n-\n-    static final CurrencyNameProvider cnp = new CurrencyNameProviderImpl();\n-\n-    public static void main(String[] args) throws Exception {\n-        \/\/ test for NullPointerException (currencyCode)\n-        try {\n-            cnp.getDisplayName(null, Locale.US);\n-            throwException(\"NPE was not thrown with null currencyCode\");\n-        } catch (NullPointerException npe) {}\n-\n-        \/\/ test for NullPointerException (locale)\n-        try {\n-            cnp.getDisplayName(\"USD\", null);\n-            throwException(\"NPE was not thrown with null locale\");\n-        } catch (NullPointerException npe) {}\n-\n-        \/\/ test for IllegalArgumentException (illegal currencyCode)\n-        try {\n-            cnp.getDisplayName(\"INVALID\", Locale.US);\n-            throwException(\"IllegalArgumentException was not thrown with invalid currency code\");\n-        } catch (IllegalArgumentException iae) {}\n-        try {\n-            cnp.getDisplayName(\"inv\", Locale.US);\n-            throwException(\"IllegalArgumentException was not thrown with invalid currency code\");\n-        } catch (IllegalArgumentException iae) {}\n-\n-        \/\/ test for IllegalArgumentException (non-supported locale)\n-        try {\n-            cnp.getDisplayName(\"USD\", Locale.JAPAN);\n-            throwException(\"IllegalArgumentException was not thrown with non-supported locale\");\n-        } catch (IllegalArgumentException iae) {}\n-    }\n-\n-    static void throwException(String msg) {\n-        throw new RuntimeException(\"test failed. \"+msg);\n-    }\n-\n-    static class CurrencyNameProviderImpl extends CurrencyNameProvider {\n-        \/\/ dummy implementation\n-        public String getSymbol(String currencyCode, Locale locale) {\n-            return \"\";\n-        }\n-\n-        public Locale[] getAvailableLocales() {\n-            Locale[] avail = new Locale[1];\n-            avail[0] = Locale.US;\n-            return avail;\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/util\/Currency\/Bug6807534.java","additions":0,"deletions":84,"binary":false,"changes":84,"status":"deleted"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\/*\n- * @test\n- * @bug 8154295\n- * @summary Check getNumericCodeAsString() method which returns numeric code as a 3 digit String.\n- *\/\n-\n-import java.util.Currency;\n-\n-public class Bug8154295 {\n-\n-    public static void main(String[] args) {\n-\n-        String numericCode = Currency.getInstance(\"AFA\").getNumericCodeAsString();\n-        if (!numericCode.equals(\"004\")) { \/\/should return \"004\" (a 3 digit string)\n-           throw new RuntimeException(\"[Expected 004, \"\n-                + \"found \"+numericCode+\" for AFA]\");\n-        }\n-\n-        numericCode = Currency.getInstance(\"AUD\").getNumericCodeAsString();\n-        if (!numericCode.equals(\"036\")) { \/\/should return \"036\" (a 3 digit string)\n-            throw new RuntimeException(\"[Expected 036, \"\n-                + \"found \"+numericCode+\" for AUD]\");\n-        }\n-\n-        numericCode = Currency.getInstance(\"USD\").getNumericCodeAsString();\n-        if (!numericCode.equals(\"840\")) {\/\/ should return \"840\" (a 3 digit string)\n-            throw new RuntimeException(\"[Expected 840, \"\n-                + \"found \"+numericCode+\" for USD]\");\n-        }\n-\n-    }\n-\n-}\n","filename":"test\/jdk\/java\/util\/Currency\/Bug8154295.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 8186801 8186751\n+ * @bug 8186801 8186751 8310631\n@@ -572,1 +572,1 @@\n-                             \"\/..\/..\/..\/..\/make\/data\/charsetmapping\");\n+            \"\/..\/..\/..\/..\/..\/make\/data\/charsetmapping\").normalize();\n@@ -574,3 +574,1 @@\n-            \/\/ not inside jdk repo, no mappings, exit silently\n-            log.println(\"Nothing done, not in a jdk repo: \");\n-            return;\n+            throw new Exception(\"charsetmapping files cannot be located in \" + dir);\n@@ -611,1 +609,2 @@\n-            if (!cs.aliases().equals(csinfo.aliases)) {\n+            if (!cs.aliases().equals(csinfo.aliases)\n+                && !csname.equals(\"GB18030\")) {  \/\/ no alias in \"charsets\" file\n@@ -628,0 +627,13 @@\n+                \/\/ Ignore these cs, as mapping files are not provided\n+                if (csinfo.csName.equals(\"x-IBM942C\") ||\n+                        csinfo.csName.equals(\"x-IBM943C\") ||\n+                        csinfo.csName.equals(\"x-IBM834\") ||\n+                        csinfo.csName.equals(\"x-IBM949C\") ||\n+                        csinfo.csName.equals(\"x-IBM964\") ||\n+                        csinfo.csName.equals(\"x-IBM29626C\"))\n+                {\n+                    log.println(\"    [**** skipped, mapping file is not provided]\");\n+                    known++;\n+                    continue;\n+                }\n+\n","filename":"test\/jdk\/sun\/nio\/cs\/TestCharsetMapping.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"}]}