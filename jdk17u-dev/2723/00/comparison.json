{"files":[{"patch":"@@ -567,0 +567,15 @@\n+                    Window oppositeWindow = e.getOppositeWindow();\n+\n+                    \/\/ The focus can move between the window calling the popup,\n+                    \/\/ and the popup window itself.\n+                    \/\/ We only dismiss the popup in other cases.\n+                    if (oppositeWindow != null) {\n+                        if (window == oppositeWindow.getParent() ) {\n+                            addWaylandWindowFocusListenerToWindow(oppositeWindow);\n+                            return;\n+                        }\n+                        if (window.getParent() == oppositeWindow) {\n+                            return;\n+                        }\n+                    }\n+\n@@ -581,0 +596,9 @@\n+    private static void addWaylandWindowFocusListenerToWindow(Window window) {\n+        if (!Arrays\n+                .asList(window.getWindowFocusListeners())\n+                .contains(waylandWindowFocusListener)\n+        ) {\n+            window.addWindowFocusListener(waylandWindowFocusListener);\n+        }\n+    }\n+\n@@ -583,6 +607,1 @@\n-        if (!isOnWayland()\n-                || invoker == null\n-                || Arrays\n-                    .asList(invoker.getWindowFocusListeners())\n-                    .contains(waylandWindowFocusListener)\n-        ) {\n+        if (!isOnWayland() || invoker == null) {\n@@ -592,1 +611,1 @@\n-        invoker.addWindowFocusListener(waylandWindowFocusListener);\n+        addWaylandWindowFocusListenerToWindow(invoker);\n@@ -602,0 +621,3 @@\n+        for (Window ownedWindow : invoker.getOwnedWindows()) {\n+            ownedWindow.removeWindowFocusListener(waylandWindowFocusListener);\n+        }\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/UNIXToolkit.java","additions":29,"deletions":7,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+  * @test\n+  * @key headful\n+  * @bug 8319103\n+  * @requires (os.family == \"linux\")\n+  * @library \/java\/awt\/regtesthelpers\n+  * @build PassFailJFrame\n+  * @summary Tests if the focusable popup can be dismissed when the parent\n+  *          window or the popup itself loses focus in Wayland.\n+  * @run main\/manual FocusablePopupDismissTest\n+  *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPopupMenu;\n+import javax.swing.JTextField;\n+import java.awt.Window;\n+import java.util.List;\n+\n+public class FocusablePopupDismissTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            A frame with a \"Click me\" button should appear next to the window\n+            with this instruction.\n+\n+            Click on the \"Click me\" button.\n+\n+            If the JTextField popup with \"Some text\" is not showing on the screen,\n+            click Fail.\n+\n+            The following steps require some focusable system window to be displayed\n+            on the screen. This could be a system settings window, file manager, etc.\n+\n+            Click on the \"Click me\" button if the popup is not displayed\n+            on the screen.\n+\n+            While the popup is displayed, click on some other window on the desktop.\n+            If the popup has disappeared, click Pass, otherwise click Fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        if (System.getenv(\"WAYLAND_DISPLAY\") == null) {\n+            \/\/test is valid only when running on Wayland.\n+            return;\n+        }\n+\n+        PassFailJFrame.builder()\n+                .title(\"FocusablePopupDismissTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(20)\n+                .columns(45)\n+                .testUI(FocusablePopupDismissTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static List<Window> createTestUI() {\n+        JFrame frame = new JFrame(\"FocusablePopupDismissTest\");\n+        JButton button = new JButton(\"Click me\");\n+        frame.add(button);\n+\n+        button.addActionListener(e -> {\n+            JPopupMenu popupMenu = new JPopupMenu();\n+            JTextField textField = new JTextField(\"Some text\", 10);\n+            popupMenu.add(textField);\n+            popupMenu.show(button, 0, button.getHeight());\n+        });\n+        frame.pack();\n+\n+        return List.of(frame);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/FocusablePopupDismissTest.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"}]}