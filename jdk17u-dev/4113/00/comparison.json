{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2015, 2020 SAP SE. All rights reserved.\n+ * Copyright (c) 2008, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025 SAP SE. All rights reserved.\n@@ -31,0 +31,4 @@\n+#include <libperfstat.h>\n+#include <pthread.h>\n+#include <stdlib.h>\n+#include <time.h>\n@@ -33,0 +37,29 @@\n+static struct perfMetrics{\n+    unsigned long long timebase;\n+    perfstat_process_t stats;\n+    perfstat_cpu_total_t cpu_total;\n+} counters;\n+\n+static pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;\n+\n+int perfInit() {\n+    static int initialized = 0;\n+    if (!initialized) {\n+\n+        perfstat_id_t id;\n+        counters.stats = (perfstat_process_t){0};\n+        counters.timebase = 0;\n+        int rc = perfstat_cpu_total(NULL, &counters.cpu_total, sizeof(perfstat_cpu_total_t), 1);\n+        if (rc < 0) {\n+            return -1;\n+        }\n+        rc = perfstat_process(&id, &counters.stats, sizeof(perfstat_process_t), 1);\n+        if (rc < 0) {\n+            return -1;\n+        }\n+        counters.timebase = counters.stats.last_timebase;\n+        initialized = 1;\n+    }\n+    return initialized ? 0 : -1;\n+}\n+\n@@ -37,1 +70,28 @@\n-    return -1.0;\n+    double load = -1.0;\n+    pthread_mutex_lock(&lock);\n+    if (perfInit() == 0) {\n+        int ret;\n+        perfstat_cpu_total_t cpu_total;\n+        ret = perfstat_cpu_total(NULL, &cpu_total, sizeof(perfstat_cpu_total_t), 1);\n+        if (ret < 0) {\n+            return -1.0;\n+        }\n+        long long user_diff = cpu_total.user - counters.cpu_total.user;\n+        long long sys_diff = cpu_total.sys - counters.cpu_total.sys;\n+        long long idle_diff = cpu_total.idle - counters.cpu_total.idle;\n+        long long wait_diff = cpu_total.wait - counters.cpu_total.wait;\n+        long long total = user_diff + sys_diff + idle_diff + wait_diff;\n+        if (total < (user_diff + sys_diff)) {\n+            total = user_diff + sys_diff;\n+        }\n+        if (total == 0) {\n+            load = 0.0;\n+        } else {\n+            load = (double)(user_diff + sys_diff) \/ total;\n+            load = MAX(load, 0.0);\n+            load = MIN(load, 1.0);\n+        }\n+        counters.cpu_total = cpu_total;\n+    }\n+    pthread_mutex_unlock(&lock);\n+    return load;\n@@ -44,1 +104,32 @@\n-    return -1.0;\n+    perfstat_process_t curr_stats;\n+    perfstat_id_t id;\n+    unsigned long long curr_timebase, timebase_diff;\n+    double user_diff, sys_diff, delta_time;\n+    double cpu_load = -1.0;\n+    pthread_mutex_lock(&lock);\n+    if (perfInit() == 0) {\n+        int ret;\n+        ret = perfstat_process(&id, &curr_stats, sizeof(perfstat_process_t), 1);\n+        if (ret < 0) {\n+            return -1.0;\n+        }\n+        curr_timebase = curr_stats.last_timebase;\n+        timebase_diff = curr_timebase - counters.timebase;\n+        if ((long long)timebase_diff < 0 || XINTFRAC == 0) {\n+            return -1.0;\n+        }\n+        delta_time = HTIC2NANOSEC(timebase_diff) \/ 1000000000.0;\n+        user_diff = (double)(curr_stats.ucpu_time - counters.stats.ucpu_time);\n+        sys_diff  = (double)(curr_stats.scpu_time - counters.stats.scpu_time);\n+        counters.stats = curr_stats;\n+        counters.timebase = curr_timebase;\n+        if (delta_time == 0) {\n+            cpu_load = 0.0;\n+        } else {\n+            cpu_load = (user_diff + sys_diff) \/ delta_time;\n+            cpu_load = MAX(cpu_load, 0.0);\n+            cpu_load = MIN(cpu_load, 1.0);\n+        }\n+    }\n+    pthread_mutex_unlock(&lock);\n+    return (jdouble)cpu_load;\n","filename":"src\/jdk.management\/aix\/native\/libmanagement_ext\/UnixOperatingSystem.c","additions":95,"deletions":4,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -566,2 +566,0 @@\n-com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957 aix-all\n-com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957 aix-all\n@@ -580,1 +578,0 @@\n-javax\/management\/MBeanServer\/OldMBeanServerTest.java            8030957 aix-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}