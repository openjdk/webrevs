{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -241,0 +241,2 @@\n+    private static final Locale NB = Locale.forLanguageTag(\"nb\");\n+    private static final Locale NO = Locale.forLanguageTag(\"no\");\n@@ -250,3 +252,8 @@\n-                    if (applied.contains(p)) {\n-                        \/\/ avoid circular recursion (could happen with nb\/no case)\n-                        continue;\n+                    \/\/ Tweak for Norwegian locales, CLDR switched the canonical form of\n+                    \/\/ Norwegian Bokmal language code from \"nb\" to \"no\" in CLDR 39\n+                    \/\/ (https:\/\/unicode-org.atlassian.net\/browse\/CLDR-2698)\n+                    if (p.equals(NB) || p.equals(NO)) {\n+                        applied.add(NO);\n+                        applied.add(Locale.ROOT);\n+                    } else {\n+                        applied.addAll(applyParentLocales(baseName, super.getCandidateLocales(baseName, p)));\n@@ -254,1 +261,0 @@\n-                    applied.addAll(applyParentLocales(baseName, super.getCandidateLocales(baseName, p)));\n","filename":"src\/java.base\/share\/classes\/sun\/util\/cldr\/CLDRLocaleProviderAdapter.java","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282227\n+ * @modules jdk.localedata\n+ * @summary Checks Norwegian locale fallback retrieves resource bundles correctly.\n+ * @run main\/othervm -Djava.locale.providers=COMPAT NorwegianFallbackTest nb\n+ * @run main\/othervm -Djava.locale.providers=COMPAT NorwegianFallbackTest nn\n+ * @run main\/othervm -Djava.locale.providers=COMPAT NorwegianFallbackTest no\n+ * @run main\/othervm -Djava.locale.providers=CLDR NorwegianFallbackTest nb\n+ * @run main\/othervm -Djava.locale.providers=CLDR NorwegianFallbackTest nn\n+ * @run main\/othervm -Djava.locale.providers=CLDR NorwegianFallbackTest no\n+ *\/\n+\n+import java.text.DateFormatSymbols;\n+import java.util.List;\n+import java.util.Locale;\n+import static java.util.Calendar.SUNDAY;\n+\n+public class NorwegianFallbackTest {\n+\n+    private final static String SUN_ROOT = DateFormatSymbols.getInstance(Locale.ROOT).getShortWeekdays()[SUNDAY];\n+    private final static List<Locale> TEST_LOCS = List.of(\n+            Locale.forLanguageTag(\"nb\"),\n+            Locale.forLanguageTag(\"nn\"),\n+            Locale.forLanguageTag(\"no\")\n+    );\n+\n+    public static void main(String... args) {\n+        \/\/ Dummy instance\n+        var startup_loc = Locale.forLanguageTag(args[0]);\n+        DateFormatSymbols.getInstance(startup_loc);\n+\n+        TEST_LOCS.stream()\n+            .peek(l -> System.out.print(\"Testing locale: \" + l + \", (startup locale: \" + startup_loc + \")... \"))\n+            .map(l -> DateFormatSymbols.getInstance(l).getShortWeekdays()[SUNDAY])\n+            .forEach(sun -> {\n+                if (sun.equals(SUN_ROOT)) {\n+                    throw new RuntimeException(\"Norwegian fallback failed\");\n+                } else {\n+                    System.out.println(\"Got \" + \"\\\"\" + sun + \"\\\" for Sunday short name\");\n+                }\n+            });\n+    }\n+}\n","filename":"test\/jdk\/sun\/util\/resources\/cldr\/NorwegianFallbackTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}