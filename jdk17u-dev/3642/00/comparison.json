{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -42,0 +43,1 @@\n+    private static final int MAX_TRIES = 6; \/\/ limit attempts to receive Notification data\n@@ -65,2 +67,2 @@\n-        \/\/ 2. Check CompositeData that doest not represnt\n-        \/\/ MemoryNotificationInfo - IllegalArgumentException must be thrown\n+        \/\/ 2. Check CompositeData that does not represent MemoryNotificationInfo\n+        \/\/ throws IllegalArgumentException\n@@ -88,1 +90,1 @@\n-            \/\/ Expected: CompositeData doest not represnt MemoryNotificationInfo\n+            \/\/ Expected: CompositeData does not represent MemoryNotificationInfo\n@@ -91,1 +93,1 @@\n-        log.display(\"check for CompositeData doest not represnt MemoryNotificationInfo passed.\");\n+        log.display(\"check that CompositeData does not represent MemoryNotificationInfo passed.\");\n@@ -93,1 +95,2 @@\n-        \/\/ 3. Check correct CompositeData\n+        \/\/ 3. Check correct CompositeData usage:\n+        \/\/ First try to provoke a Notification on a MemoryPool.\n@@ -126,1 +129,5 @@\n-        \/\/ eat memory just to emmit notification\n+        if (poolObject == null) {\n+            throw new TestFailure(\"No memory pool found to test.\");\n+        }\n+\n+        \/\/ eat memory just to emit notification\n@@ -136,4 +143,11 @@\n-        GarbageUtils.eatMemory(stresser);\n-\n-        boolean messageNotRecieved = true;\n-        while(messageNotRecieved) {\n+        int oomCount = GarbageUtils.eatMemory(stresser);\n+        log.display(\"eatMemory returns OOM count: \" + oomCount);\n+\n+        \/\/ Check for the message.  Poll on queue to avoid waiting forver on failure.\n+        \/\/ Notification is known to fail, very rarely, with -Xcomp where the allocations\n+        \/\/ do not affect the monitored pool. Possibly a timing issue, where the \"eatMemory\"\n+        \/\/ is done before Notification\/threshold processing happens.\n+        \/\/ The Notification is quite immediate, other than that problem.\n+        boolean messageReceived = false;\n+        int tries = 0;\n+        while (!messageReceived && ++tries < MAX_TRIES) {\n@@ -141,2 +155,8 @@\n-                from001Listener.queue.take();\n-                messageNotRecieved = false;\n+                Object r = from001Listener.queue.poll(10000, TimeUnit.MILLISECONDS);\n+                if (r == null) {\n+                    log.display(\"poll for Notification data returns null...\");\n+                    continue;\n+                } else {\n+                    messageReceived = true;\n+                    break;\n+                }\n@@ -144,1 +164,1 @@\n-                messageNotRecieved = true;\n+                \/\/ ignored, continue\n@@ -148,0 +168,4 @@\n+        \/\/ If we got a Notification, test that the CompositeData can create a MemoryNotificationInfo\n+        if (!messageReceived) {\n+            throw new TestFailure(\"No Notification received.\");\n+        }\n@@ -150,14 +174,14 @@\n-           ObjectName poolObjectName = new ObjectName(monitor.getName(poolObject));\n-           ObjectName resultObjectName = new ObjectName(\n-                     ManagementFactory.MEMORY_POOL_MXBEAN_DOMAIN_TYPE +\n-                     \",name=\" + result.getPoolName());\n-\n-           log.display(\"poolObjectName : \" + poolObjectName +\n-                              \" resultObjectName : \" + resultObjectName);\n-\n-           if (!poolObjectName.equals(resultObjectName)) {\n-              log.complain(\"FAILURE 3.\");\n-              log.complain(\"Wrong pool name : \" + resultObjectName +\n-                           \", expected : \" + poolObjectName);\n-              testFailed = true;\n-           }\n+            ObjectName poolObjectName = new ObjectName(monitor.getName(poolObject));\n+            ObjectName resultObjectName = new ObjectName(\n+                        ManagementFactory.MEMORY_POOL_MXBEAN_DOMAIN_TYPE +\n+                        \",name=\" + result.getPoolName());\n+\n+            log.display(\"poolObjectName : \" + poolObjectName +\n+                        \" resultObjectName : \" + resultObjectName);\n+\n+            if (!poolObjectName.equals(resultObjectName)) {\n+                log.complain(\"FAILURE 3.\");\n+                log.complain(\"Wrong pool name : \" + resultObjectName +\n+                             \", expected : \" + poolObjectName);\n+                testFailed = true;\n+            }\n@@ -170,1 +194,0 @@\n-\n@@ -186,1 +209,2 @@\n-        if (data.get() != null)\n+        if (data.get() != null) {\n+            System.out.println(\"handleNotification: ignoring\");\n@@ -188,1 +212,4 @@\n-        data.set((CompositeData) notification.getUserData());\n+        }\n+        System.out.println(\"handleNotification: getting data\");\n+        CompositeData d = (CompositeData) notification.getUserData();\n+        data.set(d);\n@@ -196,1 +223,1 @@\n-                messageNotSent = true;\n+                \/\/ ignore, retry\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/MemoryNotificationInfo\/from\/from001.java","additions":59,"deletions":32,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- *     2. trows IllegalArgumentException, if CompositeData doest not represnt\n+ *     2. throws IllegalArgumentException, if CompositeData does not represent\n@@ -39,1 +39,1 @@\n- *     3. correct MemoryNotificationInfo object, if CompositeData is correst (i.e\n+ *     3. correct MemoryNotificationInfo object, if CompositeData is correct, i.e\n@@ -46,0 +46,5 @@\n+ * Avoid running with -Xcomp due to rare failure where the MemoryPool does not\n+ * increase in usage and send Notification.  Likely the timing changes so \"eatMemory\"\n+ * completes before Notification\/threshold processing.\n+ *\n+ * @requires vm.compMode != \"Xcomp\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/MemoryNotificationInfo\/from\/from001\/TestDescription.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}