{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.JDWP;\n@@ -72,3 +73,0 @@\n-        String port;\n-        String listenPort;\n-        Process proc;\n@@ -99,3 +97,0 @@\n-        port = argHandler.getTransportPort();\n-        listenPort = argHandler.getTransportPort();\n-\n@@ -104,3 +99,3 @@\n-        String cmd = java +\n-                \" -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=\" +\n-                listenPort + \" \" + DEBUGEE_CLASS;\n+        String cmd = java\n+                + \" -Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,server=y,address=0\"\n+                + \" \" + DEBUGEE_CLASS;\n@@ -111,1 +106,2 @@\n-        debugee.redirectOutput(log);\n+        JDWP.ListenAddress listenAddress = debugee.redirectOutputAndDetectListeningAddress(log);\n+        String port = listenAddress.address();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attach\/attach001.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import jdk.test.lib.JDWP;\n@@ -72,3 +73,0 @@\n-        String port;\n-        String listenPort;\n-        Process proc;\n@@ -99,3 +97,0 @@\n-        port = argHandler.getTransportPort();\n-        listenPort = argHandler.getTransportPort();\n-\n@@ -104,3 +99,3 @@\n-        String cmd = java +\n-                \" -Xdebug -Xnoagent -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=\" +\n-                listenPort + \" \" + DEBUGEE_CLASS;\n+        String cmd = java\n+                + \" -Xdebug -Xnoagent -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0\"\n+                + \" \" + DEBUGEE_CLASS;\n@@ -111,1 +106,2 @@\n-        debugee.redirectOutput(log);\n+        JDWP.ListenAddress listenAddress = debugee.redirectOutputAndDetectListeningAddress(log);\n+        String port = listenAddress.address();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/AttachingConnector\/attachnosuspend\/attachnosuspend001.java","additions":7,"deletions":11,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.function.Consumer;\n@@ -34,7 +37,1 @@\n-    private PrintStream    pout = null;\n-    private Log            log  = null;\n-\n-    \/**\n-     * Few symbols to precede every text line being redirected.\n-     *\/\n-    private String prefix = \"\";\n+    private List<Consumer<String>> processors = new LinkedList<>();\n@@ -57,1 +54,1 @@\n-    public IORedirector(InputStream in, OutputStream out) {\n+    public IORedirector(InputStream in, OutputStream out, String prefix) {\n@@ -60,1 +57,7 @@\n-        pout = new PrintStream(out);\n+        PrintStream pout = new PrintStream(out);\n+        addProcessor(s -> {\n+            synchronized (pout) {\n+                pout.println(prefix + s);\n+                pout.flush();\n+            }\n+        });\n@@ -70,1 +73,0 @@\n-        this.prefix = prefix;\n@@ -72,1 +74,1 @@\n-        this.log = log;\n+        addProcessor(s -> log.println(prefix + s));\n@@ -75,5 +77,6 @@\n-    \/**\n-     * Set the prefix for redirected messages;\n-     *\/\n-    public void setPrefix(String prefix) {\n-        this.prefix = prefix;\n+    public void addProcessor(Consumer<String> lineProcessor) {\n+        processors.add(lineProcessor);\n+    }\n+\n+    private void processLine(String line) {\n+        processors.stream().forEach(processor -> processor.accept(line));\n@@ -107,2 +110,1 @@\n-        String logPrefix = \"IORedirector-\" + prefix;\n-        if (bin == null || (pout == null && log == null))\n+        if (bin == null || processors.isEmpty()) {\n@@ -110,0 +112,1 @@\n+        }\n@@ -115,10 +118,1 @@\n-                String message = prefix + line;\n-                if (log != null) {\n-                    \/\/ It's synchronized and auto-flushed:\n-                    log.println(message);\n-                } else if (pout != null) {\n-                    synchronized (pout) {\n-                        pout.println(message);\n-                        pout.flush();\n-                    }\n-                }\n+                processLine(line);\n@@ -129,11 +123,1 @@\n-            if (log != null) {\n-                log.println(msg);\n-            } else if (pout != null) {\n-                synchronized (pout) {\n-                    pout.println(msg);\n-                    pout.flush();\n-                }\n-            } else {\n-                System.err.println(msg);\n-                System.err.flush();\n-            }\n+            processLine(msg);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/IORedirector.java","additions":23,"deletions":39,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import jdk.test.lib.JDWP;\n@@ -29,0 +30,1 @@\n+import java.util.function.Consumer;\n@@ -305,2 +307,1 @@\n-     * given <code>out<\/code> stream. If the debugee's stdout\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>out<\/code> stream.\n@@ -315,3 +316,1 @@\n-\/\/            throw new TestBug(\"Debugee's stdout is already redirected\");\n-        stdoutRedirector = new IORedirector(getOutPipe(),out);\n-        stdoutRedirector.setPrefix(DEBUGEE_STDOUT_LOG_PREFIX);\n+        stdoutRedirector = new IORedirector(getOutPipe(), out, DEBUGEE_STDOUT_LOG_PREFIX);\n@@ -325,2 +324,1 @@\n-     * given <code>Log<\/code>. If the debugee's stdout\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>Log<\/code>.\n@@ -329,0 +327,4 @@\n+        redirectStdout(log, prefix, null);\n+    }\n+\n+    private void redirectStdout(Log log, String prefix, Consumer<String> stdoutProcessor) {\n@@ -330,1 +332,0 @@\n-\/\/            stdoutRedirector.setPrefix(prefix);\n@@ -332,1 +333,0 @@\n-\/\/            throw new TestBug(\"the debugee's stdout is already redirected\");\n@@ -335,0 +335,3 @@\n+        if (stdoutProcessor != null) {\n+            stdoutRedirector.addProcessor(stdoutProcessor);\n+        }\n@@ -342,2 +345,1 @@\n-     * given <code>err<\/code> stream. If the debugee's stderr\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>err<\/code> stream.\n@@ -352,3 +354,1 @@\n-\/\/            throw new TestBug(\"Debugee's stderr is already redirected\");\n-        stderrRedirector = new IORedirector(getErrPipe(),err);\n-        stderrRedirector.setPrefix(DEBUGEE_STDERR_LOG_PREFIX);\n+        stderrRedirector = new IORedirector(getErrPipe(), err, DEBUGEE_STDERR_LOG_PREFIX);\n@@ -362,2 +362,1 @@\n-     * given <code>Log<\/code>. If the debugee's stderr\n-     * was already redirected, the TestBug exception is thrown.\n+     * given <code>Log<\/code>.\n@@ -367,1 +366,0 @@\n-\/\/            stderrRedirector.setPrefix(prefix);\n@@ -369,1 +367,0 @@\n-\/\/            throw new TestBug(\"Debugee's stderr is already redirected\");\n@@ -380,2 +377,0 @@\n-     * If the debugee's stdout\/stderr were already redirected,\n-     * the TestBug exception is thrown.\n@@ -384,2 +379,40 @@\n-        redirectStdout(log, \"debugee.stdout> \");\n-        redirectStderr(log, \"debugee.stderr> \");\n+        redirectStdout(log, DEBUGEE_STDOUT_LOG_PREFIX);\n+        redirectStderr(log, DEBUGEE_STDERR_LOG_PREFIX);\n+    }\n+\n+    \/**\n+     * Starts redirecting of the debugee's stdout\/stderr to the\n+     * given <code>Log<\/code> using standard prefixes\n+     * and detects listening address from the debuggee stdout.\n+     *\/\n+    public JDWP.ListenAddress redirectOutputAndDetectListeningAddress(Log log) {\n+        JDWP.ListenAddress listenAddress[] = new JDWP.ListenAddress[1];\n+        Consumer<String> stdoutProcessor = line -> {\n+            JDWP.ListenAddress addr = JDWP.parseListenAddress(line);\n+            if (addr != null) {\n+                synchronized (listenAddress) {\n+                    listenAddress[0] = addr;\n+                    listenAddress.notifyAll();\n+                }\n+            }\n+        };\n+\n+        redirectStdout(log, DEBUGEE_STDOUT_LOG_PREFIX, stdoutProcessor);\n+        redirectStderr(log, DEBUGEE_STDERR_LOG_PREFIX);\n+\n+        synchronized (listenAddress) {\n+            while (!terminated() && listenAddress[0] == null) {\n+                try {\n+                    listenAddress.wait(500);\n+                } catch (InterruptedException e) {\n+                    \/\/ ignore\n+                }\n+            }\n+        }\n+        if (terminated()) {\n+            throw new Failure(\"Failed to detect debuggee listening port\");\n+        }\n+\n+        log.display(\"Debuggee is listening on port \" + listenAddress[0].address());\n+\n+        return listenAddress[0];\n@@ -387,0 +420,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeProcess.java","additions":56,"deletions":22,"binary":false,"changes":78,"status":"modified"}]}