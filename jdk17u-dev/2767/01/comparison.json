{"files":[{"patch":"@@ -1,102 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/\n-\/\/ Please run in othervm mode.  SunJSSE does not support dynamic system\n-\/\/ properties, no way to re-use system properties in samevm\/agentvm mode.\n-\/\/\n-\n-\/*\n- * @test\n- * @bug 8209333\n- * @summary Socket reset issue for TLS 1.3 socket close\n- * @library \/javax\/net\/ssl\/templates\n- * @run main\/othervm SSLSocketBruteForceClose\n- *\/\n-\n-import javax.net.ssl.*;\n-import java.io.*;\n-import java.net.SocketException;\n-\n-public class SSLSocketBruteForceClose extends SSLSocketTemplate {\n-\n-    public static void main(String[] args) throws Exception {\n-        for (int i = 0; i<= 10; i++) {\n-            System.err.println(\"===================================\");\n-            System.err.println(\"loop \" + i);\n-            System.err.println(\"===================================\");\n-            new SSLSocketBruteForceClose().run();\n-        }\n-    }\n-\n-    @Override\n-    protected void configureServerSocket(SSLServerSocket socket) {\n-        socket.setNeedClientAuth(false);\n-        socket.setEnableSessionCreation(true);\n-        socket.setUseClientMode(false);\n-    }\n-\n-    @Override\n-    protected void runServerApplication(SSLSocket socket) throws Exception {\n-        System.err.println(\"Reading data from client\");\n-        BufferedReader serverReader = new BufferedReader(\n-                new InputStreamReader(socket.getInputStream()));\n-        String data = serverReader.readLine();\n-        System.err.println(\"Received data from client: \" + data);\n-\n-        System.err.println(\"Reading more data from client\");\n-        data = serverReader.readLine();\n-        System.err.println(\"Received data from client: \" + data);\n-    }\n-\n-    @Override\n-    protected void configureClientSocket(SSLSocket socket) {\n-        try {\n-            socket.setSoLinger(true, 3);\n-            socket.setSoTimeout(1000);\n-        } catch (SocketException exc) {\n-            throw new RuntimeException(\"Could not configure client socket\", exc);\n-        }\n-    }\n-\n-    @Override\n-    protected void runClientApplication(SSLSocket socket) throws Exception {\n-        String clientData = \"Hi, I am client\";\n-\n-        System.err.println(\"Sending data to server ...\");\n-        BufferedWriter os = new BufferedWriter(\n-                new OutputStreamWriter(socket.getOutputStream()));\n-        os.write(clientData, 0, clientData.length());\n-        os.newLine();\n-        os.flush();\n-\n-        System.err.println(\"Sending more data to server ...\");\n-        os.write(clientData, 0, clientData.length());\n-        os.newLine();\n-        os.flush();\n-\n-        socket.close();\n-        System.err.println(\"client socket closed\");\n-    }\n-}\n-\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketBruceForceClose.java","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"}]}