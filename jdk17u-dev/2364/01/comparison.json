{"files":[{"patch":"@@ -1,1 +1,1 @@\n-File-Date: 2023-03-22\n+File-Date: 2023-04-13\n@@ -42989,1 +42989,1 @@\n-Preferred-Value: apc\n+Preferred-Value: ajp\n","filename":"make\/data\/lsrdata\/language-subtag-registry.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-import java.util.stream.Collectors;\n+import java.util.regex.Pattern;\n@@ -141,4 +141,23 @@\n-                sb = new StringBuilder(preferred);\n-                sb.append(',');\n-                sb.append(tag);\n-                initialLanguageMap.put(preferred, sb);\n+                \/\/ IANA update 4\/13 introduced case where a preferred value\n+                \/\/ can have a preferred value itself.\n+                \/\/ eg: ar-ajp has pref ajp which has pref apc\n+                boolean foundInOther = false;\n+                Pattern pattern = Pattern.compile(\",\"+preferred+\"(,|$)\");\n+                \/\/ Check if current pref exists inside a value for another pref\n+                List<StringBuilder> doublePrefs = initialLanguageMap\n+                        .values()\n+                        .stream()\n+                        .filter(e -> pattern.matcher(e.toString()).find())\n+                        .toList();\n+                for (StringBuilder otherPrefVal : doublePrefs) {\n+                    otherPrefVal.append(\",\");\n+                    otherPrefVal.append(tag);\n+                    foundInOther = true;\n+                }\n+                if (!foundInOther) {\n+                    \/\/ does not exist in any other pref's values, so add as new entry\n+                    sb = new StringBuilder(preferred);\n+                    sb.append(',');\n+                    sb.append(tag);\n+                    initialLanguageMap.put(preferred, sb);\n+                }\n@@ -161,1 +180,1 @@\n-                    .collect(Collectors.toList())\n+                    .toList()\n@@ -268,1 +287,1 @@\n-                + (int)(sortedLanguageMap1.size() \/ 0.75f + 1) + \");\\n\"\n+                + sortedLanguageMap1.size() + \");\\n\"\n@@ -270,1 +289,1 @@\n-                + (int)(sortedLanguageMap2.size() \/ 0.75f + 1) + \");\\n\"\n+                + sortedLanguageMap2.size() + \");\\n\"\n@@ -272,1 +291,1 @@\n-                + (int)(sortedRegionVariantMap.size() \/ 0.75f + 1) + \");\\n\\n\"\n+                + sortedRegionVariantMap.size() + \");\\n\\n\"\n","filename":"make\/jdk\/src\/classes\/build\/tools\/generatelsrequivmaps\/EquivMapsGenerator.java","additions":29,"deletions":10,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- *      8258795 8267038 8287180 8302512 8304761\n+ *      8258795 8267038 8287180 8302512 8304761 8306031\n@@ -29,1 +29,1 @@\n- *          (LSR Revision: 2023-03-22) with Locale and Locale.LanguageRange\n+ *          (LSR Revision: 2023-04-13) with Locale and Locale.LanguageRange\n@@ -47,1 +47,1 @@\n-        \"Accept-Language: aam, adp, aeb, ajs, aog, apc, aue, bcg, bic, bpp, cey, cbr, cnp, cqu, crr, csp, csx, dif, dmw, dsz, ehs, ema,\"\n+        \"Accept-Language: aam, adp, aeb, ajs, aog, apc, ajp, aue, bcg, bic, bpp, cey, cbr, cnp, cqu, crr, csp, csx, dif, dmw, dsz, ehs, ema,\"\n","filename":"test\/jdk\/java\/util\/Locale\/LanguageSubtagRegistryTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}