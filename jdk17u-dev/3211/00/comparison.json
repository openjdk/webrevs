{"files":[{"patch":"@@ -115,1 +115,1 @@\n-  assert(_n_snapshots > 0, \"non-null array should have at least 1 element\");\n+  ASSERT_GT(_n_snapshots, size_t(0)) << \"non-null array should have at least 1 element\";\n","filename":"test\/hotspot\/gtest\/logging\/logTestFixture.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  assert(!file_exists(name), \"can't create directory: %s already exists\", name);\n+  ASSERT_FALSE(file_exists(name)) << \"can't create directory: \" << name << \" already exists\";\n@@ -67,1 +67,1 @@\n-  assert(!failed, \"failed to create directory %s\", name);\n+  ASSERT_FALSE(failed) << \"failed to create directory \" << name;\n","filename":"test\/hotspot\/gtest\/logging\/logTestUtils.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -172,0 +172,13 @@\n+  \/\/ Generate sufficiently unique directory path and log spec for that path\n+  ss.print(\"%s%s%s%d\", os::get_temp_directory(), os::file_separator(), \"tmplogdir\", os::current_process_id());\n+  char* path = ss.as_string();\n+  ss.reset();\n+\n+  ss.print(\"%s%s\", \"file=\", path);\n+  char* log_spec = ss.as_string();\n+  ss.reset();\n+\n+  ss.print(\"%s is not a regular file\", path);\n+  char* expected_output_substring = ss.as_string();\n+  ss.reset();\n+\n@@ -173,2 +186,2 @@\n-  create_directory(\"tmplogdir\");\n-  LogFileOutput bad_file(\"file=tmplogdir\");\n+  create_directory(path);\n+  LogFileOutput bad_file(log_spec);\n@@ -177,3 +190,4 @@\n-  EXPECT_TRUE(string_contains_substring(ss.as_string(), \"tmplogdir is not a regular file\"))\n-    << \"missing expected error message, received msg: %s\" << ss.as_string();\n-  delete_empty_directory(\"tmplogdir\");\n+  char* logger_output = ss.as_string();\n+  EXPECT_TRUE(string_contains_substring(logger_output, expected_output_substring))\n+    << \"missing expected error message, received msg: %s\" << logger_output;\n+  delete_empty_directory(path);\n","filename":"test\/hotspot\/gtest\/logging\/test_logFileOutput.cpp","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"}]}