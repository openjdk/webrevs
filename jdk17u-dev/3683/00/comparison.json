{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -326,1 +326,1 @@\n-                    Integer.toString(retry_limit));\n+                    retry_limit);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/AuthenticationFilter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-         * Called to make sure resources are released when the\n+         * Called to make sure resources are released\n@@ -481,1 +481,1 @@\n-                    \/\/ IOException(\"connection reset by peer), or\n+                    \/\/ IOException(\"connection reset by peer\"), or\n@@ -713,1 +713,1 @@\n-                   .append(String.valueOf(b))\n+                   .append(b)\n@@ -731,1 +731,0 @@\n-            String flowTag = null;\n@@ -736,3 +735,2 @@\n-            flowTag = tag = flow == null ? null: (String.valueOf(flow));\n-            if (flowTag != null) {\n-                dbgTag = tag = \"Http1AsyncReceiver(\"+ flowTag + \")\";\n+            if (flow != null) {\n+                dbgTag = tag = \"Http1AsyncReceiver(\" + flow + \")\";\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1AsyncReceiver.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-            return host + \":\" + Integer.toString(port);\n+            return host + \":\" + port;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Request.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    \/\/ of a pending operation. Altough there usually is a single\n+    \/\/ of a pending operation. Although there usually is a single\n@@ -737,1 +737,1 @@\n-            return super.toString() + \"\/parser=\" + String.valueOf(parser);\n+            return super.toString() + \"\/parser=\" + parser;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Response.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1230,1 +1230,1 @@\n-                        String.valueOf(connection.channel().getLocalAddress())\n+                        connection.channel().getLocalAddress()\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,0 @@\n-import jdk.internal.net.http.websocket.OpeningHandshake;\n@@ -219,1 +218,1 @@\n-                              + Integer.toString(authority.getPort()) + \"\/\");\n+                              + authority.getPort() + \"\/\");\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpRequestImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-            throw new IllegalArgumentException(\"non-positive subscription request: \" + String.valueOf(n));\n+            throw new IllegalArgumentException(\"non-positive subscription request: \" + n);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Demand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -956,1 +956,1 @@\n-                    + \", writeList size: \" + Integer.toString(writeList.size())\n+                    + \", writeList size: \" + writeList.size()\n@@ -1131,1 +1131,1 @@\n-                if (debug.on()) debug.log(\"#tasks to execute: \" + Integer.toString(nextTasks.size()));\n+                if (debug.on()) debug.log(\"#tasks to execute: \" + nextTasks.size());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SSLFlowDelegate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -495,5 +495,5 @@\n-          .append(\" upstreamCompleted: \").append(Boolean.toString(upstreamCompleted))\n-          .append(\" upstreamWindow: \").append(upstreamWindow.toString())\n-          .append(\" downstreamCompleted: \").append(Boolean.toString(downstreamCompleted))\n-          .append(\" completionAcknowledged: \").append(Boolean.toString(completionAcknowledged))\n-          .append(\" outputQ size: \").append(Integer.toString(outputQ.size()))\n+          .append(\" upstreamCompleted: \").append(upstreamCompleted)\n+          .append(\" upstreamWindow: \").append(upstreamWindow)\n+          .append(\" downstreamCompleted: \").append(downstreamCompleted)\n+          .append(\" completionAcknowledged: \").append(completionAcknowledged)\n+          .append(\" outputQ size: \").append(outputQ.size())\n@@ -501,1 +501,1 @@\n-          .append(\" cf: \").append(cf.toString())\n+          .append(\" cf: \").append(cf)\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SubscriberWrapper.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -912,1 +912,1 @@\n-            return host + \":\" + Integer.toString(port);\n+            return host + \":\" + port;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-            return \"Error: \" + Integer.toString(code);\n+            return \"Error: \" + code;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/ErrorFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -104,1 +104,1 @@\n-                .append(Integer.toString(length()))\n+                .append(length())\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/Http2Frame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-                  .append(Integer.toString(parameters[i]))\n+                  .append(parameters[i])\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/SettingsFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}