{"files":[{"patch":"@@ -832,0 +832,1 @@\n+java\/awt\/PopupMenu\/PopupHangTest.java 8340022 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,258 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4145193\n+ * @summary Mouse event activates multiple pull-down menus when testing Oracle app\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PopupHangTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Label;\n+import java.awt.MenuItem;\n+import java.awt.PopupMenu;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+\n+public class PopupHangTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+         2 areas yellow and red should be seen.\n+\n+          Clicking in these areas should cause a menu to popup. See if you can\n+          get the menu to stay up and grab all input. One way to do this is to\n+          click and hold the mouse to popup the menu, move away\/outside of the\n+          menu and release the mouse. At that point, the input is grabbed and\n+          the *only* way out is to hit the escape key. Try this on both areas.\n+\n+          To make things worse, when the popup menu is up, click repeatedly on\n+          the LightWeight component area. Hit escape. Do you see multiple menus appearing ?\n+\n+          If you do not see either of the two problems above, the problem is fixed.\n+          Press pass, else press Fail\"\"\";\n+\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                      .title(\"PopupHangTest\")\n+                      .instructions(INSTRUCTIONS)\n+                      .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                      .columns(45)\n+                      .testUI(PopupHangTest::createUI)\n+                      .logArea()\n+                      .build()\n+                      .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        TestMenuButton    m1;\n+        TestHeavyButton   m2;\n+        frame = new Frame();\n+\n+        frame.setLayout (new BorderLayout ());\n+\n+        m1 = new TestMenuButton(\"LightWeight component\");\n+        m1.setBackground(Color.yellow);\n+\n+        m2 = new TestHeavyButton(\"HeavyWeight component\");\n+        m2.setBackground(Color.red);\n+\n+        frame.add(\"North\", m1);\n+        frame.add(\"South\", m2);\n+\n+        m1.requestFocus();\n+        frame.setSize(200, 110);\n+        return frame;\n+    }\n+\n+}\n+\n+class TestMenuButton extends Component implements MouseListener,\n+                                                MouseMotionListener,\n+                                                KeyListener,\n+                                                FocusListener  {\n+\n+    PopupMenu popupMenu = null;\n+    String      name;\n+\n+    TestMenuButton(String name) {\n+        PopupMenu menu = popupMenu = new PopupMenu(\"Popup\");\n+        menu.add(new MenuItem(\"item 1\"));\n+        menu.add(new MenuItem(\"item 2\"));\n+        menu.add(new MenuItem(\"item 3\"));\n+        this.add(menu);\n+        this.name = name;\n+        addMouseListener(this);\n+        addMouseMotionListener(this);\n+        addKeyListener(this);\n+        addFocusListener(this);\n+    }\n+\n+    void println(String messageIn) {\n+        PassFailJFrame.log(messageIn);\n+    }\n+\n+    public void mouseClicked(MouseEvent event) {\n+        \/*\n+        popupMenu.show(this, event.getX(), event.getY());\n+        *\/\n+    }\n+    public void mousePressed(MouseEvent event) {\n+        println(\"TestMenuButton.mousePressed() called !!\");\n+        popupMenu.show(this, event.getX(), event.getY());\n+    }\n+    public void mouseReleased(MouseEvent event) {\n+        println(\"TestMenuButton.mouseReleased() called !!\");\n+    }\n+    public void mouseEntered(MouseEvent event) {\n+        println(\"TestMenuButton.mouseEntered() called !!\");\n+        requestFocus();\n+    }\n+    public void mouseExited(MouseEvent event) {\n+    }\n+\n+    public void mouseDragged(MouseEvent event) {\n+        println(\"TestMenuButton.mouseDragged() called !!\");\n+    }\n+    public void mouseMoved(MouseEvent event) {\n+        println(\"TestMenuButton.mouseMoved() called !!\");\n+    }\n+\n+    public void keyPressed(KeyEvent event) {\n+        println(\"TestMenuButton.keyPressed() called !!\");\n+    }\n+    public void keyReleased(KeyEvent event) {\n+        println(\"TestMenuButton.keyReleased() called !!\");\n+    }\n+    public void keyTyped(KeyEvent event) {\n+        println(\"TestMenuButton.keyTyped() called !!\");\n+    }\n+\n+\n+    public void focusGained(FocusEvent e){\n+        println(\"TestMenuButton.focusGained():\" + e);\n+    }\n+    public void focusLost(FocusEvent e){\n+        println(\"TestMenuButton.focusLost():\" + e);\n+    }\n+\n+\n+    public void paint(Graphics g)  {\n+        Dimension d = getSize();\n+\n+        g.setColor(getBackground());\n+        g.fillRect(0, 0, d.width-1, d.height-1);\n+\n+        g.setColor(Color.black);\n+        g.drawString(name, 15, 15);\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return (new Dimension(200, 50));\n+    }\n+\n+}\n+\n+class TestHeavyButton extends Label implements MouseListener,\n+                                                MouseMotionListener,\n+                                                KeyListener,\n+                                                FocusListener  {\n+\n+    PopupMenu popupMenu = null;\n+    String      name;\n+\n+    TestHeavyButton(String name) {\n+        super(name);\n+        PopupMenu menu = popupMenu = new PopupMenu(\"Popup\");\n+        menu.add(new MenuItem(\"item 1\"));\n+        menu.add(new MenuItem(\"item 2\"));\n+        menu.add(new MenuItem(\"item 3\"));\n+        this.add(menu);\n+        this.name = name;\n+        addMouseListener(this);\n+        addMouseMotionListener(this);\n+        addKeyListener(this);\n+        addFocusListener(this);\n+    }\n+\n+    void println(String messageIn) {\n+        PassFailJFrame.log(messageIn);\n+    }\n+\n+    public void mouseClicked(MouseEvent event) {\n+        \/*\n+        popupMenu.show(this, event.getX(), event.getY());\n+        *\/\n+    }\n+    public void mousePressed(MouseEvent event) {\n+        println(\"TestHeavyButton.mousePressed() called !!\");\n+        popupMenu.show(this, event.getX(), event.getY());\n+    }\n+    public void mouseReleased(MouseEvent event) {\n+        println(\"TestHeavyButton.mouseReleased() called !!\");\n+    }\n+    public void mouseEntered(MouseEvent event) {\n+        println(\"TestHeavyButton.mouseEntered() called !!\");\n+        requestFocus();\n+    }\n+    public void mouseExited(MouseEvent event) {\n+    }\n+\n+    public void mouseDragged(MouseEvent event) {\n+        println(\"TestHeavyButton.mouseDragged() called !!\");\n+    }\n+    public void mouseMoved(MouseEvent event) {\n+        println(\"TestHeavyButton.mouseMoved() called !!\");\n+    }\n+\n+    public void keyPressed(KeyEvent event) {\n+        println(\"TestHeavyButton.keyPressed() called !!\");\n+    }\n+    public void keyReleased(KeyEvent event) {\n+        println(\"TestHeavyButton.keyReleased() called !!\");\n+    }\n+    public void keyTyped(KeyEvent event) {\n+        println(\"TestHeavyButton.keyTyped() called !!\");\n+    }\n+\n+    public void focusGained(FocusEvent e){\n+        println(\"TestHeavyButton.focusGained():\" + e);\n+    }\n+    public void focusLost(FocusEvent e){\n+        println(\"TestHeavyButton.focusLost():\" + e);\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/PopupHangTest.java","additions":258,"deletions":0,"binary":false,"changes":258,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 6180413 6184485 6267144\n+ * @summary test for popup menu visual bugs in XAWT\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PopupMenuVisuals\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuItem;\n+import java.awt.MenuShortcut;\n+import java.awt.PopupMenu;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+\n+public class PopupMenuVisuals {\n+    private static final String INSTRUCTIONS = \"\"\"\n+         This test should show a button 'Popup'.\n+         Click on the button. A popup menu should be shown.\n+         If following conditions are met:\n+          - Menu is disabled\n+          - Menu has caption 'Popup menu' (only applicable for linux)\n+          - Menu items don't show shortcuts\n+\n+         Click Pass else click Fail.\"\"\";\n+\n+    static PopupMenu pm;\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"PopupMenu Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(PopupMenuVisuals::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static class Listener implements ActionListener {\n+        public void actionPerformed(ActionEvent e) {\n+            pm.show(frame, 0, 0);\n+        }\n+    }\n+\n+    private static Frame createTestUI() {\n+        Button b = new Button(\"Popup\");\n+        pm = new PopupMenu(\"Popup menu\");\n+        MenuItem mi1 = new MenuItem(\"Item 1\");\n+        CheckboxMenuItem mi2 = new CheckboxMenuItem(\"Item 2\");\n+        CheckboxMenuItem mi3 = new CheckboxMenuItem(\"Item 3\");\n+        Menu sm = new Menu(\"Submenu\");\n+\n+        \/\/Get things going.  Request focus, set size, et cetera\n+        frame = new Frame(\"PopupMenuVisuals\");\n+        frame.setSize (200,200);\n+        frame.validate();\n+\n+        frame.add(b);\n+        b.addActionListener(new Listener());\n+        mi1.setShortcut(new MenuShortcut(KeyEvent.VK_A));\n+        pm.add(mi1);\n+        pm.add(mi2);\n+        pm.add(mi3);\n+        pm.add(sm);\n+        sm.add(new MenuItem(\"Item\"));\n+        pm.setEnabled(false);\n+        mi3.setState(true);\n+        frame.add(pm);\n+        return frame;\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/PopupMenuVisuals.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}