{"files":[{"patch":"@@ -70,1 +70,1 @@\n-    private final static int MAX_IGNORE = 1024;\n+    private static final int MAX_IGNORE = 1024;\n@@ -77,1 +77,1 @@\n-    final static AtomicLong responseCount = new AtomicLong();\n+    static final AtomicLong responseCount = new AtomicLong();\n@@ -478,1 +478,1 @@\n-    static abstract class Receiver<T>\n+    abstract static class Receiver<T>\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Response.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    final static Logger debug =\n+    static final Logger debug =\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2ClientImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-    final static Logger DEBUG_LOGGER =\n+    static final Logger DEBUG_LOGGER =\n@@ -127,2 +127,2 @@\n-    static private final int MAX_CLIENT_STREAM_ID = Integer.MAX_VALUE; \/\/ 2147483647\n-    static private final int MAX_SERVER_STREAM_ID = Integer.MAX_VALUE - 1; \/\/ 2147483646\n+    private static final int MAX_CLIENT_STREAM_ID = Integer.MAX_VALUE; \/\/ 2147483647\n+    private static final int MAX_SERVER_STREAM_ID = Integer.MAX_VALUE - 1; \/\/ 2147483646\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-    final static class DelegatingExecutor implements Executor {\n+    static final class DelegatingExecutor implements Executor {\n@@ -701,1 +701,1 @@\n-    final static class HttpClientTracker implements Tracker {\n+    static final class HttpClientTracker implements Tracker {\n@@ -999,1 +999,1 @@\n-    private final static class SelectorManager extends Thread {\n+    private static final class SelectorManager extends Thread {\n@@ -1412,1 +1412,1 @@\n-        private final static Logger debug =\n+        private static final Logger debug =\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpClientImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    final static Logger DEBUG_LOGGER = Utils.getDebugLogger(\n+    static final Logger DEBUG_LOGGER = Utils.getDebugLogger(\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -369,1 +369,1 @@\n-        static private byte[] join(List<ByteBuffer> bytes) {\n+        private static byte[] join(List<ByteBuffer> bytes) {\n@@ -403,1 +403,1 @@\n-        final static int MAX_BUFFERS_IN_QUEUE = 1;  \/\/ lock-step with the producer\n+        static final int MAX_BUFFERS_IN_QUEUE = 1;  \/\/ lock-step with the producer\n@@ -889,1 +889,1 @@\n-        final static class SubscriptionRef implements Flow.Subscription {\n+        static final class SubscriptionRef implements Flow.Subscription {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ResponseSubscribers.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -229,1 +229,1 @@\n-    private static abstract class SocketFlowEvent extends AsyncEvent {\n+    private abstract static class SocketFlowEvent extends AsyncEvent {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/SocketTube.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,6 +49,6 @@\n-    final static String HTTP_NAME  = \"jdk.internal.httpclient.debug\";\n-    final static String WS_NAME  = \"jdk.internal.httpclient.websocket.debug\";\n-    final static String HPACK_NAME = \"jdk.internal.httpclient.hpack.debug\";\n-    final static System.Logger HTTP = System.getLogger(HTTP_NAME);\n-    final static System.Logger WS = System.getLogger(WS_NAME);\n-    final static System.Logger HPACK = System.getLogger(HPACK_NAME);\n+    static final String HTTP_NAME  = \"jdk.internal.httpclient.debug\";\n+    static final String WS_NAME  = \"jdk.internal.httpclient.websocket.debug\";\n+    static final String HPACK_NAME = \"jdk.internal.httpclient.hpack.debug\";\n+    static final System.Logger HTTP = System.getLogger(HTTP_NAME);\n+    static final System.Logger WS = System.getLogger(WS_NAME);\n+    static final System.Logger HPACK = System.getLogger(HPACK_NAME);\n@@ -61,1 +61,1 @@\n-    final static long START_NANOS = System.nanoTime();\n+    static final long START_NANOS = System.nanoTime();\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/DebugLogger.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    static abstract class AbstractTubePublisher implements TubePublisher {\n+    abstract static class AbstractTubePublisher implements TubePublisher {\n@@ -159,1 +159,1 @@\n-    static abstract class AbstractTubeSubscriber implements TubeSubscriber {\n+    abstract static class AbstractTubeSubscriber implements TubeSubscriber {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/FlowTube.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    private final static AtomicLong TOKENS = new AtomicLong();\n+    private static final AtomicLong TOKENS = new AtomicLong();\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/MinimalFuture.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-    final static class DelegateWrapper implements FlowTube.TubeSubscriber {\n+    static final class DelegateWrapper implements FlowTube.TubeSubscriber {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SSLTube.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    public static abstract class DeferredCompleter {\n+    public abstract static class DeferredCompleter {\n@@ -143,1 +143,1 @@\n-    public static abstract class CompleteRestartableTask\n+    public abstract static class CompleteRestartableTask\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SequentialScheduler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}