{"files":[{"patch":"@@ -133,0 +133,7 @@\n+  assert(is_aligned(start_addr, CardTable::card_size), \"precondition\");\n+\n+  if (start_addr == end_addr) {\n+    \/\/ No objects in empty range.\n+    return false;\n+  }\n+\n@@ -134,1 +141,1 @@\n-  jbyte* end_block = block_for_addr(end_addr);\n+  jbyte* end_block = block_for_addr(end_addr - 1);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -150,3 +150,5 @@\n-  \/\/ Return true if an object starts in the range of heap addresses.\n-  \/\/ If an object starts at an address corresponding to\n-  \/\/ \"start\", the method will return true.\n+  \/\/ Return true iff an object starts in\n+  \/\/   [start_addr, end_addr_aligned_up)\n+  \/\/ where\n+  \/\/   end_addr_aligned_up = align_up(end_addr, _card_size)\n+  \/\/ Precondition: start_addr is card-size aligned\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}