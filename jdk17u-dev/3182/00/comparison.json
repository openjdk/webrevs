{"files":[{"patch":"@@ -497,0 +497,1 @@\n+java\/awt\/List\/HandlingKeyEventIfMousePressedTest.java 6848358 macosx-all,windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,167 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6293432\n+ * @summary Key events ('SPACE', 'UP', 'DOWN') aren't blocked\n+ *          if mouse is kept in 'PRESSED' state for List\n+ * @key headful\n+ * @run main HandlingKeyEventIfMousePressedTest\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseMotionAdapter;\n+\n+public class HandlingKeyEventIfMousePressedTest {\n+\n+    static Frame frame;\n+    static List list;\n+    static volatile Point loc;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> createUI());\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                loc = list.getLocationOnScreen();\n+            });\n+            robot.mouseMove(loc.x + 10, loc.y + 10);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            \/\/ key pressing when the mouse is kept in the 'pressed' state\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            int selectedIndex = list.getSelectedIndex();\n+            if (selectedIndex != 0) {\n+                throw new RuntimeException(\"Test failed: list.getCurrentItem = \" + selectedIndex);\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new Frame(\"HandlingKeyEventIfMousePressedTest\");\n+        list = new List(10, false);\n+\n+        list.add(\"111\");\n+        list.add(\"222\");\n+        list.add(\"333\");\n+        list.add(\"444\");\n+        frame.add(list);\n+\n+        addListeners();\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    \/\/ added in order to have more information in failed case\n+    private static void addListeners() {\n+\n+        list.addMouseMotionListener(\n+            new MouseMotionAdapter() {\n+                @Override\n+                public void mouseDragged(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+\n+                @Override\n+                public void mouseMoved(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+            });\n+\n+        list.addMouseListener(\n+            new MouseAdapter(){\n+                public void mousePressed(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseClicked(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseEntered(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseExited(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+                public void mouseReleased(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+            });\n+\n+        list.addActionListener(\n+            new ActionListener() {\n+                public void actionPerformed(ActionEvent ae) {\n+                    System.out.println(ae);\n+                }\n+            });\n+\n+        list.addItemListener(\n+            new ItemListener() {\n+                public void itemStateChanged(ItemEvent ie) {\n+                    System.out.println(ie);\n+                }\n+            });\n+\n+        list.addFocusListener(\n+            new FocusAdapter() {\n+                public void focusGained(FocusEvent fe) {\n+                    System.out.println(fe);\n+                }\n+                public void focusLost(FocusEvent fe) {\n+                    System.out.println(fe);\n+                }\n+            });\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/HandlingKeyEventIfMousePressedTest.java","additions":167,"deletions":0,"binary":false,"changes":167,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4089604\n+ * @summary Enter key doesn't fire List actionPerformed as specified\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ListActionEventTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+\n+public class ListActionEventTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            A frame will be shown.\n+            1. Click any item in the list (say item 1) in the frame\n+            2. A message 'ItemSelected' is displayed on the message window.\n+            3. Press the return key on the selected item.\n+            4. If the text 'ActionPerformed' is displayed on the message window,\n+               then press PASS else press FAIL.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ListActionEventTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ListActionEventTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"ListActionEventTest frame\");\n+\n+        Panel pnl1 = new Panel();\n+        frame.add(pnl1);\n+        pnl1.setLayout(new BorderLayout());\n+\n+        List list = new List();\n+        for (int i = 0; i < 5; i++) {\n+            list.addItem(\"Item \" + i);\n+        }\n+        pnl1.add(list);\n+\n+        list.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                PassFailJFrame.log(\"ActionPerformed\");\n+            }\n+        });\n+\n+        list.addItemListener(new ItemListener() {\n+            @Override\n+            public void itemStateChanged(ItemEvent ev) {\n+                PassFailJFrame.log(\"ItemSelected\");\n+            }\n+        });\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/ListActionEventTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4102881\n+ * @summary Ensure multiple selection Lists have horizontal scrollbars when necessary\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MultiSelectionListHorizScrollbar\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.List;\n+\n+public class MultiSelectionListHorizScrollbar {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         Resize the frame so that the lists are not wide enough\n+         to fully display the lines of text they contain.\n+         Once the lists are in this state, press pass\n+         if both lists display an horizontal scrollbar. Otherwise press fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"MultiSelectionListHorizScrollbar Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(MultiSelectionListHorizScrollbar::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"MultiSelectionListHorizScrollbar Frame\");\n+        List singleList = new List(3);\n+        List multiList = new List(3, true);\n+\n+        frame.setLayout(new GridLayout(1, 2));\n+        frame.add(singleList);\n+        frame.add(multiList);\n+\n+        singleList.addItem(\"This is the 1st item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 2nd item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 4th item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 5th item in the list! Does it scroll horizontally??\");\n+        singleList.addItem(\"This is the 6th item in the list! Does it scroll horizontally??\");\n+\n+        multiList.addItem(\"This is the 1st item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 2nd item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 4th item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 5th item in the list! Does it scroll horizontally??\");\n+        multiList.addItem(\"This is the 6th item in the list! Does it scroll horizontally??\");\n+\n+        frame.pack();\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/MultiSelectionListHorizScrollbar.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6308295\n+ * @summary XAWTduplicate list item is displayed\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual RepaintAfterResize\n+*\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.List;\n+\n+public class RepaintAfterResize {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) A Frame appears with a list\n+            2) Resize somehow the frame using mouse\n+            3) Move down the vertical scrollbar of the list\n+            4) If you see that two selected items are displayed then the test failed.\n+               Otherwise, the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"RepaintAfterResize Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(RepaintAfterResize::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame frame = new Frame(\"RepaintAfterResize Frame\");\n+        List list = new List(4, false);\n+\n+        frame.setLayout (new FlowLayout ());\n+        list.setBounds(100, 100, 100, 100);\n+        for (int i = 0 ; i < 7 ; i++) {\n+            list.add(\" \" + i);\n+        }\n+        frame.add(list);\n+        list.select(3);\n+\n+        frame.setSize(100, 100);\n+        return frame;\n+\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/List\/RepaintAfterResize.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}