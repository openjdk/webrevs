{"files":[{"patch":"@@ -1973,4 +1973,4 @@\n-            debug.println(\"X509CertSelector.match(SN: \"\n-                + (xcert.getSerialNumber()).toString(16) + \"\\n  Issuer: \"\n-                + xcert.getIssuerX500Principal() + \"\\n  Subject: \" + xcert.getSubjectX500Principal()\n-                + \")\");\n+            debug.println(\"X509CertSelector.match(Serial number: \"\n+                + Debug.toString(xcert.getSerialNumber())\n+                + \"\\n  Issuer: \" + xcert.getIssuerX500Principal() + \"\\n  Subject: \"\n+                + xcert.getSubjectX500Principal() + \")\");\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CertSelector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import sun.security.util.Debug;\n@@ -108,1 +109,1 @@\n-            String serNum = x509.getSerialNumber().toString(16);\n+            String serNum = Debug.toString(x509.getSerialNumber());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/JCAUtil.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -701,2 +701,2 @@\n-                token.getSerialNumber() + \") generated on \" + token.getDate() +\n-                \" is inapplicable\");\n+                Debug.toString(token.getSerialNumber()) +\n+                \") generated on \" + token.getDate() + \" is inapplicable\");\n@@ -708,1 +708,2 @@\n-                token.getSerialNumber() + \") generated on \" + token.getDate());\n+                Debug.toString(token.getSerialNumber()) +\n+                \") generated on \" + token.getDate());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,1 +247,1 @@\n-                currCert.getSerialNumber().toString());\n+                Debug.toString(currCert.getSerialNumber()));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/BasicChecker.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -438,2 +438,1 @@\n-                        \"\\n  SN: \" + Debug.toHexString(\n-                                            targetCert.getSerialNumber()) +\n+                        \"\\n  SN: \" + Debug.toString(targetCert.getSerialNumber()) +\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Builder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-            System.out.println(\"SerialNumber is \" + serialNumber.getNumber());\n+            System.out.println(\"SerialNumber is \" + Debug.toString(serialNumber.getNumber()));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertId.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -352,1 +352,1 @@\n-                \"\\n  SN: \" + Debug.toHexString(certImpl.getSerialNumber()) +\n+                \"\\n  SN: \" + Debug.toString(certImpl.getSerialNumber()) +\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/DistributionPointFetcher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-                            Debug.toHexString(trustedCert.getSerialNumber()) +\n+                            Debug.toString(trustedCert.getSerialNumber()) +\n@@ -706,1 +706,1 @@\n-                + Debug.toHexString(cert.getSerialNumber())\n+                + Debug.toString(cert.getSerialNumber())\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/ForwardBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -407,1 +407,2 @@\n-                    certId.getSerialNumber() + \") is: \" + sr.getCertStatus());\n+                    Debug.toString(certId.getSerialNumber()) +\n+                    \") is: \" + sr.getCertStatus());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSPResponse.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -354,1 +354,1 @@\n-                \"\\n  SN: \" + Debug.toHexString(xcert.getSerialNumber()) +\n+                \"\\n  SN: \" + Debug.toString(xcert.getSerialNumber()) +\n@@ -650,1 +650,1 @@\n-                          \" cert SN: \" + sn.toString());\n+                          \" cert SN: \" + Debug.toString(sn));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,1 @@\n-                 (x509Cert.getSerialNumber().toString(16)).append(\"\\n\");\n+                 (Debug.toString(x509Cert.getSerialNumber())).append(\"\\n\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/Vertex.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import sun.security.util.Debug;\n@@ -474,2 +475,1 @@\n-                        Utilities.toHexString(\n-                                x509.getSerialNumber().toByteArray()),\n+                        Debug.toString(x509.getSerialNumber()),\n@@ -499,2 +499,1 @@\n-                        Utilities.toHexString(\n-                                x509.getSerialNumber().toByteArray()),\n+                        Debug.toString(x509.getSerialNumber()),\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLLogger.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,1 @@\n+import sun.security.util.Debug;\n@@ -422,2 +423,2 @@\n-                    \"Check cache for SN\" + cid.getSerialNumber() + \": \" +\n-                    (respEntry != null ? \"HIT\" : \"MISS\"));\n+                    \"Check cache for SN\" + Debug.toString(cid.getSerialNumber())\n+                        + \": \" + (respEntry != null ? \"HIT\" : \"MISS\"));\n@@ -519,1 +520,1 @@\n-            sb.append(\"\\n\\tSerial: \").append(this.cert.getSerialNumber());\n+            sb.append(\"\\n\\tSerial: \").append(Debug.toString(this.cert.getSerialNumber()));\n@@ -566,1 +567,1 @@\n-                            cid.getSerialNumber());\n+                            Debug.toString(cid.getSerialNumber()));\n@@ -617,1 +618,1 @@\n-                    statInfo.cid.getSerialNumber());\n+                    Debug.toString(statInfo.cid.getSerialNumber()));\n@@ -709,1 +710,1 @@\n-                        certId.getSerialNumber() +\n+                        Debug.toString(certId.getSerialNumber()) +\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/StatusResponseManager.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -401,0 +401,4 @@\n+    public static String toString(BigInteger b) {\n+        return toString(b.toByteArray());\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Debug.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2002, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.util.HexFormat;\n@@ -104,1 +105,1 @@\n-        return \"SerialNumber: [\" + Debug.toHexString(serialNum) + ']';\n+        return \"SerialNumber: \" + Debug.toString(serialNum);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SerialNumber.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,0 +67,1 @@\n+import sun.security.util.Debug;\n@@ -70,1 +71,1 @@\n- * @bug 8074931\n+ * @bug 8074931 8296787\n@@ -198,0 +199,8 @@\n+\n+        \/\/ check serial number format\n+        String serialNum = Debug.toString(selector.getSerialNumber());\n+        String expected = \"38:df:82:b8\";\n+        if (!serialNum.equals(expected)) {\n+            throw new RuntimeException(\"Serial number toString format is incorrect. Got: \"\n+                + serialNum + \" Expected: \" + expected);\n+        }\n","filename":"test\/jdk\/java\/security\/cert\/X509CertSelectorTest.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    ONE(\"1000\",\n+    ONE(\"10:00\",\n","filename":"test\/lib\/jdk\/test\/lib\/security\/TestCertificate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n-    public static final String CERT_SERIAL = \"edbec8f705af2514\";\n-    public static final String ANCHOR_CERT_SERIAL = \"8e191778b2f331be\";\n+    public static final String CERT_SERIAL = \"00:ed:be:c8:f7:05:af:25:14\";\n+    public static final String ANCHOR_CERT_SERIAL = \"8e:19:17:78:b2:f3:31:be\";\n","filename":"test\/lib\/jdk\/test\/lib\/security\/TestTLSHandshake.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}