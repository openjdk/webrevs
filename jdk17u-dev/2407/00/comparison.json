{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.Action;\n+import javax.swing.JEditorPane;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.Caret;\n+import javax.swing.text.Element;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.html.HTMLDocument;\n+import javax.swing.text.html.HTMLEditorKit;\n+import java.awt.event.ActionEvent;\n+import java.io.StringReader;\n+\n+\/*\n+ * @test\n+ * @bug 4253334\n+ * @summary Tests that bold attribute unsets properly\n+ *\/\n+\n+public class bug4253334 {\n+\n+    public static void main(String[] args) throws Exception {\n+        JEditorPane ep = new JEditorPane();\n+        ep.setEditable(true);\n+        ep.setContentType(\"text\/html\");\n+\n+        HTMLEditorKit kit = (HTMLEditorKit)ep.getEditorKit();\n+        HTMLDocument doc = (HTMLDocument)kit.createDefaultDocument();\n+        ep.setDocument(doc);\n+        String text = \"<html><body>somesampletext<\/body><\/html>\";\n+        kit.read(new StringReader(text), doc, 0);\n+\n+        \/\/ make some text bold & italic\n+        MutableAttributeSet attrs = new SimpleAttributeSet();\n+        StyleConstants.setBold(attrs, true);\n+        StyleConstants.setItalic(attrs, true);\n+        doc.setCharacterAttributes(3, 9, attrs, false);\n+\n+        Action[] as = kit.getActions();\n+        Action boldAction = null;\n+\n+        for (Action a : as) {\n+            String s = (String) (a.getValue(Action.NAME));\n+            if (s.equals(\"font-bold\")) {\n+                boldAction = a;\n+            }\n+        }\n+        Caret caret = ep.getCaret();\n+        ActionEvent event = new ActionEvent(ep, ActionEvent.ACTION_PERFORMED,\n+                                            \"font-bold\");\n+        caret.setDot(3);\n+        caret.moveDot(7);\n+        boldAction.actionPerformed(event);\n+        caret.setDot(7);\n+        caret.moveDot(12);\n+        boldAction.actionPerformed(event);\n+\n+        Element elem = doc.getCharacterElement(9);\n+        AttributeSet at = elem.getAttributes();\n+        if (StyleConstants.isBold(at)) {\n+            throw new RuntimeException(\"Test Failed: bold attribute set\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/StyledEditorKit\/bug4253334.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Document;\n+import javax.swing.text.MutableAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.StyledEditorKit;\n+\n+\/*\n+ * @test\n+ * @bug 4329418\n+ * @key headful\n+ * @summary Tests if setCharacterAttributes() is maintained\n+ *          after return in J(Editor\/Text)Pane\n+ *\/\n+\n+public class bug4329418 {\n+    private static JFrame jf;\n+    private static StyledEditorKit sek;\n+\n+    private static volatile boolean passed = false;\n+    private static final int FONT_SIZE = 36;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+\n+            SwingUtilities.invokeAndWait(bug4329418::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            robot.delay(300);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed.\" +\n+                        \" setCharacterAttributes() does not work correctly\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (jf != null) {\n+                    jf.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        jf = new JFrame(\"setCharacterAttributes Test\");\n+        sek = new StyledEditorKit();\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditorKit(sek);\n+\n+        MutableAttributeSet attrs = sek.getInputAttributes();\n+        StyleConstants.setFontSize(attrs, FONT_SIZE);\n+\n+        jep.addKeyListener(new KeyAdapter() {\n+            public void keyReleased(KeyEvent e) {\n+                MutableAttributeSet attrs = sek.getInputAttributes();\n+                passed = (StyleConstants.getFontSize(attrs) == FONT_SIZE);\n+            }\n+        });\n+\n+        jep.setText(\"aaa\");\n+        Document doc = jep.getDocument();\n+        jep.setCaretPosition(doc.getLength());\n+\n+        jf.getContentPane().add(jep);\n+        jf.setLocationRelativeTo(null);\n+        jf.setSize(200, 200);\n+        jf.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/StyledEditorKit\/bug4329418.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFormattedTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.MaskFormatter;\n+import java.text.ParseException;\n+\n+\/*\n+ * @test\n+ * @bug 4739057\n+ * @summary replaceSelection() method fails on JFormattedTextField\n+ *\/\n+\n+public class bug4739057 {\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            MaskFormatter formatter;\n+            try {\n+                formatter = new MaskFormatter(\"(###) ###-####\");\n+            } catch (ParseException e) {\n+                throw new RuntimeException(e);\n+            }\n+            formatter.setPlaceholderCharacter('#');\n+            JFormattedTextField textField = new JFormattedTextField(formatter);\n+            textField.replaceSelection(\"12345\");\n+            if (!textField.getText().equals(\"(123) 45#-####\")) {\n+                throw new RuntimeException(\"Test Failed! replaceSelection() didn't replace text properly\");\n+            }\n+        });\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/bug4739057.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFormattedTextField;\n+import javax.swing.text.NumberFormatter;\n+import java.text.DecimalFormat;\n+\n+\/*\n+ * @test\n+ * @bug 4763466\n+ * @summary JFormattedTextField and the - sign\n+ *\/\n+\n+public class bug4763466 {\n+\n+    public static void main(String[] args) throws Exception {\n+        DecimalFormat decimalFormat = new DecimalFormat(\"##0.00\");\n+        NumberFormatter textFormatter = new NumberFormatter(decimalFormat);\n+        textFormatter.setAllowsInvalid(false);\n+        textFormatter.setValueClass(Double.class);\n+\n+        JFormattedTextField ftf = new JFormattedTextField(textFormatter);\n+        ftf.setCaretPosition(0);\n+        ftf.setValue((double) -1);\n+\n+        if (ftf.getCaretPosition() == 0) {\n+            throw new RuntimeException(\"Test Failed. Caret position shouldn't be 0\" +\n+                    \" as the sign is literal\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/bug4763466.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.text.Document;\n+import javax.swing.text.Element;\n+import javax.swing.text.html.FormView;\n+\n+\/*\n+ * @test\n+ * @bug 4210307 4210308\n+ * @summary Tests that FormView button text is internationalized\n+ *\/\n+\n+public class bug4210307 {\n+    private static final String RESET_PROPERTY = \"TEST RESET\";\n+    private static final String SUBMIT_PROPERTY = \"TEST SUBMIT\";\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            Object oldReset = UIManager.put(\"FormView.resetButtonText\",\n+                    RESET_PROPERTY);\n+            Object oldSubmit = UIManager.put(\"FormView.submitButtonText\",\n+                    SUBMIT_PROPERTY);\n+\n+            try {\n+                JEditorPane ep = new JEditorPane(\"text\/html\",\n+                        \"<html><input type=\\\"submit\\\"><\/html>\");\n+                Document doc = ep.getDocument();\n+                Element elem = findInputElement(doc.getDefaultRootElement());\n+                TestView view = new TestView(elem);\n+                view.test(SUBMIT_PROPERTY);\n+\n+                ep = new JEditorPane(\"text\/html\",\n+                        \"<html><input type=\\\"reset\\\"><\/html>\");\n+                doc = ep.getDocument();\n+                elem = findInputElement(doc.getDefaultRootElement());\n+                view = new TestView(elem);\n+                view.test(RESET_PROPERTY);\n+            } finally {\n+                UIManager.put(\"FormView.resetButtonText\", oldReset);\n+                UIManager.put(\"FormView.submitButtonText\", oldSubmit);\n+            }\n+        });\n+    }\n+\n+    private static Element findInputElement(Element root) {\n+        for (int i = 0; i < root.getElementCount(); i++) {\n+            Element elem = root.getElement(i);\n+            if (elem.getName().equals(\"input\")) {\n+                return elem;\n+            } else {\n+                Element e = findInputElement(elem);\n+                if (e != null) return e;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    static class TestView extends FormView {\n+        public TestView(Element elem) {\n+            super(elem);\n+        }\n+\n+        public void test(String caption) {\n+            JButton comp = (JButton) createComponent();\n+            if (!comp.getText().equals(caption)) {\n+                throw new RuntimeException(\"Failed: '\" + comp.getText() +\n+                        \"' instead of `\" + caption + \"'\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/bug4210307.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.html.HTMLEditorKit;\n+import java.awt.Component;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4839739\n+ * @key headful\n+ * @summary Tests if JEditorPane works correctly with HTML comments.\n+ *\/\n+\n+public class bug4839739 {\n+\n+    private static JFrame jFrame;\n+    private static JEditorPane jep;\n+    private static volatile Point p;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+            robot.delay(50);\n+\n+            SwingUtilities.invokeAndWait(bug4839739::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(() -> p = jep.getLocationOnScreen());\n+            robot.delay(200);\n+\n+            robot.mouseMove(p.x + 20, p.y + 20);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.delay(300);\n+\n+            Component comp = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();\n+            if (!(comp instanceof JEditorPane)) {\n+                throw new RuntimeException(\"Test failed.\" +\n+                        \" JEditorPane doesn't work as expected with HTML comments\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (jFrame != null) {\n+                    jFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        String text = \"<html><head><body><!-- some comment -->\" +\n+                \"some always visible text<\/body><\/html>\";\n+\n+        jFrame = new JFrame(\"JEditorPane With HTML\");\n+        jep = new JEditorPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setEditable(false);\n+\n+        jep.setText(text);\n+        jFrame.getContentPane().add(jep);\n+        jFrame.setSize(200,200);\n+        jFrame.setLocationRelativeTo(null);\n+        jFrame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/bug4839739.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"}]}