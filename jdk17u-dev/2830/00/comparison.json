{"files":[{"patch":"@@ -117,1 +117,1 @@\n-  bool do_object_b(oop p);\n+  bool do_object_b(oop p) override;\n@@ -124,1 +124,1 @@\n-  bool do_object_b(oop p);\n+  bool do_object_b(oop p) override;\n@@ -131,1 +131,1 @@\n-  virtual void on_commit(uint start_idx, size_t num_regions, bool zero_filled);\n+  void on_commit(uint start_idx, size_t num_regions, bool zero_filled) override;\n@@ -249,1 +249,1 @@\n-    bool default_value() const { return false; }\n+    bool default_value() const override { return false; }\n@@ -314,1 +314,1 @@\n-  void trace_heap(GCWhen::Type when, const GCTracer* tracer);\n+  void trace_heap(GCWhen::Type when, const GCTracer* tracer) override;\n@@ -455,3 +455,3 @@\n-  virtual HeapWord* allocate_new_tlab(size_t min_size,\n-                                      size_t requested_size,\n-                                      size_t* actual_size);\n+  HeapWord* allocate_new_tlab(size_t min_size,\n+                              size_t requested_size,\n+                              size_t* actual_size) override;\n@@ -459,2 +459,2 @@\n-  virtual HeapWord* mem_allocate(size_t word_size,\n-                                 bool*  gc_overhead_limit_was_exceeded);\n+  HeapWord* mem_allocate(size_t word_size,\n+                         bool*  gc_overhead_limit_was_exceeded) override;\n@@ -511,1 +511,1 @@\n-  virtual void do_full_collection(bool clear_all_soft_refs);\n+  void do_full_collection(bool clear_all_soft_refs) override;\n@@ -1010,1 +1010,1 @@\n-  jint initialize();\n+  jint initialize() override;\n@@ -1012,3 +1012,3 @@\n-  virtual void stop();\n-  virtual void safepoint_synchronize_begin();\n-  virtual void safepoint_synchronize_end();\n+  void stop() override;\n+  void safepoint_synchronize_begin() override;\n+  void safepoint_synchronize_end() override;\n@@ -1017,1 +1017,1 @@\n-  void post_initialize();\n+  void post_initialize() override;\n@@ -1022,1 +1022,1 @@\n-  virtual Name kind() const {\n+  Name kind() const override {\n@@ -1026,1 +1026,1 @@\n-  virtual const char* name() const {\n+  const char* name() const override {\n@@ -1043,1 +1043,1 @@\n-  virtual SoftRefPolicy* soft_ref_policy();\n+  SoftRefPolicy* soft_ref_policy() override;\n@@ -1045,4 +1045,4 @@\n-  virtual void initialize_serviceability();\n-  virtual MemoryUsage memory_usage();\n-  virtual GrowableArray<GCMemoryManager*> memory_managers();\n-  virtual GrowableArray<MemoryPool*> memory_pools();\n+  void initialize_serviceability() override;\n+  MemoryUsage memory_usage() override;\n+  GrowableArray<GCMemoryManager*> memory_managers() override;\n+  GrowableArray<MemoryPool*> memory_pools() override;\n@@ -1071,2 +1071,2 @@\n-  virtual size_t capacity() const;\n-  virtual size_t used() const;\n+  size_t capacity() const override;\n+  size_t used() const override;\n@@ -1084,1 +1084,1 @@\n-  virtual bool is_maximal_no_gc() const {\n+  bool is_maximal_no_gc() const override {\n@@ -1139,1 +1139,1 @@\n-  virtual void collect(GCCause::Cause cause);\n+  void collect(GCCause::Cause cause) override;\n@@ -1163,1 +1163,1 @@\n-  virtual bool is_in(const void* p) const;\n+  bool is_in(const void* p) const override;\n@@ -1203,1 +1203,1 @@\n-  virtual void object_iterate(ObjectClosure* cl);\n+  void object_iterate(ObjectClosure* cl) override;\n@@ -1205,1 +1205,1 @@\n-  virtual ParallelObjectIteratorImpl* parallel_object_iterator(uint thread_num);\n+  ParallelObjectIteratorImpl* parallel_object_iterator(uint thread_num) override;\n@@ -1208,1 +1208,1 @@\n-  virtual void keep_alive(oop obj);\n+  void keep_alive(oop obj) override;\n@@ -1291,4 +1291,4 @@\n-  size_t tlab_capacity(Thread* ignored) const;\n-  size_t tlab_used(Thread* ignored) const;\n-  size_t max_tlab_size() const;\n-  size_t unsafe_max_tlab_alloc(Thread* ignored) const;\n+  size_t tlab_capacity(Thread* ignored) const override;\n+  size_t tlab_used(Thread* ignored) const override;\n+  size_t max_tlab_size() const override;\n+  size_t unsafe_max_tlab_alloc(Thread* ignored) const override;\n@@ -1318,1 +1318,1 @@\n-  virtual size_t max_capacity() const;\n+  size_t max_capacity() const override;\n@@ -1388,1 +1388,1 @@\n-  virtual void register_nmethod(nmethod* nm);\n+  void register_nmethod(nmethod* nm) override;\n@@ -1391,1 +1391,1 @@\n-  virtual void unregister_nmethod(nmethod* nm);\n+  void unregister_nmethod(nmethod* nm) override;\n@@ -1394,1 +1394,1 @@\n-  virtual void flush_nmethod(nmethod* nm) {}\n+  void flush_nmethod(nmethod* nm) override {}\n@@ -1397,1 +1397,1 @@\n-  virtual void verify_nmethod(nmethod* nm) {}\n+  void verify_nmethod(nmethod* nm) override {}\n@@ -1419,1 +1419,1 @@\n-  virtual void prepare_for_verify();\n+  void prepare_for_verify() override;\n@@ -1436,1 +1436,1 @@\n-  void verify(VerifyOption vo);\n+  void verify(VerifyOption vo) override;\n@@ -1439,1 +1439,1 @@\n-  virtual bool supports_concurrent_gc_breakpoints() const;\n+  bool supports_concurrent_gc_breakpoints() const override;\n@@ -1441,1 +1441,1 @@\n-  virtual WorkGang* safepoint_workers() { return _workers; }\n+  WorkGang* safepoint_workers() override { return _workers; }\n@@ -1443,1 +1443,1 @@\n-  virtual bool is_archived_object(oop object) const;\n+  bool is_archived_object(oop object) const override;\n@@ -1466,0 +1466,3 @@\n+  void print_on(outputStream* st) const override;\n+  void print_extended_on(outputStream* st) const override;\n+  void print_on_error(outputStream* st) const override;\n@@ -1467,5 +1470,1 @@\n-  virtual void print_on(outputStream* st) const;\n-  virtual void print_extended_on(outputStream* st) const;\n-  virtual void print_on_error(outputStream* st) const;\n-\n-  virtual void gc_threads_do(ThreadClosure* tc) const;\n+  void gc_threads_do(ThreadClosure* tc) const override;\n@@ -1474,1 +1473,1 @@\n-  void print_tracing_info() const;\n+  void print_tracing_info() const override;\n@@ -1481,1 +1480,1 @@\n-  virtual bool print_location(outputStream* st, void* addr) const;\n+  bool print_location(outputStream* st, void* addr) const override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":51,"deletions":52,"binary":false,"changes":103,"status":"modified"}]}