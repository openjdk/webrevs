{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -4,0 +4,1 @@\n+ * Copyright (c) 2023, Rivos Inc. All rights reserved.\n@@ -28,0 +29,2 @@\n+#include \"riscv_flush_icache.hpp\"\n+#include \"runtime\/java.hpp\"\n@@ -36,3 +39,2 @@\n-  \/\/\n-  \/\/ No sush assurance is defined at the interface level of the builtin\n-  \/\/ method, and so we should make sure it works.\n+\n+  \/\/ We need to make sure stores happens before the I\/D cache synchronization.\n@@ -41,1 +43,2 @@\n-  __builtin___clear_cache(addr, addr + (lines << ICache::log2_line_size));\n+  RiscvFlushIcache::flush((uintptr_t)addr, ((uintptr_t)lines) << ICache::log2_line_size);\n+\n@@ -46,0 +49,6 @@\n+  \/\/ Only riscv_flush_icache is supported as I-cache synchronization.\n+  \/\/ We must make sure the VM can execute such without error.\n+  if (!RiscvFlushIcache::test()) {\n+    vm_exit_during_initialization(\"Unable to synchronize I-cache\");\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/icache_riscv.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Rivos Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"logging\/log.hpp\"\n+#include \"riscv_flush_icache.hpp\"\n+#include \"runtime\/os.hpp\"\n+#include \"runtime\/vm_version.hpp\"\n+#include \"utilities\/debug.hpp\"\n+\n+#include <sys\/syscall.h>\n+#include <unistd.h>\n+\n+#define check_with_errno(check_type, cond, msg)                             \\\n+  do {                                                                      \\\n+    int err = errno;                                                        \\\n+    check_type(cond, \"%s; error='%s' (errno=%s)\", msg, os::strerror(err),   \\\n+               os::errno_name(err));                                        \\\n+} while (false)\n+\n+#define assert_with_errno(cond, msg)    check_with_errno(assert, cond, msg)\n+#define guarantee_with_errno(cond, msg) check_with_errno(guarantee, cond, msg)\n+\n+#ifndef NR_riscv_flush_icache\n+#ifndef NR_arch_specific_syscall\n+#define NR_arch_specific_syscall 244\n+#endif\n+#define NR_riscv_flush_icache (NR_arch_specific_syscall + 15)\n+#endif\n+\n+#define SYS_RISCV_FLUSH_ICACHE_LOCAL 1UL\n+#define SYS_RISCV_FLUSH_ICACHE_ALL   0UL\n+\n+static long sys_flush_icache(uintptr_t start, uintptr_t end , uintptr_t flags) {\n+  return syscall(NR_riscv_flush_icache, start, end, flags);\n+}\n+\n+bool RiscvFlushIcache::test() {\n+  alignas(64) char memory[64];\n+  long ret = sys_flush_icache((uintptr_t)&memory[0],\n+                              (uintptr_t)&memory[sizeof(memory) - 1],\n+                              SYS_RISCV_FLUSH_ICACHE_ALL);\n+  if (ret == 0) {\n+    return true;\n+  }\n+  int err = errno;                                                        \\\n+  log_error(os)(\"Syscall: RISCV_FLUSH_ICACHE not available; error='%s' (errno=%s)\",\n+                os::strerror(err), os::errno_name(err));\n+  return false;\n+}\n+\n+void RiscvFlushIcache::flush(uintptr_t start, uintptr_t end) {\n+  long ret = sys_flush_icache(start, end, SYS_RISCV_FLUSH_ICACHE_ALL);\n+  guarantee_with_errno(ret == 0, \"riscv_flush_icache failed\");\n+}\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/riscv_flush_icache.cpp","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Rivos Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef OS_LINUX_RISCV_FLUSH_ICACHE_LINUX_HPP\n+#define OS_LINUX_RISCV_FLUSH_ICACHE_LINUX_HPP\n+\n+#include \"memory\/allStatic.hpp\"\n+#include \"runtime\/vm_version.hpp\"\n+#include \"utilities\/growableArray.hpp\"\n+\n+class RiscvFlushIcache: public AllStatic {\n+ public:\n+  static bool test();\n+  static void flush(uintptr_t start, uintptr_t end);\n+};\n+\n+#endif \/\/ OS_LINUX_RISCV_FLUSH_ICACHE_LINUX_HPP\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/riscv_flush_icache.hpp","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"}]}