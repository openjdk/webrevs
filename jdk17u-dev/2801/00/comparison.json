{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @test TestStressG1Humongous\n+ * @test\n@@ -34,1 +34,28 @@\n- * @run driver\/timeout=1300 gc.stress.TestStressG1Humongous\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 4 3 1.1 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 16 5 2.1 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=180 gc.stress.TestStressG1Humongous 32 4 0.6 120\n+ *\/\n+\n+\/*\n+ * @test\n+ * @requires vm.gc.G1\n+ * @requires !vm.flightRecorder\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ * @run driver\/timeout=900 gc.stress.TestStressG1Humongous 1 7 0.6 600\n@@ -51,0 +78,4 @@\n+        if (args.length != 4) {\n+            throw new IllegalArgumentException(\"Test expects 4 arguments\");\n+        }\n+\n@@ -53,6 +84,0 @@\n-        \/\/ Heap size, region size, threads, humongous size, timeout\n-        run(heapSize, 4, 3, 1.1, 120);\n-        run(heapSize, 16, 5, 2.1, 120);\n-        run(heapSize, 32, 4, 0.6, 120);\n-        run(heapSize, 1, 7, 0.6, 600);\n-    }\n@@ -60,2 +85,6 @@\n-    private static void run(int heapSize, int regionSize, int threads, double humongousSize, int timeout)\n-            throws Exception {\n+        \/\/ Region size, threads, humongous size, and timeout passed as @run arguments\n+        int regionSize = Integer.parseInt(args[0]);\n+        int threads = Integer.parseInt(args[1]);\n+        double humongousSize = Double.parseDouble(args[2]);\n+        int timeout = Integer.parseInt(args[3]);\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Humongous.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"}]}