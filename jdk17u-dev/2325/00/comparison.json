{"files":[{"patch":"@@ -503,0 +503,1 @@\n+\n@@ -504,0 +505,1 @@\n+\n@@ -547,2 +549,2 @@\n-  const size_t stripe_len = 4 * M;\n-  const int num_stripes = 4;\n+  const size_t stripe_len = os::vm_allocation_granularity();\n+  const int num_stripes = 6;\n@@ -553,1 +555,0 @@\n-  ASSERT_NE(p, (address)NULL);\n@@ -555,0 +556,1 @@\n+  ASSERT_NE(p, (address)nullptr);\n@@ -556,2 +558,3 @@\n-  \/\/ .. release it...\n-  ASSERT_TRUE(os::release_memory((char*)p, total_range_len));\n+  \/\/ \/\/ make things even more difficult by trying to reserve at the border of the region\n+  address border = p + num_stripes * stripe_len;\n+  address p2 = (address)os::attempt_reserve_memory_at((char*)border, stripe_len);\n@@ -560,4 +563,1 @@\n-  \/\/ re-reserve it. This should work unless release failed.\n-  address p2 = (address)os::attempt_reserve_memory_at((char*)p, total_range_len);\n-  ASSERT_EQ(p2, p);\n-  PRINT_MAPPINGS(\"C\");\n+  ASSERT_TRUE(p2 == nullptr || p2 == border);\n@@ -566,1 +566,6 @@\n-  PRINT_MAPPINGS(\"D\");\n+  PRINT_MAPPINGS(\"C\");\n+\n+  if (p2 != nullptr) {\n+    ASSERT_TRUE(os::release_memory((char*)p2, stripe_len));\n+    PRINT_MAPPINGS(\"D\");\n+  }\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"}]}