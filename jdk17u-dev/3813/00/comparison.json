{"files":[{"patch":"@@ -1,61 +0,0 @@\n-<!--\n- Copyright (c) 2007, 2013, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<!--  \n-  @test\n-  @bug 4490692\n-  @author Naoto Sato\n-  @ignore The fix for this problem was backed out for 5057184.  Remove this \"ignore\" tag when it is fixed again.\n-  @run applet\/manual=yesno bug4490692.html\n--->\n-  <head>\n-    <title>Test for KEY_PRESS event for accented characters<\/title>\n-  <\/head>\n-\n-  <body>\n-      <h1>Test for KEY_PRESS event for accented characters: Bug id 4490692<\/h1>\n-\n-This test is for unix platforms only. Press OK if you are not\n-testing on those platforms.\n-\n-Before the test, you need to modify the keyboard mapping for X by issueing\n-the following command:\n-\n-xmodmap -e 'keycode 60 = aacute'  (this is for Solaris Sparc keyboard)\n-xmodmap -e 'keycode 23 = aacute'  (this is for Linux PC keyboard)\n-\n-This command lets you type 'a with acute' character when you press 'Tab' keytop. <b>Please\n-do not fail to restore the original key mapping by doing the following after the test<\/b>\n-\n-xmodmap -e 'keycode 60 = Tab'  (this is for Solaris Sparc keyboard)\n-xmodmap -e 'keycode 23 = Tab'  (this is for Linux PC keyboard)\n-\n-Confirm the following two behaviors:\n-\n-    \"KEYPRESS received for aacute\" is displayed when you press 'Tab' keytop.\n-    On Solaris Sparc keyboard, The key sequence (\"Compose\", \"a\", \"'\") generates a-acute character in en_US locale\n-\n-<APPLET CODE=\"bug4490692.class\" WIDTH=0 HEIGHT=0><\/APPLET>\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/java\/awt\/im\/4490692\/bug4490692.html","additions":0,"deletions":61,"binary":false,"changes":61,"status":"deleted"},{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2007, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- *\n- * @bug 4490692\n- * @author Naoto Sato\n- *\/\n-\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-\n-public class bug4490692 extends javax.swing.JApplet {\n-    public void init() {\n-        new TestFrame();\n-    }\n-}\n-\n-class TestFrame extends JFrame implements KeyListener {\n-    JTextField text;\n-    JLabel label;\n-\n-    TestFrame () {\n-        text = new JTextField();\n-        text.addKeyListener(this);\n-        label = new JLabel(\" \");\n-        Container c = getContentPane();\n-        BorderLayout borderLayout1 = new BorderLayout();\n-        c.setLayout(borderLayout1);\n-        c.add(text, BorderLayout.CENTER);\n-        c.add(label, BorderLayout.SOUTH);\n-        setSize(300, 200);\n-        setVisible(true);\n-    }\n-\n-    public void keyPressed(KeyEvent e) {\n-        if (e.getKeyChar() == 0x00e1) {\n-            label.setText(\"KEYPRESS received for aacute\");\n-        } else {\n-            label.setText(\" \");\n-        }\n-    }\n-\n-    public void keyTyped(KeyEvent e) {\n-    }\n-\n-    public void keyReleased(KeyEvent e) {\n-    }\n-}\n","filename":"test\/jdk\/java\/awt\/im\/4490692\/bug4490692.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2007, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+\n+\/*\n+ * @test\n+ * @bug 4490692\n+ * @summary [Linux] Test for KEY_PRESS event for accented characters.\n+ * @requires (os.family == \"linux\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual bug4490692\n+ *\/\n+\n+public class bug4490692 {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test is for unix platforms only.\n+            Before the test, you need to modify the keyboard mapping for\n+            Tab by issuing the following command:\n+\n+            xmodmap -e 'keycode 23 = aacute'  (this is for Linux)\n+            xmodmap -e 'keycode 60 = aacute'  (this is for Solaris Sparc)\n+\n+            This command lets you type 'a with acute (à)' character when you press\n+            'Tab' key in the JTextField provided below the logging area.\n+            After the test, please DO NOT fail to restore the original\n+            key mapping by doing the following.\n+\n+            xmodmap -e 'keycode 23 = Tab'  (this is for Linux)\n+            xmodmap -e 'keycode 60 = Tab'  (this is for Solaris Sparc)\n+\n+            CASE 1: This is a manual check and for SOLARIS SPARC keyboard\n+            only. Check whether the key sequence (\"Compose\", \"a\", \" ' \")\n+            generates a-acute character in en_US locale.\n+\n+            CASE 2: This step is automated and applicable for both\n+            keyboards - LINUX & SOLARIS SPARC.\n+            When Tab key is pressed it should generate a-acute (à)\n+            character, this test automatically passes if the correct character\n+            is generated on keypress else fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(45)\n+                .testTimeOut(10)\n+                .splitUIBottom(bug4490692::createUI)\n+                .logArea(8)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JComponent createUI() {\n+        JPanel panel = new JPanel();\n+        JTextField textField = new JTextField(\"\", 20);\n+        panel.add(new JLabel(\"Text field:\"));\n+\n+        textField.addKeyListener(new KeyAdapter() {\n+            @Override\n+            public void keyPressed(KeyEvent e) {\n+                PassFailJFrame.log(e.paramString());\n+                if (e.getKeyCode() == 23 || e.getKeyCode() == 60\n+                        || e.paramString().contains(\"rawCode=23\")\n+                        || e.paramString().contains(\"rawCode=60\")) {\n+                    if (e.getKeyChar() == 0x00e1) {\n+                        PassFailJFrame.forcePass();\n+                    } else {\n+                        PassFailJFrame.forceFail(\"Tab keypress DID NOT\"\n+                                + \" produce the expected accented character - aacute\");\n+                    }\n+                }\n+            }\n+        });\n+\n+        panel.add(textField);\n+        return panel;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/im\/bug4490692.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"}]}