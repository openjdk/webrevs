{"files":[{"patch":"@@ -36,1 +36,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -1422,1 +1421,6 @@\n-\n+        \/**\n+         * Use the platform's default file system to avoid\n+         * issues when the VM is configured to use a custom file system provider.\n+         *\/\n+        private static final java.nio.file.FileSystem builtInFS =\n+                DefaultFileSystemProvider.theFileSystem();\n@@ -1428,2 +1432,2 @@\n-                        Files.readAttributes(file.toPath(), BasicFileAttributes.class),\n-                        zc);\n+                        Files.readAttributes(builtInFS.getPath(file.getPath()),\n+                                BasicFileAttributes.class), zc);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8266345\n+ * @bug 4313887 7006126 8142968 8178380 8183320 8210112 8266345 8263940\n@@ -40,0 +40,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -41,0 +43,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -44,1 +48,0 @@\n-import org.testng.annotations.BeforeTest;\n@@ -76,0 +79,39 @@\n+    \/**\n+     * Test override of default FileSystemProvider with a\n+     * FileSystemProvider jar and the main application on the class path.\n+     *\/\n+    public void testClassPathWithFileSystemProviderJar() throws Exception {\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path jar = Path.of(\"testFileSystemProvider.jar\");\n+        Files.deleteIfExists(jar);\n+        createFileSystemProviderJar(jar, Path.of(testClasses));\n+        String classpath = jar + File.pathSeparator + testClasses\n+                + File.separator + \"modules\" + File.separator + \"m\";\n+        int exitValue = exec(SET_DEFAULT_FSP, \"-cp\", classpath, \"p.Main\");\n+        assertTrue(exitValue == 0);\n+    }\n+\n+    \/**\n+     * Creates a JAR containing the FileSystemProvider used to override the\n+     * default FileSystemProvider\n+     *\/\n+    private void createFileSystemProviderJar(Path jar, Path dir) throws IOException {\n+\n+        List<String>  args = new ArrayList<>();\n+        args.add(\"--create\");\n+        args.add(\"--file=\" + jar);\n+        try (Stream<Path> stream = Files.list(dir)) {\n+            List<String> paths = stream\n+                    .map(path -> path.getFileName().toString())\n+                    .filter(f -> f.startsWith(\"TestProvider\"))\n+                    .toList();\n+            for(var p : paths) {\n+                args.add(\"-C\");\n+                args.add(dir.toString());\n+                args.add(p);\n+            }\n+        }\n+        int ret = JAR_TOOL.run(System.out, System.out, args.toArray(new String[0]));\n+        assertTrue(ret == 0);\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/file\/spi\/SetDefaultProvider.java","additions":44,"deletions":2,"binary":false,"changes":46,"status":"modified"}]}