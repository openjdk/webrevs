{"files":[{"patch":"@@ -51,0 +51,2 @@\n+    private static final int READ_TIMEOUT_SECS = Integer.getInteger(\"readtimeout\", 30);\n+\n@@ -66,14 +68,37 @@\n-            try (DTLSServer server = new DTLSServer(args[0])) {\n-                List<String> command = List.of(\n-                        Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n-                        \"DTLSWontNegotiateV10\",\n-                        \/\/ if server is \"DTLS\" then the client should be v1.0 and vice versa\n-                        args[0].equals(DTLS) ? DTLSV_1_0 : DTLS,\n-                        Integer.toString(server.getListeningPortNumber())\n-                );\n-\n-                ProcessBuilder builder = new ProcessBuilder(command);\n-                Process p = builder.inheritIO().start();\n-                server.run();\n-                p.destroy();\n-                System.out.println(\"Success: DTLSv1.0 connection was not established.\");\n+            final int totalAttempts = 5;\n+            int tries;\n+            for (tries = 0 ; tries < totalAttempts ; ++tries) {\n+                try {\n+                    System.out.printf(\"Starting server %d\/%d attempts%n\", tries+1, totalAttempts);\n+                    runServer(args[0]);\n+                    break;\n+                } catch (SocketTimeoutException exc) {\n+                    System.out.println(\"The server timed-out waiting for packets from the client.\");\n+                }\n+            }\n+            if (tries == totalAttempts) {\n+                throw new RuntimeException(\"The server\/client communications timed-out after \" + totalAttempts + \" tries.\");\n+            }\n+        }\n+    }\n+\n+    private static void runServer(String protocol) throws Exception {\n+        \/\/ args: protocol\n+        Process clientProcess = null;\n+        try (DTLSServer server = new DTLSServer(protocol)) {\n+            List<String> command = List.of(\n+                    Path.of(System.getProperty(\"java.home\"), \"bin\", \"java\").toString(),\n+                    \"DTLSWontNegotiateV10\",\n+                    \/\/ if server is \"DTLS\" then the client should be v1.0 and vice versa\n+                    protocol.equals(DTLS) ? DTLSV_1_0 : DTLS,\n+                    Integer.toString(server.getListeningPortNumber())\n+            );\n+\n+            ProcessBuilder builder = new ProcessBuilder(command);\n+            clientProcess = builder.inheritIO().start();\n+            server.run();\n+            System.out.println(\"Success: DTLSv1.0 connection was not established.\");\n+\n+        } finally {\n+            if (clientProcess != null) {\n+                clientProcess.destroy();\n@@ -92,0 +117,3 @@\n+            socket.setSoTimeout(READ_TIMEOUT_SECS * 1000);\n+            log(\"Client listening on port \" + socket.getLocalPort()\n+                    + \". Sending data to server port \" + remotePort);\n@@ -290,0 +318,2 @@\n+            socket.setSoTimeout(READ_TIMEOUT_SECS * 1000);\n+            log(\"Server listening on port: \" + socket.getLocalPort());\n","filename":"test\/jdk\/javax\/net\/ssl\/DTLS\/DTLSWontNegotiateV10.java","additions":44,"deletions":14,"binary":false,"changes":58,"status":"modified"}]}