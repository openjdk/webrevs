{"files":[{"patch":"@@ -259,1 +259,1 @@\n-  volatile long _stack_traversal_mark;\n+  volatile int64_t _stack_traversal_mark;\n@@ -549,2 +549,2 @@\n-  long  stack_traversal_mark()                    { return _stack_traversal_mark; }\n-  void  set_stack_traversal_mark(long l)          { _stack_traversal_mark = l; }\n+  int64_t stack_traversal_mark()                  { return _stack_traversal_mark; }\n+  void    set_stack_traversal_mark(int64_t l)     { _stack_traversal_mark = l; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-long CompileBroker::_peak_compilation_time         = 0;\n+jlong CompileBroker::_peak_compilation_time        = 0;\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -226,1 +226,1 @@\n-  static long _peak_compilation_time;\n+  static jlong _peak_compilation_time;\n@@ -419,2 +419,2 @@\n-  static long get_peak_compilation_time() {         return _peak_compilation_time; }\n-  static long get_total_compilation_time() {        return _t_total_compilation.milliseconds(); }\n+  static jlong get_peak_compilation_time() {        return _peak_compilation_time; }\n+  static jlong get_total_compilation_time() {       return _t_total_compilation.milliseconds(); }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -572,1 +572,1 @@\n-long JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n+jlong JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-  long get_long_at(JVMCIPrimitiveArray array, int index);\n+  jlong get_long_at(JVMCIPrimitiveArray array, int index);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-int InterfaceSupport::_fullgc_alot_invocation = 0;\n+intx InterfaceSupport::_fullgc_alot_invocation = 0;\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  static int _fullgc_alot_invocation;\n+  static intx _fullgc_alot_invocation;\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  int traversal;\n+  int64_t traversal;\n@@ -60,1 +60,1 @@\n-  long traversal_mark;\n+  int64_t traversal_mark;\n@@ -68,2 +68,2 @@\n-      tty->print_cr(\"traversal = %d compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n-                    PTR_FORMAT \" state = %d traversal_mark %ld line = %d\",\n+      tty->print_cr(\"traversal = \" INT64_FORMAT \" compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n+                    PTR_FORMAT \" state = %d traversal_mark \" INT64_FORMAT \" line = %d\",\n@@ -110,2 +110,2 @@\n-long     NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n-long     NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n+int64_t  NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n+int64_t  NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n@@ -122,2 +122,2 @@\n-long   NMethodSweeper::_total_nof_methods_reclaimed     = 0;   \/\/ Accumulated nof methods flushed\n-long   NMethodSweeper::_total_nof_c2_methods_reclaimed  = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_methods_reclaimed    = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_c2_methods_reclaimed = 0;   \/\/ Accumulated nof methods flushed\n@@ -190,1 +190,1 @@\n-    tty->print_cr(\"### Sweep: stack traversal %ld\", _traversals);\n+    tty->print_cr(\"### Sweep: stack traversal \" INT64_FORMAT, _traversals);\n@@ -220,1 +220,1 @@\n-      const long wait_time = 60*60*24 * 1000;\n+      const int64_t wait_time = 60*60*24 * 1000;\n@@ -652,1 +652,1 @@\n-    xtty->begin_elem(\"sweeper state='%s' traversals='\" INTX_FORMAT \"' \", msg, (intx)traversal_count());\n+    xtty->begin_elem(\"sweeper state='%s' traversals='\" INT64_FORMAT \"' \", msg, traversal_count());\n@@ -670,2 +670,3 @@\n-  out->print_cr(\"  Total number of full sweeps:     %ld\", _total_nof_code_cache_sweeps);\n-  out->print_cr(\"  Total number of flushed methods: %ld (thereof %ld C2 methods)\", _total_nof_methods_reclaimed,\n+  out->print_cr(\"  Total number of full sweeps:     \" INT64_FORMAT, _total_nof_code_cache_sweeps);\n+  out->print_cr(\"  Total number of flushed methods: \" INT64_FORMAT \" (thereof \" INT64_FORMAT \" C2 methods)\",\n+                                                    _total_nof_methods_reclaimed,\n","filename":"src\/hotspot\/share\/runtime\/sweeper.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-  static long      _traversals;                   \/\/ Stack scan count, also sweep ID.\n-  static long      _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n+  static int64_t   _traversals;                   \/\/ Stack scan count, also sweep ID.\n+  static int64_t   _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n@@ -81,2 +81,2 @@\n-  static long      _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n-  static long      _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n+  static int64_t   _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n+  static int64_t   _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n@@ -100,1 +100,1 @@\n-  static long traversal_count()                    { return _traversals; }\n+  static int64_t traversal_count()                 { return _traversals; }\n@@ -103,1 +103,1 @@\n-  static int  total_nof_methods_reclaimed()        { return _total_nof_methods_reclaimed; }\n+  static int64_t total_nof_methods_reclaimed()     { return _total_nof_methods_reclaimed; }\n","filename":"src\/hotspot\/share\/runtime\/sweeper.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -690,1 +690,1 @@\n-  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         long)                                  \\\n+  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         int64_t)                               \\\n@@ -1227,0 +1227,1 @@\n+  declare_integer_type(int64_t)                                           \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}