{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -3854,0 +3854,2 @@\n+            case KeyEvent.VK_TAB:\n+            case KeyEvent.VK_SPACE:\n@@ -3896,9 +3898,4 @@\n-        String keyText = KeyEvent.getKeyText(keyStroke.getKeyCode());\n-        debugString(\"[INFO]:   Shortcut is: \" + keyText);\n-        if (keyText != null || keyText.length() > 0) {\n-            CharSequence seq = keyText.subSequence(0, 1);\n-            if (seq != null || seq.length() > 0) {\n-                return seq.charAt(0);\n-            }\n-        }\n-        return 0;\n+\n+        keyCode = keyStroke.getKeyCode();\n+        debugString(\"[INFO]:   Shortcut is: \" + Integer.toHexString(keyCode));\n+        return (char)keyCode;\n","filename":"src\/jdk.accessibility\/windows\/classes\/com\/sun\/java\/accessibility\/internal\/AccessBridge.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1111,0 +1111,2 @@\n+#define ACCESSIBLE_VK_TAB           9\n+#define ACCESSIBLE_VK_SPACE         32\n","filename":"src\/jdk.accessibility\/windows\/native\/include\/bridge\/AccessBridgePackages.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,112 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.KeyStroke;\n+\n+\/*\n+ * @test\n+ * @bug 8339728\n+ * @summary Tests that JAWS announce the shortcuts for JMenuItems.\n+ * @requires os.family == \"windows\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestJMenuItemShortcutAccessibility\n+ *\/\n+\n+public class TestJMenuItemShortcutAccessibility {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Start the JAWS application\n+                2. Press Alt + M to open application Menu\n+                3. Navigate the Menu Items by using UP \/ DOWN arrow key\n+                4. Press Pass if you are able to hear correct JAWS announcements\n+                   (JAWS should read full shortcut text and not only the 1st\n+                   character of shortcut text for each menu item) else Fail\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"TestJMenuItemShortcutAccessibility Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(TestJMenuItemShortcutAccessibility::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"A Frame with Menu\");\n+\n+        JMenuBar menuBar = new JMenuBar();\n+        JMenu menu = new JMenu(\"Menu with shortcuts\");\n+        menu.setMnemonic(KeyEvent.VK_M);\n+        menuBar.add(menu);\n+\n+        KeyStroke keyStroke1 = KeyStroke.getKeyStroke(KeyEvent.VK_F,\n+                InputEvent.CTRL_DOWN_MASK);\n+        KeyStroke keyStroke2 = KeyStroke.getKeyStroke(KeyEvent.VK_2,\n+                InputEvent.CTRL_DOWN_MASK | InputEvent.SHIFT_DOWN_MASK);\n+        KeyStroke keyStroke3 = KeyStroke.getKeyStroke(KeyEvent.VK_F1,\n+                InputEvent.CTRL_DOWN_MASK | InputEvent.SHIFT_DOWN_MASK);\n+        KeyStroke keyStroke4 = KeyStroke.getKeyStroke(KeyEvent.VK_COMMA,\n+                InputEvent.CTRL_DOWN_MASK | InputEvent.SHIFT_DOWN_MASK);\n+        KeyStroke keyStroke5 = KeyStroke.getKeyStroke(KeyEvent.VK_PERIOD,\n+                InputEvent.CTRL_DOWN_MASK | InputEvent.ALT_DOWN_MASK);\n+        KeyStroke keyStroke6 = KeyStroke.getKeyStroke(KeyEvent.VK_TAB,\n+                InputEvent.CTRL_DOWN_MASK);\n+        KeyStroke keyStroke7 = KeyStroke.getKeyStroke(KeyEvent.VK_SPACE,\n+                InputEvent.CTRL_DOWN_MASK | InputEvent.SHIFT_DOWN_MASK);\n+\n+        JMenuItem menuItem1 = new JMenuItem(\"First Menu Item\");\n+        menuItem1.setAccelerator(keyStroke1);\n+        JMenuItem menuItem2 = new JMenuItem(\"Second Menu Item\");\n+        menuItem2.setAccelerator(keyStroke2);\n+        JMenuItem menuItem3 = new JMenuItem(\"Third Menu Item\");\n+        menuItem3.setAccelerator(keyStroke3);\n+        JMenuItem menuItem4 = new JMenuItem(\"Fourth Menu Item\");\n+        menuItem4.setAccelerator(keyStroke4);\n+        JMenuItem menuItem5 = new JMenuItem(\"Fifth Menu Item\");\n+        menuItem5.setAccelerator(keyStroke5);\n+        JMenuItem menuItem6 = new JMenuItem(\"Sixth Menu Item\");\n+        menuItem6.setAccelerator(keyStroke6);\n+        JMenuItem menuItem7 = new JMenuItem(\"Seventh Menu Item\");\n+        menuItem7.setAccelerator(keyStroke7);\n+\n+        menu.add(menuItem1);\n+        menu.add(menuItem2);\n+        menu.add(menuItem3);\n+        menu.add(menuItem4);\n+        menu.add(menuItem5);\n+        menu.add(menuItem6);\n+        menu.add(menuItem7);\n+\n+        frame.setJMenuBar(menuBar);\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/TestJMenuItemShortcutAccessibility.java","additions":112,"deletions":0,"binary":false,"changes":112,"status":"added"}]}