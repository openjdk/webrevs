{"files":[{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4239714\n+ * @summary Tests that BasicMenuItemUI.installComponent() is protected\n+ *\/\n+\n+import javax.swing.JMenuItem;\n+import javax.swing.plaf.basic.BasicMenuItemUI;\n+\n+public class bug4239714 {\n+    public static void main(String[] argv) throws Exception {\n+        Tester tester = new Tester();\n+        tester.test();\n+    }\n+\n+    static class Tester extends BasicMenuItemUI {\n+        public void test() {\n+            JMenuItem mi = new JMenuItem(\"bug4239714\");\n+            installComponents(mi);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/BasicMenuItemUI\/bug4239714.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4244616\n+ * @summary Tests that debug output in BasicMenuUI private inner classes\n+ *          is commented out\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import javax.swing.Action;\n+import javax.swing.ActionMap;\n+import javax.swing.JMenu;\n+import javax.swing.plaf.basic.BasicMenuUI;\n+\n+public class bug4244616 {\n+    public static void main(String[] argv) throws Exception {\n+        JMenu menu = new JMenu();\n+        BasicMenuUI ui = new BasicMenuUI();\n+        ui.installUI(menu);\n+        ActionMap amap = menu.getActionMap();\n+\n+        String[] names = {\"selectMenu\", \"cancel\",\n+                \"selectNext\", \"selectPrevious\"};\n+        ActionEvent ev = new ActionEvent(menu,\n+                ActionEvent.ACTION_PERFORMED, \"test event\");\n+\n+        \/\/ Stream redirection\n+        final PrintStream oldOut = System.out;\n+        final PrintStream oldErr = System.err;\n+        try (ByteArrayOutputStream bout = new ByteArrayOutputStream();\n+             ByteArrayOutputStream berr = new ByteArrayOutputStream();\n+             PrintStream out = new PrintStream(bout);\n+             PrintStream err = new PrintStream(berr)) {\n+            for (int i = 0; i < names.length; i++) {\n+                Action action = amap.get(names[i]);\n+                try {\n+                    action.actionPerformed(ev);\n+                } catch (Exception ignored) {\n+                }\n+            }\n+\n+            if (bout.size() != 0 || berr.size() != 0) {\n+                System.out.println(\"bout: \" + bout);\n+                System.out.println(\"berr: \" + berr);\n+                throw new RuntimeException(\"Failed: some debug output occurred\");\n+            }\n+        } finally {\n+            \/\/ Restore streams\n+            System.setOut(oldOut);\n+            System.setErr(oldErr);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/BasicMenuUI\/bug4244616.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4306431\n+ * @summary Tests that Metal themes allow font definition for JList\n+ *\/\n+\n+import java.awt.Font;\n+import javax.swing.LookAndFeel;\n+import javax.swing.plaf.FontUIResource;\n+import javax.swing.plaf.metal.DefaultMetalTheme;\n+import javax.swing.plaf.metal.MetalLookAndFeel;\n+\n+public class bug4306431 {\n+    static final Font FONT = new Font(Font.MONOSPACED, Font.ITALIC, 24);\n+\n+    public static void main(String[] argv) throws Exception {\n+        MetalLookAndFeel.setCurrentTheme(new TestMetalTheme());\n+        LookAndFeel laf = new MetalLookAndFeel();\n+        Font font = laf.getDefaults().getFont(\"List.font\");\n+        if (!font.equals(FONT)) {\n+            throw new RuntimeException(\"Failed: font wasn't customized\");\n+        }\n+    }\n+\n+    static class TestMetalTheme extends DefaultMetalTheme {\n+        public FontUIResource getControlTextFont() {\n+            return new FontUIResource(FONT);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/LookAndFeel\/bug4306431.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5078214\n+ * @key headful\n+ * @summary ToolTip is shown partially when the application is near the bottom of screen.\n+ * @library \/test\/lib\n+ * @build jtreg.SkippedException\n+ * @run main bug5078214\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.ToolTipManager;\n+\n+import jtreg.SkippedException;\n+\n+public class bug5078214 {\n+    static volatile boolean passed = false;\n+\n+    static volatile JFrame mainFrame;\n+    static volatile Rectangle bounds;\n+    static volatile Insets insets;\n+    static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            if (getGraphicsConfig() == null) {\n+                throw new SkippedException(\"We need at least one screen \" +\n+                        \"with the taskbar at the bottom position.\");\n+            }\n+            bounds = getGraphicsConfig().getBounds();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                mainFrame = new JFrame(\"bug5078214\");\n+                mainFrame.setLayout(new BorderLayout());\n+                mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                JButton button = new JButton(\"Button with tooltip\") {\n+                    public Point getToolTipLocation(MouseEvent ev) {\n+                        return new Point(100, 100);\n+                    }\n+                };\n+                mainFrame.add(button, BorderLayout.CENTER);\n+                button.setToolTipText(\"ToolTip for this button\");\n+\n+                \/\/ Position frame\n+                mainFrame.setSize(200, 200);\n+                int x = bounds.x + 200;\n+                int y = bounds.y + bounds.height - insets.bottom - 100;\n+                mainFrame.setLocation(x, y);\n+                mainFrame.setVisible(true);\n+            });\n+\n+            robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            test(bounds, insets);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"ToolTip shown outside of the visible area. Test failed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (mainFrame != null) {\n+                    mainFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void test(Rectangle b, Insets i) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            ToolTipManager.sharedInstance().setLightWeightPopupEnabled(false);\n+            ToolTipManager.sharedInstance().setInitialDelay(100);\n+        });\n+\n+        robot.mouseMove(b.x + 300, b.y + b.height - i.bottom - 10);\n+        robot.delay(500);\n+        Window[] ow = mainFrame.getOwnedWindows();\n+        if (ow == null || ow.length < 1) {\n+            throw new RuntimeException(\"No owned windows for JFrame - no tooltip shown?\");\n+        }\n+\n+        Window ttwnd = ow[0];\n+        int wy = ttwnd.getBounds().y + ttwnd.getBounds().height - 1;\n+        passed = wy < (b.y + b.height - i.bottom);\n+    }\n+\n+    public static GraphicsConfiguration getGraphicsConfig() {\n+        GraphicsDevice[] devices = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                                      .getScreenDevices();\n+        for (GraphicsDevice device : devices) {\n+            GraphicsConfiguration config = device.getDefaultConfiguration();\n+            insets = Toolkit.getDefaultToolkit().getScreenInsets(config);\n+            if (insets.bottom != 0) {\n+                return config;\n+            }\n+        }\n+        return null;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/ToolTipManager\/bug5078214.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"}]}