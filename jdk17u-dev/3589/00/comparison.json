{"files":[{"patch":"@@ -437,1 +437,1 @@\n-  bool makes_backward_branch = false;\n+  bool makes_backward_branch = (default_dest <= bci());\n@@ -539,1 +539,1 @@\n-  bool makes_backward_branch = false;\n+  bool makes_backward_branch = (default_dest <= bci());\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+super public class MissingSafepointOnSwitch\n+\tversion 52:0\n+{\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+  \/* Same as:\n+    public static void test(boolean flag, int v) {\n+        if (flag) {\n+            loop:\n+            for (; ; ) {\n+                switch(v) {\n+                    case 0:\n+                    case 1:\n+                    case 2:\n+                        break loop;\n+                    default:\n+                }\n+            }\n+        }\n+    }\n+    but with the default: set to the loop entry\n+  *\/\n+  public static Method test:\"(ZI)V\"\n+\tstack 1 locals 2\n+  {\n+\t\tiload_0;\n+\t\tifeq\tL32;\n+\tL4:\tstack_frame_type same;\n+\t\tiload_1;\n+\t\ttableswitch{ \/\/0 to 2\n+\t\t0: L32;\n+\t\t1: L32;\n+\t\t2: L32;\n+\t\tdefault: L4 };\n+\tL32:\tstack_frame_type same;\n+\t\treturn;\n+  }\n+\n+} \/\/ end Class TestMissingSafepointOnSwitch\n","filename":"test\/hotspot\/jtreg\/compiler\/parsing\/MissingSafepointOnSwitch.jasm","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8306997\n+ * @summary C2: \"malformed control flow\" assert due to missing safepoint on backedge with a switch\n+ * @compile MissingSafepointOnSwitch.jasm\n+ * @run main\/othervm -Xcomp -XX:CompileOnly=MissingSafepointOnSwitch::test TestMissingSafepointOnSwitch\n+ *\/\n+\n+public class TestMissingSafepointOnSwitch {\n+    public static void main(String[] args) {\n+        MissingSafepointOnSwitch.test(false, 0);\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/parsing\/TestMissingSafepointOnSwitch.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"}]}