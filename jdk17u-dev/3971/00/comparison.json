{"files":[{"patch":"@@ -855,0 +855,1 @@\n+java\/awt\/Menu\/MenuVisibilityTest.java 8161110 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4094620\n+ * @summary MenuItem.enableEvents does not work\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuActionEventTest\n+ *\/\n+\n+import java.awt.AWTEvent;\n+import java.awt.BorderLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+\n+public class MenuActionEventTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Click on the Menu and then on Menuitem on the frame.\n+                2. If you find the following message being printed in\n+                   the test log area:,\n+                   _MenuItem: action event\",\n+                   click PASS, else click FAIL\"\n+                 \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(MenuActionEventTest::initialize)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static Frame initialize() {\n+        Frame f = new Frame(\"Menu Action Event Test\");\n+        f.setLayout(new BorderLayout());\n+        f.setMenuBar(new MenuBar());\n+        Menu m = new _Menu(\"Menu\");\n+        MenuBar mb = f.getMenuBar();\n+        mb.add(m);\n+        MenuItem mi = new _MenuItem(\"Menuitem\");\n+        m.add(mi);\n+        f.setBounds(204, 152, 396, 300);\n+        return f;\n+    }\n+\n+    static class _Menu extends Menu {\n+        public _Menu(String text) {\n+            super(text);\n+            enableEvents(AWTEvent.ACTION_EVENT_MASK);\n+        }\n+\n+        @Override\n+        protected void processActionEvent(ActionEvent e) {\n+            PassFailJFrame.log(\"_Menu: action event\");\n+            super.processActionEvent(e);\n+        }\n+    }\n+\n+    static class _MenuItem extends MenuItem {\n+        public _MenuItem(String text) {\n+            super(text);\n+            enableEvents(AWTEvent.ACTION_EVENT_MASK);\n+        }\n+\n+        @Override\n+        protected void processActionEvent(ActionEvent e) {\n+            PassFailJFrame.log(\"_MenuItem: action event\");\n+            super.processActionEvent(e);\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/MenuActionEventTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2004, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5046491 6423258\n+ * @summary CheckboxMenuItem: menu text is missing from test frame\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MenuVisibilityTest\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+public class MenuVisibilityTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Press on a MenuBar with a long name.\n+                2. Select \"First item\" in an opened menu.\n+                   If you see that \"First menu item was pressed\" in\n+                   the test log area, press PASS\n+                   Otherwise press FAIL\"\n+                 \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(MenuVisibilityTest::initialize)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame initialize() {\n+        Frame frame = new Frame(\"Menu visibility test\");\n+        String menuTitle = \"I_have_never_seen_so_long_Menu_Title_\" +\n+                \"!_ehe-eha-ehu-ehi_ugu-gu!!!_;)_BANG_BANG...\";\n+        MenuBar menubar = new MenuBar();\n+        Menu menu = new Menu(menuTitle);\n+        MenuItem menuItem = new MenuItem(\"First item\");\n+        menuItem.addActionListener(e ->\n+                PassFailJFrame.log(\"First menu item was pressed.\"));\n+        menu.add(menuItem);\n+        menubar.add(menu);\n+        frame.setMenuBar(menubar);\n+        frame.setSize(100, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/MenuVisibilityTest.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -0,0 +1,152 @@\n+\/*\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4039387\n+ * @summary Checks that calling Frame.remove() within hide() doesn't\n+ *          cause SEGV\n+ * @key headful\n+ * @run main RmInHideTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.MouseEvent;\n+\n+public class RmInHideTest {\n+    static volatile Point point;\n+    static RmInHideTestFrame frame;\n+    static volatile Dimension dimension;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new RmInHideTestFrame();\n+                frame.setSize(200, 200);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                point = frame.getButtonLocation();\n+                dimension = frame.getButtonDimension();\n+            });\n+            robot.mouseMove(point.x + dimension.width \/ 2, point.y + dimension.height \/ 2);\n+            robot.mousePress(MouseEvent.BUTTON2_DOWN_MASK);\n+            robot.mouseRelease(MouseEvent.BUTTON2_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            System.out.println(\"Test pass\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static class RmInHideTestFrame extends Frame implements ActionListener {\n+        MenuBar menubar = null;\n+        Button b;\n+\n+        public RmInHideTestFrame() {\n+            super(\"RmInHideTest\");\n+            b = new Button(\"Hide\");\n+            b.setActionCommand(\"hide\");\n+            b.addActionListener(this);\n+            add(\"Center\", b);\n+\n+            MenuBar bar = new MenuBar();\n+\n+            Menu menu = new Menu(\"Test1\", true);\n+            menu.add(new MenuItem(\"Test1A\"));\n+            menu.add(new MenuItem(\"Test1B\"));\n+            menu.add(new MenuItem(\"Test1C\"));\n+            bar.add(menu);\n+\n+            menu = new Menu(\"Test2\", true);\n+            menu.add(new MenuItem(\"Test2A\"));\n+            menu.add(new MenuItem(\"Test2B\"));\n+            menu.add(new MenuItem(\"Test2C\"));\n+            bar.add(menu);\n+            setMenuBar(bar);\n+        }\n+\n+        @Override\n+        public Dimension minimumSize() {\n+            return new Dimension(200, 200);\n+        }\n+\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            String cmd = e.getActionCommand();\n+            if (cmd.equals(\"hide\")) {\n+                hide();\n+                try {\n+                    Thread.currentThread().sleep(2000);\n+                } catch (InterruptedException ex) {\n+                    \/\/ do nothing\n+                }\n+                show();\n+            }\n+        }\n+\n+        @Override\n+        public void hide() {\n+            menubar = getMenuBar();\n+            if (menubar != null) {\n+                remove(menubar);\n+            }\n+            super.hide();\n+        }\n+\n+\n+        @Override\n+        public void show() {\n+            if (menubar != null) {\n+                setMenuBar(menubar);\n+            }\n+            super.show();\n+        }\n+\n+        public Point getButtonLocation() {\n+            return b.getLocationOnScreen();\n+        }\n+\n+        public Dimension getButtonDimension() {\n+            return b.getSize();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/RmInHideTest.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4203208\n+ * @summary setShortcut method does not display proper text on Menu component\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetShortCutTest\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.MenuShortcut;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+\n+import static java.awt.event.KeyEvent.VK_META;\n+import static java.awt.event.KeyEvent.VK_SHIFT;\n+\n+public class SetShortCutTest {\n+    public static void main(String[] args) throws Exception {\n+        boolean isMac = System.getProperty(\"os.name\").startsWith(\"Mac\");\n+        String shortcut = \"Ctrl+Shift+\";\n+        if (isMac) {\n+            shortcut = KeyEvent.getKeyText(VK_SHIFT) + \"+\" + KeyEvent.getKeyText(VK_META);\n+        }\n+\n+        String INSTRUCTIONS = \"\"\"\n+                1. Select menuitem 'Stuff -> Second' once to remove 'File -> First'.\n+                2. Select menuitem 'Stuff -> Second' again to add 'File -> First'.\n+                3. If menuitem 'File -> First' reads First \"\"\" + shortcut + \"\"\"\n+                       'C', press PASS. Otherwise press FAIL.\n+                \"\"\";\n+        PassFailJFrame.builder()\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(SetShortCutTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    static Frame initialize() {\n+        return new TestMenuShortCut();\n+    }\n+\n+    static class TestMenuShortCut extends Frame implements ActionListener {\n+        Menu menu1;\n+        MenuItem item1;\n+        MenuItem item2;\n+        boolean beenHere;\n+\n+        public TestMenuShortCut() {\n+            setTitle(\"Set ShortCut test\");\n+            beenHere = false;\n+            MenuBar mTopMenu = buildMenu();\n+            setSize(300, 300);\n+            this.setMenuBar(mTopMenu);\n+        }\n+\n+        public MenuBar buildMenu() {\n+            MenuBar bar;\n+            bar = new MenuBar();\n+            menu1 = new Menu(\"File\");\n+            item1 = new MenuItem(\"First\");\n+            menu1.add(item1);\n+            item1.setShortcut(new MenuShortcut(KeyEvent.VK_C, true));\n+            bar.add(menu1);\n+\n+            \/\/ Stuff menu\n+            item2 = new MenuItem(\"Second\");\n+            Menu menu2 = new Menu(\"Stuff\");\n+            menu2.add(item2);\n+            item2.setShortcut(new MenuShortcut(KeyEvent.VK_C, false));\n+            bar.add(menu2);\n+\n+            item1.addActionListener(this);\n+            item2.addActionListener(this);\n+            return bar;\n+        }\n+\n+        @Override\n+        public void actionPerformed(ActionEvent event) {\n+            if (event.getSource() == item1) {\n+                Frame temp = new Frame(\"Accelerator key is working for 'First'\");\n+                temp.setSize(300, 50);\n+                temp.setVisible(true);\n+            }\n+\n+            \/\/ Click on the \"Stuff\" menu to remove the \"first\" menu item\n+            else if (event.getSource() == item2) {\n+                \/\/ If the item has not been removed from the menu,\n+                \/\/ then remove \"First\" from the \"File\" menu\n+                if (beenHere == false) {\n+                    item1.removeActionListener(this);\n+                    menu1.remove(item1);\n+                    beenHere = true;\n+                } else {\n+                    item1 = new MenuItem(\"First\");\n+                    menu1.add(item1);\n+                    item1.addActionListener(this);\n+                    item1.setShortcut(new MenuShortcut(KeyEvent.VK_C, true));\n+                    beenHere = false;\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Menu\/SetShortCutTest.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"}]}