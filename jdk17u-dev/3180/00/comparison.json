{"files":[{"patch":"@@ -35,3 +35,7 @@\n-        return [[[self parent] javaRole] isEqualToString:@\"combobox\"]\n-               ? NSAccessibilityPopUpButtonRole\n-               : NSAccessibilityMenuRole;\n+        if ([[[self parent] javaRole] isEqualToString:@\"combobox\"]) {\n+            return NSAccessibilityPopUpButtonRole;\n+        } else if ([[[self parent] javaRole] isEqualToString:@\"menubar\"]) {\n+            return NSAccessibilityMenuBarItemRole;\n+        } else {\n+            return NSAccessibilityMenuRole;\n+        }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/MenuAccessibility.m","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8283404\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"mac\")\n+ * @summary Verifies if JMenu accessibility label magnifies using\n+ * screen magnifier a11y tool.\n+ * @run main\/manual TestJMenuScreenMagnifier\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+public class TestJMenuScreenMagnifier {\n+    private static JFrame frame;\n+    private static final String INSTRUCTIONS =\n+            \"1) Enable Screen magnifier on theMac \\n\\n\" +\n+                \"System Preference -> Accessibility -> Zoom -> \" +\n+                \"Select ( Enable Hover Text) \\n\\n\" +\n+            \"2) Move the mouse over the \\\"File\\\" or \\\"Edit\\\" menu by pressing  \" +\n+                \"\\\"cmd\\\" button.\\n\\n\" +\n+            \"3) If magnified label is visible, Press Pass else Fail.\";\n+\n+    public static void main(String[] args) throws InterruptedException,\n+             InvocationTargetException {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\n+                \"JMenu Screen Magnifier Test Instructions\", INSTRUCTIONS, 5, 12, 40);\n+        try {\n+            SwingUtilities.invokeAndWait(\n+                    TestJMenuScreenMagnifier::createAndShowUI);\n+            passFailJFrame.awaitAndCheck();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"JMenu A11Y Screen Magnifier Test\");\n+\n+        JMenu file = new JMenu(\"File\");\n+        file.getAccessibleContext().setAccessibleName(\"File Menu\");\n+\n+        JMenuItem open = new JMenuItem(\"Open\");\n+        open.getAccessibleContext().setAccessibleName(\"Open MenuItem\");\n+\n+        JMenuItem quit = new JMenuItem(\"Quit\");\n+        quit.getAccessibleContext().setAccessibleName(\"Quit MenuItem\");\n+\n+        file.add(open);\n+        file.add(quit);\n+\n+        JMenu edit = new JMenu(\"Edit\");\n+        edit.getAccessibleContext().setAccessibleName(\"Edit Menu\");\n+\n+        JMenuItem cut = new JMenuItem(\"Cut\");\n+        cut.getAccessibleContext().setAccessibleName(\"Cut MenuItem\");\n+\n+        edit.add(cut);\n+\n+        JMenuBar jMenuBar = new JMenuBar();\n+\n+        jMenuBar.add(file);\n+        jMenuBar.add(edit);\n+\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame,\n+                PassFailJFrame.Position.HORIZONTAL);\n+        frame.setJMenuBar(jMenuBar);\n+        frame.setSize(300, 100);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/JMenu\/TestJMenuScreenMagnifier.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"}]}