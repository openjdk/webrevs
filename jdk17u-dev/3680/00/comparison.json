{"files":[{"patch":"@@ -105,0 +105,1 @@\n+    static final long CLIENT_SHUTDOWN_GRACE_DELAY = 1500; \/\/ milliseconds\n@@ -288,1 +289,1 @@\n-            var error = TRACKER.check(tracker, 500);\n+            var error = TRACKER.check(tracker, CLIENT_SHUTDOWN_GRACE_DELAY);\n@@ -330,1 +331,1 @@\n-            var error = TRACKER.check(tracker, 1);\n+            var error = TRACKER.check(tracker, CLIENT_SHUTDOWN_GRACE_DELAY);\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelStreamedBodyTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -448,1 +448,1 @@\n-        AssertionError fail = TRACKER.check(500);\n+        AssertionError fail = TRACKER.check(1500);\n","filename":"test\/jdk\/java\/net\/httpclient\/ISO_8859_1_Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -217,1 +217,2 @@\n-        for (int i = 0; i < count; i++) {\n+        int i = 0;\n+        for (i = 0; i < count; i++) {\n@@ -223,0 +224,2 @@\n+                        System.out.println(\"\\tgracedelay: \" + graceDelayMs\n+                                + \" ms, iterations: \" + count + \", wait\/iteration: \" + toWait + \"ms\");\n@@ -253,1 +256,2 @@\n-                    + tracker.getName() + \" after \" + duration + \" ms, waited \" + waited + \" ms\");\n+                    + tracker.getName() + \" after \" + i + \" iterations and \" + duration\n+                    + \" ms, waited \" + waited + \" ms\");\n@@ -264,0 +268,1 @@\n+        long waitStart = System.nanoTime();\n@@ -265,0 +270,2 @@\n+        long toWait = Math.min(graceDelayMs, Math.max(delay, 1));\n+        long waited = 0;\n@@ -266,1 +273,2 @@\n-        for (int i = 0; i < count; i++) {\n+        int i = 0;\n+        for (i = 0; i < count; i++) {\n@@ -272,0 +280,2 @@\n+                        System.out.println(\"\\tgracedelay: \" + graceDelayMs\n+                                + \" ms, iterations: \" + count + \", wait\/iteration: \" + toWait + \"ms\");\n@@ -273,1 +283,2 @@\n-                    Thread.sleep(Math.min(graceDelayMs, Math.max(delay, 1)));\n+                    waited += toWait;\n+                    Thread.sleep(toWait);\n@@ -277,1 +288,6 @@\n-            } else break;\n+            } else {\n+                System.out.println(\"No outstanding HTTP operations remaining after \"\n+                        + i + \"\/\" + count + \" iterations and \" + waited + \"\/\" + graceDelayMs\n+                        + \" ms, (wait\/iteration \" + toWait + \" ms)\");\n+                break;\n+            }\n@@ -279,0 +295,1 @@\n+        long duration = Duration.ofNanos(System.nanoTime() - waitStart).toMillis();\n@@ -287,1 +304,1 @@\n-                    + getTrackedClientCount() + \" clients\");\n+                    + getTrackedClientCount() + \" clients in \" + duration + \" ms\");\n@@ -295,0 +312,3 @@\n+            System.out.println(\"AssertionError: Found some \" + description + \" in \"\n+                    + getTrackedClientCount() + \" clients after \" + i + \" iterations and \" + duration\n+                    + \" ms, waited \" + waited + \" ms\");\n","filename":"test\/jdk\/java\/net\/httpclient\/ReferenceTracker.java","additions":26,"deletions":6,"binary":false,"changes":32,"status":"modified"}]}