{"files":[{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4422535\n+ * @summary setCurrentAccessibleValue returns true only for an Integer\n+ * @run main SetCurrentAccessibleValueTest\n+ *\/\n+\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JProgressBar;\n+import javax.swing.JScrollBar;\n+import javax.swing.JSlider;\n+import javax.swing.JSplitPane;\n+import javax.swing.SwingUtilities;\n+\n+public class SetCurrentAccessibleValueTest {\n+\n+    public static void doTest() {\n+        JComponent[] jComponents =\n+        { new JButton(), new JInternalFrame(), new JSplitPane(),\n+            new JScrollBar(), new JProgressBar(), new JSlider() };\n+\n+        for (JComponent jComponent : jComponents) {\n+            testIt(jComponent, (Float.valueOf(5)));\n+            testIt(jComponent, (Double.valueOf(37.266)));\n+            testIt(jComponent, (Integer.valueOf(10)));\n+            testIt(jComponent, (Long.valueOf(123L)));\n+            testIt(jComponent, (Short.valueOf((short) 123)));\n+            testIt(jComponent, (BigInteger.ONE));\n+            testIt(jComponent, (new BigDecimal(BigInteger.ONE)));\n+        }\n+\n+    }\n+\n+    static void testIt(JComponent jComponent, Number number) {\n+        if (!jComponent.getAccessibleContext().getAccessibleValue()\n+            .setCurrentAccessibleValue(number)) {\n+            throw new RuntimeException(jComponent.getClass().getName()\n+                + \" Accessible Value implementation doesn't accept \"\n+                + number.getClass().getName());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> doTest());\n+        System.out.println(\"Test Passed\");\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/accessibility\/SetCurrentAccessibleValueTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}