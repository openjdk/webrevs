{"files":[{"patch":"@@ -47,2 +47,0 @@\n-    private static OutputAnalyzer out;\n-    private static ProcessBuilder pb;\n@@ -59,2 +57,1 @@\n-    static void checkFor(String... outputStrings) throws Exception {\n-        out = new OutputAnalyzer(pb.start());\n+    static void checkFor(OutputAnalyzer output, String... outputStrings) throws Exception {\n@@ -62,1 +59,1 @@\n-            out.shouldContain(s);\n+            output.shouldContain(s);\n@@ -64,1 +61,0 @@\n-        out.shouldHaveExitValue(0);\n@@ -67,2 +63,1 @@\n-    static void checkAbsent(String... outputStrings) throws Exception {\n-        out = new OutputAnalyzer(pb.start());\n+    static void checkAbsent(OutputAnalyzer output, String... outputStrings) throws Exception {\n@@ -70,1 +65,1 @@\n-            out.shouldNotContain(s);\n+            output.shouldNotContain(s);\n@@ -72,1 +67,0 @@\n-        out.shouldHaveExitValue(0);\n@@ -76,1 +70,1 @@\n-    static ProcessBuilder exec(String... args) throws Exception {\n+    static OutputAnalyzer exec(String... args) throws Exception {\n@@ -79,5 +73,6 @@\n-        Collections.addAll(argsList, \"-Xmn8m\");\n-        Collections.addAll(argsList, \"-Dtest.class.path=\" + System.getProperty(\"test.class.path\", \".\"));\n-        Collections.addAll(argsList, \"-XX:+ClassUnloading\");\n-        Collections.addAll(argsList, ClassUnloadTestMain.class.getName());\n-        return ProcessTools.createJavaProcessBuilder(argsList);\n+        Collections.addAll(argsList, \"-Xmn8m\", \"-Dtest.class.path=\" + System.getProperty(\"test.class.path\", \".\"),\n+                            \"-XX:+ClassUnloading\", ClassUnloadTestMain.class.getName());\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(argsList);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldHaveExitValue(0);\n+        return output;\n@@ -88,0 +83,2 @@\n+        OutputAnalyzer output;\n+\n@@ -89,2 +86,2 @@\n-        pb = exec(\"-Xlog:class+unload=info\");\n-        checkFor(\"[class,unload]\", \"unloading class\");\n+        output = exec(\"-Xlog:class+unload=info\");\n+        checkFor(output, \"[class,unload]\", \"unloading class\");\n@@ -93,2 +90,2 @@\n-        pb = exec(\"-Xlog:class+unload=off\");\n-        checkAbsent(\"[class,unload]\");\n+        output = exec(\"-Xlog:class+unload=off\");\n+        checkAbsent(output,\"[class,unload]\");\n@@ -97,2 +94,2 @@\n-        pb = exec(\"-Xlog:class+load=info\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\");\n+        output = exec(\"-Xlog:class+load=info\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\");\n@@ -101,2 +98,2 @@\n-        pb = exec(\"-Xlog:class+load=debug\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\", \"klass:\", \"super:\", \"loader:\", \"bytes:\");\n+        output = exec(\"-Xlog:class+load=debug\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\", \"klass:\", \"super:\", \"loader:\", \"bytes:\");\n@@ -105,2 +102,2 @@\n-        pb = exec(\"-Xlog:class+load=off\");\n-        checkAbsent(\"[class,load]\");\n+        output = exec(\"-Xlog:class+load=off\");\n+        checkAbsent(output,\"[class,load]\");\n@@ -109,3 +106,3 @@\n-        pb = exec(\"-verbose:class\");\n-        checkFor(\"[class,load]\", \"java.lang.Object\", \"source:\");\n-        checkFor(\"[class,unload]\", \"unloading class\");\n+        output = exec(\"-verbose:class\");\n+        checkFor(output,\"[class,load]\", \"java.lang.Object\", \"source:\");\n+        checkFor(output,\"[class,unload]\", \"unloading class\");\n@@ -114,2 +111,2 @@\n-        pb = exec(\"-Xlog:class+loader+data=trace\");\n-        checkFor(\"[class,loader,data]\", \"create loader data\");\n+        output = exec(\"-Xlog:class+loader+data=trace\");\n+        checkFor(output, \"[class,loader,data]\", \"create loader data\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":28,"deletions":31,"binary":false,"changes":59,"status":"modified"}]}