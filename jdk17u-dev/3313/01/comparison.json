{"files":[{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -530,1 +529,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -651,5 +650,1 @@\n-        DerOutputStream derOut = new DerOutputStream();\n-        derOut.write(DerValue.tag_Sequence, temp.toByteArray());\n-\n-        out.write(derOut.toByteArray());\n-\n+        out.write(DerValue.tag_Sequence, temp.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -239,1 +238,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -261,4 +260,1 @@\n-        DerOutputStream tmp = new DerOutputStream();\n-        tmp.write(DerValue.tag_Sequence, seq);\n-\n-        out.write(tmp.toByteArray());\n+        out.write(DerValue.tag_Sequence, seq);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -111,1 +110,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attribute.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -95,1 +94,1 @@\n-    public void encode(OutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -106,1 +105,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -112,5 +111,2 @@\n-        DerOutputStream attrOut = new DerOutputStream();\n-        attrOut.putOrderedSetOf(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                   true, (byte)0),\n-                                attribs);\n-        out.write(attrOut.toByteArray());\n+        out.putOrderedSetOf(\n+                DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0), attribs);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 1999, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -44,1 +43,1 @@\n-    public void derEncode(OutputStream out)\n+    public void derEncode(DerOutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerEncoder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -586,1 +585,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -641,1 +640,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -643,1 +642,0 @@\n-        DerOutputStream         tmp2 = new DerOutputStream();\n@@ -647,2 +645,1 @@\n-        tmp2.write(DerValue.tag_Sequence, tmp);\n-        out.write(tmp2.toByteArray());\n+        out.write(DerValue.tag_Sequence, tmp);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-    public void derEncode (OutputStream out) throws IOException {\n+    public void derEncode (DerOutputStream out) throws IOException {\n@@ -169,1 +169,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n@@ -233,2 +232,1 @@\n-        tmp.write(DerValue.tag_Sequence, bytes);\n-        out.write(tmp.toByteArray());\n+        out.write(DerValue.tag_Sequence, bytes);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -152,2 +151,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -159,2 +158,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -218,1 +217,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -221,2 +220,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -228,2 +227,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityKeyIdentifierExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -193,1 +192,2 @@\n-     public void encode(OutputStream out) throws IOException {\n+     @Override\n+     public void encode(DerOutputStream out) throws IOException {\n@@ -204,3 +204,1 @@\n-         super.encode(tmp);\n-\n-         out.write(tmp.toByteArray());\n+         super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/BasicConstraintsExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -202,1 +201,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -210,2 +210,2 @@\n-    protected void encode(OutputStream out, ObjectIdentifier extensionId,\n-        boolean isCritical) throws IOException {\n+    protected void encode(DerOutputStream out, ObjectIdentifier extensionId,\n+            boolean isCritical) throws IOException {\n@@ -213,1 +213,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n@@ -219,2 +218,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLDistributionPointsExtension.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.security.cert.CertificateException;\n@@ -148,10 +147,2 @@\n-            Collection<Extension> allExts = map.values();\n-            Object[] objs = allExts.toArray();\n-\n-            for (int i = 0; i < objs.length; i++) {\n-                if (objs[i] instanceof CertAttrSet)\n-                    ((CertAttrSet)objs[i]).encode(extOut);\n-                else if (objs[i] instanceof Extension)\n-                    ((Extension)objs[i]).encode(extOut);\n-                else\n-                    throw new CRLException(\"Illegal extension object\");\n+            for (Extension ext : map.values()) {\n+                ext.encode(extOut);\n@@ -173,2 +164,0 @@\n-        } catch (CertificateException e) {\n-            throw new CRLException(\"Encoding error: \" + e.toString());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -201,1 +200,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -210,4 +210,2 @@\n-    protected void encode(OutputStream out, ObjectIdentifier extensionId,\n-        boolean isCritical) throws IOException {\n-\n-       DerOutputStream  tmp = new DerOutputStream();\n+    protected void encode(DerOutputStream out, ObjectIdentifier extensionId,\n+            boolean isCritical) throws IOException {\n@@ -220,2 +218,1 @@\n-       super.encode(tmp);\n-       out.write(tmp.toByteArray());\n+       super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -161,3 +160,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -169,2 +167,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLReasonCodeExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -61,1 +62,1 @@\n-     * @param out the OutputStream to encode the attribute to.\n+     * @param out the DerOutputStream to encode the attribute to.\n@@ -66,1 +67,1 @@\n-    void encode(OutputStream out)\n+    void encode(DerOutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertAttrSet.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -108,5 +107,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        algId.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        algId.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateAlgorithmId.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -155,2 +154,3 @@\n-    public void encode(OutputStream out)\n-    throws CertificateException, IOException {\n+    @Override\n+    public void encode(DerOutputStream out)\n+            throws CertificateException, IOException {\n@@ -168,1 +168,1 @@\n-    public void encode(OutputStream out, boolean isCertReq)\n+    public void encode(DerOutputStream out, boolean isCertReq)\n@@ -171,10 +171,2 @@\n-        Collection<Extension> allExts = map.values();\n-        Object[] objs = allExts.toArray();\n-\n-        for (int i = 0; i < objs.length; i++) {\n-            if (objs[i] instanceof CertAttrSet)\n-                ((CertAttrSet)objs[i]).encode(extOut);\n-            else if (objs[i] instanceof Extension)\n-                ((Extension)objs[i]).encode(extOut);\n-            else\n-                throw new CertificateException(\"Illegal extension object\");\n+        for (Extension ext : map.values()) {\n+            ext.encode(extOut);\n@@ -183,4 +175,0 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.tag_Sequence, extOut);\n-\n-        DerOutputStream tmp;\n@@ -188,2 +176,3 @@\n-            tmp = new DerOutputStream();\n-            tmp.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)3),\n+            DerOutputStream seq = new DerOutputStream();\n+            seq.write(DerValue.tag_Sequence, extOut);\n+            out.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)3),\n@@ -191,4 +180,3 @@\n-        } else\n-            tmp = seq; \/\/ pkcs#10 certificateRequest\n-\n-        out.write(tmp.toByteArray());\n+        } else {\n+            out.write(DerValue.tag_Sequence, extOut);\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":12,"deletions":24,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -179,1 +178,1 @@\n-     * @param out the OutputStream to write the extension to\n+     * @param out the DerOutputStream to write the extension to\n@@ -182,2 +181,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -189,2 +188,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -110,5 +109,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        dnName.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        dnName.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerName.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -180,2 +179,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -187,2 +186,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePoliciesExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -120,5 +119,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        serial.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        serial.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSerialNumber.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -110,5 +109,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        dnName.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        dnName.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSubjectName.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -147,1 +146,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -150,1 +149,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -170,4 +170,1 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.tag_Sequence, pair);\n-\n-        out.write(seq.toByteArray());\n+        out.write(DerValue.tag_Sequence, pair);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateValidity.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -158,1 +157,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -161,1 +160,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -169,2 +169,1 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0),\n+        out.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0),\n@@ -172,2 +171,0 @@\n-\n-        out.write(seq.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateVersion.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -100,1 +99,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -103,5 +102,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        tmp.write(key.getEncoded());\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        out.write(key.getEncoded());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateX509Key.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -112,1 +113,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DeltaCRLIndicatorExtension.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -200,2 +199,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -207,2 +206,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -144,1 +144,11 @@\n-    public void encode(OutputStream out) throws IOException {\n+    \/**\n+     * Implementing {@link java.security.cert.Extension#encode(OutputStream)}.\n+     * This implementation is made final to make sure all {@code encode()}\n+     * methods in child classes are actually implementations of\n+     * {@link #encode(DerOutputStream)} below.\n+     *\n+     * @param out the output stream\n+     * @throws IOException\n+     *\/\n+    @Override\n+    public final void encode(OutputStream out) throws IOException {\n@@ -149,6 +159,6 @@\n-        DerOutputStream dos1 = new DerOutputStream();\n-        DerOutputStream dos2 = new DerOutputStream();\n-\n-        dos1.putOID(extensionId);\n-        if (critical) {\n-            dos1.putBoolean(critical);\n+        if (out instanceof DerOutputStream dos) {\n+            encode(dos);\n+        } else {\n+            DerOutputStream dos = new DerOutputStream();\n+            encode(dos);\n+            out.write(dos.toByteArray());\n@@ -156,4 +166,0 @@\n-        dos1.putOctetString(extensionValue);\n-\n-        dos2.write(DerValue.tag_Sequence, dos1);\n-        out.write(dos2.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -96,1 +97,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/FreshestCRLExtension.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -163,2 +162,2 @@\n-     public void encode(OutputStream out) throws IOException {\n-         DerOutputStream tmp = new DerOutputStream();\n+     @Override\n+     public void encode(DerOutputStream out) throws IOException {\n@@ -170,3 +169,1 @@\n-         super.encode(tmp);\n-\n-         out.write(tmp.toByteArray());\n+         super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -180,3 +179,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -188,2 +186,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InvalidityDateExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -162,1 +161,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -165,2 +164,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -172,2 +171,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuerAlternativeNameExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -237,2 +236,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -244,2 +243,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -321,3 +320,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-       DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -329,2 +327,1 @@\n-       super.encode(tmp);\n-       out.write(tmp.toByteArray());\n+       super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyUsageExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -236,1 +235,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -239,2 +238,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -246,2 +245,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NameConstraintsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -267,3 +266,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -275,2 +273,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -204,2 +203,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -211,2 +210,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyConstraintsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -149,1 +148,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -152,2 +151,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -159,2 +158,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyMappingsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -240,1 +239,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -243,2 +242,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -250,2 +249,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PrivateKeyUsageExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -164,1 +163,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -167,2 +166,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -174,2 +173,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectAlternativeNameExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -157,2 +156,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -164,2 +163,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -125,1 +124,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -128,2 +127,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -135,2 +134,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectKeyIdentifierExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1263,1 +1263,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -182,2 +181,3 @@\n-    public void encode(OutputStream out)\n-    throws CertificateException, IOException {\n+    @Override\n+    public void encode(DerOutputStream out)\n+            throws CertificateException, IOException {\n@@ -185,3 +185,4 @@\n-            DerOutputStream tmp = new DerOutputStream();\n-            emit(tmp);\n-            rawCertInfo = tmp.toByteArray();\n+            emit(out);\n+            rawCertInfo = out.toByteArray();\n+        } else {\n+            out.write(rawCertInfo.clone());\n@@ -189,1 +190,0 @@\n-        out.write(rawCertInfo.clone());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -120,1 +119,1 @@\n-        ByteArrayOutputStream strm = new ByteArrayOutputStream();\n+        DerOutputStream strm = new DerOutputStream();\n@@ -130,1 +129,1 @@\n-        ByteArrayOutputStream strm = new ByteArrayOutputStream();\n+        DerOutputStream strm = new DerOutputStream();\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs7\/SignerOrder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.io.*;\n@@ -37,0 +36,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -60,4 +60,4 @@\n-        ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-        p2.derEncode(bout);\n-        HexPrinter.simple().dest(System.err).format(bout.toByteArray());\n-        if (!Arrays.equals(data, bout.toByteArray())) {\n+        DerOutputStream dout = new DerOutputStream();\n+        p2.derEncode(dout);\n+        HexPrinter.simple().dest(System.err).format(dout.toByteArray());\n+        if (!Arrays.equals(data, dout.toByteArray())) {\n@@ -78,3 +78,3 @@\n-        bout = new ByteArrayOutputStream();\n-        p3.derEncode(bout);\n-        if (!Arrays.equals(data, bout.toByteArray())) {\n+        dout = new DerOutputStream();\n+        p3.derEncode(dout);\n+        if (!Arrays.equals(data, dout.toByteArray())) {\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs9\/UnknownAttribute.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -44,1 +45,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -206,3 +206,3 @@\n-            ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-            exts.encode(bout);\n-            exts = new CertificateExtensions(new DerValue(bout.toByteArray()).data);\n+            DerOutputStream dout = new DerOutputStream();\n+            exts.encode(dout);\n+            exts = new CertificateExtensions(new DerValue(dout.toByteArray()).data);\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ExtOptionCamelCase.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        derOut.derEncode(fout);\n+        fout.write(derOut.toByteArray());\n","filename":"test\/jdk\/sun\/security\/util\/asn1StringTypes\/StringTypes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.OutputStream;\n@@ -29,0 +28,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -31,1 +31,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"test\/langtools\/tools\/jdeps\/jdkinternals\/src\/q\/NoRepl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}