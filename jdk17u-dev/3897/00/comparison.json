{"files":[{"patch":"@@ -166,0 +166,11 @@\n+  Node* mem = map->memory();\n+  if (!mem->is_MergeMem()) {\n+    \/\/ Since we are not in parsing, the SafePointNode does not guarantee that the memory\n+    \/\/ input is necessarily a MergeMemNode. But we need to ensure that there is that\n+    \/\/ MergeMemNode, since the GraphKit assumes the memory input of the map to be a\n+    \/\/ MergeMemNode, so that it can directly access the memory slices.\n+    PhaseGVN& gvn = *C->initial_gvn();\n+    Node* mergemem = MergeMemNode::make(mem);\n+    gvn.set_type_bottom(mergemem);\n+    map->set_memory(mergemem);\n+  }\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,0 +39,10 @@\n+\/*\n+ * @test\n+ * @bug 8288180\n+ * @summary VectorPhase must ensure that SafePointNode's memory input is MergeMemNode, required for GraphKit\n+ * @modules jdk.incubator.vector\n+ *\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+OptimizeFill -XX:+StressReflectiveCode compiler.vectorapi.TestLoopStoreVector\n+ *\/\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestLoopStoreVector.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}