{"files":[{"patch":"@@ -2151,1 +2151,1 @@\n-  int stride_p;\n+  jlong stride_p;\n@@ -2160,1 +2160,1 @@\n-    stride_p = -stride_con;\n+    stride_p = -(jlong)stride_con;\n@@ -2163,1 +2163,1 @@\n-    max = (julong)min_jint;\n+    max = (julong)(juint)min_jint; \/\/ double cast to get 0x0000000080000000, not 0xffffffff80000000\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -174,0 +174,2 @@\n+    private static final int maxHeaderSize;\n+\n@@ -288,0 +290,13 @@\n+\n+        int defMaxHeaderSize = 384 * 1024;\n+        String maxHeaderSizeStr = getNetProperty(\"jdk.http.maxHeaderSize\");\n+        int maxHeaderSizeVal = defMaxHeaderSize;\n+        if (maxHeaderSizeStr != null) {\n+            try {\n+                maxHeaderSizeVal = Integer.parseInt(maxHeaderSizeStr);\n+            } catch (NumberFormatException n) {\n+                maxHeaderSizeVal = defMaxHeaderSize;\n+            }\n+        }\n+        if (maxHeaderSizeVal < 0) maxHeaderSizeVal = 0;\n+        maxHeaderSize = maxHeaderSizeVal;\n@@ -763,1 +778,1 @@\n-                responses = new MessageHeader();\n+                responses = new MessageHeader(maxHeaderSize);\n@@ -921,1 +936,1 @@\n-        responses = new MessageHeader();\n+        responses = new MessageHeader(maxHeaderSize);\n@@ -2876,1 +2891,1 @@\n-        responses = new MessageHeader();\n+        responses = new MessageHeader(maxHeaderSize);\n@@ -3066,1 +3081,1 @@\n-        responses = new MessageHeader();\n+        responses = new MessageHeader(maxHeaderSize);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,0 +242,1 @@\n+        public abstract InetSocketAddress getLocalAddress();\n@@ -304,1 +305,4 @@\n-\n+            @Override\n+            public InetSocketAddress getLocalAddress() {\n+                return exchange.getLocalAddress();\n+            }\n@@ -365,0 +369,4 @@\n+            @Override\n+            public InetSocketAddress getLocalAddress() {\n+                return exchange.getLocalAddress();\n+            }\n","filename":"test\/jdk\/java\/net\/httpclient\/lib\/jdk\/httpclient\/test\/lib\/common\/HttpServerAdapters.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}