{"files":[{"patch":"@@ -4810,1 +4810,2 @@\n-      l = get_loop(m);          \/\/ Get previously determined loop\n+      IdealLoopTree* m_loop = get_loop(m);\n+      l = m_loop;          \/\/ Get previously determined loop\n@@ -4836,1 +4837,1 @@\n-          set_loop(iff, l);\n+          set_loop(iff, m_loop);\n@@ -4839,1 +4840,1 @@\n-          set_loop(if_t, l);\n+          set_loop(if_t, m_loop);\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8335709\n+ * @summary C2: assert(!loop->is_member(get_loop(useblock))) failed: must be outside loop\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xcomp -XX:CompileCommand=compileonly,InfiniteLoopBadControlNeverBranch::* InfiniteLoopBadControlNeverBranch\n+ *\n+ *\/\n+\n+\n+import jdk.test.lib.Utils;\n+\n+public class InfiniteLoopBadControlNeverBranch {\n+    static int b;\n+    static short c;\n+\n+    public static void main(String[] args) throws InterruptedException {\n+        Thread thread = new Thread(() -> test());\n+        thread.setDaemon(true);\n+        thread.start();\n+        Thread.sleep(Utils.adjustTimeout(4000));\n+    }\n+\n+    static void test() {\n+        int i = 0;\n+        while (true) {\n+            if (i > 1) {\n+                b = 0;\n+            }\n+            c = (short) (b * 7);\n+            i++;\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/InfiniteLoopBadControlNeverBranch.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}