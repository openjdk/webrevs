{"files":[{"patch":"@@ -4,1 +4,1 @@\n-version=17.0.15\n+version=17.0.16\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -455,1 +455,3 @@\n-    file_to_test=\"$TOPDIR\/LICENSE\"\n+    # The choice of file here is somewhat arbitrary, it just needs to be there\n+    # in the source tree when configure runs\n+    file_to_test=\"$TOPDIR\/Makefile\"\n","filename":"make\/autoconf\/basic.m4","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -214,1 +214,1 @@\n-    COMPATIBLE_CDS_ALIGNMENT_DEFAULT=true\n+    COMPATIBLE_CDS_ALIGNMENT_DEFAULT=auto\n@@ -216,1 +216,0 @@\n-  AC_SUBST(COMPATIBLE_CDS_ALIGNMENT_DEFAULT)\n@@ -599,1 +598,1 @@\n-      DEFAULT_DESC: [disabled],\n+      DEFAULT_DESC: [disabled except on linux-aarch64],\n","filename":"make\/autoconf\/jdk-options.m4","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-DEFAULT_VERSION_UPDATE=15\n+DEFAULT_VERSION_UPDATE=16\n@@ -36,1 +36,1 @@\n-DEFAULT_VERSION_DATE=2025-04-15\n+DEFAULT_VERSION_DATE=2025-07-15\n","filename":"make\/conf\/version-numbers.conf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,28 +0,0 @@\n-Owner: CN=Baltimore CyberTrust Root, OU=CyberTrust, O=Baltimore, C=IE\n-Issuer: CN=Baltimore CyberTrust Root, OU=CyberTrust, O=Baltimore, C=IE\n-Serial number: 20000b9\n-Valid from: Fri May 12 18:46:00 GMT 2000 until: Mon May 12 23:59:00 GMT 2025\n-Signature algorithm name: SHA1withRSA\n-Subject Public Key Algorithm: 2048-bit RSA key\n-Version: 3\n------BEGIN CERTIFICATE-----\n-MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ\r\n-RTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD\r\n-VQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX\r\n-DTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y\r\n-ZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy\r\n-VHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr\r\n-mD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr\r\n-IZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK\r\n-mpYcqWe4PwzV9\/lSEy\/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu\r\n-XmD+tqYF\/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f\/xXtabz5OTZy\r\n-dc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v\/ye\r\n-jl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1\r\n-BE3wMBIGA1UdEwEB\/wQIMAYBAf8CAQMwDgYDVR0PAQH\/BAQDAgEGMA0GCSqGSIb3\r\n-DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92\r\n-9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE\/szKN+OMY3EU\/t3Wgx\r\n-jkzSswF07r51XgdIGn9w\/xZchMB5hbgF\/X++ZRGjD8ACtPhSNzkE1akxehi\/oCr0\r\n-Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz\r\n-ksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ\/1\/I6eYs9HRCwBXbsdtTLS\r\n-R9I4LtD+gdwyah617jzV\/OeBHRnDJELqYzmp\n------END CERTIFICATE-----\n","filename":"make\/data\/cacerts\/baltimorecybertrustca","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -279,1 +279,1 @@\n-        __ ldr(rscratch1, Address(OSR_buf, slot_offset + 1*BytesPerWord));\n+        __ ldr(rscratch1, __ form_address(rscratch1, OSR_buf, slot_offset + 1*BytesPerWord, 0));\n@@ -285,2 +285,2 @@\n-      __ ldr(r19, Address(OSR_buf, slot_offset));\n-      __ ldr(r20, Address(OSR_buf, slot_offset + BytesPerWord));\n+      __ ldr(r19, __ form_address(rscratch1, OSR_buf, slot_offset, 0));\n+      __ ldr(r20, __ form_address(rscratch1, OSR_buf, slot_offset + BytesPerWord, 0));\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3510,0 +3510,1 @@\n+    call->_has_ea_local_in_scope = _has_ea_local_in_scope;\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -150,0 +150,2 @@\n+\/\/ log_fmt can be different than scan_fmt. For example\n+\/\/ cpu_period() for cgv2 uses log_fmt='%d' and scan_fmt='%*s %d'\n@@ -151,1 +153,1 @@\n-                           logstring, scan_fmt, variable)                 \\\n+                           logstring, log_fmt, scan_fmt, variable)        \\\n@@ -161,1 +163,1 @@\n-    log_trace(os, container)(logstring, (return_type) OSCONTAINER_ERROR); \\\n+    log_trace(os, container)(logstring \"%d\", OSCONTAINER_ERROR);          \\\n@@ -165,1 +167,1 @@\n-  log_trace(os, container)(logstring, variable);                          \\\n+  log_trace(os, container)(logstring log_fmt, variable);                  \\\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-                    \"Use Hierarchy is: \" JLONG_FORMAT, JLONG_FORMAT, use_hierarchy);\n+                    \"Use Hierarchy is: \", JLONG_FORMAT, JLONG_FORMAT, use_hierarchy);\n@@ -93,1 +93,1 @@\n-                     \"Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memlimit);\n+                     \"Memory Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memlimit);\n@@ -119,1 +119,1 @@\n-                     \"Memory and Swap Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memswlimit);\n+                     \"Memory and Swap Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memswlimit);\n@@ -157,1 +157,1 @@\n-                     \"Swappiness is: \" JULONG_FORMAT, JULONG_FORMAT, swappiness);\n+                     \"Swappiness is: \", JULONG_FORMAT, JULONG_FORMAT, swappiness);\n@@ -163,1 +163,1 @@\n-                     \"Memory Soft Limit is: \" JULONG_FORMAT, JULONG_FORMAT, memsoftlimit);\n+                     \"Memory Soft Limit is: \", JULONG_FORMAT, JULONG_FORMAT, memsoftlimit);\n@@ -183,1 +183,1 @@\n-                     \"Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memusage);\n+                     \"Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memusage);\n@@ -197,1 +197,1 @@\n-                     \"Maximum Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memmaxusage);\n+                     \"Maximum Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memmaxusage);\n@@ -204,1 +204,1 @@\n-                     \"Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n+                     \"Kernel Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, kmem_usage);\n@@ -210,1 +210,1 @@\n-                     \"Kernel Memory Limit is: \" JULONG_FORMAT, JULONG_FORMAT, kmem_limit);\n+                     \"Kernel Memory Limit is: \", JULONG_FORMAT, JULONG_FORMAT, kmem_limit);\n@@ -219,1 +219,1 @@\n-                     \"Maximum Kernel Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n+                     \"Maximum Kernel Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, kmem_max_usage);\n@@ -257,1 +257,1 @@\n-                     \"CPU Quota is: %d\", \"%d\", quota);\n+                     \"CPU Quota is: \", \"%d\", \"%d\", quota);\n@@ -263,1 +263,1 @@\n-                     \"CPU Period is: %d\", \"%d\", period);\n+                     \"CPU Period is: \", \"%d\", \"%d\", period);\n@@ -279,1 +279,1 @@\n-                     \"CPU Shares is: %d\", \"%d\", shares);\n+                     \"CPU Shares is: \", \"%d\", \"%d\", shares);\n@@ -290,3 +290,0 @@\n-  if (pidsmax == NULL) {\n-    return NULL;\n-  }\n@@ -322,1 +319,1 @@\n-                     \"Current number of tasks is: \" JLONG_FORMAT, JLONG_FORMAT, pids_current);\n+                     \"Current number of tasks is: \", JLONG_FORMAT, JLONG_FORMAT, pids_current);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-                     \"Raw value for CPU Shares is: %d\", \"%d\", shares);\n+                     \"Raw value for CPU Shares is: \", \"%d\", \"%d\", shares);\n@@ -95,3 +95,0 @@\n-  if (cpus == NULL) {\n-    return NULL;\n-  }\n@@ -104,3 +101,0 @@\n-  if (quota == NULL) {\n-    return NULL;\n-  }\n@@ -113,3 +107,0 @@\n-  if (mems == NULL) {\n-    return NULL;\n-  }\n@@ -121,1 +112,1 @@\n-                     \"CPU Period is: %d\", \"%*s %d\", period);\n+                     \"CPU Period is: \", \"%d\", \"%*s %d\", period);\n@@ -136,1 +127,1 @@\n-                     \"Memory Usage is: \" JLONG_FORMAT, JLONG_FORMAT, memusage);\n+                     \"Memory Usage is: \", JLONG_FORMAT, JLONG_FORMAT, memusage);\n@@ -154,3 +145,0 @@\n-  if (mem_soft_limit_str == NULL) {\n-    return NULL;\n-  }\n@@ -173,0 +161,1 @@\n+  log_trace(os, container)(\"Memory and Swap Limit is: \" JLONG_FORMAT, swap_limit);\n@@ -179,3 +168,0 @@\n-  if (mem_swp_limit_str == NULL) {\n-    return NULL;\n-  }\n@@ -189,3 +175,0 @@\n-  if (mem_swp_current_str == NULL) {\n-    return NULL;\n-  }\n@@ -219,3 +202,0 @@\n-  if (mem_limit_str == NULL) {\n-    return NULL;\n-  }\n@@ -248,3 +228,0 @@\n-  if (pidsmax == NULL) {\n-    return NULL;\n-  }\n@@ -278,1 +255,1 @@\n-                     \"Current number of tasks is: \" JLONG_FORMAT, JLONG_FORMAT, pids_current);\n+                     \"Current number of tasks is: \", JLONG_FORMAT, JLONG_FORMAT, pids_current);\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":5,"deletions":28,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -259,1 +259,1 @@\n-  volatile long _stack_traversal_mark;\n+  volatile int64_t _stack_traversal_mark;\n@@ -549,2 +549,2 @@\n-  long  stack_traversal_mark()                    { return _stack_traversal_mark; }\n-  void  set_stack_traversal_mark(long l)          { _stack_traversal_mark = l; }\n+  int64_t stack_traversal_mark()                  { return _stack_traversal_mark; }\n+  void    set_stack_traversal_mark(int64_t l)     { _stack_traversal_mark = l; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -188,1 +188,1 @@\n-long CompileBroker::_peak_compilation_time         = 0;\n+jlong CompileBroker::_peak_compilation_time        = 0;\n@@ -1072,0 +1072,16 @@\n+  int old_c2_count = 0, new_c2_count = 0, old_c1_count = 0, new_c1_count = 0;\n+  const int c2_tasks_per_thread = 2, c1_tasks_per_thread = 4;\n+\n+  \/\/ Quick check if we already have enough compiler threads without taking the lock.\n+  \/\/ Numbers may change concurrently, so we read them again after we have the lock.\n+  if (_c2_compile_queue != nullptr) {\n+    old_c2_count = get_c2_thread_count();\n+    new_c2_count = MIN2(_c2_count, _c2_compile_queue->size() \/ c2_tasks_per_thread);\n+  }\n+  if (_c1_compile_queue != nullptr) {\n+    old_c1_count = get_c1_thread_count();\n+    new_c1_count = MIN2(_c1_count, _c1_compile_queue->size() \/ c1_tasks_per_thread);\n+  }\n+  if (new_c2_count <= old_c2_count && new_c1_count <= old_c1_count) return;\n+\n+  \/\/ Now, we do the more expensive operations.\n@@ -1074,2 +1090,2 @@\n-  size_t available_cc_np  = CodeCache::unallocated_capacity(CodeBlobType::MethodNonProfiled),\n-         available_cc_p   = CodeCache::unallocated_capacity(CodeBlobType::MethodProfiled);\n+  size_t available_cc_np = CodeCache::unallocated_capacity(CodeBlobType::MethodNonProfiled),\n+         available_cc_p  = CodeCache::unallocated_capacity(CodeBlobType::MethodProfiled);\n@@ -1077,1 +1093,1 @@\n-  \/\/ Only do attempt to start additional threads if the lock is free.\n+  \/\/ Only attempt to start additional threads if the lock is free.\n@@ -1081,3 +1097,3 @@\n-    int old_c2_count = _compilers[1]->num_compiler_threads();\n-    int new_c2_count = MIN4(_c2_count,\n-        _c2_compile_queue->size() \/ 2,\n+    old_c2_count = get_c2_thread_count();\n+    new_c2_count = MIN4(_c2_count,\n+        _c2_compile_queue->size() \/ c2_tasks_per_thread,\n@@ -1117,1 +1133,1 @@\n-        if (_compilers[1]->num_compiler_threads() != i) break;\n+        if (get_c2_thread_count() != i) break;\n@@ -1139,3 +1155,3 @@\n-    int old_c1_count = _compilers[0]->num_compiler_threads();\n-    int new_c1_count = MIN4(_c1_count,\n-        _c1_compile_queue->size() \/ 4,\n+    old_c1_count = get_c1_thread_count();\n+    new_c1_count = MIN4(_c1_count,\n+        _c1_compile_queue->size() \/ c1_tasks_per_thread,\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":27,"deletions":11,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  int _size;\n+  volatile int _size;\n@@ -226,1 +226,1 @@\n-  static long _peak_compilation_time;\n+  static jlong _peak_compilation_time;\n@@ -405,0 +405,2 @@\n+  static int get_c1_thread_count() {                return _compilers[0]->num_compiler_threads(); }\n+  static int get_c2_thread_count() {                return _compilers[1]->num_compiler_threads(); }\n@@ -417,2 +419,2 @@\n-  static long get_peak_compilation_time() {         return _peak_compilation_time; }\n-  static long get_total_compilation_time() {        return _t_total_compilation.milliseconds(); }\n+  static jlong get_peak_compilation_time() {        return _peak_compilation_time; }\n+  static jlong get_total_compilation_time() {       return _t_total_compilation.milliseconds(); }\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -135,1 +135,3 @@\n-  assert(h_array_list.not_null(), \"invariant\");\n+  if (h_array_list.is_null()) {\n+    return empty_java_util_arraylist;\n+  }\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -572,1 +572,1 @@\n-long JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n+jlong JVMCIEnv::get_long_at(JVMCIPrimitiveArray array, int index) {\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -254,1 +254,1 @@\n-  long get_long_at(JVMCIPrimitiveArray array, int index);\n+  jlong get_long_at(JVMCIPrimitiveArray array, int index);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-int InterfaceSupport::_fullgc_alot_invocation = 0;\n+intx InterfaceSupport::_fullgc_alot_invocation = 0;\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-  static int _fullgc_alot_invocation;\n+  static intx _fullgc_alot_invocation;\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  int traversal;\n+  int64_t traversal;\n@@ -60,1 +60,1 @@\n-  long traversal_mark;\n+  int64_t traversal_mark;\n@@ -68,2 +68,2 @@\n-      tty->print_cr(\"traversal = %d compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n-                    PTR_FORMAT \" state = %d traversal_mark %ld line = %d\",\n+      tty->print_cr(\"traversal = \" INT64_FORMAT \" compile_id = %d %s uep = \" PTR_FORMAT \" vep = \"\n+                    PTR_FORMAT \" state = %d traversal_mark \" INT64_FORMAT \" line = %d\",\n@@ -110,2 +110,2 @@\n-long     NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n-long     NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n+int64_t  NMethodSweeper::_traversals                   = 0;    \/\/ Stack scan count, also sweep ID.\n+int64_t  NMethodSweeper::_total_nof_code_cache_sweeps  = 0;    \/\/ Total number of full sweeps of the code cache\n@@ -122,2 +122,2 @@\n-long   NMethodSweeper::_total_nof_methods_reclaimed     = 0;   \/\/ Accumulated nof methods flushed\n-long   NMethodSweeper::_total_nof_c2_methods_reclaimed  = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_methods_reclaimed    = 0;   \/\/ Accumulated nof methods flushed\n+int64_t NMethodSweeper::_total_nof_c2_methods_reclaimed = 0;   \/\/ Accumulated nof methods flushed\n@@ -190,1 +190,1 @@\n-    tty->print_cr(\"### Sweep: stack traversal %ld\", _traversals);\n+    tty->print_cr(\"### Sweep: stack traversal \" INT64_FORMAT, _traversals);\n@@ -220,1 +220,1 @@\n-      const long wait_time = 60*60*24 * 1000;\n+      const int64_t wait_time = 60*60*24 * 1000;\n@@ -652,1 +652,1 @@\n-    xtty->begin_elem(\"sweeper state='%s' traversals='\" INTX_FORMAT \"' \", msg, (intx)traversal_count());\n+    xtty->begin_elem(\"sweeper state='%s' traversals='\" INT64_FORMAT \"' \", msg, traversal_count());\n@@ -670,2 +670,3 @@\n-  out->print_cr(\"  Total number of full sweeps:     %ld\", _total_nof_code_cache_sweeps);\n-  out->print_cr(\"  Total number of flushed methods: %ld (thereof %ld C2 methods)\", _total_nof_methods_reclaimed,\n+  out->print_cr(\"  Total number of full sweeps:     \" INT64_FORMAT, _total_nof_code_cache_sweeps);\n+  out->print_cr(\"  Total number of flushed methods: \" INT64_FORMAT \" (thereof \" INT64_FORMAT \" C2 methods)\",\n+                                                    _total_nof_methods_reclaimed,\n","filename":"src\/hotspot\/share\/runtime\/sweeper.cpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-  static long      _traversals;                   \/\/ Stack scan count, also sweep ID.\n-  static long      _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n+  static int64_t   _traversals;                   \/\/ Stack scan count, also sweep ID.\n+  static int64_t   _total_nof_code_cache_sweeps;  \/\/ Total number of full sweeps of the code cache\n@@ -81,2 +81,2 @@\n-  static long      _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n-  static long      _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n+  static int64_t   _total_nof_methods_reclaimed;    \/\/ Accumulated nof methods flushed\n+  static int64_t   _total_nof_c2_methods_reclaimed; \/\/ Accumulated nof C2-compiled methods flushed\n@@ -100,1 +100,1 @@\n-  static long traversal_count()                    { return _traversals; }\n+  static int64_t traversal_count()                 { return _traversals; }\n@@ -103,1 +103,1 @@\n-  static int  total_nof_methods_reclaimed()        { return _total_nof_methods_reclaimed; }\n+  static int64_t total_nof_methods_reclaimed()     { return _total_nof_methods_reclaimed; }\n","filename":"src\/hotspot\/share\/runtime\/sweeper.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -370,0 +370,1 @@\n+#ifdef ASSERT\n@@ -390,0 +391,1 @@\n+#endif\n@@ -931,0 +933,1 @@\n+#ifdef ASSERT\n@@ -933,0 +936,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -690,1 +690,1 @@\n-  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         long)                                  \\\n+  volatile_nonstatic_field(nmethod,            _stack_traversal_mark,                         int64_t)                               \\\n@@ -1227,0 +1227,1 @@\n+  declare_integer_type(int64_t)                                           \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -530,1 +529,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -651,5 +650,1 @@\n-        DerOutputStream derOut = new DerOutputStream();\n-        derOut.write(DerValue.tag_Sequence, temp.toByteArray());\n-\n-        out.write(derOut.toByteArray());\n-\n+        out.write(DerValue.tag_Sequence, temp.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -239,1 +238,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -261,4 +260,1 @@\n-        DerOutputStream tmp = new DerOutputStream();\n-        tmp.write(DerValue.tag_Sequence, seq);\n-\n-        out.write(tmp.toByteArray());\n+        out.write(DerValue.tag_Sequence, seq);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -111,1 +110,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attribute.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -95,1 +94,1 @@\n-    public void encode(OutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -106,1 +105,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -112,5 +111,2 @@\n-        DerOutputStream attrOut = new DerOutputStream();\n-        attrOut.putOrderedSetOf(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                   true, (byte)0),\n-                                attribs);\n-        out.write(attrOut.toByteArray());\n+        out.putOrderedSetOf(\n+                DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0), attribs);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 1999, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -44,1 +43,1 @@\n-    public void derEncode(OutputStream out)\n+    public void derEncode(DerOutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerEncoder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -586,1 +585,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -641,1 +640,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n@@ -643,1 +642,0 @@\n-        DerOutputStream         tmp2 = new DerOutputStream();\n@@ -647,2 +645,1 @@\n-        tmp2.write(DerValue.tag_Sequence, tmp);\n-        out.write(tmp2.toByteArray());\n+        out.write(DerValue.tag_Sequence, tmp);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-    public void derEncode (OutputStream out) throws IOException {\n+    public void derEncode (DerOutputStream out) throws IOException {\n@@ -169,1 +169,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n@@ -233,2 +232,1 @@\n-        tmp.write(DerValue.tag_Sequence, bytes);\n-        out.write(tmp.toByteArray());\n+        out.write(DerValue.tag_Sequence, bytes);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -152,2 +151,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -159,2 +158,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -218,1 +217,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -221,2 +220,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -228,2 +227,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityKeyIdentifierExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -193,1 +192,2 @@\n-     public void encode(OutputStream out) throws IOException {\n+     @Override\n+     public void encode(DerOutputStream out) throws IOException {\n@@ -204,3 +204,1 @@\n-         super.encode(tmp);\n-\n-         out.write(tmp.toByteArray());\n+         super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/BasicConstraintsExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -202,1 +201,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -210,2 +210,2 @@\n-    protected void encode(OutputStream out, ObjectIdentifier extensionId,\n-        boolean isCritical) throws IOException {\n+    protected void encode(DerOutputStream out, ObjectIdentifier extensionId,\n+            boolean isCritical) throws IOException {\n@@ -213,1 +213,0 @@\n-        DerOutputStream tmp = new DerOutputStream();\n@@ -219,2 +218,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLDistributionPointsExtension.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.security.cert.CertificateException;\n@@ -148,10 +147,2 @@\n-            Collection<Extension> allExts = map.values();\n-            Object[] objs = allExts.toArray();\n-\n-            for (int i = 0; i < objs.length; i++) {\n-                if (objs[i] instanceof CertAttrSet)\n-                    ((CertAttrSet)objs[i]).encode(extOut);\n-                else if (objs[i] instanceof Extension)\n-                    ((Extension)objs[i]).encode(extOut);\n-                else\n-                    throw new CRLException(\"Illegal extension object\");\n+            for (Extension ext : map.values()) {\n+                ext.encode(extOut);\n@@ -173,2 +164,0 @@\n-        } catch (CertificateException e) {\n-            throw new CRLException(\"Encoding error: \" + e.toString());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -201,1 +200,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -210,4 +210,2 @@\n-    protected void encode(OutputStream out, ObjectIdentifier extensionId,\n-        boolean isCritical) throws IOException {\n-\n-       DerOutputStream  tmp = new DerOutputStream();\n+    protected void encode(DerOutputStream out, ObjectIdentifier extensionId,\n+            boolean isCritical) throws IOException {\n@@ -220,2 +218,1 @@\n-       super.encode(tmp);\n-       out.write(tmp.toByteArray());\n+       super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -161,3 +160,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -169,2 +167,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLReasonCodeExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -61,1 +62,1 @@\n-     * @param out the OutputStream to encode the attribute to.\n+     * @param out the DerOutputStream to encode the attribute to.\n@@ -66,1 +67,1 @@\n-    void encode(OutputStream out)\n+    void encode(DerOutputStream out)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertAttrSet.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -108,5 +107,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        algId.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        algId.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateAlgorithmId.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -155,2 +154,3 @@\n-    public void encode(OutputStream out)\n-    throws CertificateException, IOException {\n+    @Override\n+    public void encode(DerOutputStream out)\n+            throws CertificateException, IOException {\n@@ -168,1 +168,1 @@\n-    public void encode(OutputStream out, boolean isCertReq)\n+    public void encode(DerOutputStream out, boolean isCertReq)\n@@ -171,10 +171,2 @@\n-        Collection<Extension> allExts = map.values();\n-        Object[] objs = allExts.toArray();\n-\n-        for (int i = 0; i < objs.length; i++) {\n-            if (objs[i] instanceof CertAttrSet)\n-                ((CertAttrSet)objs[i]).encode(extOut);\n-            else if (objs[i] instanceof Extension)\n-                ((Extension)objs[i]).encode(extOut);\n-            else\n-                throw new CertificateException(\"Illegal extension object\");\n+        for (Extension ext : map.values()) {\n+            ext.encode(extOut);\n@@ -183,4 +175,0 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.tag_Sequence, extOut);\n-\n-        DerOutputStream tmp;\n@@ -188,2 +176,3 @@\n-            tmp = new DerOutputStream();\n-            tmp.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)3),\n+            DerOutputStream seq = new DerOutputStream();\n+            seq.write(DerValue.tag_Sequence, extOut);\n+            out.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)3),\n@@ -191,4 +180,3 @@\n-        } else\n-            tmp = seq; \/\/ pkcs#10 certificateRequest\n-\n-        out.write(tmp.toByteArray());\n+        } else {\n+            out.write(DerValue.tag_Sequence, extOut);\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":12,"deletions":24,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -179,1 +178,1 @@\n-     * @param out the OutputStream to write the extension to\n+     * @param out the DerOutputStream to write the extension to\n@@ -182,2 +181,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -189,2 +188,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -110,5 +109,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        dnName.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        dnName.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerName.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -180,2 +179,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -187,2 +186,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePoliciesExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -120,5 +119,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        serial.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        serial.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSerialNumber.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -110,5 +109,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        dnName.encode(tmp);\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        dnName.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSubjectName.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.OutputStream;\n@@ -147,1 +146,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -150,1 +149,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -170,4 +170,1 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.tag_Sequence, pair);\n-\n-        out.write(seq.toByteArray());\n+        out.write(DerValue.tag_Sequence, pair);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateValidity.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.io.OutputStream;\n@@ -158,1 +157,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -161,1 +160,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -169,2 +169,1 @@\n-        DerOutputStream seq = new DerOutputStream();\n-        seq.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0),\n+        out.write(DerValue.createTag(DerValue.TAG_CONTEXT, true, (byte)0),\n@@ -172,2 +171,0 @@\n-\n-        out.write(seq.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateVersion.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -100,1 +99,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -103,5 +102,3 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n-        tmp.write(key.getEncoded());\n-\n-        out.write(tmp.toByteArray());\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n+        out.write(key.getEncoded());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateX509Key.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -112,1 +113,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DeltaCRLIndicatorExtension.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -200,2 +199,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -207,2 +206,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -144,1 +144,11 @@\n-    public void encode(OutputStream out) throws IOException {\n+    \/**\n+     * Implementing {@link java.security.cert.Extension#encode(OutputStream)}.\n+     * This implementation is made final to make sure all {@code encode()}\n+     * methods in child classes are actually implementations of\n+     * {@link #encode(DerOutputStream)} below.\n+     *\n+     * @param out the output stream\n+     * @throws IOException\n+     *\/\n+    @Override\n+    public final void encode(OutputStream out) throws IOException {\n@@ -149,6 +159,6 @@\n-        DerOutputStream dos1 = new DerOutputStream();\n-        DerOutputStream dos2 = new DerOutputStream();\n-\n-        dos1.putOID(extensionId);\n-        if (critical) {\n-            dos1.putBoolean(critical);\n+        if (out instanceof DerOutputStream dos) {\n+            encode(dos);\n+        } else {\n+            DerOutputStream dos = new DerOutputStream();\n+            encode(dos);\n+            out.write(dos.toByteArray());\n@@ -156,4 +166,0 @@\n-        dos1.putOctetString(extensionValue);\n-\n-        dos2.write(DerValue.tag_Sequence, dos1);\n-        out.write(dos2.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import sun.security.util.DerOutputStream;\n+\n@@ -29,1 +31,0 @@\n-import java.io.OutputStream;\n@@ -96,1 +97,2 @@\n-    public void encode(OutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/FreshestCRLExtension.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -163,2 +162,2 @@\n-     public void encode(OutputStream out) throws IOException {\n-         DerOutputStream tmp = new DerOutputStream();\n+     @Override\n+     public void encode(DerOutputStream out) throws IOException {\n@@ -170,3 +169,1 @@\n-         super.encode(tmp);\n-\n-         out.write(tmp.toByteArray());\n+         super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -180,3 +179,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -188,2 +186,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InvalidityDateExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -162,1 +161,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -165,2 +164,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -172,2 +171,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuerAlternativeNameExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -237,2 +236,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -244,2 +243,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -321,3 +320,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-       DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -329,2 +327,1 @@\n-       super.encode(tmp);\n-       out.write(tmp.toByteArray());\n+       super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyUsageExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -236,1 +235,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -239,2 +238,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -246,2 +245,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NameConstraintsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -267,3 +266,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream  tmp = new DerOutputStream();\n-\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -275,2 +273,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -204,2 +203,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -211,2 +210,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyConstraintsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -149,1 +148,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -152,2 +151,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -159,2 +158,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyMappingsExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -240,1 +239,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -243,2 +242,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -250,2 +249,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PrivateKeyUsageExtension.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -164,1 +163,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -167,2 +166,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -174,2 +173,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectAlternativeNameExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -157,2 +156,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -164,2 +163,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -125,1 +124,1 @@\n-     * @param out the OutputStream to write the extension to.\n+     * @param out the DerOutputStream to write the extension to.\n@@ -128,2 +127,2 @@\n-    public void encode(OutputStream out) throws IOException {\n-        DerOutputStream tmp = new DerOutputStream();\n+    @Override\n+    public void encode(DerOutputStream out) throws IOException {\n@@ -135,2 +134,1 @@\n-        super.encode(tmp);\n-        out.write(tmp.toByteArray());\n+        super.encode(out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectKeyIdentifierExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1263,1 +1263,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -182,2 +181,3 @@\n-    public void encode(OutputStream out)\n-    throws CertificateException, IOException {\n+    @Override\n+    public void encode(DerOutputStream out)\n+            throws CertificateException, IOException {\n@@ -185,3 +185,4 @@\n-            DerOutputStream tmp = new DerOutputStream();\n-            emit(tmp);\n-            rawCertInfo = tmp.toByteArray();\n+            emit(out);\n+            rawCertInfo = out.toByteArray();\n+        } else {\n+            out.write(rawCertInfo.clone());\n@@ -189,1 +190,0 @@\n-        out.write(rawCertInfo.clone());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.util.Objects;\n@@ -185,1 +186,1 @@\n-                        if (newValue != null && !newValue.equals(oldValue)) {\n+                        if (!Objects.equals(newValue, oldValue)) {\n@@ -211,1 +212,1 @@\n-                        if (newValue != null && !newValue.equals(oldValue)) {\n+                        if (!Objects.equals(newValue, oldValue)) {\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessible.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1025,1 +1025,5 @@\n-            if (p.y >= (frame.origin.y + contentRect.size.height)) {\n+            \/\/ Also, non-client area includes the edges at left, right and botton of frame\n+            if ((p.y >= (frame.origin.y + contentRect.size.height)) ||\n+                (p.x >= (frame.origin.x + contentRect.size.width - 3)) ||\n+                (fabs(frame.origin.x - p.x) < 3) ||\n+                (fabs(frame.origin.y - p.y) < 3)) {\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/AWTWindow.m","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -144,0 +144,1 @@\n+    static final int MAX_INFLATED_TEXT_LENGTH = 262144;\n@@ -672,1 +673,1 @@\n-            return iis.readAllBytes();\n+            return iis.readNBytes(MAX_INFLATED_TEXT_LENGTH);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/imageio\/plugins\/png\/PNGImageReader.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -580,0 +580,1 @@\n+            \"ComboBox.squareButton\", Boolean.FALSE,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -814,1 +814,1 @@\n-            for (int i = 0; i < srcNumComp; i++) {\n+            for (int i = 0; i < iccSrcNumComp; i++) {\n@@ -828,1 +828,1 @@\n-            for (int i = 0; i < dstNumComp; i++) {\n+            for (int i = 0; i < iccDstNumComp; i++) {\n@@ -881,1 +881,1 @@\n-                        color = srcColorSpace.fromCIEXYZ(dstColor);\n+                        color = dstColorSpace.fromCIEXYZ(dstColor);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ColorConvertOp.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -92,0 +92,1 @@\n+    private static int recursionCount;\n@@ -376,0 +377,1 @@\n+        recursionCount = 0;\n@@ -457,20 +459,13 @@\n-            if (nl >= 0) {\n-                \/\/ break up newlines\n-                if (nl == 0) {\n-                    @SuppressWarnings(\"serial\") \/\/ anonymous class\n-                    JPanel breakPanel = new JPanel() {\n-                        public Dimension getPreferredSize() {\n-                            Font       f = getFont();\n-\n-                            if (f != null) {\n-                                return new Dimension(1, f.getSize() + 2);\n-                            }\n-                            return new Dimension(0, 0);\n-                        }\n-                    };\n-                    breakPanel.setName(\"OptionPane.break\");\n-                    addMessageComponents(container, cons, breakPanel, maxll,\n-                                         true);\n-                } else {\n-                    addMessageComponents(container, cons, s.substring(0, nl),\n-                                      maxll, false);\n+            if (s.contains(\"<html>\")) {\n+                \/* line break in html text is done by <br> tag\n+                 * and not by \/n so it's incorrect to address newline\n+                 * same as non-html text.\n+                 * Text between <html> <\/html> tags are extracted\n+                 * and rendered as JLabel text\n+                 *\/\n+                int index1 = s.indexOf(\"<html>\");\n+                int index2 = s.indexOf(\"<\/html>\");\n+                String str = \"\";\n+                if (index2 >= 0) {\n+                    str = s.substring(index2 + \"<\/html>\".length());\n+                    s = s.substring(index1, index2 + + \"<\/html>\".length());\n@@ -478,10 +473,0 @@\n-                addMessageComponents(container, cons, s.substring(nl + nll), maxll,\n-                                  false);\n-\n-            } else if (len > maxll) {\n-                Container c = Box.createVerticalBox();\n-                c.setName(\"OptionPane.verticalBox\");\n-                burstStringInto(c, s, maxll);\n-                addMessageComponents(container, cons, c, maxll, true );\n-\n-            } else {\n@@ -489,1 +474,1 @@\n-                label = new JLabel( s, JLabel.LEADING );\n+                label = new JLabel(s, JLabel.LEADING);\n@@ -493,0 +478,50 @@\n+                if (!str.isEmpty()) {\n+                    addMessageComponents(container, cons, str, maxll, false);\n+                }\n+            } else {\n+                if (nl >= 0) {\n+                    \/\/ break up newlines\n+                    if (nl == 0) {\n+                        @SuppressWarnings(\"serial\") \/\/ anonymous class\n+                                JPanel breakPanel = new JPanel() {\n+                            public Dimension getPreferredSize() {\n+                                Font f = getFont();\n+\n+                                if (f != null) {\n+                                    return new Dimension(1, f.getSize() + 2);\n+                                }\n+                                return new Dimension(0, 0);\n+                            }\n+                        };\n+                        breakPanel.setName(\"OptionPane.break\");\n+                        addMessageComponents(container, cons, breakPanel, maxll,\n+                                true);\n+                    } else {\n+                        addMessageComponents(container, cons, s.substring(0, nl),\n+                                maxll, false);\n+                    }\n+                    \/\/ Prevent recursion of more than\n+                    \/\/ 200 successive newlines in a message\n+                    \/\/ and indicate message is truncated via ellipsis\n+                    if (recursionCount++ > 200) {\n+                        recursionCount = 0;\n+                        addMessageComponents(container, cons, new String(\"...\"),\n+                                maxll, false);\n+                        return;\n+                    }\n+                    addMessageComponents(container, cons, s.substring(nl + nll), maxll,\n+                            false);\n+\n+                } else if (len > maxll) {\n+                    Container c = Box.createVerticalBox();\n+                    c.setName(\"OptionPane.verticalBox\");\n+                    burstStringInto(c, s, maxll);\n+                    addMessageComponents(container, cons, c, maxll, true);\n+\n+                } else {\n+                    JLabel label;\n+                    label = new JLabel(s, JLabel.LEADING);\n+                    label.setName(\"OptionPane.label\");\n+                    configureMessageLabel(label);\n+                    addMessageComponents(container, cons, label, maxll, true);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicOptionPaneUI.java","additions":66,"deletions":31,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -360,0 +360,28 @@\n+    \/**\n+     * The minimum size is the size of the display area plus insets plus the button.\n+     *\/\n+    @Override\n+    public Dimension getMinimumSize( JComponent c ) {\n+        if ( !isMinimumSizeDirty ) {\n+            return new Dimension(cachedMinimumSize);\n+        }\n+        Dimension size = getDisplaySize();\n+        Insets insets = getInsets();\n+        Insets arrowInsets = arrowButton.getInsets();\n+        \/\/calculate the width and height of the button\n+        int buttonHeight = size.height;\n+        int buttonWidth = squareButton ?\n+                            buttonHeight :\n+                            arrowButton.getPreferredSize().width;\n+        \/\/adjust the size based on the button width\n+        size.height += insets.top + insets.bottom + arrowInsets.top\n+                        + arrowInsets.bottom;\n+        size.width  += insets.left + insets.right + arrowInsets.left\n+                        + arrowInsets.right + buttonWidth;\n+\n+        cachedMinimumSize.setSize( size.width, size.height );\n+        isMinimumSizeDirty = false;\n+\n+        return new Dimension(size);\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthComboBoxUI.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## The FreeType Project: Freetype v2.13.2\n+## The FreeType Project: Freetype v2.13.3\n@@ -24,17 +24,17 @@\n-Copyright (C) 1996-2023 by David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2007-2023 by Dereg Clegg and Michael Toftdal.\n-Copyright (C) 1996-2023 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2022-2023 by David Turner, Robert Wilhelm, Werner Lemberg, George Williams, and\n-Copyright (C) 2004-2023 by Masatake YAMATO and Redhat K.K.\n-Copyright (C) 2007-2023 by Derek Clegg and Michael Toftdal.\n-Copyright (C) 2003-2023 by Masatake YAMATO, Red Hat K.K.,\n-Copyright (C) 1996-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and Dominik Röttsches.\n-Copyright (C) 2007-2023 by David Turner.\n-Copyright (C) 2022-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n-Copyright (C) 2007-2023 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n-Copyright (C) 2008-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n-Copyright (C) 2013-2023 by Google, Inc.\n-Copyright (C) 2019-2023 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n-Copyright (C) 2009-2023 by Oran Agra and Mickey Gabel.\n-Copyright (C) 2018-2023 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n-Copyright (C) 2004-2023 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n+Copyright (C) 1996-2024 by David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2007-2024 by Dereg Clegg and Michael Toftdal.\n+Copyright (C) 1996-2024 by Just van Rossum, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2022-2024 by David Turner, Robert Wilhelm, Werner Lemberg, George Williams, and\n+Copyright (C) 2004-2024 by Masatake YAMATO and Redhat K.K.\n+Copyright (C) 2007-2024 by Derek Clegg and Michael Toftdal.\n+Copyright (C) 2003-2024 by Masatake YAMATO, Red Hat K.K.,\n+Copyright (C) 1996-2024 by David Turner, Robert Wilhelm, Werner Lemberg, and Dominik Röttsches.\n+Copyright (C) 2007-2024 by David Turner.\n+Copyright (C) 2022-2024 by David Turner, Robert Wilhelm, Werner Lemberg, and Moazin Khatti.\n+Copyright (C) 2007-2024 by Rahul Bhalerao <rahul.bhalerao@redhat.com>, <b.rahul.pm@gmail.com>.\n+Copyright (C) 2008-2024 by David Turner, Robert Wilhelm, Werner Lemberg, and suzuki toshiya.\n+Copyright (C) 2013-2024 by Google, Inc.\n+Copyright (C) 2019-2024 by Nikhil Ramakrishnan, David Turner, Robert Wilhelm, and Werner Lemberg.\n+Copyright (C) 2009-2024 by Oran Agra and Mickey Gabel.\n+Copyright (C) 2018-2024 by David Turner, Robert Wilhelm, Dominik Röttsches, and Werner Lemberg.\n+Copyright (C) 2004-2024 by David Turner, Robert Wilhelm, Werner Lemberg, and George Williams.\n@@ -562,1 +562,1 @@\n-The below license applies to the following files:\n+The below applies to the following file(s):\n@@ -585,1 +585,1 @@\n-Copyright 2006-2014 Adobe Systems Incorporated.\n+Copyright (C) 2006-2014 Adobe Systems Incorporated.\n@@ -621,1 +621,1 @@\n-The below license applies to the following files:\n+The below applies to the following file(s):\n@@ -625,2 +625,2 @@\n-Copyright 2000 Computing Research Labs, New Mexico State University\n-Copyright 2001-2015\n+Copyright (C) 2000 Computing Research Labs, New Mexico State University\n+Copyright (C) 2001-2015\n","filename":"src\/java.desktop\/share\/legal\/freetype.md","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## Little Color Management System (LCMS) v2.16\n+## Little Color Management System (LCMS) v2.17\n@@ -8,1 +8,1 @@\n-Copyright (C) 1998-2023 Marti Maria Saguer\n+Copyright (C) 1998-2025 Marti Maria Saguer\n@@ -29,1 +29,1 @@\n-The below license applies to the following files:\n+The below applies to the following file(s):\n@@ -32,1 +32,1 @@\n-Copyright 2001, softSurfer (www.softsurfer.com)\n+Copyright (C) 2001, softSurfer (www.softsurfer.com)\n@@ -102,2 +102,2 @@\n-\n-```\n+Amir Montazery and Open Source Technology Improvement Fund (ostif.org), Google, for fuzzer fundings.\n+```\n\\ No newline at end of file\n","filename":"src\/java.desktop\/share\/legal\/lcms.md","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftconfig.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftheader.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -760,0 +760,16 @@\n+  \/**************************************************************************\n+   *\n+   * Option `TT_CONFIG_OPTION_GPOS_KERNING` enables a basic GPOS kerning\n+   * implementation (for TrueType fonts only).  With this defined, FreeType\n+   * is able to get kerning pair data from the GPOS 'kern' feature as well as\n+   * legacy 'kern' tables; without this defined, FreeType will only be able\n+   * to use legacy 'kern' tables.\n+   *\n+   * Note that FreeType does not support more advanced GPOS layout features;\n+   * even the 'kern' feature implemented here doesn't handle more\n+   * sophisticated kerning variants.  Use a higher-level library like\n+   * HarfBuzz instead for that.\n+   *\/\n+\/* #define TT_CONFIG_OPTION_GPOS_KERNING *\/\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftoption.h","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/ftstdlib.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/integer-types.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/mac-support.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2023 by\n+ * Copyright (C) 2020-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/config\/public-macros.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -1325,3 +1325,7 @@\n-   *     function always returns the vector (0,0).  Note that FreeType\n-   *     doesn't handle kerning data from the SFNT 'GPOS' table (as present\n-   *     in many OpenType fonts).\n+   *     function always returns the vector (0,0).\n+   *\n+   *     Note that for TrueType fonts only, FreeType supports both the 'kern'\n+   *     table and the basic, pair-wise kerning feature from the 'GPOS' table\n+   *     (with `TT_CONFIG_OPTION_GPOS_KERNING` enabled), though FreeType does\n+   *     not support the more advanced GPOS layout features; use a library\n+   *     like HarfBuzz for those instead.\n@@ -3770,7 +3774,5 @@\n-   *     This mode corresponds to 8-bit, single-channel signed distance field\n-   *     (SDF) bitmaps.  Each pixel in the SDF grid is the value from the\n-   *     pixel's position to the nearest glyph's outline.  The distances are\n-   *     calculated from the center of the pixel and are positive if they are\n-   *     filled by the outline (i.e., inside the outline) and negative\n-   *     otherwise.  Check the note below on how to convert the output values\n-   *     to usable data.\n+   *     The positive (unsigned) 8-bit bitmap values can be converted to the\n+   *     single-channel signed distance field (SDF) by subtracting 128, with\n+   *     the positive and negative results corresponding to the inside and\n+   *     the outside of a glyph contour, respectively.  The distance units are\n+   *     arbitrarily determined by an adjustable @spread property.\n@@ -3779,1 +3781,1 @@\n-   *   The selected render mode only affects vector glyphs of a font.\n+   *   The selected render mode only affects scalable vector glyphs of a font.\n@@ -3784,67 +3786,0 @@\n-   *   For @FT_RENDER_MODE_SDF the output bitmap buffer contains normalized\n-   *   distances that are packed into unsigned 8-bit values.  To get pixel\n-   *   values in floating point representation use the following pseudo-C\n-   *   code for the conversion.\n-   *\n-   *   ```\n-   *   \/\/ Load glyph and render using FT_RENDER_MODE_SDF,\n-   *   \/\/ then use the output buffer as follows.\n-   *\n-   *   ...\n-   *   FT_Byte  buffer = glyph->bitmap->buffer;\n-   *\n-   *\n-   *   for pixel in buffer\n-   *   {\n-   *     \/\/ `sd` is the signed distance and `spread` is the current spread;\n-   *     \/\/ the default spread is 2 and can be changed.\n-   *\n-   *     float  sd = (float)pixel - 128.0f;\n-   *\n-   *\n-   *     \/\/ Convert to pixel values.\n-   *     sd = ( sd \/ 128.0f ) * spread;\n-   *\n-   *     \/\/ Store `sd` in a buffer or use as required.\n-   *   }\n-   *\n-   *   ```\n-   *\n-   *   FreeType has two rasterizers for generating SDF, namely:\n-   *\n-   *   1. `sdf` for generating SDF directly from glyph's outline, and\n-   *\n-   *   2. `bsdf` for generating SDF from rasterized bitmaps.\n-   *\n-   *   Depending on the glyph type (i.e., outline or bitmap), one of the two\n-   *   rasterizers is chosen at runtime and used for generating SDFs.  To\n-   *   force the use of `bsdf` you should render the glyph with any of the\n-   *   FreeType's other rendering modes (e.g., `FT_RENDER_MODE_NORMAL`) and\n-   *   then re-render with `FT_RENDER_MODE_SDF`.\n-   *\n-   *   There are some issues with stability and possible failures of the SDF\n-   *   renderers (specifically `sdf`).\n-   *\n-   *   1. The `sdf` rasterizer is sensitive to really small features (e.g.,\n-   *      sharp turns that are less than 1~pixel) and imperfections in the\n-   *      glyph's outline, causing artifacts in the final output.\n-   *\n-   *   2. The `sdf` rasterizer has limited support for handling intersecting\n-   *      contours and *cannot* handle self-intersecting contours whatsoever.\n-   *      Self-intersection happens when a single connected contour\n-   *      intersects itself at some point; having these in your font\n-   *      definitely poses a problem to the rasterizer and cause artifacts,\n-   *      too.\n-   *\n-   *   3. Generating SDF for really small glyphs may result in undesirable\n-   *      output; the pixel grid (which stores distance information) becomes\n-   *      too coarse.\n-   *\n-   *   4. Since the output buffer is normalized, precision at smaller spreads\n-   *      is greater than precision at larger spread values because the\n-   *      output range of [0..255] gets mapped to a smaller SDF range.  A\n-   *      spread of~2 should be sufficient in most cases.\n-   *\n-   *   Points (1) and (2) can be avoided by using the `bsdf` rasterizer,\n-   *   which is more stable than the `sdf` rasterizer in general.\n-   *\n@@ -4061,3 +3996,20 @@\n-   *   Kerning for OpenType fonts implemented in a 'GPOS' table is not\n-   *   supported; use @FT_HAS_KERNING to find out whether a font has data\n-   *   that can be extracted with `FT_Get_Kerning`.\n+   *   Note that, for TrueType fonts only, this can extract data from both\n+   *   the 'kern' table and the basic, pair-wise kerning feature from the\n+   *   GPOS table (with `TT_CONFIG_OPTION_GPOS_KERNING` enabled), though\n+   *   FreeType does not support the more advanced GPOS layout features; use\n+   *   a library like HarfBuzz for those instead.  If a font has both a\n+   *   'kern' table and kern features of a GPOS table, the 'kern' table will\n+   *   be used.\n+   *\n+   *   Also note for right-to-left scripts, the functionality may differ for\n+   *   fonts with GPOS tables vs. 'kern' tables.  For GPOS, right-to-left\n+   *   fonts typically use both a placement offset and an advance for pair\n+   *   positioning, which this API does not support, so it would output\n+   *   kerning values of zero; though if the right-to-left font used only\n+   *   advances in GPOS pair positioning, then this API could output kerning\n+   *   values for it, but it would use `left_glyph` to mean the first glyph\n+   *   for that case.  Whereas 'kern' tables are always advance-only and\n+   *   always store the left glyph first.\n+   *\n+   *   Use @FT_HAS_KERNING to find out whether a font has data that can be\n+   *   extracted with `FT_Get_Kerning`.\n@@ -5225,1 +5177,1 @@\n-#define FREETYPE_PATCH  2\n+#define FREETYPE_PATCH  3\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/freetype.h","additions":35,"deletions":83,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2023 by\n+ * Copyright (C) 2008-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftadvanc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbbox.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbdf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftbitmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftcolor.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n@@ -820,0 +820,74 @@\n+\n+  \/**************************************************************************\n+   *\n+   * @property:\n+   *   spread\n+   *\n+   * @description:\n+   *   This property of the 'sdf' and 'bsdf' renderers defines how the signed\n+   *   distance field (SDF) is represented in the output bitmap.  The output\n+   *   values are calculated as follows, '128 * ( SDF \/ spread + 1 )', with\n+   *   the result clamped to the 8-bit range [0..255].  Therefore, 'spread'\n+   *   is also the maximum euclidean distance from the edge after which the\n+   *   values are clamped.  The spread is specified in pixels with the\n+   *   default value of 8.  For accurate SDF texture mapping (interpolation),\n+   *   the spread should be large enough to accommodate the target grid unit.\n+   *\n+   * @example:\n+   *   The following example code demonstrates how to set the SDF spread\n+   *   (omitting the error handling).\n+   *\n+   *   ```\n+   *     FT_Library  library;\n+   *     FT_Int      spread = 2;\n+   *\n+   *\n+   *     FT_Init_FreeType( &library );\n+   *\n+   *     FT_Property_Set( library, \"sdf\", \"spread\", &spread );\n+   *   ```\n+   *\n+   * @note:\n+   *   FreeType has two rasterizers for generating SDF, namely:\n+   *\n+   *   1. `sdf` for generating SDF directly from glyph's outline, and\n+   *\n+   *   2. `bsdf` for generating SDF from rasterized bitmaps.\n+   *\n+   *   Depending on the glyph type (i.e., outline or bitmap), one of the two\n+   *   rasterizers is chosen at runtime and used for generating SDFs.  To\n+   *   force the use of `bsdf` you should render the glyph with any of the\n+   *   FreeType's other rendering modes (e.g., `FT_RENDER_MODE_NORMAL`) and\n+   *   then re-render with `FT_RENDER_MODE_SDF`.\n+   *\n+   *   There are some issues with stability and possible failures of the SDF\n+   *   renderers (specifically `sdf`).\n+   *\n+   *   1. The `sdf` rasterizer is sensitive to really small features (e.g.,\n+   *      sharp turns that are less than 1~pixel) and imperfections in the\n+   *      glyph's outline, causing artifacts in the final output.\n+   *\n+   *   2. The `sdf` rasterizer has limited support for handling intersecting\n+   *      contours and *cannot* handle self-intersecting contours whatsoever.\n+   *      Self-intersection happens when a single connected contour\n+   *      intersects itself at some point; having these in your font\n+   *      definitely poses a problem to the rasterizer and cause artifacts,\n+   *      too.\n+   *\n+   *   3. Generating SDF for really small glyphs may result in undesirable\n+   *      output; the pixel grid (which stores distance information) becomes\n+   *      too coarse.\n+   *\n+   *   4. Since the output buffer is normalized, precision at smaller spreads\n+   *      is greater than precision at larger spread values because the\n+   *      output range of [0..255] gets mapped to a smaller SDF range.  A\n+   *      spread of~2 should be sufficient in most cases.\n+   *\n+   *   Points (1) and (2) can be avoided by using the `bsdf` rasterizer,\n+   *   which is more stable than the `sdf` rasterizer in general.\n+   *\n+   * @since:\n+   *   2.11\n+   *\/\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftdriver.h","additions":75,"deletions":1,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fterrdef.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fterrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftfntfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgasp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftglyph.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftgzip.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -24,0 +24,5 @@\n+   * Note: This file can be used for `STANDALONE_` compilation of raster\n+   *       (B\/W) and smooth (anti-aliased) renderers.  Therefore, it must\n+   *       rely on standard variable types only instead of aliases in\n+   *       `fttypes.h`.\n+   *\n@@ -321,1 +326,1 @@\n-   *     the 'SCANMODE' instruction).\n+   *     the 'SCANTYPE' instruction).\n@@ -344,2 +349,2 @@\n-    short       n_contours;      \/* number of contours in glyph        *\/\n-    short       n_points;        \/* number of points in the glyph      *\/\n+    unsigned short   n_contours;  \/* number of contours in glyph        *\/\n+    unsigned short   n_points;    \/* number of points in the glyph      *\/\n@@ -347,3 +352,3 @@\n-    FT_Vector*  points;          \/* the outline's points               *\/\n-    char*       tags;            \/* the points flags                   *\/\n-    short*      contours;        \/* the contour end points             *\/\n+    FT_Vector*       points;      \/* the outline's points               *\/\n+    unsigned char*   tags;        \/* the points flags                   *\/\n+    unsigned short*  contours;    \/* the contour end points             *\/\n@@ -351,1 +356,1 @@\n-    int         flags;           \/* outline masks                      *\/\n+    int              flags;       \/* outline masks                      *\/\n@@ -359,2 +364,2 @@\n-#define FT_OUTLINE_CONTOURS_MAX  SHRT_MAX\n-#define FT_OUTLINE_POINTS_MAX    SHRT_MAX\n+#define FT_OUTLINE_CONTOURS_MAX  USHRT_MAX\n+#define FT_OUTLINE_POINTS_MAX    USHRT_MAX\n@@ -437,2 +442,2 @@\n-   *   OpenType specification (in file `ttinst1.doc`) how simple drop-outs,\n-   *   smart drop-outs, and stubs are defined.\n+   *   [OpenType specification](https:\/\/learn.microsoft.com\/en-us\/typography\/opentype\/spec\/tt_instructions#scantype)\n+   *   how simple drop-outs, smart drop-outs, and stubs are defined.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftimage.h","additions":17,"deletions":12,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftincrem.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlcdfil.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlist.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2023 by\n+ * Copyright (C) 2020-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftlogging.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmac.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -22,0 +22,1 @@\n+#include <freetype\/freetype.h>\n@@ -23,1 +24,5 @@\n-#include <freetype\/t1tables.h>\n+#ifdef FREETYPE_H\n+#error \"freetype.h of FreeType 1 has been loaded!\"\n+#error \"Please fix the directory search order for header files\"\n+#error \"so that freetype.h of FreeType 2 is found first.\"\n+#endif\n@@ -56,0 +61,24 @@\n+  \/**************************************************************************\n+   *\n+   * @enum:\n+   *   T1_MAX_MM_XXX\n+   *\n+   * @description:\n+   *   Multiple Masters limits as defined in their specifications.\n+   *\n+   * @values:\n+   *   T1_MAX_MM_AXIS ::\n+   *     The maximum number of Multiple Masters axes.\n+   *\n+   *   T1_MAX_MM_DESIGNS ::\n+   *     The maximum number of Multiple Masters designs.\n+   *\n+   *   T1_MAX_MM_MAP_POINTS ::\n+   *     The maximum number of elements in a design map.\n+   *\n+   *\/\n+#define T1_MAX_MM_AXIS         4\n+#define T1_MAX_MM_DESIGNS     16\n+#define T1_MAX_MM_MAP_POINTS  20\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmm.h","additions":31,"deletions":2,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmodapi.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftmoderr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -115,1 +115,1 @@\n-   *   degenerate segments to become non-degenrate and visible, like when\n+   *   degenerate segments to become non-degenerate and visible, like when\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftoutln.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftparams.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftrender.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsizes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsnames.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftstroke.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsynth.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ftsystem.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttrigon.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/fttypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/autohint.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cffotypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -251,4 +251,4 @@\n-    FT_Pos    blue_values[14];\n-    FT_Pos    other_blues[10];\n-    FT_Pos    family_blues[14];\n-    FT_Pos    family_other_blues[10];\n+    FT_Fixed  blue_values[14];\n+    FT_Fixed  other_blues[10];\n+    FT_Fixed  family_blues[14];\n+    FT_Fixed  family_other_blues[10];\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/cfftypes.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2020-2023 by\n+ * Copyright (C) 2020-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/compiler-macros.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -418,1 +418,1 @@\n-#elif defined( _M_ARM64 ) || defined( _M_ARM )\n+#elif defined( _M_ARM64 ) || defined( _M_ARM ) || defined( _M_ARM64EC )\n@@ -458,0 +458,6 @@\n+#elif defined( __SunOS_5_11 )\n+\n+#include <string.h>\n+\n+#define FT_MSB( x )  ( fls( x ) - 1 )\n+\n@@ -492,2 +498,0 @@\n-#if 0\n-\n@@ -510,1 +514,2 @@\n-   *   This function is not very fast.\n+   *   This function is slow and should be avoided.  Consider @FT_Hypot or\n+   *   @FT_Vector_NormLen instead.\n@@ -512,4 +517,2 @@\n-  FT_BASE( FT_Int32 )\n-  FT_SqrtFixed( FT_Int32  x );\n-\n-#endif \/* 0 *\/\n+  FT_BASE( FT_UInt32 )\n+  FT_SqrtFixed( FT_UInt32  x );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftcalc.h","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdebug.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftdrv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftgloadr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -374,2 +374,5 @@\n-#define FT_MEM_DUP( dst, address, size )                                    \\\n-          (dst) = ft_mem_dup( memory, (address), (FT_ULong)(size), &error )\n+#define FT_MEM_DUP( dst, address, size )                       \\\n+          FT_ASSIGNP_INNER( dst, ft_mem_dup( memory,           \\\n+                                             (address),        \\\n+                                             (FT_ULong)(size), \\\n+                                             &error ) )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftmemory.h","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2022-2023 by\n+ * Copyright (C) 2022-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftmmtypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -607,6 +607,0 @@\n-#define FT_SIZE_FACE( x )     FT_SIZE( x )->face\n-#define FT_SLOT_FACE( x )     FT_SLOT( x )->face\n-\n-#define FT_FACE_SLOT( x )     FT_FACE( x )->glyph\n-#define FT_FACE_SIZE( x )     FT_FACE( x )->size\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftobjs.h","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftpsprop.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftrfork.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftserv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftstream.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n@@ -67,0 +67,1 @@\n+FT_TRACE_DEF( ttgpos )    \/* GPOS handler            (ttgpos.c)   *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/fttrace.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/ftvalid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -228,0 +228,1 @@\n+    T1_FIELD_LOCATION_NONE = 0,\n@@ -252,0 +253,1 @@\n+    FT_UInt             len;          \/* field identifier length        *\/\n@@ -276,0 +278,1 @@\n+            sizeof ( _ident ) - 1,                          \\\n@@ -277,1 +280,1 @@\n-            0,                                              \\\n+            NULL,                                           \\\n@@ -286,0 +289,1 @@\n+            sizeof ( _ident ) - 1,                      \\\n@@ -295,0 +299,1 @@\n+            sizeof ( _ident ) - 1,                               \\\n@@ -296,1 +301,1 @@\n-            0,                                                   \\\n+            NULL,                                                \\\n@@ -306,0 +311,1 @@\n+            sizeof ( _ident ) - 1,                                \\\n@@ -307,1 +313,1 @@\n-            0,                                                    \\\n+            NULL,                                                 \\\n@@ -357,0 +363,7 @@\n+#define T1_FIELD_ZERO                                         \\\n+          {                                                   \\\n+            0,                                                \\\n+            NULL, T1_FIELD_LOCATION_NONE, T1_FIELD_TYPE_NONE, \\\n+            NULL, 0, 0, 0, 0, 0                               \\\n+          }\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/psaux.h","additions":17,"deletions":4,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/pshints.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svbdf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcfftl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svcid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svfntfmt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgldict.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svgxval.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svkern.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2016-2023 by\n+ * Copyright (C) 2016-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmetric.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svmm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svotval.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpfr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpostnm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2012-2023 by\n+ * Copyright (C) 2012-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svprop.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpscmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svpsinfo.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svsfnt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svtteng.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svttglyf.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/services\/svwinfnt.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -927,0 +927,1 @@\n+    TT_Load_Table_Func  load_gpos;\n@@ -947,0 +948,2 @@\n+    TT_Face_GetKerningFunc  get_gpos_kerning;\n+\n@@ -1005,0 +1008,1 @@\n+          load_gpos_,                    \\\n@@ -1012,0 +1016,1 @@\n+          get_gpos_kerning_,             \\\n@@ -1053,0 +1058,1 @@\n+    load_gpos_,                          \\\n@@ -1060,0 +1066,1 @@\n+    get_gpos_kerning_,                   \\\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/sfnt.h","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2022-2023 by\n+ * Copyright (C) 2022-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/svginterface.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -24,1 +24,1 @@\n-#include <freetype\/t1tables.h>\n+#include <freetype\/ftmm.h>\n@@ -140,0 +140,48 @@\n+  \/* this structure is used to store the BlendDesignMap entry for an axis *\/\n+  typedef struct  PS_DesignMap_\n+  {\n+    FT_Byte    num_points;\n+    FT_Long*   design_points;\n+    FT_Fixed*  blend_points;\n+\n+  } PS_DesignMapRec, *PS_DesignMap;\n+\n+  \/* backward compatible definition *\/\n+  typedef PS_DesignMapRec  T1_DesignMap;\n+\n+\n+  typedef struct  PS_BlendRec_\n+  {\n+    FT_UInt          num_designs;\n+    FT_UInt          num_axis;\n+\n+    FT_String*       axis_names[T1_MAX_MM_AXIS];\n+    FT_Fixed*        design_pos[T1_MAX_MM_DESIGNS];\n+    PS_DesignMapRec  design_map[T1_MAX_MM_AXIS];\n+\n+    FT_Fixed*        weight_vector;\n+    FT_Fixed*        default_weight_vector;\n+\n+    PS_FontInfo      font_infos[T1_MAX_MM_DESIGNS + 1];\n+    PS_Private       privates  [T1_MAX_MM_DESIGNS + 1];\n+\n+    FT_ULong         blend_bitflags;\n+\n+    FT_BBox*         bboxes    [T1_MAX_MM_DESIGNS + 1];\n+\n+    \/* since 2.3.0 *\/\n+\n+    \/* undocumented, optional: the default design instance;   *\/\n+    \/* corresponds to default_weight_vector --                *\/\n+    \/* num_default_design_vector == 0 means it is not present *\/\n+    \/* in the font and associated metrics files               *\/\n+    FT_UInt          default_design_vector[T1_MAX_MM_DESIGNS];\n+    FT_UInt          num_default_design_vector;\n+\n+  } PS_BlendRec, *PS_Blend;\n+\n+\n+  \/* backward compatible definition *\/\n+  typedef PS_BlendRec  T1_Blend;\n+\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/t1types.h","additions":50,"deletions":2,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -27,0 +27,1 @@\n+#include \"freetype\/fttypes.h\"\n@@ -1584,0 +1585,5 @@\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+    FT_Byte*              gpos_table;\n+    FT_Bool               gpos_kerning_available;\n+#endif\n+\n@@ -1652,1 +1658,1 @@\n-    FT_Short    max_contours;\n+    FT_UShort   max_contours;\n@@ -1654,1 +1660,1 @@\n-    FT_Short    n_contours;  \/* number of contours          *\/\n+    FT_UShort   n_contours;  \/* number of contours          *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/tttypes.h","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/internal\/wofftypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2022-2023 by\n+ * Copyright (C) 2022-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/otsvg.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -272,58 +272,0 @@\n-  \/* maximum number of Multiple Masters designs, as defined in the spec *\/\n-#define T1_MAX_MM_DESIGNS     16\n-\n-  \/* maximum number of Multiple Masters axes, as defined in the spec *\/\n-#define T1_MAX_MM_AXIS        4\n-\n-  \/* maximum number of elements in a design map *\/\n-#define T1_MAX_MM_MAP_POINTS  20\n-\n-\n-  \/* this structure is used to store the BlendDesignMap entry for an axis *\/\n-  typedef struct  PS_DesignMap_\n-  {\n-    FT_Byte    num_points;\n-    FT_Long*   design_points;\n-    FT_Fixed*  blend_points;\n-\n-  } PS_DesignMapRec, *PS_DesignMap;\n-\n-  \/* backward compatible definition *\/\n-  typedef PS_DesignMapRec  T1_DesignMap;\n-\n-\n-  typedef struct  PS_BlendRec_\n-  {\n-    FT_UInt          num_designs;\n-    FT_UInt          num_axis;\n-\n-    FT_String*       axis_names[T1_MAX_MM_AXIS];\n-    FT_Fixed*        design_pos[T1_MAX_MM_DESIGNS];\n-    PS_DesignMapRec  design_map[T1_MAX_MM_AXIS];\n-\n-    FT_Fixed*        weight_vector;\n-    FT_Fixed*        default_weight_vector;\n-\n-    PS_FontInfo      font_infos[T1_MAX_MM_DESIGNS + 1];\n-    PS_Private       privates  [T1_MAX_MM_DESIGNS + 1];\n-\n-    FT_ULong         blend_bitflags;\n-\n-    FT_BBox*         bboxes    [T1_MAX_MM_DESIGNS + 1];\n-\n-    \/* since 2.3.0 *\/\n-\n-    \/* undocumented, optional: the default design instance;   *\/\n-    \/* corresponds to default_weight_vector --                *\/\n-    \/* num_default_design_vector == 0 means it is not present *\/\n-    \/* in the font and associated metrics files               *\/\n-    FT_UInt          default_design_vector[T1_MAX_MM_DESIGNS];\n-    FT_UInt          num_default_design_vector;\n-\n-  } PS_BlendRec, *PS_Blend;\n-\n-\n-  \/* backward compatible definition *\/\n-  typedef PS_BlendRec  T1_Blend;\n-\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/t1tables.h","additions":1,"deletions":59,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/ttnameid.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -841,2 +841,3 @@\n-   *   The format of `charmap`.  If `charmap` doesn't belong to an SFNT face,\n-   *   return -1.\n+   *   The format of `charmap`.  If `charmap` doesn't belong to an SFNT face\n+   *   (including the synthetic Unicode charmap sometimes created by\n+   *   FreeType), return -1.\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttables.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/freetype\/tttags.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/include\/ft2build.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.cin","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n-\/\/ Copyright (C) 2013-2023 by\n+\/\/ Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.dat","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afblue.hin","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcjk.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n@@ -87,1 +87,1 @@\n-    AF_CJKBlueRec  blues[AF_BLUE_STRINGSET_MAX];\n+    AF_CJKBlueRec  blues[AF_BLUE_STRINGSET_MAX_LEN];\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcjk.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afcover.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afdummy.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afdummy.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2023 by\n+ * Copyright (C) 2005-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aferrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afglobal.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afglobal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n@@ -982,2 +982,2 @@\n-        char*       tag           = outline->tags;\n-        FT_Short    endpoint      = outline->contours[0];\n+        FT_Byte*    tag           = outline->tags;\n+        FT_UShort   endpoint      = outline->contours[0];\n@@ -1049,4 +1049,4 @@\n-        AF_Point*  contour       = hints->contours;\n-        AF_Point*  contour_limit = contour + hints->num_contours;\n-        short*     end           = outline->contours;\n-        short      idx           = 0;\n+        AF_Point*   contour       = hints->contours;\n+        AF_Point*   contour_limit = contour + hints->num_contours;\n+        FT_UShort*  end           = outline->contours;\n+        FT_Int      idx           = 0;\n@@ -1058,1 +1058,1 @@\n-          idx        = (short)( end[0] + 1 );\n+          idx        = *end + 1;\n@@ -1295,1 +1295,1 @@\n-    char*       tag   = outline->tags;\n+    FT_Byte*    tag   = outline->tags;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afhints.c","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afhints.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afindic.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afindic.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n@@ -984,1 +984,1 @@\n-      AF_LatinBlue  blue_sorted[AF_BLUE_STRINGSET_MAX_LEN + 2];\n+      AF_LatinBlue  blue_sorted[AF_BLUE_STRINGSET_MAX_LEN];\n@@ -1266,2 +1266,1 @@\n-            dist  = FT_ABS( FT_MulFix( max_height, new_scale - scale ) );\n-            dist &= ~127;\n+            dist  = FT_MulFix( max_height, new_scale - scale );\n@@ -1269,1 +1268,1 @@\n-            if ( dist == 0 )\n+            if ( -128 < dist && dist < 128 )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aflatin.c","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n@@ -101,1 +101,1 @@\n-    AF_LatinBlueRec  blues[AF_BLUE_STRINGSET_MAX];\n+    AF_LatinBlueRec  blues[AF_BLUE_STRINGSET_MAX_LEN];\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aflatin.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afloader.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afloader.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n@@ -441,1 +441,1 @@\n-    FT_Memory  memory = module->root.library->memory;\n+    FT_Memory  memory = module->root.memory;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afmodule.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afranges.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afranges.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afscript.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afshaper.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afstyles.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/aftypes.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afws-decl.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/autofit\/afws-iter.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2023 by\n+ * Copyright (C) 2008-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftadvanc.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2023 by\n+ * Copyright (C) 2008-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbase.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -492,1 +492,1 @@\n-    if ( outline->n_points == 0 || outline->n_contours <= 0 )\n+    if ( outline->n_points == 0 || outline->n_contours == 0 )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbbox.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftbitmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -72,7 +72,9 @@\n-#define FT_MOVE_SIGN( x, x_unsigned, s ) \\\n-  FT_BEGIN_STMNT                         \\\n-    if ( x < 0 )                         \\\n-    {                                    \\\n-      x_unsigned = 0U - (x_unsigned);    \\\n-      s          = -s;                   \\\n-    }                                    \\\n+#define FT_MOVE_SIGN( utype, x, x_unsigned, s ) \\\n+  FT_BEGIN_STMNT                                \\\n+    if ( x < 0 )                                \\\n+    {                                           \\\n+      x_unsigned = 0U - (utype)x;               \\\n+      s          = -s;                          \\\n+    }                                           \\\n+    else                                        \\\n+      x_unsigned = (utype)x;                    \\\n@@ -182,7 +184,3 @@\n-    a = (FT_UInt64)a_;\n-    b = (FT_UInt64)b_;\n-    c = (FT_UInt64)c_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n-    FT_MOVE_SIGN( c_, c, s );\n+    FT_MOVE_SIGN( FT_UInt64, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt64, b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt64, c_, c, s );\n@@ -211,7 +209,3 @@\n-    a = (FT_UInt64)a_;\n-    b = (FT_UInt64)b_;\n-    c = (FT_UInt64)c_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n-    FT_MOVE_SIGN( c_, c, s );\n+    FT_MOVE_SIGN( FT_UInt64, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt64, b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt64, c_, c, s );\n@@ -260,5 +254,2 @@\n-    a = (FT_UInt64)a_;\n-    b = (FT_UInt64)b_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt64, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt64, b_, b, s );\n@@ -425,7 +416,3 @@\n-    a = (FT_UInt32)a_;\n-    b = (FT_UInt32)b_;\n-    c = (FT_UInt32)c_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n-    FT_MOVE_SIGN( c_, c, s );\n+    FT_MOVE_SIGN( FT_UInt32, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt32, b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt32, c_, c, s );\n@@ -473,7 +460,3 @@\n-    a = (FT_UInt32)a_;\n-    b = (FT_UInt32)b_;\n-    c = (FT_UInt32)c_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n-    FT_MOVE_SIGN( c_, c, s );\n+    FT_MOVE_SIGN( FT_UInt32, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt32, b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt32, c_, c, s );\n@@ -578,5 +561,2 @@\n-    a = (FT_UInt32)a_;\n-    b = (FT_UInt32)b_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt32, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt32, b_, b, s );\n@@ -617,5 +597,2 @@\n-    a = (FT_UInt32)a_;\n-    b = (FT_UInt32)b_;\n-\n-    FT_MOVE_SIGN( a_, a, s );\n-    FT_MOVE_SIGN( b_, b, s );\n+    FT_MOVE_SIGN( FT_UInt32, a_, a, s );\n+    FT_MOVE_SIGN( FT_UInt32, b_, b, s );\n@@ -832,5 +809,2 @@\n-    x = (FT_UInt32)x_;\n-    y = (FT_UInt32)y_;\n-\n-    FT_MOVE_SIGN( x_, x, sx );\n-    FT_MOVE_SIGN( y_, y, sy );\n+    FT_MOVE_SIGN( FT_UInt32, x_, x, sx );\n+    FT_MOVE_SIGN( FT_UInt32, y_, y, sy );\n@@ -916,2 +890,0 @@\n-#if 0\n-\n@@ -920,2 +892,2 @@\n-  FT_BASE_DEF( FT_Int32 )\n-  FT_SqrtFixed( FT_Int32  x )\n+  FT_BASE_DEF( FT_UInt32 )\n+  FT_SqrtFixed( FT_UInt32  v )\n@@ -923,3 +895,2 @@\n-    FT_UInt32  root, rem_hi, rem_lo, test_div;\n-    FT_Int     count;\n-\n+    if ( v == 0 )\n+      return 0;\n@@ -927,1 +898,1 @@\n-    root = 0;\n+#ifndef FT_INT64\n@@ -929,1 +900,6 @@\n-    if ( x > 0 )\n+    \/* Algorithm by Christophe Meessen (1993) with overflow fixed and     *\/\n+    \/* rounding added.  Any unsigned fixed 16.16 argument is acceptable.  *\/\n+    \/* However, this algorithm is slower than the Babylonian method with  *\/\n+    \/* a good initial guess.  We only use it for large 32-bit values when *\/\n+    \/* 64-bit computations are not desirable.                             *\/\n+    else if ( v > 0x10000U )\n@@ -931,3 +907,6 @@\n-      rem_hi = 0;\n-      rem_lo = (FT_UInt32)x;\n-      count  = 24;\n+      FT_UInt32  r = v >> 1;\n+      FT_UInt32  q = ( v & 1 ) << 15;\n+      FT_UInt32  b = 0x20000000;\n+      FT_UInt32  t;\n+\n+\n@@ -936,6 +915,2 @@\n-        rem_hi   = ( rem_hi << 2 ) | ( rem_lo >> 30 );\n-        rem_lo <<= 2;\n-        root   <<= 1;\n-        test_div = ( root << 1 ) + 1;\n-\n-        if ( rem_hi >= test_div )\n+        t = q + b;\n+        if ( r >= t )\n@@ -943,2 +918,2 @@\n-          rem_hi -= test_div;\n-          root   += 1;\n+          r -= t;\n+          q  = t + b;  \/* equivalent to q += 2*b *\/\n@@ -946,1 +921,6 @@\n-      } while ( --count );\n+        r <<= 1;\n+        b >>= 1;\n+\n+      } while ( b > 0x10 );  \/* exactly 25 cycles *\/\n+\n+      return ( q + 0x40 ) >> 7;\n@@ -948,0 +928,3 @@\n+    else\n+    {\n+      FT_UInt32  r = ( v << 16 ) - 1;\n@@ -949,2 +932,1 @@\n-    return (FT_Int32)root;\n-  }\n+#else \/* FT_INT64 *\/\n@@ -952,1 +934,21 @@\n-#endif \/* 0 *\/\n+    else\n+    {\n+      FT_UInt64  r = ( (FT_UInt64)v << 16 ) - 1;\n+\n+#endif \/* FT_INT64 *\/\n+\n+      FT_UInt32  q = 1 << ( ( 17 + FT_MSB( v ) ) >> 1 );\n+      FT_UInt32  t;\n+\n+\n+      \/* Babylonian method with rounded-up division *\/\n+      do\n+      {\n+        t = q;\n+        q = ( t + (FT_UInt32)( r \/ t ) + 1 ) >> 1;\n+\n+      } while ( q != t );  \/* less than 6 cycles *\/\n+\n+      return q;\n+    }\n+  }\n@@ -1097,5 +1099,2 @@\n-      scalar = (FT_UInt32)s[i];\n-      factor = (FT_UInt32)f[i];\n-\n-      FT_MOVE_SIGN( s[i], scalar, sign );\n-      FT_MOVE_SIGN( f[i], factor, sign );\n+      FT_MOVE_SIGN( FT_UInt32, s[i], scalar, sign );\n+      FT_MOVE_SIGN( FT_UInt32, f[i], factor, sign );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcalc.c","additions":84,"deletions":85,"binary":false,"changes":169,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcid.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftcolor.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdbgmem.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftdebug.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfntfmt.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2008-2023 by\n+ * Copyright (C) 2008-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftfstype.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgasp.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n@@ -358,6 +358,3 @@\n-    FT_GlyphLoad  base;\n-    FT_GlyphLoad  current;\n-\n-    FT_Int        n_curr_contours;\n-    FT_Int        n_base_points;\n-    FT_Int        n;\n+    FT_Outline*  base;\n+    FT_Outline*  current;\n+    FT_Int       n;\n@@ -369,5 +366,2 @@\n-    base    = &loader->base;\n-    current = &loader->current;\n-\n-    n_curr_contours = current->outline.n_contours;\n-    n_base_points   = base->outline.n_points;\n+    base    = &loader->base.outline;\n+    current = &loader->current.outline;\n@@ -375,4 +369,3 @@\n-    base->outline.n_points =\n-      (short)( base->outline.n_points + current->outline.n_points );\n-    base->outline.n_contours =\n-      (short)( base->outline.n_contours + current->outline.n_contours );\n+    \/* adjust contours count in newest outline *\/\n+    for ( n = 0; n < current->n_contours; n++ )\n+      current->contours[n] += base->n_points;\n@@ -380,1 +373,2 @@\n-    base->num_subglyphs += current->num_subglyphs;\n+    base->n_points   += current->n_points;\n+    base->n_contours += current->n_contours;\n@@ -382,4 +376,1 @@\n-    \/* adjust contours count in newest outline *\/\n-    for ( n = 0; n < n_curr_contours; n++ )\n-      current->outline.contours[n] =\n-        (short)( current->outline.contours[n] + n_base_points );\n+    loader->base.num_subglyphs += loader->current.num_subglyphs;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftgloadr.c","additions":12,"deletions":21,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftglyph.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftinit.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftlcdfil.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -11,1 +11,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -815,0 +815,1 @@\n+    FT_Long        count;\n@@ -824,0 +825,1 @@\n+    res_index        = 1;\n@@ -825,1 +827,2 @@\n-    for ( res_index = 1; ; res_index++ )\n+    count            = face_index;\n+    while ( count >= 0 )\n@@ -837,2 +840,2 @@\n-      if ( 0 <= face_index && face_index < num_faces_in_fond && error )\n-        error = FT_New_Face_From_FOND( library, fond, face_index, aface );\n+      if ( count < num_faces_in_fond )\n+        error = FT_New_Face_From_FOND( library, fond, count, aface );\n@@ -840,1 +843,2 @@\n-      face_index -= num_faces_in_fond;\n+      res_index++;\n+      count -= num_faces_in_fond;\n@@ -844,0 +848,1 @@\n+\n@@ -845,1 +850,5 @@\n-      (*aface)->num_faces = num_faces_in_res;\n+    {\n+      (*aface)->num_faces  = num_faces_in_res;\n+      (*aface)->face_index = face_index;\n+    }\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmac.c","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftmm.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -2305,1 +2305,4 @@\n-        (*aface)->num_faces = count;\n+      {\n+        (*aface)->num_faces  = count;\n+        (*aface)->face_index = face_index_internal;\n+      }\n@@ -5794,1 +5797,1 @@\n-    if ( sfnt->get_colr_layer )\n+    if ( sfnt->get_colr_glyph_paint )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftobjs.c","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -56,1 +56,1 @@\n-    char*       tags;\n+    FT_Byte*    tags;\n@@ -335,2 +335,2 @@\n-    anoutline->n_points    = (FT_Short)numPoints;\n-    anoutline->n_contours  = (FT_Short)numContours;\n+    anoutline->n_points    = (FT_UShort)numPoints;\n+    anoutline->n_contours  = (FT_UShort)numContours;\n@@ -362,0 +362,2 @@\n+      FT_TRACE5(( \"FT_Outline_Check: contours = %d, points = %d\\n\",\n+                  n_contours, n_points ));\n@@ -367,1 +369,1 @@\n-      if ( n_points <= 0 || n_contours <= 0 )\n+      if ( n_points == 0 || n_contours == 0 )\n@@ -579,2 +581,2 @@\n-        char*  p = outline->tags + first;\n-        char*  q = outline->tags + last;\n+        FT_Byte*  p = outline->tags + first;\n+        FT_Byte*  q = outline->tags + last;\n@@ -585,1 +587,1 @@\n-          char  swap;\n+          FT_Byte  swap;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftoutln.c","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2007-2023 by\n+ * Copyright (C) 2007-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpatent.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftpsprop.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftrfork.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsnames.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n@@ -766,1 +766,1 @@\n-          FT_UInt  len = fields->size;\n+          FT_Offset  len = fields->size;\n@@ -769,1 +769,1 @@\n-          if ( cursor + len > stream->limit )\n+          if ( len > (FT_Offset)( stream->limit - cursor ) )\n@@ -833,1 +833,1 @@\n-      \/* now, compute the signed value is necessary *\/\n+      \/* now, compute the signed value if necessary *\/\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstream.c","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n@@ -714,1 +714,1 @@\n-      FT_Byte*  write = (FT_Byte*)outline->tags + outline->n_points;\n+      FT_Byte*  write = outline->tags + outline->n_points;\n@@ -730,4 +730,4 @@\n-      FT_UInt    count = border->num_points;\n-      FT_Byte*   tags  = border->tags;\n-      FT_Short*  write = outline->contours + outline->n_contours;\n-      FT_Short   idx   = (FT_Short)outline->n_points;\n+      FT_UInt     count = border->num_points;\n+      FT_Byte*    tags  = border->tags;\n+      FT_UShort*  write = outline->contours + outline->n_contours;\n+      FT_UShort   idx   = outline->n_points;\n@@ -746,1 +746,1 @@\n-    outline->n_points += (short)border->num_points;\n+    outline->n_points += (FT_UShort)border->num_points;\n@@ -2053,1 +2053,1 @@\n-    char*       tags;\n+    FT_Byte*    tags;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftstroke.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsynth.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftsystem.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttrigon.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/fttype1.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/base\/ftutil.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffdrivr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cfferrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -1205,1 +1205,1 @@\n-          FT_Int16  start14, peak14, end14;\n+          FT_Int  start, peak, end;\n@@ -1208,3 +1208,3 @@\n-          if ( FT_READ_SHORT( start14 ) ||\n-               FT_READ_SHORT( peak14 )  ||\n-               FT_READ_SHORT( end14 )   )\n+          if ( FT_READ_SHORT( start ) ||\n+               FT_READ_SHORT( peak )  ||\n+               FT_READ_SHORT( end )   )\n@@ -1213,3 +1213,7 @@\n-          axis->startCoord = FT_fdot14ToFixed( start14 );\n-          axis->peakCoord  = FT_fdot14ToFixed( peak14 );\n-          axis->endCoord   = FT_fdot14ToFixed( end14 );\n+          \/* immediately tag invalid ranges with special peak = 0 *\/\n+          if ( ( start < 0 && end > 0 ) || start > peak || peak > end )\n+            peak = 0;\n+\n+          axis->startCoord = FT_fdot14ToFixed( start );\n+          axis->peakCoord  = FT_fdot14ToFixed( peak );\n+          axis->endCoord   = FT_fdot14ToFixed( end );\n@@ -1382,4 +1386,4 @@\n-      *subFont->blend_top++ = (FT_Byte)( sum >> 24 );\n-      *subFont->blend_top++ = (FT_Byte)( sum >> 16 );\n-      *subFont->blend_top++ = (FT_Byte)( sum >>  8 );\n-      *subFont->blend_top++ = (FT_Byte)sum;\n+      *subFont->blend_top++ = (FT_Byte)( (FT_UInt32)sum >> 24 );\n+      *subFont->blend_top++ = (FT_Byte)( (FT_UInt32)sum >> 16 );\n+      *subFont->blend_top++ = (FT_Byte)( (FT_UInt32)sum >>  8 );\n+      *subFont->blend_top++ = (FT_Byte)( (FT_UInt32)sum );\n@@ -1498,8 +1502,0 @@\n-        FT_Fixed         axisScalar;\n-\n-\n-        \/* compute the scalar contribution of this axis; *\/\n-        \/* ignore invalid ranges                         *\/\n-        if ( axis->startCoord > axis->peakCoord ||\n-             axis->peakCoord > axis->endCoord   )\n-          axisScalar = FT_FIXED_ONE;\n@@ -1507,4 +1503,0 @@\n-        else if ( axis->startCoord < 0 &&\n-                  axis->endCoord > 0   &&\n-                  axis->peakCoord != 0 )\n-          axisScalar = FT_FIXED_ONE;\n@@ -1512,3 +1504,5 @@\n-        \/* peak of 0 means ignore this axis *\/\n-        else if ( axis->peakCoord == 0 )\n-          axisScalar = FT_FIXED_ONE;\n+        \/* compute the scalar contribution of this axis *\/\n+        \/* with peak of 0 used for invalid axes         *\/\n+        if ( axis->peakCoord == NDV[j] ||\n+             axis->peakCoord == 0      )\n+          continue;\n@@ -1517,6 +1511,2 @@\n-        else if ( NDV[j] < axis->startCoord ||\n-                  NDV[j] > axis->endCoord   )\n-          axisScalar = 0;\n-\n-        \/* calculate a proportional factor *\/\n-        else\n+        else if ( NDV[j] <= axis->startCoord ||\n+                  NDV[j] >= axis->endCoord   )\n@@ -1524,8 +1514,2 @@\n-          if ( NDV[j] == axis->peakCoord )\n-            axisScalar = FT_FIXED_ONE;\n-          else if ( NDV[j] < axis->peakCoord )\n-            axisScalar = FT_DivFix( NDV[j] - axis->startCoord,\n-                                    axis->peakCoord - axis->startCoord );\n-          else\n-            axisScalar = FT_DivFix( axis->endCoord - NDV[j],\n-                                    axis->endCoord - axis->peakCoord );\n+          blend->BV[master] = 0;\n+          break;\n@@ -1534,2 +1518,9 @@\n-        \/* take product of all the axis scalars *\/\n-        blend->BV[master] = FT_MulFix( blend->BV[master], axisScalar );\n+        \/* adjust proportionally *\/\n+        else if ( NDV[j] < axis->peakCoord )\n+          blend->BV[master] = FT_MulDiv( blend->BV[master],\n+                                         NDV[j] - axis->startCoord,\n+                                         axis->peakCoord - axis->startCoord );\n+        else   \/* NDV[j] > axis->peakCoord ) *\/\n+          blend->BV[master] = FT_MulDiv( blend->BV[master],\n+                                         axis->endCoord - NDV[j],\n+                                         axis->endCoord - axis->peakCoord );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.c","additions":34,"deletions":43,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -45,0 +45,2 @@\n+#define CFF_fixedToInt( x )                          \\\n+          ( (FT_Short)( ( (x) + 0x8000U ) >> 16 ) )\n@@ -127,1 +129,1 @@\n-      priv->blue_values[n] = (FT_Short)cpriv->blue_values[n];\n+      priv->blue_values[n] = CFF_fixedToInt( cpriv->blue_values[n] );\n@@ -131,1 +133,1 @@\n-      priv->other_blues[n] = (FT_Short)cpriv->other_blues[n];\n+      priv->other_blues[n] = CFF_fixedToInt( cpriv->other_blues[n] );\n@@ -135,1 +137,1 @@\n-      priv->family_blues[n] = (FT_Short)cpriv->family_blues[n];\n+      priv->family_blues[n] = CFF_fixedToInt( cpriv->family_blues[n] );\n@@ -139,1 +141,2 @@\n-      priv->family_other_blues[n] = (FT_Short)cpriv->family_other_blues[n];\n+      priv->family_other_blues[n] =\n+        CFF_fixedToInt( cpriv->family_other_blues[n] );\n@@ -424,3 +427,1 @@\n-    FT_Int32  idx             = 0;\n-    FT_Int32  length          = (FT_Int32)ft_strlen( name ) + 1;\n-    FT_Bool   continue_search = 1;\n+    FT_UInt32  i = 0, idx = 0;\n@@ -429,1 +430,8 @@\n-    while ( continue_search )\n+    \/* six ASCII uppercase letters followed by a plus sign *\/\n+    while ( 'A' <= name[i] && name[i++] <= 'Z' &&\n+            'A' <= name[i] && name[i++] <= 'Z' &&\n+            'A' <= name[i] && name[i++] <= 'Z' &&\n+            'A' <= name[i] && name[i++] <= 'Z' &&\n+            'A' <= name[i] && name[i++] <= 'Z' &&\n+            'A' <= name[i] && name[i++] <= 'Z' &&\n+                              name[i++] == '+' )\n@@ -431,18 +439,1 @@\n-      if ( length >= 7 && name[6] == '+' )\n-      {\n-        for ( idx = 0; idx < 6; idx++ )\n-        {\n-          \/* ASCII uppercase letters *\/\n-          if ( !( 'A' <= name[idx] && name[idx] <= 'Z' ) )\n-            continue_search = 0;\n-        }\n-\n-        if ( continue_search )\n-        {\n-          for ( idx = 7; idx < length; idx++ )\n-            name[idx - 7] = name[idx];\n-          length -= 7;\n-        }\n-      }\n-      else\n-        continue_search = 0;\n+      idx = i;\n@@ -450,0 +441,3 @@\n+\n+    if ( idx )\n+      FT_MEM_MOVE( name, name + idx, ft_strlen( name + idx ) + 1 );\n@@ -459,1 +453,2 @@\n-    FT_Int32  family_name_length, style_name_length;\n+    FT_String*        f = family_name + ft_strlen( family_name );\n+    const FT_String*  s =  style_name + ft_strlen(  style_name );\n@@ -462,2 +457,4 @@\n-    family_name_length = (FT_Int32)ft_strlen( family_name );\n-    style_name_length  = (FT_Int32)ft_strlen( style_name );\n+    \/* compare strings moving backwards *\/\n+    while ( s > style_name )\n+      if ( f == family_name || *--s != *--f )\n+        return;\n@@ -465,30 +462,5 @@\n-    if ( family_name_length > style_name_length )\n-    {\n-      FT_Int  idx;\n-\n-\n-      for ( idx = 1; idx <= style_name_length; idx++ )\n-      {\n-        if ( family_name[family_name_length - idx] !=\n-             style_name[style_name_length - idx] )\n-          break;\n-      }\n-\n-      if ( idx > style_name_length )\n-      {\n-        \/* family_name ends with style_name; remove it *\/\n-        idx = family_name_length - style_name_length - 1;\n-\n-        \/* also remove special characters     *\/\n-        \/* between real family name and style *\/\n-        while ( idx > 0                     &&\n-                ( family_name[idx] == '-' ||\n-                  family_name[idx] == ' ' ||\n-                  family_name[idx] == '_' ||\n-                  family_name[idx] == '+' ) )\n-          idx--;\n-\n-        if ( idx > 0 )\n-          family_name[idx + 1] = '\\0';\n-      }\n-    }\n+    \/* terminate and remove special characters *\/\n+    do\n+      *f = '\\0';\n+    while ( f-- > family_name                                    &&\n+            ( *f == '-' || *f == ' ' || *f == '_' || *f == '+' ) );\n@@ -725,2 +697,1 @@\n-        if ( FT_HAS_MULTIPLE_MASTERS( cffface ) &&\n-             instance_index > 0                 )\n+        if ( FT_HAS_MULTIPLE_MASTERS( cffface ) )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.c","additions":33,"deletions":62,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -504,4 +504,4 @@\n-      FT_Fixed val = ( ( ( (FT_UInt32)*( d[0] + 1 ) << 24 ) |\n-                         ( (FT_UInt32)*( d[0] + 2 ) << 16 ) |\n-                         ( (FT_UInt32)*( d[0] + 3 ) <<  8 ) |\n-                           (FT_UInt32)*( d[0] + 4 )         ) );\n+      FT_Fixed val = (FT_Int32)( ( ( (FT_UInt32)*( d[0] + 1 ) << 24 ) |\n+                                   ( (FT_UInt32)*( d[0] + 2 ) << 16 ) |\n+                                   ( (FT_UInt32)*( d[0] + 3 ) <<  8 ) |\n+                                     (FT_UInt32)*( d[0] + 4 )         ) );\n@@ -1034,0 +1034,4 @@\n+#define CFF_FIELD_DELTA( code, name, max, id )                        \\\n+          CFF_FIELD_DELTA_KIND( code, name, max, id, cff_kind_delta )\n+#define CFF_FIELD_DELTA_FIXED( code, name, max, id )                        \\\n+          CFF_FIELD_DELTA_KIND( code, name, max, id, cff_kind_delta_fixed )\n@@ -1037,1 +1041,1 @@\n-#undef  CFF_FIELD_DELTA\n+#undef  CFF_FIELD_DELTA_KIND\n@@ -1067,1 +1071,1 @@\n-            0, 0, 0                       \\\n+            NULL, 0, 0                    \\\n@@ -1070,9 +1074,9 @@\n-#define CFF_FIELD_DELTA( code, name, max, id ) \\\n-          {                                    \\\n-            cff_kind_delta,                    \\\n-            code | CFFCODE,                    \\\n-            FT_FIELD_OFFSET( name ),           \\\n-            FT_FIELD_SIZE_DELTA( name ),       \\\n-            0,                                 \\\n-            max,                               \\\n-            FT_FIELD_OFFSET( num_ ## name )    \\\n+#define CFF_FIELD_DELTA_KIND( code, name, max, id, kind ) \\\n+          {                                               \\\n+            kind,                                         \\\n+            code | CFFCODE,                               \\\n+            FT_FIELD_OFFSET( name ),                      \\\n+            FT_FIELD_SIZE_DELTA( name ),                  \\\n+            NULL,                                         \\\n+            max,                                          \\\n+            FT_FIELD_OFFSET( num_ ## name )               \\\n@@ -1086,1 +1090,1 @@\n-    { 0, 0, 0, 0, 0, 0, 0 }\n+    { 0, 0, 0, 0, NULL, 0, 0 }\n@@ -1120,1 +1124,1 @@\n-            0, 0, 0,                      \\\n+            NULL, 0, 0,                   \\\n@@ -1124,10 +1128,10 @@\n-#define CFF_FIELD_DELTA( code, name, max, id ) \\\n-          {                                    \\\n-            cff_kind_delta,                    \\\n-            code | CFFCODE,                    \\\n-            FT_FIELD_OFFSET( name ),           \\\n-            FT_FIELD_SIZE_DELTA( name ),       \\\n-            0,                                 \\\n-            max,                               \\\n-            FT_FIELD_OFFSET( num_ ## name ),   \\\n-            id                                 \\\n+#define CFF_FIELD_DELTA_KIND( code, name, max, id, kind ) \\\n+          {                                               \\\n+            kind,                                         \\\n+            code | CFFCODE,                               \\\n+            FT_FIELD_OFFSET( name ),                      \\\n+            FT_FIELD_SIZE_DELTA( name ),                  \\\n+            NULL,                                         \\\n+            max,                                          \\\n+            FT_FIELD_OFFSET( num_ ## name ),              \\\n+            id                                            \\\n@@ -1141,1 +1145,1 @@\n-    { 0, 0, 0, 0, 0, 0, 0, 0 }\n+    { 0, 0, 0, 0, NULL, 0, 0, NULL }\n@@ -1359,1 +1363,2 @@\n-            if ( field->kind != cff_kind_delta && num_args < 1 )\n+            if ( field->kind != cff_kind_delta                       &&\n+                 field->kind != cff_kind_delta_fixed && num_args < 1 )\n@@ -1467,0 +1472,32 @@\n+                  num_args--;\n+                }\n+\n+                FT_TRACE4(( \"]\\n\" ));\n+              }\n+              break;\n+\n+            case cff_kind_delta_fixed:\n+              {\n+                FT_Byte*   qcount = (FT_Byte*)parser->object +\n+                                      field->count_offset;\n+\n+                FT_Byte**  data = parser->stack;\n+\n+\n+                if ( num_args > field->array_max )\n+                  num_args = field->array_max;\n+\n+                FT_TRACE4(( \" [\" ));\n+\n+                \/* store count *\/\n+                *qcount = (FT_Byte)num_args;\n+\n+                val = 0;\n+                while ( num_args > 0 )\n+                {\n+                  val = ADD_LONG( val, cff_parse_fixed( parser, data++ ) );\n+                  *(FT_Long*)q = val;\n+\n+                  FT_TRACE4(( \" %f\\n\", (double)val \/ 65536 ));\n+\n+                  q += field->size;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.c","additions":67,"deletions":30,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -110,0 +110,1 @@\n+    cff_kind_delta_fixed,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cffparse.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -83,20 +83,20 @@\n-  CFF_FIELD_DELTA     ( 6,     blue_values, 14,        \"BlueValues\" )\n-  CFF_FIELD_DELTA     ( 7,     other_blues, 10,        \"OtherBlues\" )\n-  CFF_FIELD_DELTA     ( 8,     family_blues, 14,       \"FamilyBlues\" )\n-  CFF_FIELD_DELTA     ( 9,     family_other_blues, 10, \"FamilyOtherBlues\" )\n-  CFF_FIELD_FIXED_1000( 0x109, blue_scale,             \"BlueScale\" )\n-  CFF_FIELD_NUM       ( 0x10A, blue_shift,             \"BlueShift\" )\n-  CFF_FIELD_NUM       ( 0x10B, blue_fuzz,              \"BlueFuzz\" )\n-  CFF_FIELD_NUM       ( 10,    standard_width,         \"StdHW\" )\n-  CFF_FIELD_NUM       ( 11,    standard_height,        \"StdVW\" )\n-  CFF_FIELD_DELTA     ( 0x10C, snap_widths, 13,        \"StemSnapH\" )\n-  CFF_FIELD_DELTA     ( 0x10D, snap_heights, 13,       \"StemSnapV\" )\n-  CFF_FIELD_BOOL      ( 0x10E, force_bold,             \"ForceBold\" )\n-  CFF_FIELD_FIXED     ( 0x10F, force_bold_threshold,   \"ForceBoldThreshold\" )\n-  CFF_FIELD_NUM       ( 0x110, lenIV,                  \"lenIV\" )\n-  CFF_FIELD_NUM       ( 0x111, language_group,         \"LanguageGroup\" )\n-  CFF_FIELD_FIXED     ( 0x112, expansion_factor,       \"ExpansionFactor\" )\n-  CFF_FIELD_NUM       ( 0x113, initial_random_seed,    \"initialRandomSeed\" )\n-  CFF_FIELD_NUM       ( 19,    local_subrs_offset,     \"Subrs\" )\n-  CFF_FIELD_NUM       ( 20,    default_width,          \"defaultWidthX\" )\n-  CFF_FIELD_NUM       ( 21,    nominal_width,          \"nominalWidthX\" )\n+  CFF_FIELD_DELTA_FIXED( 6,     blue_values, 14,        \"BlueValues\" )\n+  CFF_FIELD_DELTA_FIXED( 7,     other_blues, 10,        \"OtherBlues\" )\n+  CFF_FIELD_DELTA_FIXED( 8,     family_blues, 14,       \"FamilyBlues\" )\n+  CFF_FIELD_DELTA_FIXED( 9,     family_other_blues, 10, \"FamilyOtherBlues\" )\n+  CFF_FIELD_FIXED_1000 ( 0x109, blue_scale,             \"BlueScale\" )\n+  CFF_FIELD_NUM        ( 0x10A, blue_shift,             \"BlueShift\" )\n+  CFF_FIELD_NUM        ( 0x10B, blue_fuzz,              \"BlueFuzz\" )\n+  CFF_FIELD_NUM        ( 10,    standard_width,         \"StdHW\" )\n+  CFF_FIELD_NUM        ( 11,    standard_height,        \"StdVW\" )\n+  CFF_FIELD_DELTA      ( 0x10C, snap_widths, 13,        \"StemSnapH\" )\n+  CFF_FIELD_DELTA      ( 0x10D, snap_heights, 13,       \"StemSnapV\" )\n+  CFF_FIELD_BOOL       ( 0x10E, force_bold,             \"ForceBold\" )\n+  CFF_FIELD_FIXED      ( 0x10F, force_bold_threshold,   \"ForceBoldThreshold\" )\n+  CFF_FIELD_NUM        ( 0x110, lenIV,                  \"lenIV\" )\n+  CFF_FIELD_NUM        ( 0x111, language_group,         \"LanguageGroup\" )\n+  CFF_FIELD_FIXED      ( 0x112, expansion_factor,       \"ExpansionFactor\" )\n+  CFF_FIELD_NUM        ( 0x113, initial_random_seed,    \"initialRandomSeed\" )\n+  CFF_FIELD_NUM        ( 19,    local_subrs_offset,     \"Subrs\" )\n+  CFF_FIELD_NUM        ( 20,    default_width,          \"defaultWidthX\" )\n+  CFF_FIELD_NUM        ( 21,    nominal_width,          \"nominalWidthX\" )\n@@ -132,16 +132,16 @@\n-  CFF_FIELD_DELTA     ( 6,     blue_values, 14,        \"BlueValues\" )\n-  CFF_FIELD_DELTA     ( 7,     other_blues, 10,        \"OtherBlues\" )\n-  CFF_FIELD_DELTA     ( 8,     family_blues, 14,       \"FamilyBlues\" )\n-  CFF_FIELD_DELTA     ( 9,     family_other_blues, 10, \"FamilyOtherBlues\" )\n-  CFF_FIELD_FIXED_1000( 0x109, blue_scale,             \"BlueScale\" )\n-  CFF_FIELD_NUM       ( 0x10A, blue_shift,             \"BlueShift\" )\n-  CFF_FIELD_NUM       ( 0x10B, blue_fuzz,              \"BlueFuzz\" )\n-  CFF_FIELD_NUM       ( 10,    standard_width,         \"StdHW\" )\n-  CFF_FIELD_NUM       ( 11,    standard_height,        \"StdVW\" )\n-  CFF_FIELD_DELTA     ( 0x10C, snap_widths, 13,        \"StemSnapH\" )\n-  CFF_FIELD_DELTA     ( 0x10D, snap_heights, 13,       \"StemSnapV\" )\n-  CFF_FIELD_NUM       ( 0x111, language_group,         \"LanguageGroup\" )\n-  CFF_FIELD_FIXED     ( 0x112, expansion_factor,       \"ExpansionFactor\" )\n-  CFF_FIELD_CALLBACK  ( 22,    vsindex,                \"vsindex\" )\n-  CFF_FIELD_BLEND     ( 23,                            \"blend\" )\n-  CFF_FIELD_NUM       ( 19,    local_subrs_offset,     \"Subrs\" )\n+  CFF_FIELD_DELTA_FIXED( 6,     blue_values, 14,        \"BlueValues\" )\n+  CFF_FIELD_DELTA_FIXED( 7,     other_blues, 10,        \"OtherBlues\" )\n+  CFF_FIELD_DELTA_FIXED( 8,     family_blues, 14,       \"FamilyBlues\" )\n+  CFF_FIELD_DELTA_FIXED( 9,     family_other_blues, 10, \"FamilyOtherBlues\" )\n+  CFF_FIELD_FIXED_1000 ( 0x109, blue_scale,             \"BlueScale\" )\n+  CFF_FIELD_NUM        ( 0x10A, blue_shift,             \"BlueShift\" )\n+  CFF_FIELD_NUM        ( 0x10B, blue_fuzz,              \"BlueFuzz\" )\n+  CFF_FIELD_NUM        ( 10,    standard_width,         \"StdHW\" )\n+  CFF_FIELD_NUM        ( 11,    standard_height,        \"StdVW\" )\n+  CFF_FIELD_DELTA      ( 0x10C, snap_widths, 13,        \"StemSnapH\" )\n+  CFF_FIELD_DELTA      ( 0x10D, snap_heights, 13,       \"StemSnapV\" )\n+  CFF_FIELD_NUM        ( 0x111, language_group,         \"LanguageGroup\" )\n+  CFF_FIELD_FIXED      ( 0x112, expansion_factor,       \"ExpansionFactor\" )\n+  CFF_FIELD_CALLBACK   ( 22,    vsindex,                \"vsindex\" )\n+  CFF_FIELD_BLEND      ( 23,                            \"blend\" )\n+  CFF_FIELD_NUM        ( 19,    local_subrs_offset,     \"Subrs\" )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cff\/cfftoken.h","additions":37,"deletions":37,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/ciderrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -391,1 +391,1 @@\n-    { 0, T1_FIELD_LOCATION_CID_INFO, T1_FIELD_TYPE_NONE, 0, 0, 0, 0, 0, 0 }\n+    T1_FIELD_ZERO\n@@ -472,1 +472,1 @@\n-            for (;;)\n+            while ( keyword->len )\n@@ -474,1 +474,1 @@\n-              FT_Byte*  name;\n+              FT_Byte*  name = (FT_Byte*)keyword->ident;\n@@ -477,6 +477,2 @@\n-              name = (FT_Byte*)keyword->ident;\n-              if ( !name )\n-                break;\n-\n-              if ( cur[0] == name[0]                     &&\n-                   len == ft_strlen( (const char*)name ) )\n+              if ( keyword->len == len              &&\n+                   ft_memcmp( cur, name, len ) == 0 )\n@@ -484,17 +480,7 @@\n-                FT_UInt  n;\n-\n-\n-                for ( n = 1; n < len; n++ )\n-                  if ( cur[n] != name[n] )\n-                    break;\n-\n-                if ( n >= len )\n-                {\n-                  \/* we found it - run the parsing callback *\/\n-                  parser->root.error = cid_load_keyword( face,\n-                                                         loader,\n-                                                         keyword );\n-                  if ( parser->root.error )\n-                    return parser->root.error;\n-                  break;\n-                }\n+                \/* we found it - run the parsing callback *\/\n+                parser->root.error = cid_load_keyword( face,\n+                                                       loader,\n+                                                       keyword );\n+                if ( parser->root.error )\n+                  return parser->root.error;\n+                break;\n@@ -502,0 +488,1 @@\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.c","additions":14,"deletions":27,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -93,3 +93,5 @@\n-  Again:\n-    \/* now, read the rest of the file until we find *\/\n-    \/* `StartData' or `\/sfnts'                      *\/\n+    if ( !stream->read ) {\n+      \/* just parse memory-based streams *\/\n+      offset = stream->size;\n+    }\n+    else\n@@ -97,0 +99,3 @@\n+      \/* Find the last `StartData` or `\/sfnts`.  The parser requires *\/\n+      \/* contiguous memory; attempt to pin as little as necessary.   *\/\n+\n@@ -122,1 +127,2 @@\n-      for ( offset = FT_STREAM_POS(); ; offset += 256 )\n+      offset = 0;\n+      while ( 1 )\n@@ -130,1 +136,1 @@\n-        if ( FT_STREAM_READ( p, read_len ) )\n+        if ( read_len && FT_STREAM_READ( p, read_len ) )\n@@ -144,2 +150,2 @@\n-            offset += (FT_ULong)( p - buffer ) + STARTDATA_LEN + 1;\n-            goto Found;\n+            offset = FT_STREAM_POS() - read_len - read_offset\n+                     + (FT_ULong)( p - buffer ) + STARTDATA_LEN + 1;\n@@ -150,2 +156,2 @@\n-            offset += (FT_ULong)( p - buffer ) + SFNTS_LEN + 1;\n-            goto Found;\n+            offset = FT_STREAM_POS() - read_len - read_offset\n+                     + (FT_ULong)( p - buffer ) + SFNTS_LEN + 1;\n@@ -155,1 +161,1 @@\n-        if ( read_offset + read_len < STARTDATA_LEN )\n+        if ( read_offset + read_len <= STARTDATA_LEN )\n@@ -157,1 +163,4 @@\n-          FT_TRACE2(( \"cid_parser_new: no `StartData' keyword found\\n\" ));\n+          if ( offset )\n+            goto Found;\n+\n+          FT_TRACE2(( \"cid_parser_new: no `StartData` keyword found\\n\" ));\n@@ -174,3 +183,3 @@\n-    \/* We have found the start of the binary data or the `\/sfnts' token. *\/\n-    \/* Now rewind and extract the frame corresponding to this PostScript *\/\n-    \/* section.                                                          *\/\n+    \/* We have found an efficient range to look for the binary data or    *\/\n+    \/* `\/sfnts' token.  Now rewind and extract the frame corresponding to *\/\n+    \/* this PostScript section.                                           *\/\n@@ -190,2 +199,2 @@\n-    \/* Finally, we check whether `StartData' or `\/sfnts' was real --  *\/\n-    \/* it could be in a comment or string.  We also get the arguments *\/\n+    \/* Find the first real `StartData' or `\/sfnts' -- the last one    *\/\n+    \/* could be in a comment or string.  We also get the arguments    *\/\n@@ -219,0 +228,1 @@\n+        FT_ULong     found_offset;\n@@ -237,0 +247,18 @@\n+        \/* set the real values for the parser, if different *\/\n+        found_offset = (FT_ULong)( cur - parser->postscript )\n+                       + STARTDATA_LEN + 1;\n+        if ( found_offset != offset )\n+        {\n+          FT_FRAME_RELEASE( parser->postscript );\n+\n+          ps_len = found_offset - base_offset;\n+          if ( FT_STREAM_SEEK( base_offset )                  ||\n+               FT_FRAME_EXTRACT( ps_len, parser->postscript ) )\n+            goto Exit;\n+\n+          parser->data_offset    = found_offset;\n+          parser->postscript_len = ps_len;\n+          parser->root.base      = parser->postscript;\n+          parser->root.cursor    = parser->postscript;\n+          parser->root.limit     = parser->root.cursor + ps_len;\n+        }\n@@ -254,5 +282,2 @@\n-    \/* we haven't found the correct `StartData'; go back and continue *\/\n-    \/* searching                                                      *\/\n-    FT_FRAME_RELEASE( parser->postscript );\n-    if ( !FT_STREAM_SEEK( offset ) )\n-      goto Again;\n+    FT_TRACE2(( \"cid_parser_new: no `StartData` token found\\n\" ));\n+    error = FT_THROW( Invalid_File_Format );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.c","additions":47,"deletions":22,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidparse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/cid\/cidtoken.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/afmparse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n@@ -20,0 +20,1 @@\n+#include <freetype\/internal\/ftcalc.h>\n@@ -1755,1 +1756,1 @@\n-            args[0] = 46341;\n+            args[0] = 0xB504F4L;    \/* sqrt( 32768.0044 ) *\/\n@@ -1757,14 +1758,1 @@\n-          {\n-            FT_Fixed  root = args[0];\n-            FT_Fixed  new_root;\n-\n-\n-            for (;;)\n-            {\n-              new_root = ( root + FT_DivFix( args[0], root ) + 1 ) >> 1;\n-              if ( new_root == root )\n-                break;\n-              root = new_root;\n-            }\n-            args[0] = new_root;\n-          }\n+            args[0] = (FT_Fixed)FT_SqrtFixed( args[0] );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.c","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2017-2023 by\n+ * Copyright (C) 2017-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/cffdecode.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxerr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psauxmod.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,8 +57,0 @@\n-  \/*\n-   * For blue values, the FreeType parser produces an array of integers,\n-   * while the Adobe CFF engine produces an array of fixed.\n-   * Define a macro to convert FreeType to fixed.\n-   *\/\n-#define cf2_blueToFixed( x )  cf2_intToFixed( x )\n-\n-\n@@ -81,4 +73,4 @@\n-    FT_Pos*  blueValues;\n-    FT_Pos*  otherBlues;\n-    FT_Pos*  familyBlues;\n-    FT_Pos*  familyOtherBlues;\n+    FT_Fixed*  blueValues;\n+    FT_Fixed*  otherBlues;\n+    FT_Fixed*  familyBlues;\n+    FT_Fixed*  familyOtherBlues;\n@@ -141,7 +133,7 @@\n-    if ( cf2_getLanguageGroup( decoder ) == 1                   &&\n-         ( numBlueValues == 0                                 ||\n-           ( numBlueValues == 4                             &&\n-             cf2_blueToFixed( blueValues[0] ) < emBoxBottom &&\n-             cf2_blueToFixed( blueValues[1] ) < emBoxBottom &&\n-             cf2_blueToFixed( blueValues[2] ) > emBoxTop    &&\n-             cf2_blueToFixed( blueValues[3] ) > emBoxTop    ) ) )\n+    if ( cf2_getLanguageGroup( decoder ) == 1     &&\n+         ( numBlueValues == 0                   ||\n+           ( numBlueValues == 4               &&\n+             blueValues[0] < emBoxBottom      &&\n+             blueValues[1] < emBoxBottom      &&\n+             blueValues[2] > emBoxTop         &&\n+             blueValues[3] > emBoxTop         ) ) )\n@@ -192,4 +184,2 @@\n-      blues->zone[blues->count].csBottomEdge =\n-        cf2_blueToFixed( blueValues[i] );\n-      blues->zone[blues->count].csTopEdge =\n-        cf2_blueToFixed( blueValues[i + 1] );\n+      blues->zone[blues->count].csBottomEdge = blueValues[i];\n+      blues->zone[blues->count].csTopEdge    = blueValues[i + 1];\n@@ -241,4 +231,2 @@\n-      blues->zone[blues->count].csBottomEdge =\n-        cf2_blueToFixed( otherBlues[i] );\n-      blues->zone[blues->count].csTopEdge =\n-        cf2_blueToFixed( otherBlues[i + 1] );\n+      blues->zone[blues->count].csBottomEdge = otherBlues[i];\n+      blues->zone[blues->count].csTopEdge    = otherBlues[i + 1];\n@@ -302,1 +290,1 @@\n-          flatFamilyEdge = cf2_blueToFixed( familyOtherBlues[j + 1] );\n+          flatFamilyEdge = familyOtherBlues[j + 1];\n@@ -320,1 +308,1 @@\n-          flatFamilyEdge = cf2_blueToFixed( familyBlues[1] );\n+          flatFamilyEdge = familyBlues[1];\n@@ -340,1 +328,1 @@\n-          flatFamilyEdge = cf2_blueToFixed( familyBlues[j] );\n+          flatFamilyEdge = familyBlues[j];\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psblues.c","additions":18,"deletions":30,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psconv.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -569,1 +569,1 @@\n-                     FT_Pos*     *data )\n+                     FT_Fixed*   *data )\n@@ -574,1 +574,1 @@\n-    *data  = (FT_Pos*)\n+    *data  = (FT_Fixed*)\n@@ -582,1 +582,1 @@\n-                     FT_Pos*     *data )\n+                     FT_Fixed*   *data )\n@@ -587,1 +587,1 @@\n-    *data  = (FT_Pos*)\n+    *data  = (FT_Fixed*)\n@@ -595,1 +595,1 @@\n-                      FT_Pos*     *data )\n+                      FT_Fixed*   *data )\n@@ -600,1 +600,1 @@\n-    *data  = (FT_Pos*)\n+    *data  = (FT_Fixed*)\n@@ -608,1 +608,1 @@\n-                           FT_Pos*     *data )\n+                           FT_Fixed*   *data )\n@@ -613,1 +613,1 @@\n-    *data  = (FT_Pos*)\n+    *data  = (FT_Fixed*)\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psft.c","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-                     FT_Pos*     *data );\n+                     FT_Fixed*   *data );\n@@ -99,1 +99,1 @@\n-                     FT_Pos*     *data );\n+                     FT_Fixed*   *data );\n@@ -103,1 +103,1 @@\n-                      FT_Pos*     *data );\n+                      FT_Fixed*   *data );\n@@ -107,1 +107,1 @@\n-                           FT_Pos*     *data );\n+                           FT_Fixed*   *data );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psft.h","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include <freetype\/internal\/ftcalc.h>\n@@ -431,0 +432,2 @@\n+    FT_TRACE6(( \" (\" ));\n+\n@@ -445,0 +448,2 @@\n+      FT_TRACE6(( \"%f \", (double)sum \/ 65536 ));\n+\n@@ -449,0 +454,2 @@\n+    FT_TRACE6(( \"blended)\\n\" ));\n+\n@@ -737,1 +744,1 @@\n-          FT_TRACE4(( \" blend\\n\" ));\n+          FT_TRACE4(( \" blend\" ));\n@@ -2278,17 +2285,1 @@\n-                    {\n-                      \/* use a start value that doesn't make *\/\n-                      \/* the algorithm's addition overflow   *\/\n-                      FT_Fixed  root = arg < 10 ? arg : arg >> 1;\n-                      FT_Fixed  new_root;\n-\n-\n-                      \/* Babylonian method *\/\n-                      for (;;)\n-                      {\n-                        new_root = ( root + FT_DivFix( arg, root ) + 1 ) >> 1;\n-                        if ( new_root == root )\n-                          break;\n-                        root = new_root;\n-                      }\n-                      arg = new_root;\n-                    }\n+                      arg = (CF2_F16Dot16)FT_SqrtFixed( (FT_UInt32)arg );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psintrp.c","additions":9,"deletions":18,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -26,0 +26,1 @@\n+#include \"psft.h\"\n@@ -203,1 +204,3 @@\n-    FT_MEM_COPY( table->block + table->cursor, object, length );\n+    \/* length == 0 also implies a NULL destination, so skip the copy call *\/\n+    if ( length > 0 )\n+      FT_MEM_COPY( table->block + table->cursor, object, length );\n@@ -1627,1 +1630,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points;\n+      FT_Byte*    control = outline->tags   + outline->n_points;\n@@ -1680,2 +1683,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -1743,1 +1745,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points - 1;\n+      FT_Byte*    control = outline->tags   + outline->n_points - 1;\n@@ -1763,2 +1765,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -1902,1 +1903,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points;\n+      FT_Byte*    control = outline->tags   + outline->n_points;\n@@ -1962,2 +1963,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -2022,1 +2022,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points - 1;\n+      FT_Byte*    control = outline->tags   + outline->n_points - 1;\n@@ -2042,2 +2042,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -2191,1 +2190,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points;\n+      FT_Byte*    control = outline->tags   + outline->n_points;\n@@ -2270,2 +2269,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -2330,1 +2328,1 @@\n-      FT_Byte*    control = (FT_Byte*)outline->tags + outline->n_points - 1;\n+      FT_Byte*    control = outline->tags   + outline->n_points - 1;\n@@ -2350,2 +2348,1 @@\n-        outline->contours[outline->n_contours - 1] =\n-          (short)( outline->n_points - 1 );\n+        outline->contours[outline->n_contours - 1] = outline->n_points - 1;\n@@ -2466,1 +2463,1 @@\n-      cpriv->blue_values[n] = (FT_Pos)priv->blue_values[n];\n+      cpriv->blue_values[n] = cf2_intToFixed( priv->blue_values[n] );\n@@ -2470,1 +2467,1 @@\n-      cpriv->other_blues[n] = (FT_Pos)priv->other_blues[n];\n+      cpriv->other_blues[n] = cf2_intToFixed( priv->other_blues[n] );\n@@ -2474,1 +2471,1 @@\n-      cpriv->family_blues[n] = (FT_Pos)priv->family_blues[n];\n+      cpriv->family_blues[n] = cf2_intToFixed( priv->family_blues[n] );\n@@ -2478,1 +2475,2 @@\n-      cpriv->family_other_blues[n] = (FT_Pos)priv->family_other_blues[n];\n+      cpriv->family_other_blues[n] =\n+        cf2_intToFixed( priv->family_other_blues[n] );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.c","additions":22,"deletions":24,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/psobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1cmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psaux\/t1decode.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n@@ -1121,1 +1121,1 @@\n-    char*       tags  = glyph->outline->tags;\n+    FT_Byte*    tags  = glyph->outline->tags;\n@@ -1174,2 +1174,2 @@\n-    glyph->num_points   = (FT_UInt)outline->n_points;\n-    glyph->num_contours = (FT_UInt)outline->n_contours;\n+    glyph->num_points   = outline->n_points;\n+    glyph->num_contours = outline->n_contours;\n@@ -1189,1 +1189,1 @@\n-        next  = (FT_UInt)outline->contours[n] + 1;\n+        next  = outline->contours[n] + 1;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshalgo.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshalgo.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshglob.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshmod.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2003-2023 by\n+ * Copyright (C) 2003-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshnterr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n@@ -809,1 +809,1 @@\n-                 FT_Long*  stems )\n+                 FT_Pos*   stems )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/pshinter\/pshrec.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psmodule.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/psnamerr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2023 by\n+ * Copyright (C) 2005-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/psnames\/pstables.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 2005-2023 by\n+ * Copyright (C) 2005-2024 by\n@@ -95,21 +95,0 @@\n-  static FT_Long\n-  FT_MulDiv( FT_Long  a,\n-             FT_Long  b,\n-             FT_Long  c )\n-  {\n-    FT_Int   s;\n-    FT_Long  d;\n-\n-\n-    s = 1;\n-    if ( a < 0 ) { a = -a; s = -1; }\n-    if ( b < 0 ) { b = -b; s = -s; }\n-    if ( c < 0 ) { c = -c; s = -s; }\n-\n-    d = (FT_Long)( c > 0 ? ( (FT_Int64)a * b + ( c >> 1 ) ) \/ c\n-                         : 0x7FFFFFFFL );\n-\n-    return ( s > 0 ) ? d : -d;\n-  }\n-\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftmisc.h","additions":1,"deletions":22,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -66,2 +66,1 @@\n-#include <freetype\/internal\/ftcalc.h> \/* for FT_MulDiv and FT_MulDiv_No_Round *\/\n-#include <freetype\/ftoutln.h>         \/* for FT_Outline_Get_CBox              *\/\n+#include <freetype\/internal\/ftcalc.h> \/* for FT_MulDiv_No_Round *\/\n@@ -118,6 +117,6 @@\n-   *   Note that when all profiles have been generated, the function\n-   *   Finalize_Profile_Table() is used to record, for each profile, its\n-   *   bottom-most scanline as well as the scanline above its upmost\n-   *   boundary.  These positions are called `y-turns' because they (sort\n-   *   of) correspond to local extrema.  They are stored in a sorted list\n-   *   built from the top of the render pool as a downwards stack:\n+   *   Note that, for all generated profiles, the function End_Profile()\n+   *   is used to record all their bottom-most scanlines as well as the\n+   *   scanline above their upmost boundary.  These positions are called\n+   *   `y-turns' because they (sort of) correspond to local extrema.\n+   *   They are stored in a sorted list built from the top of the render\n+   *   pool as a downwards stack:\n@@ -139,1 +138,1 @@\n-   *   handles the situation properly.\n+   *   handles the situation by bisecting the job and restarting.\n@@ -255,1 +254,0 @@\n-#define SMulDiv           FT_MulDiv\n@@ -308,10 +306,0 @@\n-\n-  typedef union  Alignment_\n-  {\n-    Long    l;\n-    void*   p;\n-    void  (*f)(void);\n-\n-  } Alignment, *PAlignment;\n-\n-\n@@ -330,0 +318,1 @@\n+#define Dropout           0x40U\n@@ -348,1 +337,0 @@\n-    FT_F26Dot6  X;           \/* current coordinate during sweep          *\/\n@@ -350,1 +338,6 @@\n-    PLong       offset;      \/* start of profile's data in render pool   *\/\n+    PProfile    next;        \/* next profile in same contour, used       *\/\n+                             \/* during drop-out control                  *\/\n+    Int         offset;      \/* bottom or currently scanned array index  *\/\n+    Int         height;      \/* profile's height in scanlines            *\/\n+    Int         start;       \/* profile's starting scanline, also use    *\/\n+                             \/* as activation counter                    *\/\n@@ -355,2 +348,1 @@\n-    Long        height;      \/* profile's height in scanlines            *\/\n-    Long        start;       \/* profile's starting scanline              *\/\n+                             \/* Bit 6: dropout detected                  *\/\n@@ -358,5 +350,3 @@\n-    Int         countL;      \/* number of lines to step before this      *\/\n-                             \/* profile becomes drawable                 *\/\n-\n-    PProfile    next;        \/* next profile in same contour, used       *\/\n-                             \/* during drop-out control                  *\/\n+    FT_F26Dot6  X;           \/* current coordinate during sweep          *\/\n+    Long        x[1];        \/* actually variable array of scanline      *\/\n+                             \/* intersections with `height` elements     *\/\n@@ -369,4 +359,0 @@\n-#define AlignProfileSize \\\n-  ( ( sizeof ( TProfile ) + sizeof ( Alignment ) - 1 ) \/ sizeof ( Long ) )\n-\n-\n@@ -410,2 +396,2 @@\n-  Function_Sweep_Init( RAS_ARGS Short  min,\n-                                Short  max );\n+  Function_Sweep_Init( RAS_ARGS Int  min,\n+                                Int  max );\n@@ -414,1 +400,1 @@\n-  Function_Sweep_Span( RAS_ARGS Short       y,\n+  Function_Sweep_Span( RAS_ARGS Int         y,\n@@ -416,3 +402,1 @@\n-                                FT_F26Dot6  x2,\n-                                PProfile    left,\n-                                PProfile    right );\n+                                FT_F26Dot6  x2 );\n@@ -444,2 +428,1 @@\n-  \/* To mimick Windows, symmetric cases break down indepenently of the  *\/\n-  \/* precision.                                                         *\/\n+  \/* To mimic Windows, symmetric cases do not depend on the precision.  *\/\n@@ -465,1 +448,0 @@\n-    Int         precision_jitter;\n@@ -474,2 +456,0 @@\n-    Int         numTurns;           \/* number of Y-turns in outline        *\/\n-\n@@ -478,4 +458,0 @@\n-    UShort      bWidth;             \/* target bitmap width                 *\/\n-    PByte       bOrigin;            \/* target bitmap bottom-left origin    *\/\n-    PByte       bLine;              \/* target bitmap current line          *\/\n-\n@@ -486,0 +462,1 @@\n+    Int         numTurns;           \/* number of Y-turns in outline        *\/\n@@ -487,5 +464,0 @@\n-    Bool        fresh;              \/* signals a fresh new profile which   *\/\n-                                    \/* `start' field must be completed     *\/\n-    Bool        joint;              \/* signals that the last arc ended     *\/\n-                                    \/* exactly on a scanline.  Allows      *\/\n-                                    \/* removal of doublets                 *\/\n@@ -499,1 +471,0 @@\n-    FT_Bitmap   target;             \/* description of target bit\/pixmap    *\/\n@@ -502,0 +473,6 @@\n+    Int         bTop;               \/* target bitmap max line  index       *\/\n+    Int         bRight;             \/* target bitmap rightmost index       *\/\n+    Int         bPitch;             \/* target bitmap pitch                 *\/\n+    PByte       bOrigin;            \/* target bitmap bottom-left origin    *\/\n+    PByte       bLine;              \/* target bitmap current line          *\/\n+\n@@ -566,8 +543,0 @@\n-     * `precision_jitter' is an epsilon threshold used in\n-     * `Vertical_Sweep_Span' to deal with small imperfections in the Bezier\n-     * decomposition (after all, we are working with approximations only);\n-     * it avoids switching on additional pixels which would cause artifacts\n-     * otherwise.\n-     *\n-     * The value of `precision_jitter' has been determined heuristically.\n-     *\n@@ -580,1 +549,0 @@\n-      ras.precision_jitter = 30;\n@@ -586,1 +554,0 @@\n-      ras.precision_jitter = 2;\n@@ -589,2 +556,0 @@\n-    FT_TRACE6(( \"Set_High_Precision(%s)\\n\", High ? \"true\" : \"false\" ));\n-\n@@ -597,0 +562,57 @@\n+  \/**************************************************************************\n+   *\n+   * @Function:\n+   *   Insert_Y_Turn\n+   *\n+   * @Description:\n+   *   Insert a salient into the sorted list placed on top of the render\n+   *   pool.\n+   *\n+   * @Input:\n+   *   New y scanline position.\n+   *\n+   * @Return:\n+   *   SUCCESS on success.  FAILURE in case of overflow.\n+   *\/\n+  static Bool\n+  Insert_Y_Turns( RAS_ARGS Int  y,\n+                           Int  top )\n+  {\n+    Int    n       = ras.numTurns;\n+    PLong  y_turns = ras.maxBuff;\n+\n+\n+    \/* update top value *\/\n+    if ( n == 0 || top > y_turns[n] )\n+      y_turns[n] = top;\n+\n+    \/* look for first y value that is <= *\/\n+    while ( n-- && y < y_turns[n] )\n+      ;\n+\n+    \/* if it is <, simply insert it, ignore if == *\/\n+    if ( n < 0 || y > y_turns[n] )\n+    {\n+      ras.maxBuff--;\n+      if ( ras.maxBuff <= ras.top )\n+      {\n+        ras.error = FT_THROW( Raster_Overflow );\n+        return FAILURE;\n+      }\n+\n+      do\n+      {\n+        Int  y2 = (Int)y_turns[n];\n+\n+\n+        y_turns[n] = y;\n+        y = y2;\n+      } while ( n-- >= 0 );\n+\n+      ras.numTurns++;\n+    }\n+\n+    return SUCCESS;\n+  }\n+\n+\n@@ -609,4 +631,0 @@\n-   *   overshoot ::\n-   *     Whether the profile's unrounded start position\n-   *     differs by at least a half pixel.\n-   *\n@@ -618,2 +636,1 @@\n-  New_Profile( RAS_ARGS TStates  aState,\n-                        Bool     overshoot )\n+  New_Profile( RAS_ARGS TStates  aState )\n@@ -621,1 +638,4 @@\n-    if ( !ras.fProfile )\n+    Long  e;\n+\n+\n+    if ( !ras.cProfile || ras.cProfile->height )\n@@ -624,3 +644,1 @@\n-      ras.fProfile  = ras.cProfile;\n-      ras.top      += AlignProfileSize;\n-    }\n+      ras.top       = ras.cProfile->x;\n@@ -628,4 +646,8 @@\n-    if ( ras.top >= ras.maxBuff )\n-    {\n-      ras.error = FT_THROW( Raster_Overflow );\n-      return FAILURE;\n+      if ( ras.top >= ras.maxBuff )\n+      {\n+        FT_TRACE1(( \"overflow in New_Profile\\n\" ));\n+        ras.error = FT_THROW( Raster_Overflow );\n+        return FAILURE;\n+      }\n+\n+      ras.cProfile->height = 0;\n@@ -634,5 +656,0 @@\n-    ras.cProfile->start  = 0;\n-    ras.cProfile->height = 0;\n-    ras.cProfile->offset = ras.top;\n-    ras.cProfile->link   = (PProfile)0;\n-    ras.cProfile->next   = (PProfile)0;\n@@ -645,1 +662,1 @@\n-      if ( overshoot )\n+      if ( IS_BOTTOM_OVERSHOOT( ras.lastY ) )\n@@ -648,1 +665,1 @@\n-      FT_TRACE6(( \"  new ascending profile = %p\\n\", (void *)ras.cProfile ));\n+      e = CEILING( ras.lastY );\n@@ -652,1 +669,1 @@\n-      if ( overshoot )\n+      if ( IS_TOP_OVERSHOOT( ras.lastY ) )\n@@ -654,1 +671,2 @@\n-      FT_TRACE6(( \"  new descending profile = %p\\n\", (void *)ras.cProfile ));\n+\n+      e = FLOOR( ras.lastY );\n@@ -663,2 +681,12 @@\n-    if ( !ras.gProfile )\n-      ras.gProfile = ras.cProfile;\n+    if ( e > ras.maxY )\n+      e = ras.maxY;\n+    if ( e < ras.minY )\n+      e = ras.minY;\n+    ras.cProfile->start = (Int)TRUNC( e );\n+\n+    FT_TRACE7(( \"  new %s profile = %p, start = %d\\n\",\n+                aState == Ascending_State ? \"ascending\" : \"descending\",\n+                (void *)ras.cProfile, ras.cProfile->start ));\n+\n+    if ( ras.lastY == e )\n+      *ras.top++ = ras.lastX;\n@@ -667,2 +695,0 @@\n-    ras.fresh = TRUE;\n-    ras.joint = FALSE;\n@@ -680,6 +706,1 @@\n-   *   Finalize the current profile.\n-   *\n-   * @Input:\n-   *   overshoot ::\n-   *     Whether the profile's unrounded end position differs\n-   *     by at least a half pixel.\n+   *   Finalize the current profile and record y-turns.\n@@ -691,1 +712,1 @@\n-  End_Profile( RAS_ARGS Bool  overshoot )\n+  End_Profile( RAS_ARG )\n@@ -693,1 +714,3 @@\n-    Long  h;\n+    PProfile  p = ras.cProfile;\n+    Int       h = (Int)( ras.top - p->x );\n+    Int       bottom, top;\n@@ -696,2 +719,0 @@\n-    h = (Long)( ras.top - ras.cProfile->offset );\n-\n@@ -707,1 +728,2 @@\n-      PProfile  oldProfile;\n+      FT_TRACE7(( \"  ending profile %p, start = %2d, height = %+3d\\n\",\n+                  (void *)p, p->start, p->flags & Flow_Up ? h : -h ));\n@@ -709,0 +731,1 @@\n+      p->height = h;\n@@ -710,2 +733,4 @@\n-      FT_TRACE6(( \"  ending profile %p, start = %ld, height = %ld\\n\",\n-                  (void *)ras.cProfile, ras.cProfile->start, h ));\n+      if ( p->flags & Flow_Up )\n+      {\n+        if ( IS_TOP_OVERSHOOT( ras.lastY ) )\n+          p->flags |= Overshoot_Top;\n@@ -713,2 +738,6 @@\n-      ras.cProfile->height = h;\n-      if ( overshoot )\n+        bottom    = p->start;\n+        top       = bottom + h;\n+        p->offset = 0;\n+        p->X      = p->x[0];\n+      }\n+      else\n@@ -716,4 +745,8 @@\n-        if ( ras.cProfile->flags & Flow_Up )\n-          ras.cProfile->flags |= Overshoot_Top;\n-        else\n-          ras.cProfile->flags |= Overshoot_Bottom;\n+        if ( IS_BOTTOM_OVERSHOOT( ras.lastY ) )\n+          p->flags |= Overshoot_Bottom;\n+\n+        top       = p->start + 1;\n+        bottom    = top - h;\n+        p->start  = bottom;\n+        p->offset = h - 1;\n+        p->X      = p->x[h - 1];\n@@ -722,2 +755,2 @@\n-      oldProfile   = ras.cProfile;\n-      ras.cProfile = (PProfile)ras.top;\n+      if ( Insert_Y_Turns( RAS_VARS bottom, top ) )\n+        return FAILURE;\n@@ -725,1 +758,2 @@\n-      ras.top += AlignProfileSize;\n+      if ( !ras.gProfile )\n+        ras.gProfile = p;\n@@ -727,2 +761,3 @@\n-      ras.cProfile->height = 0;\n-      ras.cProfile->offset = ras.top;\n+      \/* preliminary values to be finalized *\/\n+      p->next = ras.gProfile;\n+      p->link = (PProfile)ras.top;\n@@ -730,1 +765,0 @@\n-      oldProfile->next = ras.cProfile;\n@@ -734,65 +768,0 @@\n-    if ( ras.top >= ras.maxBuff )\n-    {\n-      FT_TRACE1(( \"overflow in End_Profile\\n\" ));\n-      ras.error = FT_THROW( Raster_Overflow );\n-      return FAILURE;\n-    }\n-\n-    ras.joint = FALSE;\n-\n-    return SUCCESS;\n-  }\n-\n-\n-  \/**************************************************************************\n-   *\n-   * @Function:\n-   *   Insert_Y_Turn\n-   *\n-   * @Description:\n-   *   Insert a salient into the sorted list placed on top of the render\n-   *   pool.\n-   *\n-   * @Input:\n-   *   New y scanline position.\n-   *\n-   * @Return:\n-   *   SUCCESS on success.  FAILURE in case of overflow.\n-   *\/\n-  static Bool\n-  Insert_Y_Turn( RAS_ARGS Int  y )\n-  {\n-    PLong  y_turns;\n-    Int    n;\n-\n-\n-    n       = ras.numTurns - 1;\n-    y_turns = ras.sizeBuff - ras.numTurns;\n-\n-    \/* look for first y value that is <= *\/\n-    while ( n >= 0 && y < y_turns[n] )\n-      n--;\n-\n-    \/* if it is <, simply insert it, ignore if == *\/\n-    if ( n >= 0 && y > y_turns[n] )\n-      do\n-      {\n-        Int  y2 = (Int)y_turns[n];\n-\n-\n-        y_turns[n] = y;\n-        y = y2;\n-      } while ( --n >= 0 );\n-\n-    if ( n < 0 )\n-    {\n-      ras.maxBuff--;\n-      if ( ras.maxBuff <= ras.top )\n-      {\n-        ras.error = FT_THROW( Raster_Overflow );\n-        return FAILURE;\n-      }\n-      ras.numTurns++;\n-      ras.sizeBuff[-ras.numTurns] = y;\n-    }\n-\n@@ -810,3 +779,0 @@\n-   *\n-   * @Return:\n-   *   SUCCESS on success.  FAILURE in case of overflow.\n@@ -814,1 +780,1 @@\n-  static Bool\n+  static void\n@@ -817,3 +783,3 @@\n-    UShort    n;\n-    PProfile  p;\n-\n+    UShort    n = ras.num_Profs;\n+    PProfile  p = ras.fProfile;\n+    PProfile  q;\n@@ -821,2 +787,0 @@\n-    n = ras.num_Profs;\n-    p = ras.fProfile;\n@@ -824,1 +788,2 @@\n-    if ( n > 1 && p )\n+    \/* there should be at least two profiles, up and down *\/\n+    while ( --n )\n@@ -826,3 +791,1 @@\n-      do\n-      {\n-        Int  bottom, top;\n+      q = p->link;\n@@ -830,0 +793,3 @@\n+      \/* fix the contour loop *\/\n+      if ( q->next == p->next )\n+        p->next = q;\n@@ -831,24 +797,1 @@\n-        if ( n > 1 )\n-          p->link = (PProfile)( p->offset + p->height );\n-        else\n-          p->link = NULL;\n-\n-        if ( p->flags & Flow_Up )\n-        {\n-          bottom = (Int)p->start;\n-          top    = (Int)( p->start + p->height - 1 );\n-        }\n-        else\n-        {\n-          bottom     = (Int)( p->start - p->height + 1 );\n-          top        = (Int)p->start;\n-          p->start   = bottom;\n-          p->offset += p->height - 1;\n-        }\n-\n-        if ( Insert_Y_Turn( RAS_VARS bottom )  ||\n-             Insert_Y_Turn( RAS_VARS top + 1 ) )\n-          return FAILURE;\n-\n-        p = p->link;\n-      } while ( --n );\n+      p = q;\n@@ -856,2 +799,0 @@\n-    else\n-      ras.fProfile = NULL;\n@@ -859,1 +800,2 @@\n-    return SUCCESS;\n+    \/* null-terminate *\/\n+    p->link = NULL;\n@@ -989,3 +931,3 @@\n-    Long   Dx, Dy;\n-    Int    e1, e2, f1, f2, size;     \/* XXX: is `Short' sufficient? *\/\n-    Long   Ix, Rx, Ax;\n+    Long  e, e2, Dx, Dy;\n+    Long  Ix, Rx, Ax;\n+    Int   size;\n@@ -996,4 +938,1 @@\n-    Dx = x2 - x1;\n-    Dy = y2 - y1;\n-\n-    if ( Dy <= 0 || y2 < miny || y1 > maxy )\n+    if ( y2 < miny || y1 > maxy )\n@@ -1002,13 +941,2 @@\n-    if ( y1 < miny )\n-    {\n-      \/* Take care: miny-y1 can be a very large value; we use     *\/\n-      \/*            a slow MulDiv function to avoid clipping bugs *\/\n-      x1 += SMulDiv( Dx, miny - y1, Dy );\n-      e1  = (Int)TRUNC( miny );\n-      f1  = 0;\n-    }\n-    else\n-    {\n-      e1 = (Int)TRUNC( y1 );\n-      f1 = (Int)FRAC( y1 );\n-    }\n+    e2 = y2 > maxy ? maxy : FLOOR( y2 );\n+    e  = y1 < miny ? miny : CEILING( y1 );\n@@ -1016,11 +944,2 @@\n-    if ( y2 > maxy )\n-    {\n-      \/* x2 += FMulDiv( Dx, maxy - y2, Dy );  UNNECESSARY *\/\n-      e2  = (Int)TRUNC( maxy );\n-      f2  = 0;\n-    }\n-    else\n-    {\n-      e2 = (Int)TRUNC( y2 );\n-      f2 = (Int)FRAC( y2 );\n-    }\n+    if ( y1 == e )\n+      e += ras.precision;\n@@ -1028,18 +947,2 @@\n-    if ( f1 > 0 )\n-    {\n-      if ( e1 == e2 )\n-        return SUCCESS;\n-      else\n-      {\n-        x1 += SMulDiv( Dx, ras.precision - f1, Dy );\n-        e1 += 1;\n-      }\n-    }\n-    else\n-      if ( ras.joint )\n-      {\n-        ras.top--;\n-        ras.joint = FALSE;\n-      }\n-\n-    ras.joint = (char)( f2 == 0 );\n+    if ( e2 < e )  \/* nothing to do *\/\n+      return SUCCESS;\n@@ -1047,5 +950,2 @@\n-    if ( ras.fresh )\n-    {\n-      ras.cProfile->start = e1;\n-      ras.fresh           = FALSE;\n-    }\n+    size = (Int)TRUNC( e2 - e ) + 1;\n+    top  = ras.top;\n@@ -1053,2 +953,1 @@\n-    size = e2 - e1 + 1;\n-    if ( ras.top + size >= ras.maxBuff )\n+    if ( top + size >= ras.maxBuff )\n@@ -1060,7 +959,4 @@\n-    if ( Dx > 0 )\n-    {\n-      Ix = SMulDiv_No_Round( ras.precision, Dx, Dy );\n-      Rx = ( ras.precision * Dx ) % Dy;\n-      Dx = 1;\n-    }\n-    else\n+    Dx = x2 - x1;\n+    Dy = y2 - y1;\n+\n+    if ( Dx == 0 )  \/* very easy *\/\n@@ -1068,3 +964,4 @@\n-      Ix = -SMulDiv_No_Round( ras.precision, -Dx, Dy );\n-      Rx = ( ras.precision * -Dx ) % Dy;\n-      Dx = -1;\n+      do\n+        *top++ = x1;\n+      while ( --size );\n+      goto Fin;\n@@ -1073,2 +970,3 @@\n-    Ax  = -Dy;\n-    top = ras.top;\n+    Ix     = SMulDiv_No_Round( e - y1, Dx, Dy );\n+    x1    += Ix;\n+    *top++ = x1;\n@@ -1076,1 +974,1 @@\n-    while ( size > 0 )\n+    if ( --size )\n@@ -1078,1 +976,4 @@\n-      *top++ = x1;\n+      Ax = Dx * ( e - y1 )    - Dy * Ix;  \/* remainder *\/\n+      Ix = FMulDiv( ras.precision, Dx, Dy );\n+      Rx = Dx * ras.precision - Dy * Ix;  \/* remainder *\/\n+      Dx = 1;\n@@ -1080,3 +981,8 @@\n-      x1 += Ix;\n-      Ax += Rx;\n-      if ( Ax >= 0 )\n+      if ( x2 < x1 )\n+      {\n+        Ax = -Ax;\n+        Rx = -Rx;\n+        Dx = -Dx;\n+      }\n+\n+      do\n@@ -1084,2 +990,8 @@\n-        Ax -= Dy;\n-        x1 += Dx;\n+        x1 += Ix;\n+        Ax += Rx;\n+        if ( Ax >= Dy )\n+        {\n+          Ax -= Dy;\n+          x1 += Dx;\n+        }\n+        *top++ = x1;\n@@ -1087,1 +999,1 @@\n-      size--;\n+      while ( --size );\n@@ -1090,0 +1002,1 @@\n+  Fin:\n@@ -1134,11 +1047,1 @@\n-    Bool  result, fresh;\n-\n-\n-    fresh  = ras.fresh;\n-\n-    result = Line_Up( RAS_VARS x1, -y1, x2, -y2, -maxy, -miny );\n-\n-    if ( fresh && !ras.fresh )\n-      ras.cProfile->start = -ras.cProfile->start;\n-\n-    return result;\n+    return Line_Up( RAS_VARS x1, -y1, x2, -y2, -maxy, -miny );\n@@ -1184,2 +1087,2 @@\n-    Long   y1, y2, e, e2, e0;\n-    Short  f1;\n+    Long  y1, y2, e, e2, dy;\n+    Long  dx, x2;\n@@ -1187,3 +1090,1 @@\n-    TPoint*  start_arc;\n-\n-    PLong top;\n+    PLong  top;\n@@ -1194,1 +1095,0 @@\n-    top = ras.top;\n@@ -1197,24 +1097,1 @@\n-      goto Fin;\n-\n-    e2 = FLOOR( y2 );\n-\n-    if ( e2 > maxy )\n-      e2 = maxy;\n-\n-    e0 = miny;\n-\n-    if ( y1 < miny )\n-      e = miny;\n-    else\n-    {\n-      e  = CEILING( y1 );\n-      f1 = (Short)( FRAC( y1 ) );\n-      e0 = e;\n-\n-      if ( f1 == 0 )\n-      {\n-        if ( ras.joint )\n-        {\n-          top--;\n-          ras.joint = FALSE;\n-        }\n+      return SUCCESS;\n@@ -1222,1 +1099,2 @@\n-        *top++ = arc[degree].x;\n+    e2 = y2 > maxy ? maxy : FLOOR( y2 );\n+    e  = y1 < miny ? miny : CEILING( y1 );\n@@ -1224,3 +1102,2 @@\n-        e += ras.precision;\n-      }\n-    }\n+    if ( y1 == e )\n+      e += ras.precision;\n@@ -1228,5 +1105,2 @@\n-    if ( ras.fresh )\n-    {\n-      ras.cProfile->start = TRUNC( e0 );\n-      ras.fresh = FALSE;\n-    }\n+    if ( e2 < e )  \/* nothing to do *\/\n+      return SUCCESS;\n@@ -1234,2 +1108,1 @@\n-    if ( e2 < e )\n-      goto Fin;\n+    top = ras.top;\n@@ -1239,1 +1112,0 @@\n-      ras.top   = top;\n@@ -1244,2 +1116,0 @@\n-    start_arc = arc;\n-\n@@ -1248,2 +1118,0 @@\n-      ras.joint = FALSE;\n-\n@@ -1251,0 +1119,1 @@\n+      x2 = arc[0].x;\n@@ -1254,2 +1123,7 @@\n-        y1 = arc[degree].y;\n-        if ( y2 - y1 >= ras.precision_step )\n+        dy = y2 - arc[degree].y;\n+        dx = x2 - arc[degree].x;\n+\n+        \/* split condition should be invariant of direction *\/\n+        if (  dy > ras.precision_step ||\n+              dx > ras.precision_step ||\n+             -dx > ras.precision_step )\n@@ -1262,2 +1136,2 @@\n-          *top++ = arc[degree].x + FMulDiv( arc[0].x - arc[degree].x,\n-                                            e - y1, y2 - y1 );\n+          *top++ = x2 - FMulDiv( y2 - e, dx, dy );\n+          e     += ras.precision;\n@@ -1265,1 +1139,0 @@\n-          e   += ras.precision;\n@@ -1272,4 +1145,2 @@\n-          ras.joint  = TRUE;\n-          *top++     = arc[0].x;\n-\n-          e += ras.precision;\n+          *top++ = x2;\n+          e     += ras.precision;\n@@ -1277,1 +1148,1 @@\n-        arc -= degree;\n+        arc   -= degree;\n@@ -1279,1 +1150,2 @@\n-    } while ( arc >= start_arc && e <= e2 );\n+    }\n+    while ( e <= e2 );\n@@ -1281,2 +1153,1 @@\n-  Fin:\n-    ras.top  = top;\n+    ras.top = top;\n@@ -1319,1 +1190,1 @@\n-    Bool     result, fresh;\n+    Bool  result;\n@@ -1328,2 +1199,0 @@\n-    fresh = ras.fresh;\n-\n@@ -1332,3 +1201,0 @@\n-    if ( fresh && !ras.fresh )\n-      ras.cProfile->start = -ras.cProfile->start;\n-\n@@ -1365,1 +1231,1 @@\n-    \/* First, detect a change of direction *\/\n+    TStates  state;\n@@ -1367,17 +1233,0 @@\n-    switch ( ras.state )\n-    {\n-    case Unknown_State:\n-      if ( y > ras.lastY )\n-      {\n-        if ( New_Profile( RAS_VARS Ascending_State,\n-                                   IS_BOTTOM_OVERSHOOT( ras.lastY ) ) )\n-          return FAILURE;\n-      }\n-      else\n-      {\n-        if ( y < ras.lastY )\n-          if ( New_Profile( RAS_VARS Descending_State,\n-                                     IS_TOP_OVERSHOOT( ras.lastY ) ) )\n-            return FAILURE;\n-      }\n-      break;\n@@ -1385,9 +1234,2 @@\n-    case Ascending_State:\n-      if ( y < ras.lastY )\n-      {\n-        if ( End_Profile( RAS_VARS IS_TOP_OVERSHOOT( ras.lastY ) ) ||\n-             New_Profile( RAS_VARS Descending_State,\n-                                   IS_TOP_OVERSHOOT( ras.lastY ) ) )\n-          return FAILURE;\n-      }\n-      break;\n+    if ( y == ras.lastY )\n+      goto Fin;\n@@ -1395,9 +1237,1 @@\n-    case Descending_State:\n-      if ( y > ras.lastY )\n-      {\n-        if ( End_Profile( RAS_VARS IS_BOTTOM_OVERSHOOT( ras.lastY ) ) ||\n-             New_Profile( RAS_VARS Ascending_State,\n-                                   IS_BOTTOM_OVERSHOOT( ras.lastY ) ) )\n-          return FAILURE;\n-      }\n-      break;\n+    \/* First, detect a change of direction *\/\n@@ -1405,2 +1239,12 @@\n-    default:\n-      ;\n+    state = ras.lastY < y ? Ascending_State : Descending_State;\n+\n+    if ( ras.state != state )\n+    {\n+      \/* finalize current profile if any *\/\n+      if ( ras.state != Unknown_State &&\n+           End_Profile( RAS_VAR )     )\n+        goto Fail;\n+\n+      \/* create a new profile *\/\n+      if ( New_Profile( RAS_VARS state ) )\n+        goto Fail;\n@@ -1411,1 +1255,1 @@\n-    switch ( ras.state )\n+    if ( state == Ascending_State )\n@@ -1413,1 +1257,0 @@\n-    case Ascending_State:\n@@ -1416,4 +1259,4 @@\n-        return FAILURE;\n-      break;\n-\n-    case Descending_State:\n+        goto Fail;\n+    }\n+    else\n+    {\n@@ -1422,5 +1265,1 @@\n-        return FAILURE;\n-      break;\n-\n-    default:\n-      ;\n+        goto Fail;\n@@ -1429,0 +1268,1 @@\n+  Fin:\n@@ -1431,1 +1271,0 @@\n-\n@@ -1433,0 +1272,3 @@\n+\n+  Fail:\n+    return FAILURE;\n@@ -1503,1 +1345,1 @@\n-      if ( y2 < ymin || y2 > ymax )\n+      if ( y2 < FLOOR( ymin ) || y2 > CEILING( ymax ) )\n@@ -1511,1 +1353,2 @@\n-        \/* this arc is flat, ignore it and pop it from the Bezier stack *\/\n+        \/* this arc is flat, advance position *\/\n+        \/* and pop it from the Bezier stack   *\/\n@@ -1513,0 +1356,3 @@\n+\n+        ras.lastX = x3;\n+        ras.lastY = y3;\n@@ -1521,5 +1367,0 @@\n-          Bool  o = ( state_bez == Ascending_State )\n-                      ? IS_BOTTOM_OVERSHOOT( y1 )\n-                      : IS_TOP_OVERSHOOT( y1 );\n-\n-\n@@ -1528,1 +1369,1 @@\n-               End_Profile( RAS_VARS o )  )\n+               End_Profile( RAS_VAR )     )\n@@ -1532,1 +1373,1 @@\n-          if ( New_Profile( RAS_VARS state_bez, o ) )\n+          if ( New_Profile( RAS_VARS state_bez ) )\n@@ -1548,0 +1389,3 @@\n+\n+        ras.lastX = x3;\n+        ras.lastY = y3;\n@@ -1552,3 +1396,0 @@\n-    ras.lastX = x3;\n-    ras.lastY = y3;\n-\n@@ -1651,1 +1492,1 @@\n-      if ( ymin2 < ymin1 || ymax2 > ymax1 )\n+      if ( ymin2 < FLOOR( ymin1 ) || ymax2 > CEILING( ymax1 ) )\n@@ -1659,1 +1500,2 @@\n-        \/* this arc is flat, ignore it and pop it from the Bezier stack *\/\n+        \/* this arc is flat, advance position *\/\n+        \/* and pop it from the Bezier stack   *\/\n@@ -1661,0 +1503,3 @@\n+\n+        ras.lastX = x4;\n+        ras.lastY = y4;\n@@ -1664,1 +1509,1 @@\n-        state_bez = ( y1 <= y4 ) ? Ascending_State : Descending_State;\n+        state_bez = y1 < y4 ? Ascending_State : Descending_State;\n@@ -1669,5 +1514,0 @@\n-          Bool  o = ( state_bez == Ascending_State )\n-                      ? IS_BOTTOM_OVERSHOOT( y1 )\n-                      : IS_TOP_OVERSHOOT( y1 );\n-\n-\n@@ -1676,1 +1516,1 @@\n-               End_Profile( RAS_VARS o )  )\n+               End_Profile( RAS_VAR )     )\n@@ -1679,1 +1519,1 @@\n-          if ( New_Profile( RAS_VARS state_bez, o ) )\n+          if ( New_Profile( RAS_VARS state_bez ) )\n@@ -1695,0 +1535,3 @@\n+\n+        ras.lastX = x4;\n+        ras.lastY = y4;\n@@ -1699,3 +1542,0 @@\n-    ras.lastX = x4;\n-    ras.lastY = y4;\n-\n@@ -1743,0 +1583,5 @@\n+   *\n+   * @Note:\n+   *   Unlike FT_Outline_Decompose(), this function handles the scanmode\n+   *   dropout tags in the individual contours.  Therefore, it cannot be\n+   *   replaced.\n@@ -1756,1 +1601,1 @@\n-    char*       tags;\n+    FT_Byte*    tags;\n@@ -1977,4 +1822,1 @@\n-    ras.joint    = FALSE;\n-    ras.fresh    = FALSE;\n-\n-    ras.maxBuff  = ras.sizeBuff - AlignProfileSize;\n+    ras.cProfile = NULL;\n@@ -1982,1 +1824,2 @@\n-    ras.numTurns = 0;\n+    ras.top      = ras.buff;\n+    ras.maxBuff  = ras.sizeBuff - 1;  \/* top reserve *\/\n@@ -1984,3 +1827,2 @@\n-    ras.cProfile         = (PProfile)ras.top;\n-    ras.cProfile->offset = ras.top;\n-    ras.num_Profs        = 0;\n+    ras.numTurns  = 0;\n+    ras.num_Profs = 0;\n@@ -1991,4 +1833,0 @@\n-      PProfile  lastProfile;\n-      Bool      o;\n-\n-\n@@ -2004,0 +1842,5 @@\n+      \/* Note that ras.gProfile can stay nil if the contour was *\/\n+      \/* too small to be drawn or degenerate.                   *\/\n+      if ( !ras.gProfile )\n+        continue;\n+\n@@ -2008,2 +1851,1 @@\n-        if ( ras.gProfile                        &&\n-             ( ras.gProfile->flags & Flow_Up ) ==\n+        if ( ( ras.gProfile->flags & Flow_Up ) ==\n@@ -2012,2 +1854,0 @@\n-        \/* Note that ras.gProfile can be nil if the contour was too small *\/\n-        \/* to be drawn.                                                   *\/\n@@ -2015,7 +1855,1 @@\n-      lastProfile = ras.cProfile;\n-      if ( ras.top != ras.cProfile->offset &&\n-           ( ras.cProfile->flags & Flow_Up ) )\n-        o = IS_TOP_OVERSHOOT( ras.lastY );\n-      else\n-        o = IS_BOTTOM_OVERSHOOT( ras.lastY );\n-      if ( End_Profile( RAS_VARS o ) )\n+      if ( End_Profile( RAS_VAR ) )\n@@ -2024,3 +1858,2 @@\n-      \/* close the `next profile in contour' linked list *\/\n-      if ( ras.gProfile )\n-        lastProfile->next = ras.gProfile;\n+      if ( !ras.fProfile )\n+        ras.fProfile = ras.gProfile;\n@@ -2029,2 +1862,2 @@\n-    if ( Finalize_Profile_Table( RAS_VAR ) )\n-      return FAILURE;\n+    if ( ras.fProfile )\n+      Finalize_Profile_Table( RAS_VAR );\n@@ -2032,1 +1865,1 @@\n-    return (Bool)( ras.top < ras.maxBuff ? SUCCESS : FAILURE );\n+    return SUCCESS;\n@@ -2045,13 +1878,0 @@\n-  \/**************************************************************************\n-   *\n-   * Init_Linked\n-   *\n-   *   Initializes an empty linked list.\n-   *\/\n-  static void\n-  Init_Linked( TProfileList*  l )\n-  {\n-    *l = NULL;\n-  }\n-\n-\n@@ -2062,1 +1882,1 @@\n-   *   Inserts a new profile in a linked list.\n+   *   Inserts a new profile in a linked list, sorted by coordinate.\n@@ -2076,1 +1896,1 @@\n-    while ( current )\n+    while ( current && current->X < x )\n@@ -2078,2 +1898,0 @@\n-      if ( x < current->X )\n-        break;\n@@ -2091,1 +1909,1 @@\n-   * DelOld\n+   * Increment\n@@ -2093,1 +1911,5 @@\n-   *   Removes an old profile from a linked list.\n+   *   Advances all profile in the list to the next scanline.  It also\n+   *   sorts the trace list in the unlikely case of profile crossing.\n+   *   The profiles are inserted in sorted order.  We might need a single\n+   *   swap to fix it when profiles (contours) cross.\n+   *   Bubble sort with immediate restart is good enough and simple.\n@@ -2096,2 +1918,2 @@\n-  DelOld( PProfileList    list,\n-          const PProfile  profile )\n+  Increment( PProfileList  list,\n+             Int           flow )\n@@ -2099,2 +1921,1 @@\n-    PProfile  *old, current;\n-\n+    PProfile  *old, current, next;\n@@ -2102,2 +1923,0 @@\n-    old     = list;\n-    current = *old;\n@@ -2105,1 +1924,3 @@\n-    while ( current )\n+    \/* First, set the new X coordinates and remove exhausted profiles *\/\n+    old = list;\n+    while ( *old )\n@@ -2107,1 +1928,2 @@\n-      if ( current == profile )\n+      current = *old;\n+      if ( --current->height )\n@@ -2109,2 +1931,3 @@\n-        *old = current->link;\n-        return;\n+        current->offset += flow;\n+        current->X       = current->x[current->offset];\n+        old = &current->link;\n@@ -2112,32 +1935,2 @@\n-\n-      old     = &current->link;\n-      current = *old;\n-    }\n-\n-    \/* we should never get there, unless the profile was not part of *\/\n-    \/* the list.                                                     *\/\n-  }\n-\n-\n-  \/**************************************************************************\n-   *\n-   * Sort\n-   *\n-   *   Sorts a trace list.  In 95%, the list is already sorted.  We need\n-   *   an algorithm which is fast in this case.  Bubble sort is enough\n-   *   and simple.\n-   *\/\n-  static void\n-  Sort( PProfileList  list )\n-  {\n-    PProfile  *old, current, next;\n-\n-\n-    \/* First, set the new X coordinate of each profile *\/\n-    current = *list;\n-    while ( current )\n-    {\n-      current->X       = *current->offset;\n-      current->offset += ( current->flags & Flow_Up ) ? 1 : -1;\n-      current->height--;\n-      current = current->link;\n+      else\n+        *old = current->link;  \/* remove *\/\n@@ -2146,1 +1939,1 @@\n-    \/* Then sort them *\/\n+    \/* Then make sure the list remains sorted *\/\n@@ -2153,3 +1946,1 @@\n-    next = current->link;\n-\n-    while ( next )\n+    while ( current->link )\n@@ -2157,0 +1948,2 @@\n+      next = current->link;\n+\n@@ -2160,4 +1953,1 @@\n-        current = *old;\n-\n-        if ( !current )\n-          return;\n+        current = next;\n@@ -2171,0 +1961,1 @@\n+        \/* this is likely the only necessary swap -- restart *\/\n@@ -2174,2 +1965,0 @@\n-\n-      next = current->link;\n@@ -2190,2 +1979,2 @@\n-  Vertical_Sweep_Init( RAS_ARGS Short  min,\n-                                Short  max )\n+  Vertical_Sweep_Init( RAS_ARGS Int  min,\n+                                Int  max )\n@@ -2196,1 +1985,1 @@\n-    ras.bLine = ras.bOrigin - min * ras.target.pitch;\n+    ras.bLine = ras.bOrigin - min * ras.bPitch;\n@@ -2201,1 +1990,1 @@\n-  Vertical_Sweep_Span( RAS_ARGS Short       y,\n+  Vertical_Sweep_Span( RAS_ARGS Int         y,\n@@ -2203,3 +1992,1 @@\n-                                FT_F26Dot6  x2,\n-                                PProfile    left,\n-                                PProfile    right )\n+                                FT_F26Dot6  x2 )\n@@ -2207,3 +1994,2 @@\n-    Long  e1, e2;\n-\n-    Int  dropOutControl = left->flags & 7;\n+    Int  e1 = (Int)TRUNC( CEILING( x1 ) );\n+    Int  e2 = (Int)TRUNC(   FLOOR( x2 ) );\n@@ -2212,2 +1998,0 @@\n-    FT_UNUSED( left );\n-    FT_UNUSED( right );\n@@ -2216,3 +2000,1 @@\n-    \/* in high-precision mode, we need 12 digits after the comma to *\/\n-    \/* represent multiples of 1\/(1<<12) = 1\/4096                    *\/\n-    FT_TRACE7(( \"  y=%d x=[% .12f;% .12f]\",\n+    FT_TRACE7(( \"  y=%d x=[% .*f;% .*f]\",\n@@ -2220,14 +2002,2 @@\n-                (double)x1 \/ (double)ras.precision,\n-                (double)x2 \/ (double)ras.precision ));\n-\n-    \/* Drop-out control *\/\n-\n-    e1 = CEILING( x1 );\n-    e2 = FLOOR( x2 );\n-\n-    \/* take care of the special case where both the left *\/\n-    \/* and right contour lie exactly on pixel centers    *\/\n-    if ( dropOutControl != 2                             &&\n-         x2 - x1 - ras.precision <= ras.precision_jitter &&\n-         e1 != x1 && e2 != x2                            )\n-      e2 = e1;\n+                ras.precision_bits, (double)x1 \/ (double)ras.precision,\n+                ras.precision_bits, (double)x2 \/ (double)ras.precision ));\n@@ -2235,4 +2005,1 @@\n-    e1 = TRUNC( e1 );\n-    e2 = TRUNC( e2 );\n-\n-    if ( e2 >= 0 && e1 < ras.bWidth )\n+    if ( e2 >= 0 && e1 <= ras.bRight )\n@@ -2240,1 +2007,1 @@\n-      Byte*  target;\n+      PByte  target;\n@@ -2242,2 +2009,1 @@\n-      Int   c1, c2;\n-      Byte  f1, f2;\n+      Int   c1, f1, c2, f2;\n@@ -2248,2 +2014,2 @@\n-      if ( e2 >= ras.bWidth )\n-        e2 = ras.bWidth - 1;\n+      if ( e2 > ras.bRight )\n+        e2 = ras.bRight;\n@@ -2251,1 +2017,1 @@\n-      FT_TRACE7(( \" -> x=[%ld;%ld]\", e1, e2 ));\n+      FT_TRACE7(( \" -> x=[%d;%d]\", e1, e2 ));\n@@ -2253,2 +2019,2 @@\n-      c1 = (Short)( e1 >> 3 );\n-      c2 = (Short)( e2 >> 3 );\n+      c1 = e1 >> 3;\n+      c2 = e2 >> 3;\n@@ -2256,2 +2022,2 @@\n-      f1 = (Byte)  ( 0xFF >> ( e1 & 7 ) );\n-      f2 = (Byte) ~( 0x7F >> ( e2 & 7 ) );\n+      f1 =  0xFF >> ( e1 & 7 );\n+      f2 = ~0x7F >> ( e2 & 7 );\n@@ -2283,1 +2049,1 @@\n-  Vertical_Sweep_Drop( RAS_ARGS Short       y,\n+  Vertical_Sweep_Drop( RAS_ARGS Int         y,\n@@ -2285,3 +2051,1 @@\n-                                FT_F26Dot6  x2,\n-                                PProfile    left,\n-                                PProfile    right )\n+                                FT_F26Dot6  x2 )\n@@ -2289,105 +2053,3 @@\n-    Long   e1, e2, pxl;\n-    Short  c1, f1;\n-\n-\n-    FT_TRACE7(( \"  y=%d x=[% .12f;% .12f]\",\n-                y,\n-                (double)x1 \/ (double)ras.precision,\n-                (double)x2 \/ (double)ras.precision ));\n-\n-    \/* Drop-out control *\/\n-\n-    \/*   e2            x2                    x1           e1   *\/\n-    \/*                                                         *\/\n-    \/*                 ^                     |                 *\/\n-    \/*                 |                     |                 *\/\n-    \/*   +-------------+---------------------+------------+    *\/\n-    \/*                 |                     |                 *\/\n-    \/*                 |                     v                 *\/\n-    \/*                                                         *\/\n-    \/* pixel         contour              contour       pixel  *\/\n-    \/* center                                           center *\/\n-\n-    \/* drop-out mode    scan conversion rules (as defined in OpenType) *\/\n-    \/* --------------------------------------------------------------- *\/\n-    \/*  0                1, 2, 3                                       *\/\n-    \/*  1                1, 2, 4                                       *\/\n-    \/*  2                1, 2                                          *\/\n-    \/*  3                same as mode 2                                *\/\n-    \/*  4                1, 2, 5                                       *\/\n-    \/*  5                1, 2, 6                                       *\/\n-    \/*  6, 7             same as mode 2                                *\/\n-\n-    e1  = CEILING( x1 );\n-    e2  = FLOOR  ( x2 );\n-    pxl = e1;\n-\n-    if ( e1 > e2 )\n-    {\n-      Int  dropOutControl = left->flags & 7;\n-\n-\n-      if ( e1 == e2 + ras.precision )\n-      {\n-        switch ( dropOutControl )\n-        {\n-        case 0: \/* simple drop-outs including stubs *\/\n-          pxl = e2;\n-          break;\n-\n-        case 4: \/* smart drop-outs including stubs *\/\n-          pxl = SMART( x1, x2 );\n-          break;\n-\n-        case 1: \/* simple drop-outs excluding stubs *\/\n-        case 5: \/* smart drop-outs excluding stubs  *\/\n-\n-          \/* Drop-out Control Rules #4 and #6 *\/\n-\n-          \/* The specification neither provides an exact definition *\/\n-          \/* of a `stub' nor gives exact rules to exclude them.     *\/\n-          \/*                                                        *\/\n-          \/* Here the constraints we use to recognize a stub.       *\/\n-          \/*                                                        *\/\n-          \/*  upper stub:                                           *\/\n-          \/*                                                        *\/\n-          \/*   - P_Left and P_Right are in the same contour         *\/\n-          \/*   - P_Right is the successor of P_Left in that contour *\/\n-          \/*   - y is the top of P_Left and P_Right                 *\/\n-          \/*                                                        *\/\n-          \/*  lower stub:                                           *\/\n-          \/*                                                        *\/\n-          \/*   - P_Left and P_Right are in the same contour         *\/\n-          \/*   - P_Left is the successor of P_Right in that contour *\/\n-          \/*   - y is the bottom of P_Left                          *\/\n-          \/*                                                        *\/\n-          \/* We draw a stub if the following constraints are met.   *\/\n-          \/*                                                        *\/\n-          \/*   - for an upper or lower stub, there is top or bottom *\/\n-          \/*     overshoot, respectively                            *\/\n-          \/*   - the covered interval is greater or equal to a half *\/\n-          \/*     pixel                                              *\/\n-\n-          \/* upper stub test *\/\n-          if ( left->next == right                &&\n-               left->height <= 0                  &&\n-               !( left->flags & Overshoot_Top   &&\n-                  x2 - x1 >= ras.precision_half ) )\n-            goto Exit;\n-\n-          \/* lower stub test *\/\n-          if ( right->next == left                 &&\n-               left->start == y                    &&\n-               !( left->flags & Overshoot_Bottom &&\n-                  x2 - x1 >= ras.precision_half  ) )\n-            goto Exit;\n-\n-          if ( dropOutControl == 1 )\n-            pxl = e2;\n-          else\n-            pxl = SMART( x1, x2 );\n-          break;\n-\n-        default: \/* modes 2, 3, 6, 7 *\/\n-          goto Exit;  \/* no drop-out control *\/\n-        }\n+    Int  e1 = (Int)TRUNC( x1 );\n+    Int  e2 = (Int)TRUNC( x2 );\n+    Int  c1, f1;\n@@ -2395,7 +2057,1 @@\n-        \/* undocumented but confirmed: If the drop-out would result in a  *\/\n-        \/* pixel outside of the bounding box, use the pixel inside of the *\/\n-        \/* bounding box instead                                           *\/\n-        if ( pxl < 0 )\n-          pxl = e1;\n-        else if ( TRUNC( pxl ) >= ras.bWidth )\n-          pxl = e2;\n+    FT_UNUSED( y );\n@@ -2403,2 +2059,0 @@\n-        \/* check that the other pixel isn't set *\/\n-        e1 = ( pxl == e1 ) ? e2 : e1;\n@@ -2406,1 +2060,5 @@\n-        e1 = TRUNC( e1 );\n+    \/* undocumented but confirmed: If the drop-out would result in a  *\/\n+    \/* pixel outside of the bounding box, use the pixel inside of the *\/\n+    \/* bounding box instead                                           *\/\n+    if ( e1 < 0 || e1 > ras.bRight )\n+      e1 = e2;\n@@ -2408,2 +2066,5 @@\n-        c1 = (Short)( e1 >> 3 );\n-        f1 = (Short)( e1 &  7 );\n+    \/* otherwise check that the other pixel isn't set *\/\n+    else if ( e2 >=0 && e2 <= ras.bRight )\n+    {\n+      c1 = e2 >> 3;\n+      f1 = 0x80 >> ( e2 & 7 );\n@@ -2411,6 +2072,2 @@\n-        if ( e1 >= 0 && e1 < ras.bWidth     &&\n-             ras.bLine[c1] & ( 0x80 >> f1 ) )\n-          goto Exit;\n-      }\n-      else\n-        goto Exit;\n+      if ( ras.bLine[c1] & f1 )\n+        return;\n@@ -2419,3 +2076,1 @@\n-    e1 = TRUNC( pxl );\n-\n-    if ( e1 >= 0 && e1 < ras.bWidth )\n+    if ( e1 >= 0 && e1 <= ras.bRight )\n@@ -2423,1 +2078,2 @@\n-      FT_TRACE7(( \" -> x=%ld\", e1 ));\n+      c1 = e1 >> 3;\n+      f1 = 0x80 >> ( e1 & 7 );\n@@ -2425,2 +2081,2 @@\n-      c1 = (Short)( e1 >> 3 );\n-      f1 = (Short)( e1 & 7 );\n+      FT_TRACE7(( \"  y=%d x=%d%s\\n\", y, e1,\n+                  ras.bLine[c1] & f1 ? \" redundant\" : \"\" ));\n@@ -2428,1 +2084,1 @@\n-      ras.bLine[c1] |= (char)( 0x80 >> f1 );\n+      ras.bLine[c1] |= f1;\n@@ -2430,3 +2086,0 @@\n-\n-  Exit:\n-    FT_TRACE7(( \" dropout=%d\\n\", left->flags & 7 ));\n@@ -2439,1 +2092,1 @@\n-    ras.bLine -= ras.target.pitch;\n+    ras.bLine -= ras.bPitch;\n@@ -2453,2 +2106,2 @@\n-  Horizontal_Sweep_Init( RAS_ARGS Short  min,\n-                                  Short  max )\n+  Horizontal_Sweep_Init( RAS_ARGS Int  min,\n+                                  Int  max )\n@@ -2464,1 +2117,1 @@\n-  Horizontal_Sweep_Span( RAS_ARGS Short       y,\n+  Horizontal_Sweep_Span( RAS_ARGS Int         y,\n@@ -2466,3 +2119,1 @@\n-                                  FT_F26Dot6  x2,\n-                                  PProfile    left,\n-                                  PProfile    right )\n+                                  FT_F26Dot6  x2 )\n@@ -2470,1 +2121,2 @@\n-    Long  e1, e2;\n+    Long  e1 = CEILING( x1 );\n+    Long  e2 =   FLOOR( x2 );\n@@ -2472,2 +2124,0 @@\n-    FT_UNUSED( left );\n-    FT_UNUSED( right );\n@@ -2475,2 +2125,1 @@\n-\n-    FT_TRACE7(( \"  x=%d y=[% .12f;% .12f]\",\n+    FT_TRACE7(( \"  x=%d y=[% .*f;% .*f]\",\n@@ -2478,2 +2127,2 @@\n-                (double)x1 \/ (double)ras.precision,\n-                (double)x2 \/ (double)ras.precision ));\n+                ras.precision_bits, (double)x1 \/ (double)ras.precision,\n+                ras.precision_bits, (double)x2 \/ (double)ras.precision ));\n@@ -2487,2 +2136,0 @@\n-    e1 = CEILING( x1 );\n-\n@@ -2493,1 +2140,1 @@\n-      if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n+      if ( e1 >= 0 && e1 <= ras.bTop )\n@@ -2495,1 +2142,1 @@\n-        Byte   f1;\n+        Int    f1;\n@@ -2499,2 +2146,2 @@\n-        bits = ras.bOrigin + ( y >> 3 ) - e1 * ras.target.pitch;\n-        f1   = (Byte)( 0x80 >> ( y & 7 ) );\n+        bits = ras.bOrigin + ( y >> 3 ) - e1 * ras.bPitch;\n+        f1   = 0x80 >> ( y & 7 );\n@@ -2509,2 +2156,0 @@\n-    e2 = FLOOR  ( x2 );\n-\n@@ -2515,1 +2160,1 @@\n-      if ( e2 >= 0 && (ULong)e2 < ras.target.rows )\n+      if ( e2 >= 0 && e2 <= ras.bTop )\n@@ -2517,1 +2162,1 @@\n-        Byte   f1;\n+        Int    f1;\n@@ -2521,2 +2166,2 @@\n-        bits = ras.bOrigin + ( y >> 3 ) - e2 * ras.target.pitch;\n-        f1   = (Byte)( 0x80 >> ( y & 7 ) );\n+        bits = ras.bOrigin + ( y >> 3 ) - e2 * ras.bPitch;\n+        f1   = 0x80 >> ( y & 7 );\n@@ -2536,1 +2181,1 @@\n-  Horizontal_Sweep_Drop( RAS_ARGS Short       y,\n+  Horizontal_Sweep_Drop( RAS_ARGS Int         y,\n@@ -2538,3 +2183,1 @@\n-                                  FT_F26Dot6  x2,\n-                                  PProfile    left,\n-                                  PProfile    right )\n+                                  FT_F26Dot6  x2 )\n@@ -2542,1 +2185,2 @@\n-    Long   e1, e2, pxl;\n+    Int    e1 = (Int)TRUNC( x1 );\n+    Int    e2 = (Int)TRUNC( x2 );\n@@ -2544,28 +2188,1 @@\n-    Byte   f1;\n-\n-\n-    FT_TRACE7(( \"  x=%d y=[% .12f;% .12f]\",\n-                y,\n-                (double)x1 \/ (double)ras.precision,\n-                (double)x2 \/ (double)ras.precision ));\n-\n-    \/* During the horizontal sweep, we only take care of drop-outs *\/\n-\n-    \/* e1     +       <-- pixel center *\/\n-    \/*        |                        *\/\n-    \/* x1  ---+-->    <-- contour      *\/\n-    \/*        |                        *\/\n-    \/*        |                        *\/\n-    \/* x2  <--+---    <-- contour      *\/\n-    \/*        |                        *\/\n-    \/*        |                        *\/\n-    \/* e2     +       <-- pixel center *\/\n-\n-    e1  = CEILING( x1 );\n-    e2  = FLOOR  ( x2 );\n-    pxl = e1;\n-\n-    if ( e1 > e2 )\n-    {\n-      Int  dropOutControl = left->flags & 7;\n-\n+    Int    f1;\n@@ -2573,35 +2190,0 @@\n-      if ( e1 == e2 + ras.precision )\n-      {\n-        switch ( dropOutControl )\n-        {\n-        case 0: \/* simple drop-outs including stubs *\/\n-          pxl = e2;\n-          break;\n-\n-        case 4: \/* smart drop-outs including stubs *\/\n-          pxl = SMART( x1, x2 );\n-          break;\n-\n-        case 1: \/* simple drop-outs excluding stubs *\/\n-        case 5: \/* smart drop-outs excluding stubs  *\/\n-          \/* see Vertical_Sweep_Drop for details *\/\n-\n-          \/* rightmost stub test *\/\n-          if ( left->next == right                &&\n-               left->height <= 0                  &&\n-               !( left->flags & Overshoot_Top   &&\n-                  x2 - x1 >= ras.precision_half ) )\n-            goto Exit;\n-\n-          \/* leftmost stub test *\/\n-          if ( right->next == left                 &&\n-               left->start == y                    &&\n-               !( left->flags & Overshoot_Bottom &&\n-                  x2 - x1 >= ras.precision_half  ) )\n-            goto Exit;\n-\n-          if ( dropOutControl == 1 )\n-            pxl = e2;\n-          else\n-            pxl = SMART( x1, x2 );\n-          break;\n@@ -2609,16 +2191,5 @@\n-        default: \/* modes 2, 3, 6, 7 *\/\n-          goto Exit;  \/* no drop-out control *\/\n-        }\n-\n-        \/* undocumented but confirmed: If the drop-out would result in a  *\/\n-        \/* pixel outside of the bounding box, use the pixel inside of the *\/\n-        \/* bounding box instead                                           *\/\n-        if ( pxl < 0 )\n-          pxl = e1;\n-        else if ( (ULong)( TRUNC( pxl ) ) >= ras.target.rows )\n-          pxl = e2;\n-\n-        \/* check that the other pixel isn't set *\/\n-        e1 = ( pxl == e1 ) ? e2 : e1;\n-\n-        e1 = TRUNC( e1 );\n+    \/* undocumented but confirmed: If the drop-out would result in a  *\/\n+    \/* pixel outside of the bounding box, use the pixel inside of the *\/\n+    \/* bounding box instead                                           *\/\n+    if ( e1 < 0 || e1 > ras.bTop )\n+      e1 = e2;\n@@ -2626,2 +2197,5 @@\n-        bits = ras.bOrigin + ( y >> 3 ) - e1 * ras.target.pitch;\n-        f1   = (Byte)( 0x80 >> ( y & 7 ) );\n+    \/* otherwise check that the other pixel isn't set *\/\n+    else if ( e2 >=0 && e2 <= ras.bTop )\n+    {\n+      bits = ras.bOrigin + ( y >> 3 ) - e2 * ras.bPitch;\n+      f1   = 0x80 >> ( y & 7 );\n@@ -2629,7 +2203,2 @@\n-        if ( e1 >= 0                     &&\n-             (ULong)e1 < ras.target.rows &&\n-             *bits & f1                  )\n-          goto Exit;\n-      }\n-      else\n-        goto Exit;\n+      if ( *bits & f1 )\n+        return;\n@@ -2638,3 +2207,1 @@\n-    e1 = TRUNC( pxl );\n-\n-    if ( e1 >= 0 && (ULong)e1 < ras.target.rows )\n+    if ( e1 >= 0 && e1 <= ras.bTop )\n@@ -2642,1 +2209,2 @@\n-      FT_TRACE7(( \" -> y=%ld\", e1 ));\n+      bits  = ras.bOrigin + ( y >> 3 ) - e1 * ras.bPitch;\n+      f1    = 0x80 >> ( y & 7 );\n@@ -2644,2 +2212,2 @@\n-      bits  = ras.bOrigin + ( y >> 3 ) - e1 * ras.target.pitch;\n-      f1    = (Byte)( 0x80 >> ( y & 7 ) );\n+      FT_TRACE7(( \"  x=%d y=%d%s\\n\", y, e1,\n+                  *bits & f1 ? \" redundant\" : \"\" ));\n@@ -2647,1 +2215,1 @@\n-      bits[0] |= f1;\n+      *bits |= f1;\n@@ -2649,3 +2217,0 @@\n-\n-  Exit:\n-    FT_TRACE7(( \" dropout=%d\\n\", left->flags & 7 ));\n@@ -2667,0 +2232,3 @@\n+   * Note that this routine is executed with the pool containing at least\n+   * two valid profiles (up and down) and two y-turns (top and bottom).\n+   *\n@@ -2669,1 +2237,1 @@\n-  static Bool\n+  static void\n@@ -2672,28 +2240,2 @@\n-    Short         y, y_change, y_height;\n-\n-    PProfile      P, Q, P_Left, P_Right;\n-\n-    Short         min_Y, max_Y, top, bottom, dropouts;\n-\n-    Long          x1, x2, xs, e1, e2;\n-\n-    TProfileList  waiting;\n-    TProfileList  draw_left, draw_right;\n-\n-\n-    \/* initialize empty linked lists *\/\n-\n-    Init_Linked( &waiting );\n-\n-    Init_Linked( &draw_left  );\n-    Init_Linked( &draw_right );\n-\n-    \/* first, compute min and max Y *\/\n-\n-    P     = ras.fProfile;\n-    max_Y = (Short)TRUNC( ras.minY );\n-    min_Y = (Short)TRUNC( ras.maxY );\n-\n-    while ( P )\n-    {\n-      Q = P->link;\n+    Int           min_Y, max_Y, dropouts;\n+    Int           y, y_turn;\n@@ -2701,2 +2243,1 @@\n-      bottom = (Short)P->start;\n-      top    = (Short)( P->start + P->height - 1 );\n+    PProfile      *Q, P, P_Left, P_Right;\n@@ -2704,4 +2245,3 @@\n-      if ( min_Y > bottom )\n-        min_Y = bottom;\n-      if ( max_Y < top )\n-        max_Y = top;\n+    TProfileList  waiting    = ras.fProfile;\n+    TProfileList  draw_left  = NULL;\n+    TProfileList  draw_right = NULL;\n@@ -2709,2 +2249,0 @@\n-      P->X = 0;\n-      InsNew( &waiting, P );\n@@ -2712,2 +2250,1 @@\n-      P = Q;\n-    }\n+    \/* use y_turns to set the drawing range *\/\n@@ -2715,6 +2252,2 @@\n-    \/* check the Y-turns *\/\n-    if ( ras.numTurns == 0 )\n-    {\n-      ras.error = FT_THROW( Invalid_Outline );\n-      return FAILURE;\n-    }\n+    min_Y = (Int)ras.maxBuff[0];\n+    max_Y = (Int)ras.maxBuff[ras.numTurns] - 1;\n@@ -2726,10 +2259,0 @@\n-    \/* then compute the distance of each profile from min_Y *\/\n-\n-    P = waiting;\n-\n-    while ( P )\n-    {\n-      P->countL = P->start - min_Y;\n-      P = P->link;\n-    }\n-\n@@ -2738,8 +2261,1 @@\n-    y        = min_Y;\n-    y_height = 0;\n-\n-    if ( ras.numTurns > 0                     &&\n-         ras.sizeBuff[-ras.numTurns] == min_Y )\n-      ras.numTurns--;\n-\n-    while ( ras.numTurns > 0 )\n+    for ( y = min_Y; y <= max_Y; )\n@@ -2747,3 +2263,1 @@\n-      \/* check waiting list for new activations *\/\n-\n-      P = waiting;\n+      \/* check waiting list for new profile activations *\/\n@@ -2751,1 +2265,2 @@\n-      while ( P )\n+      Q = &waiting;\n+      while ( *Q )\n@@ -2753,3 +2268,2 @@\n-        Q = P->link;\n-        P->countL -= y_height;\n-        if ( P->countL == 0 )\n+        P = *Q;\n+        if ( P->start == y )\n@@ -2757,1 +2271,1 @@\n-          DelOld( &waiting, P );\n+          *Q = P->link;  \/* remove *\/\n@@ -2759,0 +2273,2 @@\n+          \/* each active list contains profiles with the same flow *\/\n+          \/* left and right are arbitrary, correspond to TrueType  *\/\n@@ -2764,2 +2280,2 @@\n-\n-        P = Q;\n+        else\n+          Q = &P->link;\n@@ -2768,1 +2284,1 @@\n-      \/* sort the drawing lists *\/\n+      y_turn = (Int)*++ras.maxBuff;\n@@ -2770,7 +2286,1 @@\n-      Sort( &draw_left );\n-      Sort( &draw_right );\n-\n-      y_change = (Short)ras.sizeBuff[-ras.numTurns--];\n-      y_height = (Short)( y_change - y );\n-\n-      while ( y < y_change )\n+      do\n@@ -2787,2 +2297,4 @@\n-          x1 = P_Left ->X;\n-          x2 = P_Right->X;\n+          Long  x1 = P_Left ->X;\n+          Long  x2 = P_Right->X;\n+          Long  xs;\n+\n@@ -2790,0 +2302,2 @@\n+          \/* TrueType should have x2 > x1, but can be opposite *\/\n+          \/* by mistake or in CFF\/Type1, fix it then           *\/\n@@ -2797,2 +2311,2 @@\n-          e1 = FLOOR( x1 );\n-          e2 = CEILING( x2 );\n+          if ( CEILING( x1 ) <= FLOOR( x2 ) )\n+            ras.Proc_Sweep_Span( RAS_VARS y, x1, x2 );\n@@ -2800,2 +2314,2 @@\n-          if ( x2 - x1 <= ras.precision &&\n-               e1 != x1 && e2 != x2     )\n+          \/* otherwise, bottom ceiling > top floor, it is a drop-out *\/\n+          else\n@@ -2803,1 +2317,50 @@\n-            if ( e1 > e2 || e2 == e1 + ras.precision )\n+            Int  dropOutControl = P_Left->flags & 7;\n+\n+\n+            \/* Drop-out control *\/\n+\n+            \/*   e2            x2                    x1           e1   *\/\n+            \/*                                                         *\/\n+            \/*                 ^                     |                 *\/\n+            \/*                 |                     |                 *\/\n+            \/*   +-------------+---------------------+------------+    *\/\n+            \/*                 |                     |                 *\/\n+            \/*                 |                     v                 *\/\n+            \/*                                                         *\/\n+            \/* pixel         contour              contour       pixel  *\/\n+            \/* center                                           center *\/\n+\n+            \/* drop-out mode   scan conversion rules (OpenType specs)  *\/\n+            \/* ------------------------------------------------------- *\/\n+            \/*  bit 0          exclude stubs if set                    *\/\n+            \/*  bit 1          ignore drop-outs if set                 *\/\n+            \/*  bit 2          smart rounding if set                   *\/\n+\n+            if ( dropOutControl & 2 )\n+              goto Next_Pair;\n+\n+            \/* The specification neither provides an exact definition *\/\n+            \/* of a `stub' nor gives exact rules to exclude them.     *\/\n+            \/*                                                        *\/\n+            \/* Here the constraints we use to recognize a stub.       *\/\n+            \/*                                                        *\/\n+            \/*  upper stub:                                           *\/\n+            \/*                                                        *\/\n+            \/*   - P_Left and P_Right are in the same contour         *\/\n+            \/*   - P_Right is the successor of P_Left in that contour *\/\n+            \/*   - y is the top of P_Left and P_Right                 *\/\n+            \/*                                                        *\/\n+            \/*  lower stub:                                           *\/\n+            \/*                                                        *\/\n+            \/*   - P_Left and P_Right are in the same contour         *\/\n+            \/*   - P_Left is the successor of P_Right in that contour *\/\n+            \/*   - y is the bottom of P_Left                          *\/\n+            \/*                                                        *\/\n+            \/* We draw a stub if the following constraints are met.   *\/\n+            \/*                                                        *\/\n+            \/*   - for an upper or lower stub, there is top or bottom *\/\n+            \/*     overshoot, respectively                            *\/\n+            \/*   - the covered interval is greater or equal to a half *\/\n+            \/*     pixel                                              *\/\n+\n+            if ( dropOutControl & 1 )\n@@ -2805,14 +2368,14 @@\n-              Int  dropOutControl = P_Left->flags & 7;\n-\n-\n-              if ( dropOutControl != 2 )\n-              {\n-                \/* a drop-out was detected *\/\n-\n-                P_Left ->X = x1;\n-                P_Right->X = x2;\n-\n-                \/* mark profile for drop-out processing *\/\n-                P_Left->countL = 1;\n-                dropouts++;\n-              }\n+              \/* upper stub test *\/\n+              if ( P_Left->height == 1                &&\n+                   P_Left->next == P_Right            &&\n+                   !( P_Left->flags & Overshoot_Top   &&\n+                      x2 - x1 >= ras.precision_half   ) )\n+                goto Next_Pair;\n+\n+              \/* lower stub test *\/\n+              if ( P_Left->offset == 0                 &&\n+                   P_Right->next == P_Left             &&\n+                   !( P_Left->flags & Overshoot_Bottom &&\n+                      x2 - x1 >= ras.precision_half    ) )\n+                goto Next_Pair;\n+            }\n@@ -2820,1 +2383,10 @@\n-              goto Skip_To_Next;\n+            \/* select the pixel to set and the other pixel *\/\n+            if ( dropOutControl & 4 )\n+            {\n+              x2 = SMART( x1, x2 );\n+              x1 = x1 > x2 ? x2 + ras.precision : x2 - ras.precision;\n+            }\n+            else\n+            {\n+              x2 = FLOOR  ( x2 );\n+              x1 = CEILING( x1 );\n@@ -2822,1 +2394,0 @@\n-          }\n@@ -2824,1 +2395,2 @@\n-          ras.Proc_Sweep_Span( RAS_VARS y, x1, x2, P_Left, P_Right );\n+            P_Left ->X = x2;\n+            P_Right->X = x1;\n@@ -2826,1 +2398,4 @@\n-        Skip_To_Next:\n+            \/* mark profile for drop-out processing *\/\n+            P_Left->flags |= Dropout;\n+            dropouts++;\n+          }\n@@ -2828,0 +2403,1 @@\n+        Next_Pair:\n@@ -2832,11 +2408,3 @@\n-        \/* handle drop-outs _after_ the span drawing --       *\/\n-        \/* drop-out processing has been moved out of the loop *\/\n-        \/* for performance tuning                             *\/\n-        if ( dropouts > 0 )\n-          goto Scan_DropOuts;\n-\n-      Next_Line:\n-\n-        ras.Proc_Sweep_Step( RAS_VAR );\n-\n-        y++;\n+        \/* handle drop-outs _after_ the span drawing *\/\n+        P_Left  = draw_left;\n+        P_Right = draw_right;\n@@ -2844,1 +2412,1 @@\n-        if ( y < y_change )\n+        while ( dropouts )\n@@ -2846,126 +2414,3 @@\n-          Sort( &draw_left  );\n-          Sort( &draw_right );\n-        }\n-      }\n-\n-      \/* now finalize the profiles that need it *\/\n-\n-      P = draw_left;\n-      while ( P )\n-      {\n-        Q = P->link;\n-        if ( P->height == 0 )\n-          DelOld( &draw_left, P );\n-        P = Q;\n-      }\n-\n-      P = draw_right;\n-      while ( P )\n-      {\n-        Q = P->link;\n-        if ( P->height == 0 )\n-          DelOld( &draw_right, P );\n-        P = Q;\n-      }\n-    }\n-\n-    \/* for gray-scaling, flush the bitmap scanline cache *\/\n-    while ( y <= max_Y )\n-    {\n-      ras.Proc_Sweep_Step( RAS_VAR );\n-      y++;\n-    }\n-\n-    return SUCCESS;\n-\n-  Scan_DropOuts:\n-\n-    P_Left  = draw_left;\n-    P_Right = draw_right;\n-\n-    while ( P_Left && P_Right )\n-    {\n-      if ( P_Left->countL )\n-      {\n-        P_Left->countL = 0;\n-#if 0\n-        dropouts--;  \/* -- this is useful when debugging only *\/\n-#endif\n-        ras.Proc_Sweep_Drop( RAS_VARS y,\n-                                      P_Left->X,\n-                                      P_Right->X,\n-                                      P_Left,\n-                                      P_Right );\n-      }\n-\n-      P_Left  = P_Left->link;\n-      P_Right = P_Right->link;\n-    }\n-\n-    goto Next_Line;\n-  }\n-\n-\n-#ifdef STANDALONE_\n-\n-  \/**************************************************************************\n-   *\n-   * The following functions should only compile in stand-alone mode,\n-   * i.e., when building this component without the rest of FreeType.\n-   *\n-   *\/\n-\n-  \/**************************************************************************\n-   *\n-   * @Function:\n-   *   FT_Outline_Get_CBox\n-   *\n-   * @Description:\n-   *   Return an outline's `control box'.  The control box encloses all\n-   *   the outline's points, including Bézier control points.  Though it\n-   *   coincides with the exact bounding box for most glyphs, it can be\n-   *   slightly larger in some situations (like when rotating an outline\n-   *   that contains Bézier outside arcs).\n-   *\n-   *   Computing the control box is very fast, while getting the bounding\n-   *   box can take much more time as it needs to walk over all segments\n-   *   and arcs in the outline.  To get the latter, you can use the\n-   *   `ftbbox' component, which is dedicated to this single task.\n-   *\n-   * @Input:\n-   *   outline ::\n-   *     A pointer to the source outline descriptor.\n-   *\n-   * @Output:\n-   *   acbox ::\n-   *     The outline's control box.\n-   *\n-   * @Note:\n-   *   See @FT_Glyph_Get_CBox for a discussion of tricky fonts.\n-   *\/\n-\n-  static void\n-  FT_Outline_Get_CBox( const FT_Outline*  outline,\n-                       FT_BBox           *acbox )\n-  {\n-    if ( outline && acbox )\n-    {\n-      Long  xMin, yMin, xMax, yMax;\n-\n-\n-      if ( outline->n_points == 0 )\n-      {\n-        xMin = 0;\n-        yMin = 0;\n-        xMax = 0;\n-        yMax = 0;\n-      }\n-      else\n-      {\n-        FT_Vector*  vec   = outline->points;\n-        FT_Vector*  limit = vec + outline->n_points;\n-\n-\n-        xMin = xMax = vec->x;\n-        yMin = yMax = vec->y;\n-        vec++;\n+          if ( P_Left->flags & Dropout )\n+          {\n+            ras.Proc_Sweep_Drop( RAS_VARS y, P_Left->X, P_Right->X );\n@@ -2973,3 +2418,3 @@\n-        for ( ; vec < limit; vec++ )\n-        {\n-          Long  x, y;\n+            P_Left->flags &= ~Dropout;\n+            dropouts--;\n+          }\n@@ -2977,0 +2422,3 @@\n+          P_Left  = P_Left->link;\n+          P_Right = P_Right->link;\n+        }\n@@ -2978,3 +2426,1 @@\n-          x = vec->x;\n-          if ( x < xMin ) xMin = x;\n-          if ( x > xMax ) xMax = x;\n+        ras.Proc_Sweep_Step( RAS_VAR );\n@@ -2982,4 +2428,2 @@\n-          y = vec->y;\n-          if ( y < yMin ) yMin = y;\n-          if ( y > yMax ) yMax = y;\n-        }\n+        Increment( &draw_left,   1 );\n+        Increment( &draw_right, -1 );\n@@ -2987,4 +2431,1 @@\n-      acbox->xMin = xMin;\n-      acbox->xMax = xMax;\n-      acbox->yMin = yMin;\n-      acbox->yMax = yMax;\n+      while ( ++y < y_turn );\n@@ -2994,2 +2435,0 @@\n-#endif \/* STANDALONE_ *\/\n-\n@@ -3022,0 +2461,4 @@\n+    FT_TRACE6(( \"%s pass [%d..%d]\\n\",\n+                flipped ? \"Horizontal\" : \"Vertical\",\n+                y_min, y_max ));\n+\n@@ -3027,2 +2470,0 @@\n-      ras.top = ras.buff;\n-\n@@ -3041,0 +2482,3 @@\n+        FT_TRACE6(( \"band [%d..%d]: to be bisected\\n\",\n+                    y_min, y_max ));\n+\n@@ -3048,0 +2492,4 @@\n+        FT_TRACE6(( \"band [%d..%d]: %hd profiles; %td bytes remaining\\n\",\n+                    y_min, y_max, ras.num_Profs,\n+                    (char*)ras.maxBuff - (char*)ras.top ));\n+\n@@ -3049,2 +2497,1 @@\n-          if ( Draw_Sweep( RAS_VAR ) )\n-             return ras.error;\n+          Draw_Sweep( RAS_VAR );\n@@ -3079,0 +2526,1 @@\n+    Long      buffer[FT_MAX_BLACK_POOL];\n@@ -3081,0 +2529,3 @@\n+    ras.buff     = buffer;\n+    ras.sizeBuff = (&buffer)[1]; \/* Points to right after buffer. *\/\n+\n@@ -3084,0 +2535,2 @@\n+    ras.dropOutControl = 0;\n+\n@@ -3085,7 +2538,1 @@\n-      ras.dropOutControl = 2;\n-    else\n-    {\n-      if ( ras.outline.flags & FT_OUTLINE_SMART_DROPOUTS )\n-        ras.dropOutControl = 4;\n-      else\n-        ras.dropOutControl = 0;\n+      ras.dropOutControl |= 2;\n@@ -3093,3 +2540,2 @@\n-      if ( !( ras.outline.flags & FT_OUTLINE_INCLUDE_STUBS ) )\n-        ras.dropOutControl += 1;\n-    }\n+    if ( ras.outline.flags & FT_OUTLINE_SMART_DROPOUTS )\n+      ras.dropOutControl |= 4;\n@@ -3097,2 +2543,5 @@\n-    \/* Vertical Sweep *\/\n-    FT_TRACE7(( \"Vertical pass (ftraster)\\n\" ));\n+    if ( !( ras.outline.flags & FT_OUTLINE_INCLUDE_STUBS ) )\n+      ras.dropOutControl |= 1;\n+\n+    FT_TRACE6(( \"BW Raster: precision 1\/%d, dropout mode %d\\n\",\n+                ras.precision, ras.dropOutControl ));\n@@ -3100,0 +2549,1 @@\n+    \/* Vertical Sweep *\/\n@@ -3105,7 +2555,1 @@\n-    ras.bWidth  = (UShort)ras.target.width;\n-    ras.bOrigin = (Byte*)ras.target.buffer;\n-\n-    if ( ras.target.pitch > 0 )\n-      ras.bOrigin += (Long)( ras.target.rows - 1 ) * ras.target.pitch;\n-\n-    error = Render_Single_Pass( RAS_VARS 0, 0, (Int)ras.target.rows - 1 );\n+    error = Render_Single_Pass( RAS_VARS 0, 0, ras.bTop );\n@@ -3118,2 +2562,0 @@\n-      FT_TRACE7(( \"Horizontal pass (ftraster)\\n\" ));\n-\n@@ -3125,1 +2567,1 @@\n-      error = Render_Single_Pass( RAS_VARS 1, 0, (Int)ras.target.width - 1 );\n+      error = Render_Single_Pass( RAS_VARS 1, 0, ras.bRight );\n@@ -3236,2 +2678,0 @@\n-    Long  buffer[FT_MAX_BLACK_POOL];\n-\n@@ -3246,1 +2686,1 @@\n-    if ( outline->n_points == 0 || outline->n_contours <= 0 )\n+    if ( outline->n_points == 0 || outline->n_contours == 0 )\n@@ -3272,1 +2712,0 @@\n-    ras.target  = *target_map;\n@@ -3274,2 +2713,7 @@\n-    ras.buff     = buffer;\n-    ras.sizeBuff = (&buffer)[1]; \/* Points to right after buffer. *\/\n+    ras.bTop    =   (Int)target_map->rows - 1;\n+    ras.bRight  =   (Int)target_map->width - 1;\n+    ras.bPitch  =   (Int)target_map->pitch;\n+    ras.bOrigin = (PByte)target_map->buffer;\n+\n+    if ( ras.bPitch > 0 )\n+      ras.bOrigin += ras.bTop * ras.bPitch;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.c","additions":597,"deletions":1153,"binary":false,"changes":1750,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftraster.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/ftrend1.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/raster\/rasterrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2013-2023 by\n+ * Copyright (C) 2013-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/pngshim.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -52,0 +52,4 @@\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+#include \"ttgpos.h\"\n+#endif\n+\n@@ -1252,0 +1256,6 @@\n+#endif\n+\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+#define PUT_GPOS_KERNING( a )  a\n+#else\n+#define PUT_GPOS_KERNING( a )  NULL\n@@ -1277,0 +1287,2 @@\n+    PUT_GPOS_KERNING( tt_face_load_gpos ),\n+                            \/* TT_Load_Table_Func      load_gpos       *\/\n@@ -1295,0 +1307,3 @@\n+    PUT_GPOS_KERNING( tt_face_get_gpos_kerning ),\n+                           \/* TT_Face_GetKerningFunc  get_gpos_kerning *\/\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.c","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfdriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sferrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -43,0 +43,4 @@\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+#include \"ttgpos.h\"\n+#endif\n+\n@@ -1029,0 +1033,4 @@\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+    LOAD_( gpos );\n+#endif\n+\n@@ -1122,1 +1130,5 @@\n-      if ( TT_FACE_HAS_KERNING( face ) )\n+      if ( TT_FACE_HAS_KERNING( face )\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+           || face->gpos_kerning_available\n+#endif\n+         )\n@@ -1473,0 +1485,5 @@\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+    \/* freeing the GPOS table *\/\n+    tt_face_done_gpos( face );\n+#endif\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.c","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfobjs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -21,0 +21,1 @@\n+#include <freetype\/internal\/ftcalc.h>\n@@ -152,0 +153,1 @@\n+         woff.num_tables >  0xFFFU                                ||\n@@ -172,1 +174,3 @@\n-      FT_UInt  searchRange, entrySelector, rangeShift, x;\n+      FT_Int  entrySelector = FT_MSB( woff.num_tables );\n+      FT_Int  searchRange   = ( 1 << entrySelector ) * 16;\n+      FT_Int  rangeShift    = woff.num_tables * 16 - searchRange;\n@@ -175,12 +179,0 @@\n-      x             = woff.num_tables;\n-      entrySelector = 0;\n-      while ( x )\n-      {\n-        x            >>= 1;\n-        entrySelector += 1;\n-      }\n-      entrySelector--;\n-\n-      searchRange = ( 1 << entrySelector ) * 16;\n-      rangeShift  = woff.num_tables * 16 - searchRange;\n-\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.c","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2023 by\n+ * Copyright (C) 2019-2024 by\n@@ -21,0 +21,1 @@\n+#include <freetype\/internal\/ftcalc.h>\n@@ -292,1 +293,1 @@\n-    FT_ULong  v;\n+    FT_Int    shift;\n@@ -296,4 +297,1 @@\n-      checksum += ( (FT_ULong)buf[i    ] << 24 ) |\n-                  ( (FT_ULong)buf[i + 1] << 16 ) |\n-                  ( (FT_ULong)buf[i + 2] <<  8 ) |\n-                  ( (FT_ULong)buf[i + 3] <<  0 );\n+      checksum += FT_NEXT_ULONG( buf );\n@@ -301,8 +299,3 @@\n-    \/* If size is not aligned to 4, treat as if it is padded with 0s. *\/\n-    if ( size != aligned_size )\n-    {\n-      v = 0;\n-      for ( i = aligned_size ; i < size; ++i )\n-        v |= (FT_ULong)buf[i] << ( 24 - 8 * ( i & 3 ) );\n-      checksum += v;\n-    }\n+    \/* remaining bytes can be shifted and added one at a time *\/\n+    for ( shift = 24; i < size; i++, shift -= 8 )\n+      checksum += (FT_UInt32)FT_NEXT_BYTE( buf ) << shift;\n@@ -1802,1 +1795,0 @@\n-    FT_Byte*   sfnt_header;\n@@ -1856,0 +1848,1 @@\n+         woff2.num_tables >  0xFFFU                                 ||\n@@ -2146,0 +2139,7 @@\n+      if ( ttc_font->num_tables == 0 || ttc_font->num_tables > 0xFFFU )\n+      {\n+        FT_ERROR(( \"woff2_open_font: invalid WOFF2 CollectionFontEntry\\n\" ));\n+        error = FT_THROW( Invalid_Table );\n+        goto Exit;\n+      }\n+\n@@ -2201,5 +2201,0 @@\n-    sfnt_header = sfnt;\n-\n-    WRITE_ULONG( sfnt_header, woff2.flavor );\n-\n-    if ( woff2.num_tables )\n@@ -2207,1 +2202,1 @@\n-      FT_UInt  searchRange, entrySelector, rangeShift, x;\n+      FT_Byte*  sfnt_header = sfnt;\n@@ -2209,0 +2204,3 @@\n+      FT_Int  entrySelector = FT_MSB( woff2.num_tables );\n+      FT_Int  searchRange   = ( 1 << entrySelector ) * 16;\n+      FT_Int  rangeShift    = woff2.num_tables * 16 - searchRange;\n@@ -2210,11 +2208,0 @@\n-      x             = woff2.num_tables;\n-      entrySelector = 0;\n-      while ( x )\n-      {\n-        x            >>= 1;\n-        entrySelector += 1;\n-      }\n-      entrySelector--;\n-\n-      searchRange = ( 1 << entrySelector ) * 16;\n-      rangeShift  = ( woff2.num_tables * 16 ) - searchRange;\n@@ -2222,0 +2209,1 @@\n+      WRITE_ULONG ( sfnt_header, woff2.flavor );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.c","additions":20,"deletions":32,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2023 by\n+ * Copyright (C) 2019-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/sfwoff2.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2002-2023 by\n+ * Copyright (C) 2002-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmap.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2009-2023 by\n+ * Copyright (C) 2009-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcmapc.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n@@ -211,1 +211,1 @@\n-    if ( base_glyph_offset >= table_size )\n+    if ( table_size <= base_glyph_offset )\n@@ -213,2 +213,2 @@\n-    if ( colr->num_base_glyphs * BASE_GLYPH_SIZE >\n-           table_size - base_glyph_offset )\n+    if ( ( table_size - base_glyph_offset ) \/ BASE_GLYPH_SIZE\n+             < colr->num_base_glyphs )\n@@ -220,1 +220,1 @@\n-    if ( layer_offset >= table_size )\n+    if ( table_size <= layer_offset )\n@@ -222,1 +222,2 @@\n-    if ( colr->num_layers * LAYER_SIZE > table_size - layer_offset )\n+    if ( ( table_size - layer_offset ) \/ LAYER_SIZE\n+             < colr->num_layers )\n@@ -232,1 +233,1 @@\n-      if ( base_glyphs_offset_v1 >= table_size - 4 )\n+      if ( table_size - 4 <= base_glyphs_offset_v1 )\n@@ -238,2 +239,2 @@\n-      if ( num_base_glyphs_v1 * BASE_GLYPH_PAINT_RECORD_SIZE >\n-             table_size - base_glyphs_offset_v1 )\n+      if ( ( table_size - base_glyphs_offset_v1 ) \/ BASE_GLYPH_PAINT_RECORD_SIZE\n+               < num_base_glyphs_v1 )\n@@ -247,1 +248,1 @@\n-      if ( layer_offset_v1 >= table_size )\n+      if ( table_size <= layer_offset_v1 )\n@@ -252,1 +253,1 @@\n-        if ( layer_offset_v1 >= table_size - 4 )\n+        if ( table_size - 4 <= layer_offset_v1 )\n@@ -258,2 +259,2 @@\n-        if ( num_layers_v1 * LAYER_V1_LIST_PAINT_OFFSET_SIZE >\n-               table_size - layer_offset_v1 )\n+        if ( ( table_size - layer_offset_v1 ) \/ LAYER_V1_LIST_PAINT_OFFSET_SIZE\n+                < num_layers_v1 )\n@@ -282,1 +283,1 @@\n-      if ( clip_list_offset >= table_size )\n+      if ( table_size <= clip_list_offset )\n@@ -314,1 +315,1 @@\n-        if ( var_store_offset >= table_size )\n+        if ( table_size <= var_store_offset )\n@@ -664,0 +665,1 @@\n+      ENSURE_READ_BYTES( 5 );\n@@ -1281,1 +1283,2 @@\n-      FT_UInt  mid = min + ( max - min ) \/ 2;\n+      FT_UInt    mid = min + ( max - min ) \/ 2;\n+      FT_UShort  gid;\n@@ -1290,2 +1293,1 @@\n-      FT_UShort  gid = FT_NEXT_USHORT( p );\n-\n+      gid = FT_NEXT_USHORT( p );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.c","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcolr.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2018-2023 by\n+ * Copyright (C) 2018-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttcpal.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttkern.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -1049,1 +1049,1 @@\n-    FT_Memory     memory = face->root.driver->root.memory;\n+    FT_Memory     memory = face->root.memory;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2006-2023 by\n+ * Copyright (C) 2006-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttmtx.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -207,2 +207,2 @@\n-      FT_ULong   p;\n-      FT_Byte*   strings;\n+      FT_Byte*   p;\n+      FT_Byte*   p_end;\n@@ -217,2 +217,2 @@\n-      strings = (FT_Byte*)( name_strings + num_names );\n-      if ( FT_STREAM_READ( strings, post_len ) )\n+      p = (FT_Byte*)( name_strings + num_names );\n+      if ( FT_STREAM_READ( p, post_len ) )\n@@ -221,0 +221,2 @@\n+      p_end = p + post_len;\n+\n@@ -222,1 +224,1 @@\n-      for ( p = 0, n = 0; p < post_len && n < num_names; n++ )\n+      for ( n = 0; p < p_end && n < num_names; n++ )\n@@ -224,1 +226,1 @@\n-        FT_UInt  len = strings[p];\n+        FT_UInt  len = *p;\n@@ -227,5 +229,3 @@\n-        if ( len > 63U )\n-        {\n-          error = FT_THROW( Invalid_File_Format );\n-          goto Fail;\n-        }\n+        \/* names in the Adobe Glyph List are shorter than 40 characters *\/\n+        if ( len >= 40U )\n+          FT_TRACE4(( \"load_format_20: unusual %u-char name found\\n\", len ));\n@@ -233,3 +233,3 @@\n-        strings[p]      = 0;\n-        name_strings[n] = strings + p + 1;\n-        p              += len + 1;\n+        *p++            = 0;\n+        name_strings[n] = p;\n+        p              += len;\n@@ -237,1 +237,1 @@\n-      strings[post_len] = 0;\n+      *p_end = 0;\n@@ -243,1 +243,1 @@\n-                    num_names - n ));\n+                    (FT_UShort)( num_names - n ) ));\n@@ -246,1 +246,1 @@\n-          name_strings[n] = strings + post_len;\n+          name_strings[n] = p_end;\n@@ -439,7 +439,2 @@\n-    if ( format == 0x00010000L )\n-    {\n-      if ( idx < 258 )                    \/* paranoid checking *\/\n-        *PSname = MAC_NAME( idx );\n-    }\n-    else if ( format == 0x00020000L ||\n-              format == 0x00025000L )\n+    if ( format == 0x00020000L ||\n+         format == 0x00025000L )\n@@ -469,0 +464,5 @@\n+    \/* version 1.0 is only valid with 258 glyphs *\/\n+    else if ( format == 0x00010000L              &&\n+              face->max_profile.numGlyphs == 258 )\n+      *PSname = MAC_NAME( idx );\n+\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.c","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttpost.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2005-2023 by\n+ * Copyright (C) 2005-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/ttsbit.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2023 by\n+ * Copyright (C) 2019-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2019-2023 by\n+ * Copyright (C) 2019-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/sfnt\/woff2tags.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n@@ -492,1 +492,1 @@\n-    ft_jmp_buf  jump_buffer;\n+    FT_BBox     cbox;\n@@ -513,0 +513,2 @@\n+    ft_jmp_buf  jump_buffer;\n+\n@@ -1000,32 +1002,3 @@\n-   * Benchmarking shows that using DDA to flatten the quadratic Bézier arcs\n-   * is slightly faster in the following cases:\n-   *\n-   *   - When the host CPU is 64-bit.\n-   *   - When SSE2 SIMD registers and instructions are available (even on\n-   *     x86).\n-   *\n-   * For other cases, using binary splits is actually slightly faster.\n-   *\/\n-#if ( defined( __SSE2__ )                          ||   \\\n-      defined( __x86_64__ )                        ||   \\\n-      defined( _M_AMD64 )                          ||   \\\n-      ( defined( _M_IX86_FP ) && _M_IX86_FP >= 2 ) ) && \\\n-    !defined( __VMS )\n-#  define FT_SSE2 1\n-#else\n-#  define FT_SSE2 0\n-#endif\n-\n-#if FT_SSE2                || \\\n-    defined( __aarch64__ ) || \\\n-    defined( _M_ARM64 )\n-#  define BEZIER_USE_DDA  1\n-#else\n-#  define BEZIER_USE_DDA  0\n-#endif\n-\n-  \/*\n-   * For now, the code that depends on `BEZIER_USE_DDA` requires `FT_Int64`\n-   * to be defined.  If `FT_INT64` is not defined, meaning there is no\n-   * 64-bit type available, disable it to avoid compilation errors.  See for\n-   * example https:\/\/gitlab.freedesktop.org\/freetype\/freetype\/-\/issues\/1071.\n+   * For now, the code that uses DDA to render conic curves requires\n+   * `FT_Int64` to be defined.  See for example\n+   *    https:\/\/gitlab.freedesktop.org\/freetype\/freetype\/-\/issues\/1071.\n@@ -1033,6 +1006,0 @@\n-#if !defined( FT_INT64 )\n-#  undef BEZIER_USE_DDA\n-#  define BEZIER_USE_DDA  0\n-#endif\n-\n-#if BEZIER_USE_DDA\n@@ -1040,3 +1007,1 @@\n-#if FT_SSE2\n-#  include <emmintrin.h>\n-#endif\n+#ifdef FT_INT64\n@@ -1098,1 +1063,1 @@\n-    \/* We can calculate the number of necessary bisections because  *\/\n+    \/* We can calculate the number of necessary segments because    *\/\n@@ -1101,1 +1066,1 @@\n-    shift = 0;\n+    shift = 16;\n@@ -1104,2 +1069,2 @@\n-      dx   >>= 2;\n-      shift += 1;\n+      dx >>= 2;\n+      shift--;\n@@ -1108,0 +1073,1 @@\n+    count = 0x10000U >> shift;\n@@ -1153,58 +1119,2 @@\n-#if FT_SSE2\n-    \/* Experience shows that for small shift values, *\/\n-    \/* SSE2 is actually slower.                      *\/\n-    if ( shift > 2 )\n-    {\n-      union\n-      {\n-        struct { FT_Int64  ax, ay, bx, by; }  i;\n-        struct { __m128i  a, b; }  vec;\n-\n-      } u;\n-\n-      union\n-      {\n-        struct { FT_Int32  px_lo, px_hi, py_lo, py_hi; }  i;\n-        __m128i  vec;\n-\n-      } v;\n-\n-      __m128i  a, b;\n-      __m128i  r, q, q2;\n-      __m128i  p;\n-\n-\n-      u.i.ax = ax;\n-      u.i.ay = ay;\n-      u.i.bx = bx;\n-      u.i.by = by;\n-\n-      a = _mm_load_si128( &u.vec.a );\n-      b = _mm_load_si128( &u.vec.b );\n-\n-      r  = _mm_slli_epi64( a, 33 - 2 * shift );\n-      q  = _mm_slli_epi64( b, 33 - shift );\n-      q2 = _mm_slli_epi64( a, 32 - 2 * shift );\n-\n-      q = _mm_add_epi64( q2, q );\n-\n-      v.i.px_lo = 0;\n-      v.i.px_hi = p0.x;\n-      v.i.py_lo = 0;\n-      v.i.py_hi = p0.y;\n-\n-      p = _mm_load_si128( &v.vec );\n-\n-      for ( count = 1U << shift; count > 0; count-- )\n-      {\n-        p = _mm_add_epi64( p, q );\n-        q = _mm_add_epi64( q, r );\n-\n-        _mm_store_si128( &v.vec, p );\n-\n-        gray_render_line( RAS_VAR_ v.i.px_hi, v.i.py_hi );\n-      }\n-\n-      return;\n-    }\n-#endif  \/* FT_SSE2 *\/\n+    rx = LEFT_SHIFT( ax, shift + shift );\n+    ry = LEFT_SHIFT( ay, shift + shift );\n@@ -1212,2 +1122,2 @@\n-    rx = LEFT_SHIFT( ax, 33 - 2 * shift );\n-    ry = LEFT_SHIFT( ay, 33 - 2 * shift );\n+    qx = LEFT_SHIFT( bx, shift + 17 ) + rx;\n+    qy = LEFT_SHIFT( by, shift + 17 ) + ry;\n@@ -1215,2 +1125,2 @@\n-    qx = LEFT_SHIFT( bx, 33 - shift ) + LEFT_SHIFT( ax, 32 - 2 * shift );\n-    qy = LEFT_SHIFT( by, 33 - shift ) + LEFT_SHIFT( ay, 32 - 2 * shift );\n+    rx *= 2;\n+    ry *= 2;\n@@ -1221,1 +1131,1 @@\n-    for ( count = 1U << shift; count > 0; count-- )\n+    do\n@@ -1230,1 +1140,1 @@\n-    }\n+    } while ( --count );\n@@ -1233,1 +1143,1 @@\n-#else  \/* !BEZIER_USE_DDA *\/\n+#else  \/* !FT_INT64 *\/\n@@ -1327,1 +1237,1 @@\n-#endif  \/* !BEZIER_USE_DDA *\/\n+#endif  \/* !FT_INT64 *\/\n@@ -1489,133 +1399,0 @@\n-  static void\n-  gray_sweep( RAS_ARG )\n-  {\n-    int  fill = ( ras.outline.flags & FT_OUTLINE_EVEN_ODD_FILL ) ? 0x100\n-                                                                 : INT_MIN;\n-    int  coverage;\n-    int  y;\n-\n-\n-    for ( y = ras.min_ey; y < ras.max_ey; y++ )\n-    {\n-      PCell   cell  = ras.ycells[y - ras.min_ey];\n-      TCoord  x     = ras.min_ex;\n-      TArea   cover = 0;\n-\n-      unsigned char*  line = ras.target.origin - ras.target.pitch * y;\n-\n-\n-      for ( ; cell != ras.cell_null; cell = cell->next )\n-      {\n-        TArea  area;\n-\n-\n-        if ( cover != 0 && cell->x > x )\n-        {\n-          FT_FILL_RULE( coverage, cover, fill );\n-          FT_GRAY_SET( line + x, coverage, cell->x - x );\n-        }\n-\n-        cover += (TArea)cell->cover * ( ONE_PIXEL * 2 );\n-        area   = cover - cell->area;\n-\n-        if ( area != 0 && cell->x >= ras.min_ex )\n-        {\n-          FT_FILL_RULE( coverage, area, fill );\n-          line[cell->x] = (unsigned char)coverage;\n-        }\n-\n-        x = cell->x + 1;\n-      }\n-\n-      if ( cover != 0 )  \/* only if cropped *\/\n-      {\n-        FT_FILL_RULE( coverage, cover, fill );\n-        FT_GRAY_SET( line + x, coverage, ras.max_ex - x );\n-      }\n-    }\n-  }\n-\n-\n-  static void\n-  gray_sweep_direct( RAS_ARG )\n-  {\n-    int  fill = ( ras.outline.flags & FT_OUTLINE_EVEN_ODD_FILL ) ? 0x100\n-                                                                 : INT_MIN;\n-    int  coverage;\n-    int  y;\n-\n-    FT_Span  span[FT_MAX_GRAY_SPANS];\n-    int      n = 0;\n-\n-\n-    for ( y = ras.min_ey; y < ras.max_ey; y++ )\n-    {\n-      PCell   cell  = ras.ycells[y - ras.min_ey];\n-      TCoord  x     = ras.min_ex;\n-      TArea   cover = 0;\n-\n-\n-      for ( ; cell != ras.cell_null; cell = cell->next )\n-      {\n-        TArea  area;\n-\n-\n-        if ( cover != 0 && cell->x > x )\n-        {\n-          FT_FILL_RULE( coverage, cover, fill );\n-\n-          span[n].coverage = (unsigned char)coverage;\n-          span[n].x        = (short)x;\n-          span[n].len      = (unsigned short)( cell->x - x );\n-\n-          if ( ++n == FT_MAX_GRAY_SPANS )\n-          {\n-            \/* flush the span buffer and reset the count *\/\n-            ras.render_span( y, n, span, ras.render_span_data );\n-            n = 0;\n-          }\n-        }\n-\n-        cover += (TArea)cell->cover * ( ONE_PIXEL * 2 );\n-        area   = cover - cell->area;\n-\n-        if ( area != 0 && cell->x >= ras.min_ex )\n-        {\n-          FT_FILL_RULE( coverage, area, fill );\n-\n-          span[n].coverage = (unsigned char)coverage;\n-          span[n].x        = (short)cell->x;\n-          span[n].len      = 1;\n-\n-          if ( ++n == FT_MAX_GRAY_SPANS )\n-          {\n-            \/* flush the span buffer and reset the count *\/\n-            ras.render_span( y, n, span, ras.render_span_data );\n-            n = 0;\n-          }\n-        }\n-\n-        x = cell->x + 1;\n-      }\n-\n-      if ( cover != 0 )  \/* only if cropped *\/\n-      {\n-        FT_FILL_RULE( coverage, cover, fill );\n-\n-        span[n].coverage = (unsigned char)coverage;\n-        span[n].x        = (short)x;\n-        span[n].len      = (unsigned short)( ras.max_ex - x );\n-\n-        ++n;\n-      }\n-\n-      if ( n )\n-      {\n-        \/* flush the span buffer and reset the count *\/\n-        ras.render_span( y, n, span, ras.render_span_data );\n-        n = 0;\n-      }\n-    }\n-  }\n-\n-\n@@ -1937,1 +1714,1 @@\n-      FT_TRACE7(( \"band [%d..%d]: %td cell%s remaining\/\\n\",\n+      FT_TRACE7(( \"band [%d..%d]: %td cell%s remaining\\n\",\n@@ -1955,0 +1732,133 @@\n+  static void\n+  gray_sweep( RAS_ARG )\n+  {\n+    int  fill = ( ras.outline.flags & FT_OUTLINE_EVEN_ODD_FILL ) ? 0x100\n+                                                                 : INT_MIN;\n+    int  coverage;\n+    int  y;\n+\n+\n+    for ( y = ras.min_ey; y < ras.max_ey; y++ )\n+    {\n+      PCell   cell  = ras.ycells[y - ras.min_ey];\n+      TCoord  x     = ras.min_ex;\n+      TArea   cover = 0;\n+\n+      unsigned char*  line = ras.target.origin - ras.target.pitch * y;\n+\n+\n+      for ( ; cell != ras.cell_null; cell = cell->next )\n+      {\n+        TArea  area;\n+\n+\n+        if ( cover != 0 && cell->x > x )\n+        {\n+          FT_FILL_RULE( coverage, cover, fill );\n+          FT_GRAY_SET( line + x, coverage, cell->x - x );\n+        }\n+\n+        cover += (TArea)cell->cover * ( ONE_PIXEL * 2 );\n+        area   = cover - cell->area;\n+\n+        if ( area != 0 && cell->x >= ras.min_ex )\n+        {\n+          FT_FILL_RULE( coverage, area, fill );\n+          line[cell->x] = (unsigned char)coverage;\n+        }\n+\n+        x = cell->x + 1;\n+      }\n+\n+      if ( cover != 0 )  \/* only if cropped *\/\n+      {\n+        FT_FILL_RULE( coverage, cover, fill );\n+        FT_GRAY_SET( line + x, coverage, ras.max_ex - x );\n+      }\n+    }\n+  }\n+\n+\n+  static void\n+  gray_sweep_direct( RAS_ARG )\n+  {\n+    int  fill = ( ras.outline.flags & FT_OUTLINE_EVEN_ODD_FILL ) ? 0x100\n+                                                                 : INT_MIN;\n+    int  coverage;\n+    int  y;\n+\n+    FT_Span  span[FT_MAX_GRAY_SPANS];\n+    int      n = 0;\n+\n+\n+    for ( y = ras.min_ey; y < ras.max_ey; y++ )\n+    {\n+      PCell   cell  = ras.ycells[y - ras.min_ey];\n+      TCoord  x     = ras.min_ex;\n+      TArea   cover = 0;\n+\n+\n+      for ( ; cell != ras.cell_null; cell = cell->next )\n+      {\n+        TArea  area;\n+\n+\n+        if ( cover != 0 && cell->x > x )\n+        {\n+          FT_FILL_RULE( coverage, cover, fill );\n+\n+          span[n].coverage = (unsigned char)coverage;\n+          span[n].x        = (short)x;\n+          span[n].len      = (unsigned short)( cell->x - x );\n+\n+          if ( ++n == FT_MAX_GRAY_SPANS )\n+          {\n+            \/* flush the span buffer and reset the count *\/\n+            ras.render_span( y, n, span, ras.render_span_data );\n+            n = 0;\n+          }\n+        }\n+\n+        cover += (TArea)cell->cover * ( ONE_PIXEL * 2 );\n+        area   = cover - cell->area;\n+\n+        if ( area != 0 && cell->x >= ras.min_ex )\n+        {\n+          FT_FILL_RULE( coverage, area, fill );\n+\n+          span[n].coverage = (unsigned char)coverage;\n+          span[n].x        = (short)cell->x;\n+          span[n].len      = 1;\n+\n+          if ( ++n == FT_MAX_GRAY_SPANS )\n+          {\n+            \/* flush the span buffer and reset the count *\/\n+            ras.render_span( y, n, span, ras.render_span_data );\n+            n = 0;\n+          }\n+        }\n+\n+        x = cell->x + 1;\n+      }\n+\n+      if ( cover != 0 )  \/* only if cropped *\/\n+      {\n+        FT_FILL_RULE( coverage, cover, fill );\n+\n+        span[n].coverage = (unsigned char)coverage;\n+        span[n].x        = (short)x;\n+        span[n].len      = (unsigned short)( ras.max_ex - x );\n+\n+        ++n;\n+      }\n+\n+      if ( n )\n+      {\n+        \/* flush the span buffer and reset the count *\/\n+        ras.render_span( y, n, span, ras.render_span_data );\n+        n = 0;\n+      }\n+    }\n+  }\n+\n+\n@@ -1958,3 +1868,0 @@\n-    const TCoord  yMin = ras.min_ey;\n-    const TCoord  yMax = ras.max_ey;\n-\n@@ -1962,1 +1869,1 @@\n-    size_t   height = (size_t)( yMax - yMin );\n+    size_t   height = (size_t)( ras.cbox.yMax - ras.cbox.yMin );\n@@ -1988,1 +1895,1 @@\n-    for ( y = yMin; y < yMax; )\n+    for ( y = ras.cbox.yMin; y < ras.cbox.yMax; )\n@@ -1992,1 +1899,3 @@\n-      ras.max_ey = FT_MIN( y, yMax );\n+      ras.max_ey = FT_MIN( y, ras.cbox.yMax );\n+\n+      ras.count_ey = ras.max_ey - ras.min_ey;\n@@ -1995,2 +1904,2 @@\n-      band[1] = ras.min_ey;\n-      band[0] = ras.max_ey;\n+      band[1] = ras.cbox.xMin;\n+      band[0] = ras.cbox.xMax;\n@@ -2000,2 +1909,1 @@\n-        TCoord  width = band[0] - band[1];\n-        TCoord  w;\n+        TCoord  i;\n@@ -2005,2 +1913,6 @@\n-        for ( w = 0; w < width; ++w )\n-          ras.ycells[w] = ras.cell_null;\n+        ras.min_ex = band[1];\n+        ras.max_ex = band[0];\n+\n+        \/* memory management: zero out and skip ycells *\/\n+        for ( i = 0; i < ras.count_ey; ++i )\n+          ras.ycells[i] = ras.cell_null;\n@@ -2008,3 +1920,2 @@\n-        \/* memory management: skip ycells *\/\n-        n = ( (size_t)width * sizeof ( PCell ) + sizeof ( TCell ) - 1 ) \/\n-              sizeof ( TCell );\n+        n = ( (size_t)ras.count_ey * sizeof ( PCell ) + sizeof ( TCell ) - 1 )\n+              \/ sizeof ( TCell );\n@@ -2014,3 +1925,0 @@\n-        ras.min_ey    = band[1];\n-        ras.max_ey    = band[0];\n-        ras.count_ey  = width;\n@@ -2034,1 +1942,1 @@\n-        width >>= 1;\n+        i = ( band[0] - band[1] ) >> 1;\n@@ -2037,1 +1945,1 @@\n-        if ( width == 0 )\n+        if ( i == 0 )\n@@ -2045,1 +1953,1 @@\n-        band[0] += width;\n+        band[0] += i;\n@@ -2076,1 +1984,1 @@\n-    if ( outline->n_points == 0 || outline->n_contours <= 0 )\n+    if ( outline->n_points == 0 || outline->n_contours == 0 )\n@@ -2096,4 +2004,1 @@\n-      ras.min_ex = params->clip_box.xMin;\n-      ras.min_ey = params->clip_box.yMin;\n-      ras.max_ex = params->clip_box.xMax;\n-      ras.max_ey = params->clip_box.yMax;\n+      ras.cbox = params->clip_box;\n@@ -2125,4 +2030,4 @@\n-      ras.min_ex = 0;\n-      ras.min_ey = 0;\n-      ras.max_ex = (FT_Pos)target_map->width;\n-      ras.max_ey = (FT_Pos)target_map->rows;\n+      ras.cbox.xMin = 0;\n+      ras.cbox.yMin = 0;\n+      ras.cbox.xMax = (FT_Pos)target_map->width;\n+      ras.cbox.yMax = (FT_Pos)target_map->rows;\n@@ -2132,1 +2037,1 @@\n-    if ( ras.max_ex <= ras.min_ex || ras.max_ey <= ras.min_ey )\n+    if ( ras.cbox.xMin >= ras.cbox.xMax || ras.cbox.yMin >= ras.cbox.yMax )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.c","additions":183,"deletions":278,"binary":false,"changes":461,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftgrays.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmerrs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2000-2023 by\n+ * Copyright (C) 2000-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/smooth\/ftsmooth.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -220,1 +220,14 @@\n-      kerning->x = sfnt->get_kerning( ttface, left_glyph, right_glyph );\n+    {\n+      \/* Use 'kern' table if available since that can be faster; otherwise *\/\n+      \/* use GPOS kerning pairs if available.                              *\/\n+      if ( ttface->kern_avail_bits != 0 )\n+        kerning->x = sfnt->get_kerning( ttface,\n+                                        left_glyph,\n+                                        right_glyph );\n+#ifdef TT_CONFIG_OPTION_GPOS_KERNING\n+      else if ( ttface->gpos_kerning_available )\n+        kerning->x = sfnt->get_gpos_kerning( ttface,\n+                                             left_glyph,\n+                                             right_glyph );\n+#endif\n+    }\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.c","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttdriver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/tterrors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -356,1 +356,2 @@\n-    FT_Short        *cont, *cont_limit, last;\n+    FT_UShort       *cont, *cont_limit;\n+    FT_Int          last;\n@@ -375,1 +376,1 @@\n-      *cont = FT_NEXT_SHORT( p );\n+      *cont = FT_NEXT_USHORT( p );\n@@ -421,1 +422,1 @@\n-        if ( FT_QNEW_ARRAY( exec->glyphIns, n_ins ) )\n+        if ( FT_DUP( exec->glyphIns, p, n_ins ) )\n@@ -424,2 +425,0 @@\n-        FT_MEM_COPY( exec->glyphIns, p, (FT_Long)n_ins );\n-\n@@ -435,1 +434,1 @@\n-    flag       = (FT_Byte*)outline->tags;\n+    flag       = outline->tags;\n@@ -468,1 +467,1 @@\n-    flag      = (FT_Byte*)outline->tags;\n+    flag      = outline->tags;\n@@ -502,1 +501,1 @@\n-    flag      = (FT_Byte*)outline->tags;\n+    flag      = outline->tags;\n@@ -535,2 +534,2 @@\n-    outline->n_points   = (FT_Short)n_points;\n-    outline->n_contours = (FT_Short)n_contours;\n+    outline->n_points   = (FT_UShort)n_points;\n+    outline->n_contours = (FT_UShort)n_contours;\n@@ -757,4 +756,2 @@\n-    zone->n_points    = (FT_UShort)load->outline.n_points + 4 -\n-                          (FT_UShort)start_point;\n-    zone->n_contours  = load->outline.n_contours -\n-                          (FT_Short)start_contour;\n+    zone->n_points    = load->outline.n_points + 4 - (FT_UShort)start_point;\n+    zone->n_contours  = load->outline.n_contours - (FT_UShort)start_contour;\n@@ -764,2 +761,2 @@\n-    zone->tags        = (FT_Byte*)load->outline.tags + start_point;\n-    zone->contours    = (FT_UShort*)load->outline.contours + start_contour;\n+    zone->tags        = load->outline.tags + start_point;\n+    zone->contours    = load->outline.contours + start_contour;\n@@ -1049,1 +1046,1 @@\n-                         (short)num_base_points;\n+                         (FT_UShort)num_base_points;\n@@ -1062,1 +1059,1 @@\n-      FT_UInt     num_points = (FT_UInt)gloader->base.outline.n_points;\n+      FT_UInt     num_points = gloader->base.outline.n_points;\n@@ -1724,2 +1721,2 @@\n-      start_point   = (FT_UInt)gloader->base.outline.n_points;\n-      start_contour = (FT_UInt)gloader->base.outline.n_contours;\n+      start_point   = gloader->base.outline.n_points;\n+      start_contour = gloader->base.outline.n_contours;\n@@ -1744,1 +1741,1 @@\n-        short        i, limit;\n+        FT_UShort    i, limit;\n@@ -1751,1 +1748,1 @@\n-        limit = (short)gloader->current.num_subglyphs;\n+        limit = (FT_UShort)gloader->current.num_subglyphs;\n@@ -1877,1 +1874,1 @@\n-          num_base_points = (FT_UInt)gloader->base.outline.n_points;\n+          num_base_points = gloader->base.outline.n_points;\n@@ -1901,1 +1898,1 @@\n-          num_points = (FT_UInt)gloader->base.outline.n_points;\n+          num_points = gloader->base.outline.n_points;\n@@ -2316,1 +2313,1 @@\n-       * 2) FT_RENDER_MODE_MONO (i.e, monochome rendering) is requested.\n+       * 2) FT_RENDER_MODE_MONO (i.e, monochrome rendering) is requested.\n@@ -2722,1 +2719,1 @@\n-    FT_TRACE1(( \"  subglyphs = %u, contours = %hd, points = %hd,\"\n+    FT_TRACE1(( \"  subglyphs = %u, contours = %hu, points = %hu,\"\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.c","additions":24,"deletions":27,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n@@ -132,3 +132,0 @@\n-   *   size ::\n-   *     The size of the table holding the data.\n-   *\n@@ -147,1 +144,0 @@\n-                           FT_ULong   size,\n@@ -152,1 +148,1 @@\n-    FT_UInt    runcnt;\n+    FT_UInt    runcnt, cnt;\n@@ -155,0 +151,1 @@\n+    FT_Byte*   p;\n@@ -172,3 +169,1 @@\n-    if ( n > size )\n-    {\n-      FT_TRACE1(( \"ft_var_readpackedpoints: number of points too large\\n\" ));\n+    if ( FT_QNEW_ARRAY( points, n ) )\n@@ -176,9 +171,0 @@\n-    }\n-\n-    \/* in the nested loops below we increase `i' twice; *\/\n-    \/* it is faster to simply allocate one more slot    *\/\n-    \/* than to add another test within the loop         *\/\n-    if ( FT_QNEW_ARRAY( points, n + 1 ) )\n-      return NULL;\n-\n-    *point_cnt = n;\n@@ -186,0 +172,1 @@\n+    p     = stream->cursor;\n@@ -190,1 +177,11 @@\n-      runcnt = FT_GET_BYTE();\n+      if ( p >= stream->limit )\n+        goto Fail;\n+\n+      runcnt = FT_NEXT_BYTE( p );\n+      cnt    = runcnt & GX_PT_POINT_RUN_COUNT_MASK;\n+\n+      \/* first point not included in run count *\/\n+      cnt++;\n+      if ( cnt > n - i )\n+        cnt = n - i;\n+\n@@ -193,3 +190,2 @@\n-        runcnt     &= GX_PT_POINT_RUN_COUNT_MASK;\n-        first      += FT_GET_USHORT();\n-        points[i++] = first;\n+        if ( 2 * cnt > (FT_UInt)( stream->limit - p ) )\n+          goto Fail;\n@@ -197,2 +193,1 @@\n-        \/* first point not included in run count *\/\n-        for ( j = 0; j < runcnt; j++ )\n+        for ( j = 0; j < cnt; j++ )\n@@ -200,1 +195,1 @@\n-          first      += FT_GET_USHORT();\n+          first      += FT_NEXT_USHORT( p );\n@@ -202,2 +197,0 @@\n-          if ( i >= n )\n-            break;\n@@ -208,2 +201,2 @@\n-        first      += FT_GET_BYTE();\n-        points[i++] = first;\n+        if ( cnt > (FT_UInt)( stream->limit - p ) )\n+          goto Fail;\n@@ -211,1 +204,1 @@\n-        for ( j = 0; j < runcnt; j++ )\n+        for ( j = 0; j < cnt; j++ )\n@@ -213,1 +206,1 @@\n-          first      += FT_GET_BYTE();\n+          first      += FT_NEXT_BYTE( p );\n@@ -215,2 +208,0 @@\n-          if ( i >= n )\n-            break;\n@@ -221,0 +212,4 @@\n+    stream->cursor = p;\n+\n+    *point_cnt = n;\n+\n@@ -222,0 +217,6 @@\n+\n+  Fail:\n+    FT_TRACE1(( \"ft_var_readpackedpoints: invalid table\\n\" ));\n+\n+    FT_FREE( points );\n+    return NULL;\n@@ -243,3 +244,0 @@\n-   *   size ::\n-   *     The size of the table holding the data.\n-   *\n@@ -261,1 +259,0 @@\n-                           FT_ULong   size,\n@@ -267,1 +264,1 @@\n-    FT_UInt    bytes_used;\n+    FT_Byte*   p;\n@@ -275,4 +272,3 @@\n-    i          = 0;\n-    bytes_used = 0;\n-\n-    while ( i < delta_cnt && bytes_used < size )\n+    p = stream->cursor;\n+    i = 0;\n+    while ( i < delta_cnt )\n@@ -280,1 +276,4 @@\n-      runcnt = FT_GET_BYTE();\n+      if ( p >= stream->limit )\n+        goto Fail;\n+\n+      runcnt = FT_NEXT_BYTE( p );\n@@ -283,1 +282,4 @@\n-      bytes_used++;\n+      \/* first point not included in run count *\/\n+      cnt++;\n+      if ( cnt > delta_cnt - i )\n+        cnt = delta_cnt - i;\n@@ -287,2 +289,1 @@\n-        \/* `cnt` + 1 zeroes get added *\/\n-        for ( j = 0; j <= cnt && i < delta_cnt; j++ )\n+        for ( j = 0; j < cnt; j++ )\n@@ -293,6 +294,1 @@\n-        \/* `cnt` + 1 shorts from the stack *\/\n-        bytes_used += 2 * ( cnt + 1 );\n-        if ( bytes_used > size )\n-        {\n-          FT_TRACE1(( \"ft_var_readpackeddeltas:\"\n-                      \" number of short deltas too large\\n\" ));\n+        if ( 2 * cnt > (FT_UInt)( stream->limit - p ) )\n@@ -300,1 +296,0 @@\n-        }\n@@ -302,2 +297,2 @@\n-        for ( j = 0; j <= cnt && i < delta_cnt; j++ )\n-          deltas[i++] = FT_intToFixed( FT_GET_SHORT() );\n+        for ( j = 0; j < cnt; j++ )\n+          deltas[i++] = FT_intToFixed( FT_NEXT_SHORT( p ) );\n@@ -307,6 +302,1 @@\n-        \/* `cnt` + 1 signed bytes from the stack *\/\n-        bytes_used += cnt + 1;\n-        if ( bytes_used > size )\n-        {\n-          FT_TRACE1(( \"ft_var_readpackeddeltas:\"\n-                      \" number of byte deltas too large\\n\" ));\n+        if ( cnt > (FT_UInt)( stream->limit - p ) )\n@@ -314,1 +304,0 @@\n-        }\n@@ -316,9 +305,2 @@\n-        for ( j = 0; j <= cnt && i < delta_cnt; j++ )\n-          deltas[i++] = FT_intToFixed( FT_GET_CHAR() );\n-      }\n-\n-      if ( j <= cnt )\n-      {\n-        FT_TRACE1(( \"ft_var_readpackeddeltas:\"\n-                    \" number of deltas too large\\n\" ));\n-        goto Fail;\n+        for ( j = 0; j < cnt; j++ )\n+          deltas[i++] = FT_intToFixed( FT_NEXT_CHAR( p ) );\n@@ -328,5 +310,1 @@\n-    if ( i < delta_cnt )\n-    {\n-      FT_TRACE1(( \"ft_var_readpackeddeltas: not enough deltas\\n\" ));\n-      goto Fail;\n-    }\n+    stream->cursor = p;\n@@ -337,0 +315,2 @@\n+    FT_TRACE1(( \"ft_var_readpackeddeltas: invalid table\\n\" ));\n+\n@@ -599,1 +579,1 @@\n-        FT_Short  start, peak, end;\n+        FT_Int  start, peak, end;\n@@ -607,0 +587,4 @@\n+        \/* immediately tag invalid ranges with special peak = 0 *\/\n+        if ( ( start < 0 && end > 0 ) || start > peak || peak > end )\n+          peak = 0;\n+\n@@ -1027,0 +1011,3 @@\n+    if ( varData->regionIdxCount == 0 )\n+      return 0; \/* Avoid \"applying zero offset to null pointer\". *\/\n+\n@@ -1077,5 +1064,1 @@\n-        \/* compute the scalar contribution of this axis; *\/\n-        \/* ignore invalid ranges                         *\/\n-        if ( axis->startCoord > axis->peakCoord ||\n-             axis->peakCoord > axis->endCoord   )\n-          continue;\n+        FT_Fixed  ncv = ttface->blend->normalizedcoords[j];\n@@ -1083,4 +1066,0 @@\n-        else if ( axis->startCoord < 0 &&\n-                  axis->endCoord > 0   &&\n-                  axis->peakCoord != 0 )\n-          continue;\n@@ -1088,5 +1067,4 @@\n-        \/* peak of 0 means ignore this axis *\/\n-        else if ( axis->peakCoord == 0 )\n-          continue;\n-\n-        else if ( ttface->blend->normalizedcoords[j] == axis->peakCoord )\n+        \/* compute the scalar contribution of this axis *\/\n+        \/* with peak of 0 used for invalid axes         *\/\n+        if ( axis->peakCoord == ncv ||\n+             axis->peakCoord == 0   )\n@@ -1096,2 +1074,2 @@\n-        else if ( ttface->blend->normalizedcoords[j] <= axis->startCoord ||\n-                  ttface->blend->normalizedcoords[j] >= axis->endCoord   )\n+        else if ( ncv <= axis->startCoord ||\n+                  ncv >= axis->endCoord   )\n@@ -1104,10 +1082,8 @@\n-        else if ( ttface->blend->normalizedcoords[j] < axis->peakCoord )\n-          scalar =\n-            FT_MulDiv( scalar,\n-                       ttface->blend->normalizedcoords[j] - axis->startCoord,\n-                       axis->peakCoord - axis->startCoord );\n-        else\n-          scalar =\n-            FT_MulDiv( scalar,\n-                       axis->endCoord - ttface->blend->normalizedcoords[j],\n-                       axis->endCoord - axis->peakCoord );\n+        else if ( ncv < axis->peakCoord )\n+          scalar = FT_MulDiv( scalar,\n+                              ncv - axis->startCoord,\n+                              axis->peakCoord - axis->startCoord );\n+        else   \/* ncv > axis->peakCoord *\/\n+          scalar = FT_MulDiv( scalar,\n+                              axis->endCoord - ncv,\n+                              axis->endCoord - axis->peakCoord );\n@@ -1923,2 +1899,4 @@\n-      FT_TRACE6(( \"    axis %d coordinate %.5f:\\n\",\n-                  i, (double)blend->normalizedcoords[i] \/ 65536 ));\n+      FT_Fixed  ncv = blend->normalizedcoords[i];\n+\n+\n+      FT_TRACE6(( \"    axis %d coordinate %.5f:\\n\", i, (double)ncv \/ 65536 ));\n@@ -1931,1 +1909,1 @@\n-      if ( tuple_coords[i] == 0 )\n+      if ( tuple_coords[i] == ncv )\n@@ -1933,1 +1911,3 @@\n-        FT_TRACE6(( \"      tuple coordinate is zero, ignore\\n\" ));\n+        FT_TRACE6(( \"      tuple coordinate %.5f fits perfectly\\n\",\n+                    (double)tuple_coords[i] \/ 65536 ));\n+        \/* `apply' does not change *\/\n@@ -1937,8 +1917,1 @@\n-      if ( blend->normalizedcoords[i] == 0 )\n-      {\n-        FT_TRACE6(( \"      axis coordinate is zero, stop\\n\" ));\n-        apply = 0;\n-        break;\n-      }\n-\n-      if ( blend->normalizedcoords[i] == tuple_coords[i] )\n+      if ( tuple_coords[i] == 0 )\n@@ -1946,3 +1919,1 @@\n-        FT_TRACE6(( \"      tuple coordinate %.5f fits perfectly\\n\",\n-                    (double)tuple_coords[i] \/ 65536 ));\n-        \/* `apply' does not change *\/\n+        FT_TRACE6(( \"      tuple coordinate is zero, ignore\\n\" ));\n@@ -1956,2 +1927,8 @@\n-        if ( blend->normalizedcoords[i] < FT_MIN( 0, tuple_coords[i] ) ||\n-             blend->normalizedcoords[i] > FT_MAX( 0, tuple_coords[i] ) )\n+        if ( ( tuple_coords[i] > ncv && ncv > 0 ) ||\n+             ( tuple_coords[i] < ncv && ncv < 0 ) )\n+        {\n+          FT_TRACE6(( \"      tuple coordinate %.5f fits\\n\",\n+                      (double)tuple_coords[i] \/ 65536 ));\n+          apply = FT_MulDiv( apply, ncv, tuple_coords[i] );\n+        }\n+        else\n@@ -1964,6 +1941,0 @@\n-\n-        FT_TRACE6(( \"      tuple coordinate %.5f fits\\n\",\n-                    (double)tuple_coords[i] \/ 65536 ));\n-        apply = FT_MulDiv( apply,\n-                           blend->normalizedcoords[i],\n-                           tuple_coords[i] );\n@@ -1975,2 +1946,2 @@\n-        if ( blend->normalizedcoords[i] <= im_start_coords[i] ||\n-             blend->normalizedcoords[i] >= im_end_coords[i]   )\n+        if ( ncv <= im_start_coords[i] ||\n+             ncv >= im_end_coords[i]   )\n@@ -1989,1 +1960,1 @@\n-        if ( blend->normalizedcoords[i] < tuple_coords[i] )\n+        if ( ncv < tuple_coords[i] )\n@@ -1991,1 +1962,1 @@\n-                             blend->normalizedcoords[i] - im_start_coords[i],\n+                             ncv - im_start_coords[i],\n@@ -1993,1 +1964,1 @@\n-        else\n+        else \/* ncv > tuple_coords[i] *\/\n@@ -1995,1 +1966,1 @@\n-                             im_end_coords[i] - blend->normalizedcoords[i],\n+                             im_end_coords[i] - ncv,\n@@ -2144,1 +2115,2 @@\n-      v += delta << 2;\n+          \/* Convert delta in F2DOT14 to 16.16 before adding. *\/\n+          v += MUL_INT( delta, 4 );\n@@ -2146,3 +2118,3 @@\n-      \/* Clamp value range. *\/\n-      v = v >=  0x10000L ?  0x10000 : v;\n-      v = v <= -0x10000L ? -0x10000 : v;\n+          \/* Clamp value to range [-1, 1]. *\/\n+          v = v >=  0x10000L ?  0x10000 : v;\n+          v = v <= -0x10000L ? -0x10000 : v;\n@@ -2724,1 +2696,1 @@\n-      if ( FT_ALLOC( mmvar, ttface->blend->mmvar_len ) )\n+      if ( FT_DUP( mmvar, ttface->blend->mmvar, ttface->blend->mmvar_len ) )\n@@ -2726,1 +2698,0 @@\n-      FT_MEM_COPY( mmvar, ttface->blend->mmvar, ttface->blend->mmvar_len );\n@@ -3536,3 +3507,4 @@\n-    FT_Fixed*  tuple_coords    = NULL;\n-    FT_Fixed*  im_start_coords = NULL;\n-    FT_Fixed*  im_end_coords   = NULL;\n+    FT_Fixed*  peak_coords = NULL;\n+    FT_Fixed*  tuple_coords;\n+    FT_Fixed*  im_start_coords;\n+    FT_Fixed*  im_end_coords;\n@@ -3559,2 +3531,2 @@\n-      error = FT_Err_Ok;\n-      goto Exit;\n+\n+      return FT_Err_Ok;\n@@ -3567,2 +3539,2 @@\n-      error = FT_Err_Ok;\n-      goto Exit;\n+\n+      return FT_Err_Ok;\n@@ -3576,2 +3548,1 @@\n-      error = FT_Err_Ok;\n-      goto Exit;\n+      return FT_Err_Ok;\n@@ -3581,4 +3552,1 @@\n-    {\n-      error = FT_Err_Ok;\n-      goto Exit;\n-    }\n+      return FT_Err_Ok;\n@@ -3597,5 +3565,0 @@\n-    if ( FT_NEW_ARRAY( tuple_coords, blend->num_axis )    ||\n-         FT_NEW_ARRAY( im_start_coords, blend->num_axis ) ||\n-         FT_NEW_ARRAY( im_end_coords, blend->num_axis )   )\n-      goto FExit;\n-\n@@ -3624,3 +3587,2 @@\n-      sharedpoints = ft_var_readpackedpoints( stream,\n-                                              table_len,\n-                                              &spoint_count );\n+      sharedpoints = ft_var_readpackedpoints( stream, &spoint_count );\n+\n@@ -3637,2 +3599,6 @@\n-    if ( FT_NEW_ARRAY( cvt_deltas, face->cvt_size ) )\n-      goto FExit;\n+    if ( FT_QNEW_ARRAY( peak_coords, 3 * blend->num_axis ) ||\n+         FT_NEW_ARRAY( cvt_deltas, face->cvt_size )        )\n+      goto Exit;\n+\n+    im_start_coords = peak_coords + blend->num_axis;\n+    im_end_coords = im_start_coords + blend->num_axis;\n@@ -3655,1 +3621,2 @@\n-          tuple_coords[j] = FT_fdot14ToFixed( FT_GET_SHORT() );\n+          peak_coords[j] = FT_fdot14ToFixed( FT_GET_SHORT() );\n+        tuple_coords = peak_coords;\n@@ -3657,1 +3624,4 @@\n-      else if ( ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) >= blend->tuplecount )\n+      else if ( ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) < blend->tuplecount )\n+        tuple_coords = blend->tuplecoords +\n+            ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) * blend->num_axis;\n+      else\n@@ -3663,18 +3633,1 @@\n-        goto FExit;\n-      }\n-      else\n-      {\n-        if ( !blend->tuplecoords )\n-        {\n-          FT_TRACE2(( \"tt_face_vary_cvt:\"\n-                      \" no valid tuple coordinates available\\n\" ));\n-\n-          error = FT_THROW( Invalid_Table );\n-          goto FExit;\n-        }\n-\n-        FT_MEM_COPY(\n-          tuple_coords,\n-          blend->tuplecoords +\n-            ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) * blend->num_axis,\n-          blend->num_axis * sizeof ( FT_Fixed ) );\n+        goto Exit;\n@@ -3709,3 +3662,1 @@\n-        localpoints = ft_var_readpackedpoints( stream,\n-                                               table_len,\n-                                               &point_count );\n+        localpoints = ft_var_readpackedpoints( stream, &point_count );\n@@ -3722,1 +3673,0 @@\n-                                        table_len,\n@@ -3823,2 +3773,5 @@\n-  FExit:\n-    FT_FRAME_EXIT();\n+    \/* Iterate over all `FT_Size` objects and set `cvt_ready` to -1 *\/\n+    \/* to trigger rescaling of all CVT values.                      *\/\n+    FT_List_Iterate( &root->sizes_list,\n+                     tt_cvt_ready_iterator,\n+                     NULL );\n@@ -3829,3 +3782,0 @@\n-    FT_FREE( tuple_coords );\n-    FT_FREE( im_start_coords );\n-    FT_FREE( im_end_coords );\n@@ -3833,0 +3783,1 @@\n+    FT_FREE( peak_coords );\n@@ -3834,5 +3785,2 @@\n-    \/* iterate over all FT_Size objects and set `cvt_ready' to -1 *\/\n-    \/* to trigger rescaling of all CVT values                     *\/\n-    FT_List_Iterate( &root->sizes_list,\n-                     tt_cvt_ready_iterator,\n-                     NULL );\n+  FExit:\n+    FT_FRAME_EXIT();\n@@ -4102,3 +4050,4 @@\n-    FT_Fixed*  tuple_coords    = NULL;\n-    FT_Fixed*  im_start_coords = NULL;\n-    FT_Fixed*  im_end_coords   = NULL;\n+    FT_Fixed*  peak_coords = NULL;\n+    FT_Fixed*  tuple_coords;\n+    FT_Fixed*  im_start_coords;\n+    FT_Fixed*  im_end_coords;\n@@ -4139,5 +4088,0 @@\n-    if ( FT_NEW_ARRAY( points_org, n_points ) ||\n-         FT_NEW_ARRAY( points_out, n_points ) ||\n-         FT_NEW_ARRAY( has_delta, n_points )  )\n-      goto Fail1;\n-\n@@ -4149,1 +4093,1 @@\n-      goto Fail1;\n+      return error;\n@@ -4155,5 +4099,0 @@\n-    if ( FT_NEW_ARRAY( tuple_coords, blend->num_axis )    ||\n-         FT_NEW_ARRAY( im_start_coords, blend->num_axis ) ||\n-         FT_NEW_ARRAY( im_end_coords, blend->num_axis )   )\n-      goto Fail2;\n-\n@@ -4171,1 +4110,1 @@\n-      goto Fail2;\n+      goto FExit;\n@@ -4182,3 +4121,2 @@\n-      sharedpoints = ft_var_readpackedpoints( stream,\n-                                              blend->gvar_size,\n-                                              &spoint_count );\n+      sharedpoints = ft_var_readpackedpoints( stream, &spoint_count );\n+\n@@ -4195,3 +4133,10 @@\n-    if ( FT_NEW_ARRAY( point_deltas_x, n_points ) ||\n-         FT_NEW_ARRAY( point_deltas_y, n_points ) )\n-      goto Fail3;\n+    if ( FT_QNEW_ARRAY( peak_coords, 3 * blend->num_axis ) ||\n+         FT_NEW_ARRAY( point_deltas_x, 2 * n_points )      ||\n+         FT_QNEW_ARRAY( points_org, n_points )             ||\n+         FT_QNEW_ARRAY( points_out, n_points )             ||\n+         FT_QNEW_ARRAY( has_delta, n_points )              )\n+      goto Exit;\n+\n+    im_start_coords = peak_coords + blend->num_axis;\n+    im_end_coords   = im_start_coords + blend->num_axis;\n+    point_deltas_y  = point_deltas_x + n_points;\n@@ -4220,1 +4165,2 @@\n-          tuple_coords[j] = FT_fdot14ToFixed( FT_GET_SHORT() );\n+          peak_coords[j] = FT_fdot14ToFixed( FT_GET_SHORT() );\n+        tuple_coords = peak_coords;\n@@ -4222,1 +4168,4 @@\n-      else if ( ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) >= blend->tuplecount )\n+      else if ( ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) < blend->tuplecount )\n+        tuple_coords = blend->tuplecoords +\n+            ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) * blend->num_axis;\n+      else\n@@ -4228,1 +4177,1 @@\n-        goto Fail3;\n+        goto Exit;\n@@ -4230,6 +4179,0 @@\n-      else\n-        FT_MEM_COPY(\n-          tuple_coords,\n-          blend->tuplecoords +\n-            ( tupleIndex & GX_TI_TUPLE_INDEX_MASK ) * blend->num_axis,\n-          blend->num_axis * sizeof ( FT_Fixed ) );\n@@ -4263,3 +4206,1 @@\n-        localpoints = ft_var_readpackedpoints( stream,\n-                                               blend->gvar_size,\n-                                               &point_count );\n+        localpoints = ft_var_readpackedpoints( stream, &point_count );\n@@ -4275,1 +4216,0 @@\n-                                          blend->gvar_size,\n@@ -4279,1 +4219,0 @@\n-                                          blend->gvar_size,\n@@ -4463,5 +4402,1 @@\n-  Fail3:\n-    FT_FREE( point_deltas_x );\n-    FT_FREE( point_deltas_y );\n-\n-  Fail2:\n+  Exit:\n@@ -4470,7 +4405,0 @@\n-    FT_FREE( tuple_coords );\n-    FT_FREE( im_start_coords );\n-    FT_FREE( im_end_coords );\n-\n-    FT_FRAME_EXIT();\n-\n-  Fail1:\n@@ -4480,0 +4408,5 @@\n+    FT_FREE( peak_coords );\n+    FT_FREE( point_deltas_x );\n+\n+  FExit:\n+    FT_FRAME_EXIT();\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.c","additions":175,"deletions":242,"binary":false,"changes":417,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2004-2023 by\n+ * Copyright (C) 2004-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttgxvar.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -5273,1 +5273,1 @@\n-    FT_Short         contour, bounds;\n+    FT_UShort        contour, bounds;\n@@ -5277,1 +5277,1 @@\n-    contour = (FT_Short)args[0];\n+    contour = (FT_UShort)args[0];\n@@ -5293,2 +5293,1 @@\n-      start = (FT_UShort)( exc->zp2.contours[contour - 1] + 1 -\n-                           exc->zp2.first_point );\n+      start = exc->zp2.contours[contour - 1] + 1 - exc->zp2.first_point;\n@@ -5300,2 +5299,1 @@\n-      limit = (FT_UShort)( exc->zp2.contours[contour] -\n-                           exc->zp2.first_point + 1 );\n+      limit = exc->zp2.contours[contour] + 1 - exc->zp2.first_point;\n@@ -5344,1 +5342,1 @@\n-      limit = (FT_UShort)exc->zp2.n_points;\n+      limit = exc->zp2.n_points;\n@@ -5346,1 +5344,1 @@\n-      limit = (FT_UShort)( exc->zp2.contours[exc->zp2.n_contours - 1] + 1 );\n+      limit = exc->zp2.contours[exc->zp2.n_contours - 1] + 1;\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.c","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttinterp.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -118,1 +118,1 @@\n-                    FT_Short      maxContours,\n+                    FT_UShort     maxContours,\n@@ -155,9 +155,12 @@\n-    unsigned int  i;\n-\n-\n-    if ( ft_strlen( name ) < 8 || name[6] != '+' )\n-      return name;\n-\n-    for ( i = 0; i < 6; i++ )\n-      if ( !ft_isupper( name[i] ) )\n-        return name;\n+    if ( ft_isupper( name[0] ) &&\n+         ft_isupper( name[1] ) &&\n+         ft_isupper( name[2] ) &&\n+         ft_isupper( name[3] ) &&\n+         ft_isupper( name[4] ) &&\n+         ft_isupper( name[5] ) &&\n+              '+' == name[6]   &&\n+                     name[7]   )\n+    {\n+      FT_TRACE7(( \"name without randomization tag: %s\\n\", name + 7 ));\n+      return name + 7;\n+    }\n@@ -165,2 +168,1 @@\n-    FT_TRACE7(( \"name without randomization tag: %s\\n\", name + 7 ));\n-    return name + 7;\n+    return name;\n@@ -257,1 +259,2 @@\n-    FT_UInt    i;\n+    FT_Byte*   p;\n+    FT_Int     shift;\n@@ -263,0 +266,2 @@\n+    p = (FT_Byte*)stream->cursor;\n+\n@@ -264,1 +269,1 @@\n-      checksum += (FT_UInt32)FT_GET_ULONG();\n+      checksum += FT_NEXT_ULONG( p );\n@@ -266,2 +271,2 @@\n-    for ( i = 3; length > 0; length--, i-- )\n-      checksum += (FT_UInt32)FT_GET_BYTE() << ( i * 8 );\n+    for ( shift = 24; length > 0; length--, shift -=8 )\n+      checksum += (FT_UInt32)FT_NEXT_BYTE( p ) << shift;\n@@ -785,2 +790,1 @@\n-      if ( FT_HAS_MULTIPLE_MASTERS( ttface ) &&\n-           instance_index > 0                )\n+      if ( FT_HAS_MULTIPLE_MASTERS( ttface ) )\n@@ -993,3 +997,0 @@\n-    \/* unscaled CVT values are already stored in 26.6 format *\/\n-    FT_Fixed  scale = size->ttmetrics.scale >> 6;\n-\n@@ -1002,1 +1003,4 @@\n-      size->cvt[i] = FT_MulFix( face->cvt[i], scale );\n+      \/* Unscaled CVT values are already stored in 26.6 format.            *\/\n+      \/* Note that this scaling operation is very sensitive to rounding;   *\/\n+      \/* the integer division by 64 must be applied to the first argument. *\/\n+      size->cvt[i] = FT_MulFix( face->cvt[i] \/ 64, size->ttmetrics.scale );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.c","additions":27,"deletions":23,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -108,1 +108,1 @@\n-                    FT_Short      maxContours,\n+                    FT_UShort     maxContours,\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttobjs.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/truetype\/ttpload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1afm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -315,1 +315,0 @@\n-        {\n@@ -317,2 +316,0 @@\n-          ((FT_Char *)value)[retval - 1] = (FT_Char)'\\0';\n-        }\n@@ -347,1 +344,0 @@\n-        {\n@@ -349,3 +345,1 @@\n-                     retval - 1 );\n-          ((FT_Char *)value)[retval - 1] = (FT_Char)'\\0';\n-        }\n+                     retval );\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.c","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1driver.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 2001-2023 by\n+ * Copyright (C) 2001-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1errors.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1gload.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n@@ -754,0 +754,1 @@\n+        FT_FREE( dmap->blend_points );\n@@ -1046,1 +1047,2 @@\n-      if ( FT_QNEW_ARRAY( map->design_points, num_points * 2 ) )\n+      if ( FT_QNEW_ARRAY( map->design_points, num_points ) ||\n+           FT_QNEW_ARRAY( map->blend_points,  num_points ) )\n@@ -1048,1 +1050,0 @@\n-      map->blend_points = map->design_points + num_points;\n@@ -1879,1 +1880,1 @@\n-        if ( FT_QALLOC( temp, size ) )\n+        if ( FT_DUP( temp, base, size ) )\n@@ -1881,1 +1882,0 @@\n-        FT_MEM_COPY( temp, base, size );\n@@ -2093,1 +2093,1 @@\n-          if ( FT_QALLOC( temp, size ) )\n+          if ( FT_DUP( temp, base, size ) )\n@@ -2095,1 +2095,0 @@\n-          FT_MEM_COPY( temp, base, size );\n@@ -2287,1 +2286,1 @@\n-    { 0, T1_FIELD_LOCATION_CID_INFO, T1_FIELD_TYPE_NONE, 0, 0, 0, 0, 0, 0 }\n+    T1_FIELD_ZERO\n@@ -2395,1 +2394,1 @@\n-          for (;;)\n+          while ( keyword->len )\n@@ -2397,1 +2396,1 @@\n-            FT_Byte*  name;\n+            FT_Byte*  name = (FT_Byte*)keyword->ident;\n@@ -2400,7 +2399,2 @@\n-            name = (FT_Byte*)keyword->ident;\n-            if ( !name )\n-              break;\n-\n-            if ( cur[0] == name[0]                      &&\n-                 len == ft_strlen( (const char *)name ) &&\n-                 ft_memcmp( cur, name, len ) == 0       )\n+            if ( keyword->len == len              &&\n+                 ft_memcmp( cur, name, len ) == 0 )\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.c","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1load.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1objs.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1parse.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * Copyright (C) 1996-2023 by\n+ * Copyright (C) 1996-2024 by\n","filename":"src\/java.desktop\/share\/native\/libfreetype\/src\/type1\/t1tokens.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -615,2 +615,2 @@\n-        cmsUInt32Number SourceStrideIncrement = 0;\n-        cmsUInt32Number DestStrideIncrement = 0;\n+        size_t SourceStrideIncrement = 0;\n+        size_t DestStrideIncrement = 0;\n@@ -643,2 +643,2 @@\n-        cmsUInt32Number SourceStrideIncrements[cmsMAXCHANNELS];\n-        cmsUInt32Number DestStrideIncrements[cmsMAXCHANNELS];\n+        size_t SourceStrideIncrements[cmsMAXCHANNELS];\n+        size_t DestStrideIncrements[cmsMAXCHANNELS];\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsalpha.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -120,2 +120,1 @@\n-static\n-cmsFloat64Number computeD(cmsCIECAM02* pMod)\n+static cmsFloat64Number computeD(cmsCIECAM02* pMod)\n@@ -123,1 +122,1 @@\n-    cmsFloat64Number D;\n+    cmsFloat64Number D, temp;\n@@ -125,1 +124,1 @@\n-    D = pMod->F - (1.0\/3.6)*(exp(((-pMod ->LA-42) \/ 92.0)));\n+    temp = 1.0 - ((1.0 \/ 3.6) * exp((-pMod->LA - 42) \/ 92.0));\n@@ -127,0 +126,1 @@\n+    D = pMod->F * temp;\n@@ -130,1 +130,0 @@\n-\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmscam02.c","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -447,0 +447,1 @@\n+    s->begin[0] = 0;\n@@ -450,1 +451,1 @@\n-void StringAppend(string* s, char c)\n+cmsBool StringAppend(string* s, char c)\n@@ -458,0 +459,2 @@\n+        if (new_ptr == NULL) return FALSE;\n+\n@@ -469,0 +472,2 @@\n+\n+    return TRUE;\n@@ -478,1 +483,1 @@\n-void StringCat(string* s, const char* c)\n+cmsBool StringCat(string* s, const char* c)\n@@ -482,1 +487,1 @@\n-        StringAppend(s, *c);\n+        if (!StringAppend(s, *c)) return FALSE;\n@@ -485,0 +490,2 @@\n+\n+    return TRUE;\n@@ -833,1 +840,6 @@\n-                StringAppend(it8->str, (char)it8->ch);\n+                if (!StringAppend(it8->str, (char)it8->ch)) {\n+\n+                    SynError(it8, \"Out of memory\");\n+                    return;\n+                }\n+\n@@ -863,1 +875,5 @@\n-                StringAppend(it8->id, (char) it8->ch);\n+                if (!StringAppend(it8->id, (char)it8->ch)) {\n+\n+                    SynError(it8, \"Out of memory\");\n+                    return;\n+                }\n@@ -907,1 +923,0 @@\n-                                it8->sy = SEOF;\n@@ -929,1 +944,0 @@\n-                                it8->sy = SEOF;\n@@ -982,1 +996,5 @@\n-                    StringCat(it8->id, buffer);\n+                    if (!StringCat(it8->id, buffer)) {\n+\n+                        SynError(it8, \"Out of memory\");\n+                        return;\n+                    }\n@@ -986,1 +1004,5 @@\n-                        StringAppend(it8->id, (char) it8->ch);\n+                        if (!StringAppend(it8->id, (char)it8->ch)) {\n+\n+                            SynError(it8, \"Out of memory\");\n+                            return;\n+                        }\n@@ -1041,1 +1063,0 @@\n-            it8->sy = SEOF;\n@@ -1056,1 +1077,0 @@\n-                    it8->sy = SEOF;\n@@ -1062,2 +1082,0 @@\n-                {\n-                    it8->sy = SEOF;\n@@ -1065,1 +1083,1 @@\n-                }\n+\n@@ -1072,0 +1090,1 @@\n+\n@@ -1073,1 +1092,0 @@\n-                        it8->sy = SEOF;\n@@ -1081,0 +1099,1 @@\n+\n@@ -1082,1 +1101,0 @@\n-                    it8->sy = SEOF;\n@@ -1090,1 +1108,0 @@\n-                        it8->sy = SEOF;\n@@ -1105,4 +1122,4 @@\n-        if (!Check(it8, SEOLN, \"Expected separator\")) return FALSE;\n-        while (it8 -> sy == SEOLN)\n-                        InSymbol(it8);\n-        return TRUE;\n+    if (!Check(it8, SEOLN, \"Expected separator\")) return FALSE;\n+    while (it8->sy == SEOLN)\n+        InSymbol(it8);\n+    return TRUE;\n@@ -1117,2 +1134,2 @@\n-        if (it8->sy == sy && it8->sy != SEOF)\n-                        InSymbol(it8);\n+    if (it8->sy == sy && it8->sy != SEOF && it8->sy != SSYNERROR)\n+        InSymbol(it8);\n@@ -1127,1 +1144,1 @@\n-             InSymbol(it8);\n+        InSymbol(it8);\n@@ -1238,0 +1255,1 @@\n+    if (size == 0) return NULL;\n@@ -1241,0 +1259,2 @@\n+        cmsUInt8Number* new_block;\n+\n@@ -1251,1 +1271,5 @@\n-        it8 ->Allocator.Block = (cmsUInt8Number*) AllocBigBlock(it8, it8 ->Allocator.BlockSize);\n+        new_block = (cmsUInt8Number*)AllocBigBlock(it8, it8->Allocator.BlockSize);\n+        if (new_block == NULL)\n+            return NULL;\n+\n+        it8->Allocator.Block = new_block;\n@@ -1261,1 +1285,0 @@\n-\n@@ -1269,1 +1292,1 @@\n-    cmsUInt32Number Size = (cmsUInt32Number) strlen(str)+1;\n+    cmsUInt32Number Size;\n@@ -1272,0 +1295,3 @@\n+    if (str == NULL) return NULL;\n+\n+    Size = (cmsUInt32Number)strlen(str) + 1;\n@@ -1407,1 +1433,1 @@\n-void AllocTable(cmsIT8* it8)\n+cmsBool AllocTable(cmsIT8* it8)\n@@ -1411,0 +1437,3 @@\n+    if (it8->TablesCount >= (MAXTABLES-1))\n+        return FALSE;\n+\n@@ -1418,0 +1447,1 @@\n+    return TRUE;\n@@ -1429,1 +1459,4 @@\n-             AllocTable(it8);\n+             if (!AllocTable(it8)) {\n+                 SynError(it8, \"Too many tables\");\n+                 return -1;\n+             }\n@@ -1613,2 +1646,2 @@\n-    if (n > 0x7fffffffL) return 0x7fffffffL;\n-    if (n < -0x7ffffffeL) return -0x7ffffffeL;\n+    if (n > 0x7ffffff0L) return 0x7ffffff0L;\n+    if (n < -0x7ffffff0L) return -0x7ffffff0L;\n@@ -1623,0 +1656,2 @@\n+    cmsUInt32Number size;\n+\n@@ -1625,1 +1660,1 @@\n-    if (t -> DataFormat) return TRUE;    \/\/ Already allocated\n+    if (t->DataFormat) return TRUE;    \/\/ Already allocated\n@@ -1627,1 +1662,1 @@\n-    t -> nSamples  = satoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n+    t->nSamples = satoi(cmsIT8GetProperty(it8, \"NUMBER_OF_FIELDS\"));\n@@ -1629,1 +1664,1 @@\n-    if (t -> nSamples <= 0) {\n+    if (t->nSamples <= 0 || t->nSamples > 0x7ffe) {\n@@ -1631,1 +1666,1 @@\n-        SynError(it8, \"AllocateDataFormat: Unknown NUMBER_OF_FIELDS\");\n+        SynError(it8, \"Wrong NUMBER_OF_FIELDS\");\n@@ -1633,1 +1668,3 @@\n-        }\n+    }\n+\n+    size = ((cmsUInt32Number)t->nSamples + 1) * sizeof(char*);\n@@ -1635,1 +1672,1 @@\n-    t -> DataFormat = (char**) AllocChunk (it8, ((cmsUInt32Number) t->nSamples + 1) * sizeof(char *));\n+    t->DataFormat = (char**)AllocChunk(it8, size);\n@@ -1638,1 +1675,1 @@\n-        SynError(it8, \"AllocateDataFormat: Unable to allocate dataFormat array\");\n+        SynError(it8, \"Unable to allocate dataFormat array\");\n@@ -1667,1 +1704,1 @@\n-    if (n > t -> nSamples) {\n+    if (n >= t -> nSamples) {\n@@ -1716,1 +1753,2 @@\n-    if (t -> nSamples < 0 || t->nSamples > 0x7ffe || t->nPatches < 0 || t->nPatches > 0x7ffe)\n+    if (t -> nSamples < 0 || t->nSamples > 0x7ffe || t->nPatches < 0 || t->nPatches > 0x7ffe ||\n+        (t->nPatches * t->nSamples) > 200000)\n@@ -1722,1 +1760,1 @@\n-        \/\/ Some dumb analizers warns of possible overflow here, just take a look couple of lines above.\n+        \/\/ Some dumb analyzers warns of possible overflow here, just take a look couple of lines above.\n@@ -1751,0 +1789,2 @@\n+    char* ptr;\n+\n@@ -1753,0 +1793,1 @@\n+\n@@ -1769,1 +1810,5 @@\n-    t->Data [nSet * t -> nSamples + nField] = AllocString(it8, Val);\n+    ptr = AllocString(it8, Val);\n+    if (ptr == NULL)\n+        return FALSE;\n+\n+    t->Data [nSet * t -> nSamples + nField] = ptr;\n@@ -2124,1 +2169,1 @@\n-    while (it8->sy != SEND_DATA && it8->sy != SEOF)\n+    while (it8->sy != SEND_DATA && it8->sy != SEOF && it8->sy != SSYNERROR)\n@@ -2132,1 +2177,1 @@\n-        if (it8->sy != SEND_DATA && it8->sy != SEOF) {\n+        if (it8->sy != SEND_DATA && it8->sy != SEOF && it8->sy != SSYNERROR) {\n@@ -2228,2 +2273,2 @@\n-                AddToList(it8, &GetTable(it8)->HeaderList, VarName, NULL, Buffer,\n-                    (it8->sy == SSTRING) ? WRITE_STRINGIFY : WRITE_UNCOOKED);\n+                if (AddToList(it8, &GetTable(it8)->HeaderList, VarName, NULL, Buffer,\n+                    (it8->sy == SSTRING) ? WRITE_STRINGIFY : WRITE_UNCOOKED) == NULL) return FALSE;\n@@ -2335,1 +2380,3 @@\n-                    if (it8 -> sy != SEOF) {\n+                    if (it8 -> sy != SEOF && it8->sy != SSYNERROR) {\n+\n+                            if (!AllocTable(it8)) return FALSE;\n@@ -2337,1 +2384,0 @@\n-                            AllocTable(it8);\n@@ -3067,1 +3113,2 @@\n-    while (cube->sy != SEOF) {\n+    while (cube->sy != SEOF && cube->sy != SSYNERROR) {\n+\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmscgats.c","additions":97,"deletions":50,"binary":false,"changes":147,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -753,1 +753,0 @@\n-            cmsGetColorSpace(hProfile) == cmsSigCmykData &&\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmscnvrt.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmserr.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsgamma.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2021 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -330,1 +330,1 @@\n-    cmsInt32Number nChannels;\n+    cmsInt32Number nChannels, nInputChannels;\n@@ -332,0 +332,1 @@\n+    cmsColorSpaceSignature InputColorSpace;\n@@ -377,1 +378,0 @@\n-\n@@ -381,1 +381,4 @@\n-    dwFormat    = (CHANNELS_SH(nChannels)|BYTES_SH(2));\n+\n+    InputColorSpace = cmsGetColorSpace(ProfileList[0]);\n+    nInputChannels  = cmsChannelsOfColorSpace(InputColorSpace);\n+    dwFormat        = (CHANNELS_SH(nInputChannels)|BYTES_SH(2));\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsgmt.c","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmshalf.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -527,1 +527,1 @@\n-    x0 = (int) floor(px); fx = px - (cmsFloat32Number) x0;  \/\/ We need full floor funcionality here\n+    x0 = (int) floor(px); fx = px - (cmsFloat32Number) x0;  \/\/ We need full floor functionality here\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsintrp.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -309,0 +309,5 @@\n+        if (Buffer == NULL) {\n+            cmsSignalError(ContextID, cmsERROR_WRITE, \"Couldn't write profile to NULL pointer\");\n+            goto Error;\n+        }\n+\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsio0.c","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsio1.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -1112,1 +1112,1 @@\n-\/\/ Fom XYZ to floating point PCS\n+\/\/ From XYZ to floating point PCS\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmslut.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -283,2 +283,2 @@\n-\/\/ In the header, rendering intentent, attributes and ID should be set to zero\n-\/\/ before computing MD5 checksum (per 6.1.13 in ICC spec)\n+\/\/ In the header, rendering intentent, flags and ID should be set to zero\n+\/\/ before computing MD5 checksum (per 7.2.18 of ICC spec 4.4)\n@@ -302,2 +302,2 @@\n-    \/\/ Set RI, attributes and ID\n-    memset(&Icc ->attributes, 0, sizeof(Icc ->attributes));\n+    \/\/ Set RI, flags and ID\n+    Icc ->flags = 0;\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsmd5.c","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsmtrx.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -601,1 +601,1 @@\n-    \/\/ Precess each character\n+    \/\/ Process each character\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsnamed.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsopt.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -220,1 +220,1 @@\n-            alpha_factor = _cmsToFixedDomain(FROM_8_TO_16(accum[(nChan) * Stride]));\n+            alpha_factor = _cmsToFixedDomain(FROM_8_TO_16(accum[nChan * Stride]));\n@@ -609,2 +609,2 @@\n-   cmsUInt16Number alpha = (ExtraFirst ? accum[0] : accum[nChan - 1]);\n-   cmsUInt32Number alpha_factor = _cmsToFixedDomain(FROM_8_TO_16(alpha));\n+   cmsUInt16Number alpha = (ExtraFirst ? ((cmsUInt16Number*)accum)[0] : ((cmsUInt16Number*)accum)[nChan]);\n+   cmsUInt32Number alpha_factor = _cmsToFixedDomain(alpha);\n@@ -694,2 +694,2 @@\n-    cmsUInt16Number  alpha = (ExtraFirst ? accum[0] : accum[(nChan - 1) * Stride]);\n-    cmsUInt32Number alpha_factor = _cmsToFixedDomain(FROM_8_TO_16(alpha));\n+    cmsUInt16Number alpha = (ExtraFirst ? ((cmsUInt16Number*)accum)[0] : ((cmsUInt16Number*)accum)[nChan * Stride \/ 2]);\n+    cmsUInt32Number alpha_factor = _cmsToFixedDomain(alpha);\n@@ -1110,2 +1110,1 @@\n-static\n-cmsUInt32Number PixelSize(cmsUInt32Number Format)\n+cmsINLINE cmsUInt32Number PixelSize(cmsUInt32Number Format)\n@@ -1457,1 +1456,1 @@\n-            alpha_factor = (ExtraFirst ? ptr[0] : ptr[(nChan) * Stride]) \/ maximum;\n+            alpha_factor = (ExtraFirst ? ptr[0] : ptr[nChan * Stride]) \/ maximum;\n@@ -3055,0 +3054,1 @@\n+    Stride \/= 2;\n@@ -3118,1 +3118,1 @@\n-                     ((cmsFloat32Number*)output)[(i + start)* Stride] = (cmsFloat32Number)v;\n+                     ((cmsFloat32Number*)output)[(i + start) * Stride] = (cmsFloat32Number)v;\n@@ -3458,1 +3458,1 @@\n-    Stride \/= PixelSize(info->OutputFormat);\n+    Stride \/= PixelSize(info->InputFormat);\n@@ -4065,0 +4065,3 @@\n+    \/\/ Fix float spaces\n+    nBytes &= 7;\n+\n@@ -4082,0 +4085,3 @@\n+    \/\/ Fix float spaces\n+    nBytes &= 7;\n+\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmspack.c","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmspcs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -938,1 +938,4 @@\n-    memcpy(&ctx->DefaultMemoryManager, &src->DefaultMemoryManager, sizeof(ctx->DefaultMemoryManager));\n+    if (ContextID == NULL)\n+        _cmsInstallAllocFunctions(NULL, &ctx->DefaultMemoryManager);\n+    else\n+        memcpy(&ctx->DefaultMemoryManager, &src->DefaultMemoryManager, sizeof(ctx->DefaultMemoryManager));\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsplugin.c","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -497,1 +497,1 @@\n-    \/\/ Emit intepolation code\n+    \/\/ Emit interpolation code\n@@ -621,1 +621,1 @@\n-    \/\/ Hadle the parenthesis on rows\n+    \/\/ Handle the parenthesis on rows\n@@ -697,2 +697,4 @@\n-        for (i = 0; i < sc.Pipeline->Params->nInputs; i++)\n-            _cmsIOPrintf(m, \" %d \", sc.Pipeline->Params->nSamples[i]);\n+        for (i = 0; i < sc.Pipeline->Params->nInputs; i++) {\n+            if (i < MAX_INPUT_DIMENSIONS)\n+                _cmsIOPrintf(m, \" %d \", sc.Pipeline->Params->nSamples[i]);\n+        }\n@@ -872,1 +874,1 @@\n-int WriteInputLUT(cmsIOHANDLER* m, cmsHPROFILE hProfile, cmsUInt32Number Intent, cmsUInt32Number dwFlags)\n+cmsBool WriteInputLUT(cmsIOHANDLER* m, cmsHPROFILE hProfile, cmsUInt32Number Intent, cmsUInt32Number dwFlags)\n@@ -878,1 +880,1 @@\n-    int rc;\n+\n@@ -903,1 +905,1 @@\n-        return 0;\n+        return FALSE;\n@@ -922,0 +924,1 @@\n+            cmsBool rc;\n@@ -924,1 +927,4 @@\n-            if (DeviceLink == NULL) return 0;\n+            if (DeviceLink == NULL) {\n+                cmsDeleteTransform(xform);\n+                return FALSE;\n+            }\n@@ -931,1 +937,4 @@\n-            if (rc == 0) return 0;\n+            if (!rc) {\n+                cmsDeleteTransform(xform);\n+                return FALSE;\n+            }\n@@ -937,0 +946,1 @@\n+        cmsDeleteTransform(xform);\n@@ -938,1 +948,1 @@\n-        return 0;\n+        return FALSE;\n@@ -941,1 +951,0 @@\n-\n@@ -943,2 +952,1 @@\n-\n-    return 1;\n+    return TRUE;\n@@ -1287,1 +1295,1 @@\n-int WriteOutputLUT(cmsIOHANDLER* m, cmsHPROFILE hProfile, cmsUInt32Number Intent, cmsUInt32Number dwFlags)\n+cmsBool WriteOutputLUT(cmsIOHANDLER* m, cmsHPROFILE hProfile, cmsUInt32Number Intent, cmsUInt32Number dwFlags)\n@@ -1305,1 +1313,1 @@\n-    if (hLab == NULL) return 0;\n+    if (hLab == NULL) return FALSE;\n@@ -1330,1 +1338,1 @@\n-        return 0;\n+        return FALSE;\n@@ -1338,1 +1346,2 @@\n-        return 0;\n+        cmsSignalError(m->ContextID, cmsERROR_CORRUPTION_DETECTED, \"Cannot access link for CRD\");\n+        return FALSE;\n@@ -1343,1 +1352,6 @@\n-    _cmsOptimizePipeline(m->ContextID, &DeviceLink, RelativeEncodingIntent, &InFrm, &OutputFormat, &dwFlags);\n+    if (!_cmsOptimizePipeline(m->ContextID, &DeviceLink, RelativeEncodingIntent, &InFrm, &OutputFormat, &dwFlags)) {\n+        cmsPipelineFree(DeviceLink);\n+        cmsDeleteTransform(xform);\n+        cmsSignalError(m->ContextID, cmsERROR_CORRUPTION_DETECTED, \"Cannot create CLUT table for CRD\");\n+        return FALSE;\n+    }\n@@ -1348,1 +1362,0 @@\n-\n@@ -1370,0 +1383,7 @@\n+        if (first->Type != cmsSigCLutElemType) {\n+            cmsPipelineFree(DeviceLink);\n+            cmsDeleteTransform(xform);\n+            cmsSignalError(m->ContextID, cmsERROR_CORRUPTION_DETECTED, \"Cannot create CLUT, revise your flags!\");\n+            return FALSE;\n+        }\n+\n@@ -1392,1 +1412,1 @@\n-    return 1;\n+    return TRUE;\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsps2.c","additions":41,"deletions":21,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmssamp.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmssm.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -602,0 +602,172 @@\n+\/\/ ********************************************************************************\n+\/\/ Type cmsSigUInt8ArrayType\n+\/\/ ********************************************************************************\n+\/\/ This type represents an array of generic 1-byte\/8-bit quantity.\n+\n+static\n+void* Type_UInt8_Read(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, cmsUInt32Number* nItems, cmsUInt32Number SizeOfTag)\n+{\n+    cmsUInt8Number* array;\n+    cmsUInt32Number i, n;\n+\n+    *nItems = 0;\n+    n = SizeOfTag \/ sizeof(cmsUInt8Number);\n+    array = (cmsUInt8Number*)_cmsCalloc(self->ContextID, n, sizeof(cmsUInt8Number));\n+    if (array == NULL) return NULL;\n+\n+    for (i = 0; i < n; i++) {\n+\n+        if (!_cmsReadUInt8Number(io, &array[i])) {\n+\n+            _cmsFree(self->ContextID, array);\n+            return NULL;\n+        }\n+    }\n+\n+    *nItems = n;\n+    return (void*)array;\n+}\n+\n+static\n+cmsBool Type_UInt8_Write(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, void* Ptr, cmsUInt32Number nItems)\n+{\n+    cmsUInt8Number* Value = (cmsUInt8Number*)Ptr;\n+    cmsUInt32Number i;\n+\n+    for (i = 0; i < nItems; i++) {\n+\n+        if (!_cmsWriteUInt8Number(io, Value[i])) return FALSE;\n+    }\n+\n+    return TRUE;\n+\n+    cmsUNUSED_PARAMETER(self);\n+}\n+\n+static\n+void* Type_UInt8_Dup(struct _cms_typehandler_struct* self, const void* Ptr, cmsUInt32Number n)\n+{\n+    return _cmsDupMem(self->ContextID, Ptr, n * sizeof(cmsUInt8Number));\n+}\n+\n+\n+static\n+void Type_UInt8_Free(struct _cms_typehandler_struct* self, void* Ptr)\n+{\n+    _cmsFree(self->ContextID, Ptr);\n+}\n+\n+\/\/ ********************************************************************************\n+\/\/ Type cmsSigUInt32ArrayType\n+\/\/ ********************************************************************************\n+\/\/ This type represents an array of generic 4-byte\/32-bit quantity.\n+static\n+void* Type_UInt32_Read(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, cmsUInt32Number* nItems, cmsUInt32Number SizeOfTag)\n+{\n+    cmsUInt32Number* array;\n+    cmsUInt32Number i, n;\n+\n+    *nItems = 0;\n+    n = SizeOfTag \/ sizeof(cmsUInt32Number);\n+    array = (cmsUInt32Number*)_cmsCalloc(self->ContextID, n, sizeof(cmsUInt32Number));\n+    if (array == NULL) return NULL;\n+\n+    for (i = 0; i < n; i++) {\n+\n+        if (!_cmsReadUInt32Number(io, &array[i])) {\n+\n+            _cmsFree(self->ContextID, array);\n+            return NULL;\n+        }\n+    }\n+\n+    *nItems = n;\n+    return (void*)array;\n+}\n+\n+static\n+cmsBool Type_UInt32_Write(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, void* Ptr, cmsUInt32Number nItems)\n+{\n+    cmsUInt32Number* Value = (cmsUInt32Number*)Ptr;\n+    cmsUInt32Number i;\n+\n+    for (i = 0; i < nItems; i++) {\n+\n+        if (!_cmsWriteUInt32Number(io, Value[i])) return FALSE;\n+    }\n+\n+    return TRUE;\n+\n+    cmsUNUSED_PARAMETER(self);\n+}\n+\n+static\n+void* Type_UInt32_Dup(struct _cms_typehandler_struct* self, const void* Ptr, cmsUInt32Number n)\n+{\n+    return _cmsDupMem(self->ContextID, Ptr, n * sizeof(cmsUInt32Number));\n+}\n+\n+\n+static\n+void Type_UInt32_Free(struct _cms_typehandler_struct* self, void* Ptr)\n+{\n+    _cmsFree(self->ContextID, Ptr);\n+}\n+\n+\/\/ ********************************************************************************\n+\/\/ Type cmsSigUInt64ArrayType\n+\/\/ ********************************************************************************\n+\/\/ This type represents an array of generic 8-byte\/64-bit quantity.\n+static\n+void* Type_UInt64_Read(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, cmsUInt32Number* nItems, cmsUInt32Number SizeOfTag)\n+{\n+    cmsUInt64Number* array;\n+    cmsUInt32Number i, n;\n+\n+    *nItems = 0;\n+    n = SizeOfTag \/ sizeof(cmsUInt64Number);\n+    array = (cmsUInt64Number*)_cmsCalloc(self->ContextID, n, sizeof(cmsUInt64Number));\n+    if (array == NULL) return NULL;\n+\n+    for (i = 0; i < n; i++) {\n+\n+        if (!_cmsReadUInt64Number(io, &array[i])) {\n+\n+            _cmsFree(self->ContextID, array);\n+            return NULL;\n+        }\n+    }\n+\n+    *nItems = n;\n+    return (void*)array;\n+}\n+\n+static\n+cmsBool Type_UInt64_Write(struct _cms_typehandler_struct* self, cmsIOHANDLER* io, void* Ptr, cmsUInt32Number nItems)\n+{\n+    cmsUInt64Number* Value = (cmsUInt64Number*)Ptr;\n+    cmsUInt32Number i;\n+\n+    for (i = 0; i < nItems; i++) {\n+\n+        if (!_cmsWriteUInt64Number(io, &Value[i])) return FALSE;\n+    }\n+\n+    return TRUE;\n+\n+    cmsUNUSED_PARAMETER(self);\n+}\n+\n+static\n+void* Type_UInt64_Dup(struct _cms_typehandler_struct* self, const void* Ptr, cmsUInt32Number n)\n+{\n+    return _cmsDupMem(self->ContextID, Ptr, n * sizeof(cmsUInt64Number));\n+}\n+\n+\n+static\n+void Type_UInt64_Free(struct _cms_typehandler_struct* self, void* Ptr)\n+{\n+    _cmsFree(self->ContextID, Ptr);\n+}\n+\n@@ -971,0 +1143,2 @@\n+    if (AsciiCount > 0x7ffff) return NULL;\n+\n@@ -1002,1 +1176,2 @@\n-    if (UnicodeCount == 0 || SizeOfTag < UnicodeCount*sizeof(cmsUInt16Number)) goto Done;\n+    if (UnicodeCount == 0 || UnicodeCount > 0x7ffff ||\n+        SizeOfTag < UnicodeCount*sizeof(cmsUInt16Number)) goto Done;\n@@ -1132,1 +1307,1 @@\n-    if(len_aligned - len_tag_requirement > 0)\n+    if (len_aligned > len_tag_requirement)\n@@ -5194,1 +5369,1 @@\n-\n+      if (nChars > 0x7ffff) return FALSE;\n@@ -5775,1 +5950,4 @@\n-{TYPE_HANDLER(cmsSigMHC2Type,                  MHC2),                NULL }\n+{TYPE_HANDLER(cmsSigMHC2Type,                  MHC2),               (_cmsTagTypeLinkedList*) &SupportedTagTypes[33] },\n+{TYPE_HANDLER(cmsSigUInt8ArrayType,            UInt8),              (_cmsTagTypeLinkedList*) &SupportedTagTypes[34] },\n+{TYPE_HANDLER(cmsSigUInt32ArrayType,           UInt32),             (_cmsTagTypeLinkedList*) &SupportedTagTypes[35] },\n+{TYPE_HANDLER(cmsSigUInt64ArrayType,           UInt64),             NULL }\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmstypes.c","additions":183,"deletions":5,"binary":false,"changes":188,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -415,1 +415,1 @@\n-    Out[3] = In[3];                                 \/\/ K (untouched)\n+    Out[3] = In[3];                                    \/\/ K (untouched)\n@@ -436,1 +436,1 @@\n-    if (Limit < 0.0 || Limit > 400) {\n+    if (Limit < 1.0 || Limit > 400) {\n@@ -708,1 +708,1 @@\n-cmsHPROFILE cmsCreate_OkLabProfile(cmsContext ctx)\n+cmsHPROFILE CMSEXPORT cmsCreate_OkLabProfile(cmsContext ctx)\n@@ -777,0 +777,2 @@\n+    if (!hProfile)            \/\/ can't allocate\n+        goto error;\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsvirt.c","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmswtpnt.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -298,1 +298,1 @@\n-    cmsUInt32Number i, j, c, strideIn, strideOut;\n+    size_t i, j, c, strideIn, strideOut;\n@@ -325,0 +325,2 @@\n+                    _cmsAlarmCodesChunkType* ContextAlarmCodes = (_cmsAlarmCodesChunkType*)_cmsContextGetClientChunk(p->ContextID, AlarmCodesContext);\n+\n@@ -327,1 +329,1 @@\n-                        fOut[c] = -1.0;\n+                        fOut[c] = ContextAlarmCodes->AlarmCodes[c] \/ 65535.0F;\n@@ -364,1 +366,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -402,1 +404,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -412,2 +414,2 @@\n-           accum = (cmsUInt8Number*)in + strideIn;\n-           output = (cmsUInt8Number*)out + strideOut;\n+        accum = (cmsUInt8Number*)in + strideIn;\n+        output = (cmsUInt8Number*)out + strideOut;\n@@ -415,1 +417,1 @@\n-           for (j = 0; j < PixelsPerLine; j++) {\n+        for (j = 0; j < PixelsPerLine; j++) {\n@@ -417,3 +419,3 @@\n-                  accum = p->FromInput(p, wIn, accum, Stride->BytesPerPlaneIn);\n-                  output = p->ToOutput(p, wIn, output, Stride->BytesPerPlaneOut);\n-    }\n+            accum = p->FromInput(p, wIn, accum, Stride->BytesPerPlaneIn);\n+            output = p->ToOutput(p, wIn, output, Stride->BytesPerPlaneOut);\n+        }\n@@ -421,2 +423,2 @@\n-           strideIn += Stride->BytesPerLineIn;\n-           strideOut += Stride->BytesPerLineOut;\n+        strideIn += Stride->BytesPerLineIn;\n+        strideOut += Stride->BytesPerLineOut;\n@@ -440,1 +442,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -503,1 +505,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -514,2 +516,2 @@\n-           accum = (cmsUInt8Number*)in + strideIn;\n-           output = (cmsUInt8Number*)out + strideOut;\n+        accum = (cmsUInt8Number*)in + strideIn;\n+        output = (cmsUInt8Number*)out + strideOut;\n@@ -517,1 +519,1 @@\n-           for (j = 0; j < PixelsPerLine; j++) {\n+        for (j = 0; j < PixelsPerLine; j++) {\n@@ -519,4 +521,4 @@\n-                  accum = p->FromInput(p, wIn, accum, Stride->BytesPerPlaneIn);\n-                  TransformOnePixelWithGamutCheck(p, wIn, wOut);\n-                  output = p->ToOutput(p, wOut, output, Stride->BytesPerPlaneOut);\n-           }\n+            accum = p->FromInput(p, wIn, accum, Stride->BytesPerPlaneIn);\n+            TransformOnePixelWithGamutCheck(p, wIn, wOut);\n+            output = p->ToOutput(p, wOut, output, Stride->BytesPerPlaneOut);\n+        }\n@@ -524,2 +526,2 @@\n-           strideIn += Stride->BytesPerLineIn;\n-           strideOut += Stride->BytesPerLineOut;\n+        strideIn += Stride->BytesPerLineIn;\n+        strideOut += Stride->BytesPerLineOut;\n@@ -543,1 +545,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -598,1 +600,1 @@\n-    cmsUInt32Number i, j, strideIn, strideOut;\n+    size_t i, j, strideIn, strideOut;\n@@ -715,1 +717,1 @@\n-       cmsUInt32Number i, strideIn, strideOut;\n+       size_t i, strideIn, strideOut;\n@@ -1102,1 +1104,1 @@\n-    if (Space1 == PT_ANY) return TRUE;\n+    if (Space1 == PT_ANY) return (T_CHANNELS(dwFormat) == cmsChannelsOf(Check));\n@@ -1163,1 +1165,9 @@\n-    cmsUInt32Number LastIntent = Intents[nProfiles-1];\n+    cmsUInt32Number LastIntent;\n+\n+    \/\/ Safeguard\n+    if (nProfiles <= 0 || nProfiles > 255) {\n+        cmsSignalError(ContextID, cmsERROR_RANGE, \"Wrong number of profiles. 1..255 expected, %d found.\", nProfiles);\n+        return NULL;\n+    }\n+\n+    LastIntent = Intents[nProfiles - 1];\n","filename":"src\/java.desktop\/share\/native\/liblcms\/cmsxform.c","additions":39,"deletions":29,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2025 Marti Maria Saguer\n@@ -55,1 +55,1 @@\n-\/\/ Version 2.16\n+\/\/ Version 2.17\n@@ -96,0 +96,3 @@\n+\/\/ Uncomment this to remove visibility attribute when building shared objects\n+\/\/ #define CMS_NO_VISIBILITY 1\n+\n@@ -116,1 +119,1 @@\n-#define LCMS_VERSION        2160\n+#define LCMS_VERSION        2170\n@@ -280,1 +283,1 @@\n-#  ifdef HAVE_FUNC_ATTRIBUTE_VISIBILITY\n+#  if defined(HAVE_FUNC_ATTRIBUTE_VISIBILITY) && !defined(CMS_NO_VISIBILITY)\n@@ -990,1 +993,0 @@\n-#define TYPE_RGBA_HALF_FLT    (FLOAT_SH(1)|COLORSPACE_SH(PT_RGB)|EXTRA_SH(1)|CHANNELS_SH(3)|BYTES_SH(2))\n","filename":"src\/java.desktop\/share\/native\/liblcms\/lcms2.h","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+\n@@ -32,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n@@ -470,1 +471,1 @@\n-\/\/ Paralellization\n+\/\/ Parallelization\n@@ -1003,1 +1004,1 @@\n-\/\/ after the profile. I.e, BPC[0] refers to connexion between profile(0) and profile(1)\n+\/\/ after the profile. I.e, BPC[0] refers to connetion between profile(0) and profile(1)\n","filename":"src\/java.desktop\/share\/native\/liblcms\/lcms2_internal.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-\/\/  Copyright (c) 1998-2023 Marti Maria Saguer\n+\/\/  Copyright (c) 1998-2024 Marti Maria Saguer\n","filename":"src\/java.desktop\/share\/native\/liblcms\/lcms2_plugin.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-        \/\/ Opt: Only need to do if we're not using the default GC\n@@ -67,1 +66,2 @@\n-        int screenNum = ((X11GraphicsDevice)gc.getDevice()).getScreen();\n+        final X11GraphicsDevice newDev = getSameScreenDevice(gc);\n+        final int visualToLookFor = graphicsConfig.getVisual();\n@@ -69,13 +69,5 @@\n-        X11GraphicsConfig parentgc;\n-        \/\/ save vis id of current gc\n-        int visual = graphicsConfig.getVisual();\n-\n-        X11GraphicsDevice newDev = (X11GraphicsDevice) GraphicsEnvironment.\n-            getLocalGraphicsEnvironment().\n-            getScreenDevices()[screenNum];\n-\n-        for (int i = 0; i < newDev.getNumConfigs(screenNum); i++) {\n-            if (visual == newDev.getConfigVisualId(i, screenNum)) {\n-                \/\/ use that\n-                graphicsConfig = (X11GraphicsConfig)newDev.getConfigurations()[i];\n-                break;\n+        final GraphicsConfiguration[] configurations = newDev.getConfigurations();\n+        for (final GraphicsConfiguration config : configurations) {\n+            final X11GraphicsConfig x11gc = (X11GraphicsConfig) config;\n+            if (visualToLookFor == x11gc.getVisual()) {\n+                graphicsConfig = x11gc;\n@@ -84,7 +76,0 @@\n-        \/\/ just in case...\n-        if (graphicsConfig == null) {\n-            graphicsConfig = (X11GraphicsConfig) GraphicsEnvironment.\n-                getLocalGraphicsEnvironment().\n-                getScreenDevices()[screenNum].\n-                getDefaultConfiguration();\n-        }\n@@ -95,0 +80,12 @@\n+    private X11GraphicsDevice getSameScreenDevice(GraphicsConfiguration gc) {\n+        XToolkit.awtLock(); \/\/ so that the number of screens doesn't change during\n+        try {\n+            final int screenNum = ((X11GraphicsDevice) gc.getDevice()).getScreen();\n+            return (X11GraphicsDevice) GraphicsEnvironment.\n+                    getLocalGraphicsEnvironment().\n+                    getScreenDevices()[screenNum];\n+        } finally {\n+            XToolkit.awtUnlock();\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XCanvasPeer.java","additions":19,"deletions":22,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,0 +119,1 @@\n+import java.util.Hashtable;\n@@ -361,0 +362,5 @@\n+                    } else {\n+                        final XAtom XA_NET_WORKAREA = XAtom.get(\"_NET_WORKAREA\");\n+                        final boolean rootWindowWorkareaResized = (ev.get_type() == XConstants.PropertyNotify\n+                                && ev.get_xproperty().get_atom() == XA_NET_WORKAREA.getAtom());\n+                        if (rootWindowWorkareaResized) resetScreenInsetsCache();\n@@ -851,2 +857,1 @@\n-    @Override\n-    public Insets getScreenInsets(final GraphicsConfiguration gc) {\n+    private Insets getScreenInsetsImpl(final GraphicsConfiguration gc) {\n@@ -880,0 +885,28 @@\n+    private void resetScreenInsetsCache() {\n+        final GraphicsDevice[] devices = ((X11GraphicsEnvironment)GraphicsEnvironment.\n+                getLocalGraphicsEnvironment()).getScreenDevices();\n+        for (var gd : devices) {\n+            ((X11GraphicsDevice)gd).resetInsets();\n+        }\n+    }\n+\n+    @Override\n+    public Insets getScreenInsets(final GraphicsConfiguration gc) {\n+        final GraphicsDevice gd = gc.getDevice();\n+        if (gd instanceof X11GraphicsDevice x11Device) {\n+            Insets insets = x11Device.getInsets();\n+            if (insets == null) {\n+                synchronized (x11Device) {\n+                    insets = x11Device.getInsets();\n+                    if (insets == null) {\n+                        insets = getScreenInsetsImpl(gc);\n+                        x11Device.setInsets(insets);\n+                    }\n+                }\n+            }\n+            return (Insets) insets.clone();\n+        } else {\n+            return super.getScreenInsets(gc);\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11\/XToolkit.java","additions":36,"deletions":3,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.awt.Insets;\n@@ -40,0 +41,1 @@\n+import java.util.Objects;\n@@ -44,0 +46,1 @@\n+import sun.awt.X11.XToolkit;\n@@ -66,1 +69,0 @@\n-    private final Object configLock = new Object();\n@@ -69,0 +71,2 @@\n+    private volatile Rectangle bounds;\n+    private volatile Insets insets;\n@@ -72,0 +76,9 @@\n+    \/\/ Wayland clients are by design not allowed to change the resolution in Wayland.\n+    \/\/ XRandR in Xwayland is just an emulation, it doesn't actually change the resolution.\n+    \/\/ This emulation is per window\/x11 client, so different clients can have\n+    \/\/ different emulated resolutions at the same time.\n+    \/\/ So any request to get the current display mode will always return\n+    \/\/ the original screen resolution, even if we are in emulated resolution.\n+    \/\/ To handle this situation, we store the last set display mode in this variable.\n+    private volatile DisplayMode xwlCurrentDisplayMode;\n+\n@@ -75,0 +88,1 @@\n+        this.bounds = getBoundsImpl();\n@@ -121,1 +135,1 @@\n-    public Rectangle getBounds() {\n+    private Rectangle getBoundsImpl() {\n@@ -123,0 +137,14 @@\n+\n+        if (XToolkit.isOnWayland() && xwlCurrentDisplayMode != null) {\n+            \/\/ XRandR resolution change in Xwayland is an emulation,\n+            \/\/ and implemented in such a way that multiple display modes\n+            \/\/ for a device are only available in a single screen scenario,\n+            \/\/ if we have multiple screens they will each have a single display mode\n+            \/\/ (no emulated resolution change is available).\n+            \/\/ So we don't have to worry about x and y for a screen here.\n+            rect.setSize(\n+                    xwlCurrentDisplayMode.getWidth(),\n+                    xwlCurrentDisplayMode.getHeight()\n+            );\n+        }\n+\n@@ -132,0 +160,17 @@\n+    public Rectangle getBounds() {\n+        return bounds.getBounds();\n+    }\n+\n+    public Insets getInsets() {\n+        return insets;\n+    }\n+\n+    public void setInsets(Insets newInsets) {\n+        Objects.requireNonNull(newInsets);\n+        insets = newInsets;\n+    }\n+\n+    public void resetInsets() {\n+        insets = null;\n+    }\n+\n@@ -153,1 +198,2 @@\n-            synchronized (configLock) {\n+            XToolkit.awtLock();\n+            try {\n@@ -155,0 +201,2 @@\n+            } finally {\n+                XToolkit.awtUnlock();\n@@ -241,1 +289,2 @@\n-            synchronized (configLock) {\n+            XToolkit.awtLock();\n+            try {\n@@ -243,0 +292,2 @@\n+            } finally {\n+                XToolkit.awtUnlock();\n@@ -399,0 +450,4 @@\n+            if (XToolkit.isOnWayland() && xwlCurrentDisplayMode != null) {\n+                return xwlCurrentDisplayMode;\n+            }\n+\n@@ -403,0 +458,5 @@\n+\n+            if (XToolkit.isOnWayland()) {\n+                xwlCurrentDisplayMode = mode;\n+            }\n+\n@@ -478,0 +538,4 @@\n+        if (XToolkit.isOnWayland()) {\n+            xwlCurrentDisplayMode = dm;\n+        }\n+\n@@ -513,0 +577,2 @@\n+        bounds = getBoundsImpl();\n+        insets = null;\n@@ -574,0 +640,2 @@\n+        assert XToolkit.isAWTLockHeldByCurrentThread();\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":73,"deletions":5,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## PipeWire 0.3.68\n+## PipeWire 1.3.81\n@@ -42,0 +42,5 @@\n+\n+spa\/utils\/cleanup.h:\n+```\n+Copyright © 2023 PipeWire authors\n+```\n","filename":"src\/java.desktop\/unix\/legal\/pipewire.md","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -295,0 +295,2 @@\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -317,2 +319,0 @@\n-    AWT_LOCK ();\n-\n@@ -375,1 +375,0 @@\n-        AWT_UNLOCK();\n@@ -385,0 +384,3 @@\n+        if (screenDataPtr->defaultConfig == NULL) {\n+            return;\n+        }\n@@ -584,1 +586,0 @@\n-    AWT_UNLOCK ();\n@@ -773,0 +774,1 @@\n+    \/\/ NB: should be invoked only while holding the AWT lock\n@@ -783,0 +785,2 @@\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -976,1 +980,2 @@\n-    AWT_LOCK();\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -978,3 +983,2 @@\n-    int configs = x11Screens[screen].numConfigs;\n-    AWT_UNLOCK();\n-    return configs;\n+    return x11Screens[screen].numConfigs;\n+\n@@ -992,2 +996,2 @@\n-    int visNum;\n-    AWT_LOCK();\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -997,1 +1001,0 @@\n-    AWT_UNLOCK();\n@@ -1010,2 +1013,2 @@\n-    int visNum;\n-    AWT_LOCK();\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -1015,1 +1018,0 @@\n-    AWT_UNLOCK();\n@@ -1028,2 +1030,2 @@\n-    int visNum;\n-    AWT_LOCK();\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n@@ -1033,1 +1035,0 @@\n-    AWT_UNLOCK();\n@@ -1143,0 +1144,3 @@\n+    \/\/ NB: should be invoked only while holding the AWT lock\n+    DASSERT(screen >= 0 && screen < awt_numScreens);\n+\n@@ -1144,1 +1148,0 @@\n-    AWT_LOCK();\n@@ -1166,1 +1169,0 @@\n-        AWT_UNLOCK();\n@@ -1185,1 +1187,0 @@\n-    AWT_UNLOCK();\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/awt_GraphicsEnv.c","additions":21,"deletions":20,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1528,1 +1528,1 @@\n-            s = (int)(0.3 * height + 0.5) + 1;\n+            s = (int)(0.3 * MIN(height, width) + 0.5) + 1;\n","filename":"src\/java.desktop\/unix\/native\/libawt_xawt\/awt\/gtk3_interface.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+struct pw_impl_node;\n@@ -53,1 +54,1 @@\n-#define PW_VERSION_CONTEXT_EVENTS    0\n+#define PW_VERSION_CONTEXT_EVENTS    1\n@@ -66,0 +67,5 @@\n+\n+    \/** a driver was added, since 0.3.75 version:1 *\/\n+    void (*driver_added) (void *data, struct pw_impl_node *node);\n+    \/** a driver was removed, since 0.3.75 version:1 *\/\n+    void (*driver_removed) (void *data, struct pw_impl_node *node);\n@@ -68,4 +74,11 @@\n-\/** Make a new context object for a given main_loop. Ownership of the properties is taken *\/\n-struct pw_context * pw_context_new(struct pw_loop *main_loop,        \/**< a main loop to run in *\/\n-                 struct pw_properties *props,    \/**< extra properties *\/\n-                 size_t user_data_size        \/**< extra user data size *\/);\n+\/** Make a new context object for a given main_loop. Ownership of the properties is taken, even\n+ * if the function returns NULL.\n+ *\n+ * \\param main_loop A main loop to run in. This must stay alive unil pw_context_destroy() is called.\n+ * \\param props extra properties\n+ * \\param user_data_size extra user data size\n+ * \\return The context object on success, or NULL on failure, in which case errno is set.\n+ * *\/\n+struct pw_context * pw_context_new(struct pw_loop *main_loop,\n+                 struct pw_properties *props,\n+                 size_t user_data_size);\n@@ -116,1 +129,1 @@\n-\/** get the context main loop *\/\n+\/** Get the context main loop. Returns the value passed to pw_context_new(). *\/\n@@ -119,1 +132,3 @@\n-\/** get the context data loop. Since 0.3.56 *\/\n+\/** Get the context data loop. This loop runs on the realtime thread. This\n+ * acquires a loop from the generic data.rt class. Use pw_context_acquire_loop() instead.\n+ * Since 0.3.56 *\/\n@@ -122,0 +137,7 @@\n+\/** Get a data-loop.\n+ * Since 1.1.0 *\/\n+struct pw_loop *pw_context_acquire_loop(struct pw_context *context, const struct spa_dict *props);\n+\/** Release a data-loop.\n+ * Since 1.1.0 *\/\n+void pw_context_release_loop(struct pw_context *context, struct pw_loop *loop);\n+\n@@ -125,0 +147,3 @@\n+\/** Get the memory pool from the context: Since 0.3.74 *\/\n+struct pw_mempool *pw_context_get_mempool(struct pw_context *context);\n+\n@@ -133,1 +158,4 @@\n-\/** Find a context global by id *\/\n+\/** Find a context global by id.\n+ *\n+ * \\return The global on success, or NULL on failure. If id is \\ref PW_ID_CORE,\n+ *         this function will always return a non-NULL value. *\/\n@@ -143,0 +171,1 @@\n+\/** Load a SPA handle from a context. On failure returns NULL and sets errno. *\/\n@@ -163,1 +192,8 @@\n-\/** add an object to the context *\/\n+\/** add an object to the context\n+ *\n+ * \\param context The context.\n+ * \\param type The type of the object, usually a `TYPE_INTERFACE_` value.\n+ * \\param value The object value. Must last as long as the context and must\n+ *              be of the type corresponding to the type.\n+ * \\return A negative number on failure (out of memory).\n+ * *\/\n@@ -165,1 +201,6 @@\n-\/** get an object from the context *\/\n+\/** get an object from the context\n+ *\n+ * \\param context The context.\n+ * \\param type The string corresponding to the object's interface.\n+ * \\return The object, or NULL if the object does not exist.\n+ * *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/context.h","additions":51,"deletions":10,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -17,0 +17,2 @@\n+#include <pipewire\/type.h>\n+\n@@ -37,0 +39,2 @@\n+#define PW_CORE_PERM_MASK        PW_PERM_R|PW_PERM_X|PW_PERM_M\n+\n@@ -42,0 +46,7 @@\n+#ifndef PW_API_CORE_IMPL\n+#define PW_API_CORE_IMPL static inline\n+#endif\n+#ifndef PW_API_REGISTRY_IMPL\n+#define PW_API_REGISTRY_IMPL static inline\n+#endif\n+\n@@ -70,1 +81,2 @@\n-\/** Update an existing \\ref pw_core_info with \\a update with reset *\/\n+\/** Update an existing \\ref pw_core_info with \\a update with reset. When info is NULL,\n+ * a new one will be allocated. Returns NULL on failure. *\/\n@@ -74,1 +86,2 @@\n-\/** Update an existing \\ref pw_core_info with \\a update *\/\n+\/** Update an existing \\ref pw_core_info with \\a update. When info is NULL, a new one\n+ * will be allocated. Returns NULL on failure *\/\n@@ -165,0 +178,3 @@\n+     * The bound_props event is an enhanced version of this event that\n+     * also contains the extra global properties.\n+     *\n@@ -193,0 +209,15 @@\n+    \/**\n+     * Notify an object binding\n+     *\n+     * This event is emitted when a local object ID is bound to a\n+     * global ID. It is emitted before the global becomes visible in the\n+     * registry.\n+     *\n+     * This is an enhanced version of the bound_id event.\n+     *\n+     * \\param id bound object ID\n+     * \\param global_id the global id bound to\n+     * \\param props The properties of the new global object.\n+     *\n+     * Since version 4:1\n+     *\/\n@@ -226,0 +257,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -238,0 +271,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -246,0 +281,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -260,1 +297,1 @@\n-         * \\param id object where the error occurred\n+         * \\param id resource id where the error occurred\n@@ -263,0 +300,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -272,0 +311,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -284,0 +325,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -297,0 +340,2 @@\n+     *\n+     * This requires X permissions on the core.\n@@ -301,8 +346,0 @@\n-#define pw_core_method(o,method,version,...)            \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    spa_interface_call_res((struct spa_interface*)o,        \\\n-            struct pw_core_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n@@ -310,8 +347,44 @@\n-#define pw_core_add_listener(c,...)    pw_core_method(c,add_listener,0,__VA_ARGS__)\n-#define pw_core_hello(c,...)        pw_core_method(c,hello,0,__VA_ARGS__)\n-#define pw_core_sync(c,...)        pw_core_method(c,sync,0,__VA_ARGS__)\n-#define pw_core_pong(c,...)        pw_core_method(c,pong,0,__VA_ARGS__)\n-#define pw_core_error(c,...)        pw_core_method(c,error,0,__VA_ARGS__)\n-\n-\n-static inline\n+\/** \\copydoc pw_core_methods.add_listener\n+ * \\sa pw_core_methods.add_listener *\/\n+PW_API_CORE_IMPL int pw_core_add_listener(struct pw_core *object,\n+            struct spa_hook *listener,\n+            const struct pw_core_events *events,\n+            void *data)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_core, (struct spa_interface*)object, add_listener, 0,\n+            listener, events, data);\n+}\n+\/** \\copydoc pw_core_methods.hello\n+ * \\sa pw_core_methods.hello *\/\n+PW_API_CORE_IMPL int pw_core_hello(struct pw_core *object, uint32_t version)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_core, (struct spa_interface*)object, hello, 0,\n+            version);\n+}\n+\/** \\copydoc pw_core_methods.sync\n+ * \\sa pw_core_methods.sync *\/\n+PW_API_CORE_IMPL int pw_core_sync(struct pw_core *object, uint32_t id, int seq)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_core, (struct spa_interface*)object, sync, 0,\n+            id, seq);\n+}\n+\/** \\copydoc pw_core_methods.pong\n+ * \\sa pw_core_methods.pong *\/\n+PW_API_CORE_IMPL int pw_core_pong(struct pw_core *object, uint32_t id, int seq)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_core, (struct spa_interface*)object, pong, 0,\n+            id, seq);\n+}\n+\/** \\copydoc pw_core_methods.error\n+ * \\sa pw_core_methods.error *\/\n+PW_API_CORE_IMPL int pw_core_error(struct pw_core *object, uint32_t id, int seq, int res, const char *message)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_core, (struct spa_interface*)object, error, 0,\n+            id, seq, res, message);\n+}\n+PW_API_CORE_IMPL\n@@ -328,1 +401,1 @@\n-static inline\n+PW_API_CORE_IMPL\n@@ -341,1 +414,3 @@\n-static inline struct pw_registry *\n+\/** \\copydoc pw_core_methods.get_registry\n+ * \\sa pw_core_methods.get_registry *\/\n+PW_API_CORE_IMPL struct pw_registry *\n@@ -344,5 +419,3 @@\n-    struct pw_registry *res = NULL;\n-    spa_interface_call_res((struct spa_interface*)core,\n-            struct pw_core_methods, res,\n-            get_registry, 0, version, user_data_size);\n-    return res;\n+    return spa_api_method_r(struct pw_registry*, NULL,\n+            pw_core, (struct spa_interface*)core, get_registry, 0,\n+            version, user_data_size);\n@@ -350,2 +423,3 @@\n-\n-static inline void *\n+\/** \\copydoc pw_core_methods.create_object\n+ * \\sa pw_core_methods.create_object *\/\n+PW_API_CORE_IMPL void *\n@@ -359,6 +433,11 @@\n-    void *res = NULL;\n-    spa_interface_call_res((struct spa_interface*)core,\n-            struct pw_core_methods, res,\n-            create_object, 0, factory_name,\n-            type, version, props, user_data_size);\n-    return res;\n+    return spa_api_method_r(void*, NULL,\n+            pw_core, (struct spa_interface*)core, create_object, 0,\n+            factory_name, type, version, props, user_data_size);\n+}\n+\/** \\copydoc pw_core_methods.destroy\n+ * \\sa pw_core_methods.destroy *\/\n+PW_API_CORE_IMPL void\n+pw_core_destroy(struct pw_core *core, void *proxy)\n+{\n+    spa_api_method_v(pw_core, (struct spa_interface*)core, destroy, 0,\n+            proxy);\n@@ -366,2 +445,0 @@\n-\n-#define pw_core_destroy(c,...)        pw_core_method(c,destroy,0,__VA_ARGS__)\n@@ -477,1 +554,2 @@\n-     * \\param id the global id to destroy\n+     * \\param id the global id to destroy. The client needs X permissions\n+     * on the global.\n@@ -482,8 +560,0 @@\n-#define pw_registry_method(o,method,version,...)            \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    spa_interface_call_res((struct spa_interface*)o,        \\\n-            struct pw_registry_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n@@ -492,3 +562,14 @@\n-#define pw_registry_add_listener(p,...)    pw_registry_method(p,add_listener,0,__VA_ARGS__)\n-\n-static inline void *\n+\/** \\copydoc pw_registry_methods.add_listener\n+ * \\sa pw_registry_methods.add_listener *\/\n+PW_API_REGISTRY_IMPL int pw_registry_add_listener(struct pw_registry *registry,\n+            struct spa_hook *listener,\n+            const struct pw_registry_events *events,\n+            void *data)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_registry, (struct spa_interface*)registry, add_listener, 0,\n+            listener, events, data);\n+}\n+\/** \\copydoc pw_registry_methods.bind\n+ * \\sa pw_registry_methods.bind *\/\n+PW_API_REGISTRY_IMPL void *\n@@ -499,5 +580,11 @@\n-    void *res = NULL;\n-    spa_interface_call_res((struct spa_interface*)registry,\n-            struct pw_registry_methods, res,\n-            bind, 0, id, type, version, user_data_size);\n-    return res;\n+    return spa_api_method_r(void*, NULL,\n+            pw_registry, (struct spa_interface*)registry, bind, 0,\n+            id, type, version, user_data_size);\n+}\n+\/** \\copydoc pw_registry_methods.destroy\n+ * \\sa pw_registry_methods.destroy *\/\n+PW_API_REGISTRY_IMPL int\n+pw_registry_destroy(struct pw_registry *registry, uint32_t id)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_registry, (struct spa_interface*)registry, destroy, 0, id);\n@@ -505,2 +592,0 @@\n-\n-#define pw_registry_destroy(p,...)    pw_registry_method(p,destroy,0,__VA_ARGS__)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/core.h","additions":140,"deletions":55,"binary":false,"changes":195,"status":"modified"},{"patch":"@@ -41,0 +41,8 @@\n+#define PW_KEY_SEC_SOCKET        \"pipewire.sec.socket\"    \/**< client socket name, set by protocol *\/\n+\n+#define PW_KEY_SEC_ENGINE        \"pipewire.sec.engine\"    \/**< client secure context engine, set by protocol.\n+                                  *  This can also be set by a client when making a\n+                                  *  new security context. *\/\n+#define PW_KEY_SEC_APP_ID        \"pipewire.sec.app-id\"    \/**< client secure application id *\/\n+#define PW_KEY_SEC_INSTANCE_ID        \"pipewire.sec.instance-id\"    \/**< client secure instance id *\/\n+\n@@ -55,1 +63,2 @@\n-\n+#define PW_KEY_OBJECT_EXPORT        \"object.export\"        \/**< If the object should be exported,\n+                                  *  since 0.3.72 *\/\n@@ -63,0 +72,6 @@\n+\/* loop *\/\n+#define PW_KEY_LOOP_NAME        \"loop.name\"        \/**< the name of a loop *\/\n+#define PW_KEY_LOOP_CLASS        \"loop.class\"        \/**< the classes this loop handles, array of strings *\/\n+#define PW_KEY_LOOP_RT_PRIO        \"loop.rt-prio\"        \/**< realtime priority of the loop *\/\n+#define PW_KEY_LOOP_CANCEL        \"loop.cancel\"        \/**< if the loop can be canceled *\/\n+\n@@ -90,1 +105,3 @@\n-                                  *  env(PIPEWIRE_REMOTE) *\/\n+                                  *  env(PIPEWIRE_REMOTE). May also be\n+                                  *  a SPA-JSON array of sockets, to be tried\n+                                  *  in order. *\/\n@@ -135,1 +152,8 @@\n-                                  *  with the same driver. *\/\n+                                  *  with the same driver. Can be an array of\n+                                  *  group names. *\/\n+#define PW_KEY_NODE_SYNC_GROUP        \"node.sync-group\"    \/**< the sync group this node is part of. Nodes\n+                                  *  in the same sync group are always scheduled\n+                                  *  together with the same driver when the sync\n+                                  *  is active. Can be an array of sync names. *\/\n+#define PW_KEY_NODE_SYNC        \"node.sync\"        \/**< if the sync-group is active or not *\/\n+#define PW_KEY_NODE_TRANSPORT        \"node.transport\"    \/**< if the transport is active or not *\/\n@@ -166,1 +190,17 @@\n-#define PW_KEY_NODE_DRIVER        \"node.driver\"        \/**< node can drive the graph *\/\n+#define PW_KEY_NODE_DRIVER        \"node.driver\"        \/**< node can drive the graph. When the node is\n+                                  *  selected as the driver, it needs to start\n+                                  *  the graph periodically. *\/\n+#define PW_KEY_NODE_SUPPORTS_LAZY    \"node.supports-lazy\"    \/**< the node can be a lazy driver. It will listen\n+                                  *  to RequestProcess commands and take them into\n+                                  *  account when deciding to start the graph.\n+                                  *  A value of 0 disables support, a value of > 0\n+                                  *  enables with increasing preference. *\/\n+#define PW_KEY_NODE_SUPPORTS_REQUEST    \"node.supports-request\"    \/**< The node supports emiting RequestProcess events\n+                                  *  when it wants the graph to be scheduled.\n+                                  *  A value of 0 disables support, a value of > 0\n+                                  *  enables with increasing preference. *\/\n+#define PW_KEY_NODE_DRIVER_ID        \"node.driver-id\"    \/**< the node id of the node assigned as driver\n+                                  *   for this node *\/\n+#define PW_KEY_NODE_ASYNC        \"node.async\"        \/**< the node wants async scheduling *\/\n+#define PW_KEY_NODE_LOOP_NAME        \"node.loop.name\"    \/**< the loop name fnmatch pattern to run in *\/\n+#define PW_KEY_NODE_LOOP_CLASS        \"node.loop.class\"    \/**< the loop class fnmatch pattern to run in *\/\n@@ -175,1 +215,2 @@\n-                                  *  nodes with the same link-group *\/\n+                                  *  nodes with the same link-group. Can be an\n+                                  *  array of group names. *\/\n@@ -180,6 +221,8 @@\n-#define PW_KEY_NODE_CHANNELNAMES        \"node.channel-names\"        \/**< names of node's\n-                                    *   channels (unrelated to positions) *\/\n-#define PW_KEY_NODE_DEVICE_PORT_NAME_PREFIX            \"node.device-port-name-prefix\"        \/** override\n-                                    *        port name prefix for device ports, like capture and playback\n-                                    *        or disable the prefix completely if an empty string is provided *\/\n-\n+#define PW_KEY_NODE_CHANNELNAMES    \"node.channel-names\"    \/**< names of node's\n+                                *   channels (unrelated to positions) *\/\n+#define PW_KEY_NODE_DEVICE_PORT_NAME_PREFIX    \\\n+                    \"node.device-port-name-prefix\"    \/**< override port name prefix for\n+                                      *  device ports, like capture and\n+                                      *  playback or disable the prefix\n+                                      *  completely if an empty string\n+                                      *  is provided *\/\n@@ -200,0 +243,2 @@\n+#define PW_KEY_PORT_IGNORE_LATENCY    \"port.ignore-latency\"    \/**< latency ignored by peers, since 0.3.71 *\/\n+#define PW_KEY_PORT_GROUP        \"port.group\"        \/**< the port group of the port 1.2.0 *\/\n@@ -213,0 +258,1 @@\n+#define PW_KEY_LINK_ASYNC        \"link.async\"        \/**< the link is using async io *\/\n@@ -263,0 +309,1 @@\n+#define PW_KEY_MODULE_DEPRECATED    \"module.deprecated\"    \/**< the module is deprecated with this message *\/\n@@ -277,1 +324,4 @@\n-                                  *  conversion algorithm. *\/\n+                                  *  conversion algorithm. Monitor streams are also\n+                                  *  ignored when calculating the latency of their peer\n+                                  *  ports (since 0.3.71).\n+                                  *\/\n@@ -295,0 +345,1 @@\n+#define PW_KEY_MEDIA_ALBUM        \"media.album\"        \/**< album. Ex: \"Dark Side of the Moon\" *\/\n@@ -330,0 +381,1 @@\n+#  define PW_KEY_LOOP_RETRY_TIMEOUT    \"loop.retry-timeout\"    \/**< deprecated since 1.3.0 *\/\n@@ -333,0 +385,1 @@\n+#  define PW_KEY_LOOP_RETRY_TIMEOUT    PW_DEPRECATED(\"loop.retry-timeout\")\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/keys.h","additions":65,"deletions":12,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -20,0 +20,2 @@\n+ *\n+ * The members of \\ref pw_loop are read-only.\n@@ -32,0 +34,1 @@\n+    const char *name;\n@@ -34,0 +37,4 @@\n+#ifndef PW_API_LOOP_IMPL\n+#define PW_API_LOOP_IMPL static inline\n+#endif\n+\n@@ -40,21 +47,99 @@\n-#define pw_loop_add_source(l,...)    spa_loop_add_source((l)->loop,__VA_ARGS__)\n-#define pw_loop_update_source(l,...)    spa_loop_update_source((l)->loop,__VA_ARGS__)\n-#define pw_loop_remove_source(l,...)    spa_loop_remove_source((l)->loop,__VA_ARGS__)\n-#define pw_loop_invoke(l,...)        spa_loop_invoke((l)->loop,__VA_ARGS__)\n-\n-#define pw_loop_get_fd(l)        spa_loop_control_get_fd((l)->control)\n-#define pw_loop_add_hook(l,...)        spa_loop_control_add_hook((l)->control,__VA_ARGS__)\n-#define pw_loop_enter(l)        spa_loop_control_enter((l)->control)\n-#define pw_loop_iterate(l,...)        spa_loop_control_iterate((l)->control,__VA_ARGS__)\n-#define pw_loop_leave(l)        spa_loop_control_leave((l)->control)\n-\n-#define pw_loop_add_io(l,...)        spa_loop_utils_add_io((l)->utils,__VA_ARGS__)\n-#define pw_loop_update_io(l,...)    spa_loop_utils_update_io((l)->utils,__VA_ARGS__)\n-#define pw_loop_add_idle(l,...)        spa_loop_utils_add_idle((l)->utils,__VA_ARGS__)\n-#define pw_loop_enable_idle(l,...)    spa_loop_utils_enable_idle((l)->utils,__VA_ARGS__)\n-#define pw_loop_add_event(l,...)    spa_loop_utils_add_event((l)->utils,__VA_ARGS__)\n-#define pw_loop_signal_event(l,...)    spa_loop_utils_signal_event((l)->utils,__VA_ARGS__)\n-#define pw_loop_add_timer(l,...)    spa_loop_utils_add_timer((l)->utils,__VA_ARGS__)\n-#define pw_loop_update_timer(l,...)    spa_loop_utils_update_timer((l)->utils,__VA_ARGS__)\n-#define pw_loop_add_signal(l,...)    spa_loop_utils_add_signal((l)->utils,__VA_ARGS__)\n-#define pw_loop_destroy_source(l,...)    spa_loop_utils_destroy_source((l)->utils,__VA_ARGS__)\n+int pw_loop_set_name(struct pw_loop *loop, const char *name);\n+\n+PW_API_LOOP_IMPL int pw_loop_add_source(struct pw_loop *object, struct spa_source *source)\n+{\n+    return spa_loop_add_source(object->loop, source);\n+}\n+PW_API_LOOP_IMPL int pw_loop_update_source(struct pw_loop *object, struct spa_source *source)\n+{\n+    return spa_loop_update_source(object->loop, source);\n+}\n+PW_API_LOOP_IMPL int pw_loop_remove_source(struct pw_loop *object, struct spa_source *source)\n+{\n+    return spa_loop_remove_source(object->loop, source);\n+}\n+PW_API_LOOP_IMPL int pw_loop_invoke(struct pw_loop *object,\n+                spa_invoke_func_t func, uint32_t seq, const void *data,\n+                size_t size, bool block, void *user_data)\n+{\n+    return spa_loop_invoke(object->loop, func, seq, data, size, block, user_data);\n+}\n+\n+PW_API_LOOP_IMPL int pw_loop_get_fd(struct pw_loop *object)\n+{\n+    return spa_loop_control_get_fd(object->control);\n+}\n+PW_API_LOOP_IMPL void pw_loop_add_hook(struct pw_loop *object,\n+                struct spa_hook *hook, const struct spa_loop_control_hooks *hooks,\n+                void *data)\n+{\n+    spa_loop_control_add_hook(object->control, hook, hooks, data);\n+}\n+PW_API_LOOP_IMPL void pw_loop_enter(struct pw_loop *object)\n+{\n+    spa_loop_control_enter(object->control);\n+}\n+PW_API_LOOP_IMPL void pw_loop_leave(struct pw_loop *object)\n+{\n+    spa_loop_control_leave(object->control);\n+}\n+PW_API_LOOP_IMPL int pw_loop_iterate(struct pw_loop *object,\n+                int timeout)\n+{\n+    return spa_loop_control_iterate_fast(object->control, timeout);\n+}\n+\n+PW_API_LOOP_IMPL struct spa_source *\n+pw_loop_add_io(struct pw_loop *object, int fd, uint32_t mask,\n+                bool close, spa_source_io_func_t func, void *data)\n+{\n+    return spa_loop_utils_add_io(object->utils, fd, mask, close, func, data);\n+}\n+PW_API_LOOP_IMPL int pw_loop_update_io(struct pw_loop *object,\n+                struct spa_source *source, uint32_t mask)\n+{\n+    return spa_loop_utils_update_io(object->utils, source, mask);\n+}\n+PW_API_LOOP_IMPL struct spa_source *\n+pw_loop_add_idle(struct pw_loop *object, bool enabled,\n+                spa_source_idle_func_t func, void *data)\n+{\n+    return spa_loop_utils_add_idle(object->utils, enabled, func, data);\n+}\n+PW_API_LOOP_IMPL int pw_loop_enable_idle(struct pw_loop *object,\n+                struct spa_source *source, bool enabled)\n+{\n+    return spa_loop_utils_enable_idle(object->utils, source, enabled);\n+}\n+PW_API_LOOP_IMPL struct spa_source *\n+pw_loop_add_event(struct pw_loop *object, spa_source_event_func_t func, void *data)\n+{\n+    return spa_loop_utils_add_event(object->utils, func, data);\n+}\n+PW_API_LOOP_IMPL int pw_loop_signal_event(struct pw_loop *object,\n+                struct spa_source *source)\n+{\n+    return spa_loop_utils_signal_event(object->utils, source);\n+}\n+PW_API_LOOP_IMPL struct spa_source *\n+pw_loop_add_timer(struct pw_loop *object, spa_source_timer_func_t func, void *data)\n+{\n+    return spa_loop_utils_add_timer(object->utils, func, data);\n+}\n+PW_API_LOOP_IMPL int pw_loop_update_timer(struct pw_loop *object,\n+                struct spa_source *source, struct timespec *value,\n+                struct timespec *interval, bool absolute)\n+{\n+    return spa_loop_utils_update_timer(object->utils, source, value, interval, absolute);\n+}\n+PW_API_LOOP_IMPL struct spa_source *\n+pw_loop_add_signal(struct pw_loop *object, int signal_number,\n+                spa_source_signal_func_t func, void *data)\n+{\n+    return spa_loop_utils_add_signal(object->utils, signal_number, func, data);\n+}\n+PW_API_LOOP_IMPL void pw_loop_destroy_source(struct pw_loop *object,\n+                struct spa_source *source)\n+{\n+    return spa_loop_utils_destroy_source(object->utils, source);\n+}\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/loop.h","additions":106,"deletions":21,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -32,0 +32,2 @@\n+#define PW_PORT_PERM_MASK    PW_PERM_R|PW_PERM_X|PW_PERM_M\n+\n@@ -35,0 +37,4 @@\n+#ifndef PW_API_PORT_IMPL\n+#define PW_API_PORT_IMPL static inline\n+#endif\n+\n@@ -118,0 +124,2 @@\n+     *\n+     * This requires X permissions on the port.\n@@ -132,0 +140,2 @@\n+     *\n+     * This requires X permissions on the port.\n@@ -138,12 +148,29 @@\n-#define pw_port_method(o,method,version,...)                \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    spa_interface_call_res((struct spa_interface*)o,        \\\n-            struct pw_port_methods, _res,            \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-\n-#define pw_port_add_listener(c,...)    pw_port_method(c,add_listener,0,__VA_ARGS__)\n-#define pw_port_subscribe_params(c,...)    pw_port_method(c,subscribe_params,0,__VA_ARGS__)\n-#define pw_port_enum_params(c,...)    pw_port_method(c,enum_params,0,__VA_ARGS__)\n+\/** \\copydoc pw_port_methods.add_listener\n+ * \\sa pw_port_methods.add_listener *\/\n+PW_API_PORT_IMPL int pw_port_add_listener(struct pw_port *object,\n+            struct spa_hook *listener,\n+            const struct pw_port_events *events,\n+            void *data)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_port, (struct spa_interface*)object, add_listener, 0,\n+            listener, events, data);\n+}\n+\/** \\copydoc pw_port_methods.subscribe_params\n+ * \\sa pw_port_methods.subscribe_params *\/\n+PW_API_PORT_IMPL int pw_port_subscribe_params(struct pw_port *object, uint32_t *ids, uint32_t n_ids)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_port, (struct spa_interface*)object, subscribe_params, 0,\n+            ids, n_ids);\n+}\n+\/** \\copydoc pw_port_methods.enum_params\n+ * \\sa pw_port_methods.enum_params *\/\n+PW_API_PORT_IMPL int pw_port_enum_params(struct pw_port *object,\n+        int seq, uint32_t id, uint32_t start, uint32_t num,\n+                const struct spa_pod *filter)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            pw_port, (struct spa_interface*)object, enum_params, 0,\n+            seq, id, start, num, filter);\n+}\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/port.h","additions":39,"deletions":12,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -14,0 +14,1 @@\n+#include <spa\/utils\/cleanup.h>\n@@ -17,0 +18,4 @@\n+#ifndef PW_API_PROPERTIES\n+#define PW_API_PROPERTIES static inline\n+#endif\n+\n@@ -43,0 +48,4 @@\n+struct pw_properties *\n+pw_properties_new_string_checked(const char *args, size_t size,\n+        struct spa_error_location *loc);\n+\n@@ -54,0 +63,1 @@\n+\n@@ -58,0 +68,3 @@\n+int pw_properties_update_string_checked(struct pw_properties *props,\n+        const char *str, size_t size, struct spa_error_location *loc);\n+\n@@ -95,1 +108,1 @@\n-static inline uint32_t\n+PW_API_PROPERTIES uint32_t\n@@ -103,1 +116,1 @@\n-static inline int32_t\n+PW_API_PROPERTIES int32_t\n@@ -111,1 +124,1 @@\n-static inline uint64_t\n+PW_API_PROPERTIES uint64_t\n@@ -119,1 +132,1 @@\n-static inline int64_t\n+PW_API_PROPERTIES int64_t\n@@ -128,1 +141,1 @@\n-static inline bool\n+PW_API_PROPERTIES bool\n@@ -139,1 +152,5 @@\n-#define PW_PROPERTIES_FLAG_NL    (1<<0)\n+#define PW_PROPERTIES_FLAG_NL        (1<<0)\n+#define PW_PROPERTIES_FLAG_RECURSE    (1<<1)\n+#define PW_PROPERTIES_FLAG_ENCLOSE    (1<<2)\n+#define PW_PROPERTIES_FLAG_ARRAY    (1<<3)\n+#define PW_PROPERTIES_FLAG_COLORS    (1<<4)\n@@ -142,1 +159,1 @@\n-static inline bool pw_properties_parse_bool(const char *value) {\n+PW_API_PROPERTIES bool pw_properties_parse_bool(const char *value) {\n@@ -146,1 +163,1 @@\n-static inline int pw_properties_parse_int(const char *value) {\n+PW_API_PROPERTIES int pw_properties_parse_int(const char *value) {\n@@ -151,1 +168,1 @@\n-static inline int64_t pw_properties_parse_int64(const char *value) {\n+PW_API_PROPERTIES int64_t pw_properties_parse_int64(const char *value) {\n@@ -156,1 +173,1 @@\n-static inline uint64_t pw_properties_parse_uint64(const char *value) {\n+PW_API_PROPERTIES uint64_t pw_properties_parse_uint64(const char *value) {\n@@ -161,1 +178,1 @@\n-static inline float pw_properties_parse_float(const char *value) {\n+PW_API_PROPERTIES float pw_properties_parse_float(const char *value) {\n@@ -166,1 +183,1 @@\n-static inline double pw_properties_parse_double(const char *value) {\n+PW_API_PROPERTIES double pw_properties_parse_double(const char *value) {\n@@ -175,0 +192,4 @@\n+SPA_DEFINE_AUTOPTR_CLEANUP(pw_properties, struct pw_properties, {\n+    spa_clear_ptr(*thing, pw_properties_free);\n+})\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/properties.h","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-#define PW_VERSION_PROTOCOL_IMPLEMENTATION    0\n+#define PW_VERSION_PROTOCOL_IMPLEMENTATION    1\n@@ -93,0 +93,4 @@\n+    struct pw_protocol_server * (*add_fd_server) (struct pw_protocol *protocol,\n+                           struct pw_impl_core *core,\n+                           int listen_fd, int close_fd,\n+                           const struct spa_dict *props);\n@@ -104,0 +108,1 @@\n+#define pw_protocol_add_fd_server(p,...)    (pw_protocol_get_implementation(p)->add_fd_server(p,__VA_ARGS__))\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/protocol.h","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -15,0 +15,2 @@\n+ *\n+ * \\see \\ref pw_proxy\n@@ -79,1 +81,1 @@\n- * See \\ref page_proxy\n+ * \\see \\ref page_proxy\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/proxy.h","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -13,0 +13,2 @@\n+ *\n+ * \\see \\ref pw_stream\n@@ -59,1 +61,3 @@\n- * implement a Sink.\n+ * implement a Sink. An application will use a \\ref PW_DIRECTION_INPUT\n+ * stream to record data. A virtual sound card will use a\n+ * \\ref PW_DIRECTION_INPUT stream to implement audio playback.\n@@ -63,1 +67,3 @@\n- * a Source.\n+ * a Source. An application will use a \\ref PW_DIRECTION_OUTPUT\n+ * stream to produce data. A virtual sound card or camera will use a\n+ * \\ref PW_DIRECTION_OUTPUT stream to implement audio or video recording.\n@@ -130,0 +136,10 @@\n+ * Although not strictly required, it is recommended to call \\ref\n+ * pw_stream_dequeue_buffer() and pw_stream_queue_buffer() from the\n+ * process() callback to minimize the amount of buffering and\n+ * maximize the amount of buffer reuse in the stream.\n+ *\n+ * It is also possible to dequeue the buffer from the process event,\n+ * then process and queue the buffer from a helper thread. It is also\n+ * possible to dequeue, process and queue a buffer from a helper thread\n+ * after receiving the process event.\n+ *\n@@ -132,0 +148,7 @@\n+ * The process event is emitted when a new buffer should be queued.\n+ *\n+ * When the PW_STREAM_FLAG_RT_PROCESS flag was given, this function will be\n+ * called from a realtime thread and it is not safe to call non-reatime\n+ * functions such as doing file operations, blocking operations or any of\n+ * the PipeWire functions that are not explicitly marked as being RT safe.\n+ *\n@@ -139,2 +162,39 @@\n- * The process event is emitted when PipeWire has emptied a buffer that\n- * can now be refilled.\n+ * Although not strictly required, it is recommended to call \\ref\n+ * pw_stream_dequeue_buffer() and pw_stream_queue_buffer() from the\n+ * process() callback to minimize the amount of buffering and\n+ * maximize the amount of buffer reuse in the stream.\n+ *\n+ * Buffers that are queued after the process event completes will be delayed\n+ * to the next processing cycle.\n+ *\n+ * \\section sec_stream_driving Driving the graph\n+ *\n+ * Starting in 0.3.34, it is possible for a stream to drive the graph.\n+ * This allows interrupt-driven scheduling for drivers implemented as\n+ * PipeWire streams, without having to reimplement the stream as a SPA\n+ * plugin.\n+ *\n+ * A stream cannot drive the graph unless it is in the\n+ * \\ref PW_STREAM_STATE_STREAMING state and \\ref pw_stream_is_driving() returns\n+ * true. It must then use pw_stream_trigger_process() to start the graph\n+ * cycle.\n+ *\n+ * \\ref pw_stream_trigger_process() will result in a process event, where a buffer\n+ * should be dequeued, and queued again. This is the recommended behaviour that\n+ * minimizes buffering and maximized buffer reuse.\n+ *\n+ * Producers of data that drive the graph can also dequeue a buffer in a helper\n+ * thread, fill it with data and then call \\ref pw_stream_trigger_process() to\n+ * start the graph cycle. In the process event they will then queue the filled\n+ * buffer and dequeue a new empty buffer to fill again in the helper thread,\n+ *\n+ * Consumers of data that drive the graph (pull based scheduling) will use\n+ * \\ref pw_stream_trigger_process() to start the graph and will dequeue, process\n+ * and queue the buffers in the process event.\n+ *\n+ * \\section sec_stream_process_requests Request processing\n+ *\n+ * A stream that is not driving the graph can request a new graph cycle by doing\n+ * \\ref pw_stream_trigger_process(). This will result in a RequestProcess command\n+ * in the driver stream. If the driver supports this, it can then perform\n+ * \\ref pw_stream_trigger_process() to start the actual graph cycle.\n@@ -154,0 +214,3 @@\n+ * The environment variable PIPEWIRE_AUTOCONNECT can be used to override the\n+ * flag and force apps to autoconnect or not.\n+ *\n@@ -162,1 +225,1 @@\n- * See also \\ref page_streams and \\ref api_pw_core\n+ * \\see \\ref page_streams, \\ref api_pw_core\n@@ -174,0 +237,1 @@\n+#include <spa\/pod\/event.h>\n@@ -185,1 +249,1 @@\n-  * structure can grow as more field are added in the future *\/\n+  * structure can grow as more fields are added in the future *\/\n@@ -188,1 +252,6 @@\n-    void *user_data;        \/**< user data attached to the buffer *\/\n+    void *user_data;        \/**< user data attached to the buffer. The user of\n+                      *  the stream can set custom data associated with the\n+                      *  buffer, typically in the add_buffer event. Any\n+                      *  cleanup should be performed in the remove_buffer\n+                      *  event. The user data is returned unmodified each\n+                      *  time a buffer is dequeued. *\/\n@@ -190,1 +259,1 @@\n-                      *  all queued buffer is returned in the time info.\n+                      *  all queued buffers is returned in the time info.\n@@ -192,1 +261,1 @@\n-                      *  samples in the buffer for this field. *\/\n+                      *  frames in the buffer for this field. *\/\n@@ -195,1 +264,1 @@\n-                      *  streams this will be the amount of samples\n+                      *  streams this will be the amount of frames\n@@ -198,0 +267,5 @@\n+    uint64_t time;            \/**< For capture streams, this field contains the\n+                      *  cycle time in nanoseconds when this buffer was\n+                      *  queued in the stream. It can be compared against\n+                      *  the pw_time values or pw_stream_get_nsec()\n+                      *  Since 1.0.5 *\/\n@@ -226,3 +300,3 @@\n- *    struct timespec ts;\n- *    clock_gettime(CLOCK_MONOTONIC, &ts);\n- *    int64_t diff = SPA_TIMESPEC_TO_NSEC(&ts) - pw_time.now;\n+ *\\code{.c}\n+ *    uint64_t now = pw_stream_get_nsec(stream);\n+ *    int64_t diff = now - pw_time.now;\n@@ -230,0 +304,1 @@\n+ *\\endcode\n@@ -236,0 +311,7 @@\n+ * The delay requires the application to send the stream early relative to other synchronized\n+ * streams in order to arrive at the edge of the graph in time. This is usually done by\n+ * delaying the other streams with the given delay.\n+ *\n+ * Note that the delay can be negative. A negative delay means that this stream should be\n+ * delayed with the (positive) delay relative to other streams.\n+ *\n@@ -241,2 +323,2 @@\n- * the units of this value, for example, time, samples or bytes (below expressed\n- * as app.rate).\n+ * the units of this value, for example, time, samples, frames or bytes (below\n+ * expressed as app.rate).\n@@ -244,1 +326,1 @@\n- * pw_time.buffered is format dependent, for audio\/raw it contains the number of samples\n+ * pw_time.buffered is format dependent, for audio\/raw it contains the number of frames\n@@ -255,0 +337,1 @@\n+ *\\code{.unparsed}\n@@ -258,0 +341,1 @@\n+ *\\endcode\n@@ -261,0 +345,1 @@\n+ *\\code{.unparsed}\n@@ -262,0 +347,1 @@\n+ *\\endcode\n@@ -263,0 +349,1 @@\n+ * Below is an overview of the different timing values:\n@@ -264,0 +351,1 @@\n+ *\\code{.unparsed}\n@@ -275,0 +363,1 @@\n+ *\\endcode\n@@ -277,6 +366,6 @@\n-    int64_t now;            \/**< the monotonic time in nanoseconds. This is the time\n-                      *  when this time report was updated. It is usually\n-                      *  updated every graph cycle. You can use the current\n-                      *  monotonic time to calculate the elapsed time between\n-                      *  this report and the current state and calculate\n-                      *  updated ticks and delay values. *\/\n+    int64_t now;            \/**< the time in nanoseconds. This is the time when this\n+                      *  time report was updated. It is usually updated every\n+                      *  graph cycle. You can use pw_stream_get_nsec() to\n+                      *  calculate the elapsed time between this report and\n+                      *  the current time and calculate updated ticks and delay\n+                      *  values. *\/\n@@ -301,1 +390,1 @@\n-                      *  number of samples buffered in the resampler.\n+                      *  number of frames buffered in the resampler.\n@@ -303,2 +392,6 @@\n-    uint32_t queued_buffers;    \/**< The number of buffers that are queued. Since 0.3.50 *\/\n-    uint32_t avail_buffers;        \/**< The number of buffers that can be dequeued. Since 0.3.50 *\/\n+    uint32_t queued_buffers;    \/**< the number of buffers that are queued. Since 0.3.50 *\/\n+    uint32_t avail_buffers;        \/**< the number of buffers that can be dequeued. Since 0.3.50 *\/\n+    uint64_t size;            \/**< for audio\/raw playback streams, this contains the number of\n+                      *  samples requested by the resampler for the current\n+                      *  quantum. for audio\/raw capture streams this will be the number\n+                      *  of samples available for the current quantum. Since 1.1.0 *\/\n@@ -345,1 +438,4 @@\n-    \/** a trigger_process completed. Since version 0.3.40:2 *\/\n+    \/** a trigger_process completed. Since version 0.3.40:2.\n+     *  This is normally called from the mainloop but since 1.1.0 it\n+     *  can also be called directly from the realtime data\n+     *  thread if the user is prepared to deal with this. *\/\n@@ -360,1 +456,2 @@\n-    PW_STREAM_FLAG_MAP_BUFFERS    = (1 << 2),    \/**< mmap the buffers except DmaBuf *\/\n+    PW_STREAM_FLAG_MAP_BUFFERS    = (1 << 2),    \/**< mmap the buffers except DmaBuf that is not\n+                              *  explicitly marked as mappable. *\/\n@@ -378,0 +475,15 @@\n+    PW_STREAM_FLAG_ASYNC        = (1 << 10),    \/**< Buffers will not be dequeued\/queued from\n+                              *  the realtime process() function. This is\n+                              *  assumed when RT_PROCESS is unset but can\n+                              *  also be the case when the process() function\n+                              *  does a trigger_process() that will then\n+                              *  dequeue\/queue a buffer from another process()\n+                              *  function. since 0.3.73 *\/\n+    PW_STREAM_FLAG_EARLY_PROCESS    = (1 << 11),    \/**< Call process as soon as there is a buffer\n+                              *  to dequeue. This is only relevant for\n+                              *  playback and when not using RT_PROCESS. It\n+                              *  can be used to keep the maximum number of\n+                              *  buffers queued. Since 0.3.81 *\/\n+    PW_STREAM_FLAG_RT_TRIGGER_DONE    = (1 << 12),    \/**< Call trigger_done from the realtime\n+                              *  thread. You MUST use RT safe functions\n+                              *  in the trigger_done callback. Since 1.1.0 *\/\n@@ -380,1 +492,1 @@\n-\/** Create a new unconneced \\ref pw_stream\n+\/** Create a new unconnected \\ref pw_stream\n@@ -388,1 +500,1 @@\n-pw_stream_new_simple(struct pw_loop *loop,    \/**< a \\ref pw_loop to use *\/\n+pw_stream_new_simple(struct pw_loop *loop,    \/**< a \\ref pw_loop to use as the main loop *\/\n@@ -450,6 +562,1 @@\n-\/** Complete the negotiation process with result code \\a res\n- *\n- * This function should be called after notification of the format.\n-\n- * When \\a res indicates success, \\a params contain the parameters for the\n- * allocation state.  *\/\n+\/** Update the param exposed on the stream. *\/\n@@ -458,3 +565,1 @@\n-            const struct spa_pod **params,    \/**< an array of params. The params should\n-                              *  ideally contain parameters for doing\n-                              *  buffer allocation. *\/\n+            const struct spa_pod **params,    \/**< an array of params. *\/\n@@ -463,0 +568,8 @@\n+\/**\n+ * Set a parameter on the stream. This is like pw_stream_set_control() but with\n+ * a complete spa_pod param. It can also be called from the param_changed event handler\n+ * to intercept and modify the param for the adapter. Since 0.3.70 *\/\n+int pw_stream_set_param(struct pw_stream *stream,    \/**< a \\ref pw_stream *\/\n+            uint32_t id,            \/**< the id of the param *\/\n+            const struct spa_pod *param    \/**< the params to set *\/);\n+\n@@ -469,1 +582,1 @@\n-\/** Query the time on the stream *\/\n+\/** Query the time on the stream, RT safe *\/\n@@ -472,0 +585,8 @@\n+\/** Get the current time in nanoseconds. This value can be compared with\n+ * the \\ref pw_time.now value. RT safe. Since 1.1.0 *\/\n+uint64_t pw_stream_get_nsec(struct pw_stream *stream);\n+\n+\/** Get the data loop that is doing the processing of this stream. This loop\n+ * is assigned after pw_stream_connect().  * Since 1.1.0 *\/\n+struct pw_loop *pw_stream_get_data_loop(struct pw_stream *stream);\n+\n@@ -473,1 +594,1 @@\n- * use pw_stream_get_time_n() to get the fields added since 0.3.50. *\/\n+ * use pw_stream_get_time_n() to get the fields added since 0.3.50. RT safe. *\/\n@@ -478,1 +599,1 @@\n- * for capture streams. *\/\n+ * for capture streams. RT safe. *\/\n@@ -481,1 +602,1 @@\n-\/** Submit a buffer for playback or recycle a buffer for capture. *\/\n+\/** Submit a buffer for playback or recycle a buffer for capture. RT safe. *\/\n@@ -484,0 +605,4 @@\n+\/** Return a buffer to the queue without using it. This makes the buffer\n+ * immediately available to dequeue again. RT safe. *\/\n+int pw_stream_return_buffer(struct pw_stream *stream, struct pw_buffer *buffer);\n+\n@@ -488,1 +613,5 @@\n- * be called when all data is played or recorded *\/\n+ * be called when all data is played or recorded. The stream can be resumed\n+ * after the drain by setting it active again with\n+ * \\ref pw_stream_set_active(). A flush without a drain is mostly useful afer\n+ * a state change to PAUSED, to flush any remaining data from the queues and\n+ * the converters. RT safe. *\/\n@@ -497,0 +626,15 @@\n+\/** Check if the graph is using lazy scheduling. If the stream is\n+ * driving according to \\ref pw_stream_is_driving(), then it should\n+ * consider taking into account the RequestProcess commands when\n+ * driving the graph.\n+ *\n+ * If the stream is not driving, it should send out RequestProcess\n+ * events with \\ref pw_stream_emit_event() or indirectly with\n+ * \\ref pw_stream_trigger_process() to suggest a new graph cycle\n+ * to the driver.\n+ *\n+ * It is not a requirement that all RequestProcess events\/commands\n+ * need to start a graph cycle.\n+ * Since 1.4.0 *\/\n+bool pw_stream_is_lazy(struct pw_stream *stream);\n+\n@@ -498,1 +642,28 @@\n- * scheduled and process() will be called. Since 0.3.34 *\/\n+ * be scheduled when the stream is driving according to\n+ * \\ref pw_stream_is_driving(). If it successfully finishes, process()\n+ * will be called and the trigger_done event will be emitted. It is\n+ * possible for the graph iteration to not finish, so\n+ * pw_stream_trigger_process() needs to be called again even if process()\n+ * and trigger_done is not called.\n+ *\n+ * If there is a deadline after which the stream will have xrun,\n+ * pw_stream_trigger_process() should be called then, whether or not\n+ * process()\/trigger_done has been called. Sound hardware will xrun if\n+ * there is any delay in audio processing, so the ALSA plugin triggers the\n+ * graph every quantum to ensure audio keeps flowing. Drivers that\n+ * do not have a deadline, such as the freewheel driver, should\n+ * use a timeout to ensure that forward progress keeps being made.\n+ * A reasonable choice of deadline is three times the quantum: if\n+ * the graph is taking 3x longer than normal, it is likely that it\n+ * is hung and should be retriggered.\n+ *\n+ * Streams that are not drivers according to \\ref pw_stream_is_driving()\n+ * can also call this method. The result is that a RequestProcess event\n+ * is sent to the driver. If the graph is lazy scheduling according to\n+ * \\ref pw_stream_is_lazy(), this might result in a graph cycle by the\n+ * driver. If the graph is not lazy scheduling and the stream is not a\n+ * driver, this method will have no effect.\n+ *\n+ * RT safe.\n+ *\n+ * Since 0.3.34 *\/\n@@ -501,0 +672,12 @@\n+\/** Emit an event from this stream. RT safe.\n+ * Since 1.2.6 *\/\n+int pw_stream_emit_event(struct pw_stream *stream, const struct spa_event *event);\n+\n+\/** Adjust the rate of the stream.\n+ * When the stream is using an adaptive resampler, adjust the resampler rate.\n+ * When there is no resampler, -ENOTSUP is returned. Activating the adaptive\n+ * resampler will add a small amount of delay to the samples, you can deactivate\n+ * it again by setting a value <= 0.0. RT safe.\n+ * Since 1.4.0 *\/\n+int pw_stream_set_rate(struct pw_stream *stream, double rate);\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/stream.h","additions":227,"deletions":44,"binary":false,"changes":271,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+\/* PipeWire *\/\n+\/* SPDX-FileCopyrightText: Copyright © 2018 Wim Taymans *\/\n+\/* SPDX-License-Identifier: MIT *\/\n+\n+#ifndef PIPEWIRE_TYPE_H\n+#define PIPEWIRE_TYPE_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+#include <spa\/utils\/type.h>\n+\n+\/** \\defgroup pw_type Type info\n+ * Type information\n+ *\/\n+\n+\/**\n+ * \\addtogroup pw_type\n+ * \\{\n+ *\/\n+\n+enum {\n+    PW_TYPE_FIRST = SPA_TYPE_VENDOR_PipeWire,\n+};\n+\n+#define PW_TYPE_INFO_BASE        \"PipeWire:\"\n+\n+#define PW_TYPE_INFO_Object        PW_TYPE_INFO_BASE \"Object\"\n+#define PW_TYPE_INFO_OBJECT_BASE    PW_TYPE_INFO_Object \":\"\n+\n+#define PW_TYPE_INFO_Interface        PW_TYPE_INFO_BASE \"Interface\"\n+#define PW_TYPE_INFO_INTERFACE_BASE    PW_TYPE_INFO_Interface \":\"\n+\n+const struct spa_type_info * pw_type_info(void);\n+\n+\/**\n+ * \\}\n+ *\/\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#endif \/* PIPEWIRE_TYPE_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/type.h","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -18,0 +18,1 @@\n+#include <errno.h>\n@@ -23,0 +24,1 @@\n+#include <spa\/utils\/cleanup.h>\n@@ -48,0 +50,6 @@\n+char **pw_strv_parse(const char *val, size_t len, int max_tokens, int *n_tokens);\n+\n+int pw_strv_find(char **a, const char *b);\n+\n+int pw_strv_find_common(char **a, char **b);\n+\n@@ -95,0 +103,4 @@\n+SPA_DEFINE_AUTO_CLEANUP(pw_strv, char **, {\n+    spa_clear_ptr(*thing, pw_free_strv);\n+})\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/pipewire\/utils.h","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -15,0 +15,8 @@\n+#ifndef SPA_API_BUFFER\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_BUFFER SPA_API_IMPL\n+ #else\n+  #define SPA_API_BUFFER static inline\n+ #endif\n+#endif\n+\n@@ -30,3 +38,9 @@\n-    SPA_DATA_MemFd,            \/**< generic fd, mmap to get to memory *\/\n-    SPA_DATA_DmaBuf,        \/**< fd to dmabuf memory *\/\n-    SPA_DATA_MemId,            \/**< memory is identified with an id *\/\n+    SPA_DATA_MemFd,            \/**< memfd, mmap to get to memory. *\/\n+    SPA_DATA_DmaBuf,        \/**< fd to dmabuf memory. This might not be readily\n+                      *  mappable (unless the MAPPABLE flag is set) and should\n+                      *  normally be handled with DMABUF apis. *\/\n+    SPA_DATA_MemId,            \/**< memory is identified with an id. The actual memory\n+                      *  can be obtained in some other way and can be identified\n+                      *  with this id. *\/\n+    SPA_DATA_SyncObj,        \/**< a syncobj, usually requires a spa_meta_sync_timeline metadata\n+                      *  with timeline points. *\/\n@@ -68,0 +82,3 @@\n+#define SPA_DATA_FLAG_MAPPABLE    (1u<<3)    \/**< data is mappable with simple mmap\/munmap. Some memory\n+                      *  types are not simply mappable (DmaBuf) unless explicitly\n+                      *  specified with this flag. *\/\n@@ -70,1 +87,1 @@\n-    uint32_t mapoffset;        \/**< offset to map fd at *\/\n+    uint32_t mapoffset;        \/**< offset to map fd at, this is page aligned *\/\n@@ -85,1 +102,1 @@\n-static inline struct spa_meta *spa_buffer_find_meta(const struct spa_buffer *b, uint32_t type)\n+SPA_API_BUFFER struct spa_meta *spa_buffer_find_meta(const struct spa_buffer *b, uint32_t type)\n@@ -96,1 +113,1 @@\n-static inline void *spa_buffer_find_meta_data(const struct spa_buffer *b, uint32_t type, size_t size)\n+SPA_API_BUFFER void *spa_buffer_find_meta_data(const struct spa_buffer *b, uint32_t type, size_t size)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/buffer\/buffer.h","additions":23,"deletions":6,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -15,0 +15,8 @@\n+#ifndef SPA_API_META\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_META SPA_API_IMPL\n+ #else\n+  #define SPA_API_META static inline\n+ #endif\n+#endif\n+\n@@ -31,0 +39,1 @@\n+    SPA_META_SyncTimeline,        \/**< struct spa_meta_sync_timeline *\/\n@@ -48,1 +57,1 @@\n-static inline void *spa_meta_first(const struct spa_meta *m) {\n+SPA_API_META void *spa_meta_first(const struct spa_meta *m) {\n@@ -51,2 +60,2 @@\n-#define spa_meta_first spa_meta_first\n-static inline void *spa_meta_end(const struct spa_meta *m) {\n+\n+SPA_API_META void *spa_meta_end(const struct spa_meta *m) {\n@@ -55,1 +64,0 @@\n-#define spa_meta_end spa_meta_end\n@@ -82,1 +90,1 @@\n-static inline bool spa_meta_region_is_valid(const struct spa_meta_region *m) {\n+SPA_API_META bool spa_meta_region_is_valid(const struct spa_meta_region *m) {\n@@ -85,1 +93,0 @@\n-#define spa_meta_region_is_valid spa_meta_region_is_valid\n@@ -89,1 +96,1 @@\n-    for ((pos) = (__typeof(pos))spa_meta_first(meta);            \\\n+    for ((pos) = (__typeof(pos))spa_meta_first(meta);        \\\n@@ -93,2 +100,0 @@\n-#define spa_meta_bitmap_is_valid(m)    ((m)->format != 0)\n-\n@@ -114,1 +119,3 @@\n-#define spa_meta_cursor_is_valid(m)    ((m)->id != 0)\n+SPA_API_META bool spa_meta_bitmap_is_valid(const struct spa_meta_bitmap *m) {\n+    return m->format != 0;\n+}\n@@ -134,0 +141,4 @@\n+SPA_API_META bool spa_meta_cursor_is_valid(const struct spa_meta_cursor *m) {\n+    return m->id != 0;\n+}\n+\n@@ -152,1 +163,1 @@\n-                          * bufffer in two equal sized parts *\/\n+                          * buffer in two equal sized parts *\/\n@@ -164,0 +175,20 @@\n+\/**\n+ * A timeline point for explicit sync\n+ *\n+ * Metadata to describe the time on the timeline when the buffer\n+ * can be acquired and when it can be reused.\n+ *\n+ * This metadata will require negotiation of 2 extra fds for the acquire\n+ * and release timelines respectively.  One way to achieve this is to place\n+ * this metadata as SPA_PARAM_BUFFERS_metaType when negotiating a buffer\n+ * layout with 2 extra fds.\n+ *\/\n+struct spa_meta_sync_timeline {\n+    uint32_t flags;\n+    uint32_t padding;\n+    uint64_t acquire_point;            \/**< the timeline acquire point, this is when the data\n+                          *  can be accessed. *\/\n+    uint64_t release_point;            \/**< the timeline release point, this timeline point should\n+                          *  be signaled when the data is no longer accessed. *\/\n+};\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/buffer\/meta.h","additions":42,"deletions":11,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+    { SPA_DATA_SyncObj, SPA_TYPE_Int, SPA_TYPE_INFO_DATA_BASE \"SyncObj\", NULL },\n@@ -53,0 +54,16 @@\n+\/* VideoTransform meta *\/\n+#define SPA_TYPE_INFO_META_Transformation    SPA_TYPE_INFO_ENUM_BASE \"Meta:Transformation\"\n+#define SPA_TYPE_INFO_META_TRANSFORMATION_BASE    SPA_TYPE_INFO_META_Transformation \":\"\n+\n+static const struct spa_type_info spa_type_meta_videotransform_type[] = {\n+    { SPA_META_TRANSFORMATION_None, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"None\", NULL },\n+    { SPA_META_TRANSFORMATION_90, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"90\", NULL },\n+    { SPA_META_TRANSFORMATION_180, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"180\", NULL },\n+    { SPA_META_TRANSFORMATION_270, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"270\", NULL },\n+    { SPA_META_TRANSFORMATION_Flipped, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"Flipped\", NULL },\n+    { SPA_META_TRANSFORMATION_Flipped90, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"Flipped90\", NULL },\n+    { SPA_META_TRANSFORMATION_Flipped180, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"Flipped180\", NULL },\n+    { SPA_META_TRANSFORMATION_Flipped270, SPA_TYPE_Int, SPA_TYPE_INFO_META_TRANSFORMATION_BASE \"Flipped270\", NULL },\n+    { 0, 0, NULL, NULL },\n+};\n+\n@@ -63,0 +80,1 @@\n+    { SPA_META_SyncTimeline, SPA_TYPE_Pointer, SPA_TYPE_INFO_META_BASE \"SyncTimeline\", NULL },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/buffer\/type-info.h","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -27,3 +27,6 @@\n-    SPA_CONTROL_Properties,        \/**< data contains a SPA_TYPE_OBJECT_Props *\/\n-    SPA_CONTROL_Midi,        \/**< data contains a spa_pod_bytes with raw midi data *\/\n-    SPA_CONTROL_OSC,        \/**< data contains a spa_pod_bytes with an OSC packet *\/\n+    SPA_CONTROL_Properties,        \/**< SPA_TYPE_OBJECT_Props *\/\n+    SPA_CONTROL_Midi,        \/**< spa_pod_bytes with raw midi data (deprecated, use SPA_CONTROL_UMP) *\/\n+    SPA_CONTROL_OSC,        \/**< spa_pod_bytes with an OSC packet *\/\n+    SPA_CONTROL_UMP,        \/**< spa_pod_bytes with raw UMP (universal MIDI packet)\n+                      *  data. The UMP 32 bit words are stored in native endian\n+                      *  format. *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/control\/control.h","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+    { SPA_CONTROL_UMP, SPA_TYPE_Int, SPA_TYPE_INFO_CONTROL_BASE \"UMP\", NULL },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/control\/type-info.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -21,1 +21,10 @@\n-static inline const struct spa_type_info *spa_debug_type_find(const struct spa_type_info *info, uint32_t type)\n+#ifndef SPA_API_DEBUG_TYPES\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_DEBUG_TYPES SPA_API_IMPL\n+ #else\n+  #define SPA_API_DEBUG_TYPES static inline\n+ #endif\n+#endif\n+\n+\n+SPA_API_DEBUG_TYPES const struct spa_type_info *spa_debug_type_find(const struct spa_type_info *info, uint32_t type)\n@@ -40,1 +49,1 @@\n-static inline const char *spa_debug_type_short_name(const char *name)\n+SPA_API_DEBUG_TYPES const char *spa_debug_type_short_name(const char *name)\n@@ -42,4 +51,1 @@\n-    const char *h;\n-    if ((h = strrchr(name, ':')) != NULL)\n-        name = h + 1;\n-    return name;\n+    return spa_type_short_name(name);\n@@ -48,1 +54,1 @@\n-static inline const char *spa_debug_type_find_name(const struct spa_type_info *info, uint32_t type)\n+SPA_API_DEBUG_TYPES const char *spa_debug_type_find_name(const struct spa_type_info *info, uint32_t type)\n@@ -55,1 +61,1 @@\n-static inline const char *spa_debug_type_find_short_name(const struct spa_type_info *info, uint32_t type)\n+SPA_API_DEBUG_TYPES const char *spa_debug_type_find_short_name(const struct spa_type_info *info, uint32_t type)\n@@ -63,1 +69,1 @@\n-static inline uint32_t spa_debug_type_find_type(const struct spa_type_info *info, const char *name)\n+SPA_API_DEBUG_TYPES uint32_t spa_debug_type_find_type(const struct spa_type_info *info, const char *name)\n@@ -79,1 +85,1 @@\n-static inline const struct spa_type_info *spa_debug_type_find_short(const struct spa_type_info *info, const char *name)\n+SPA_API_DEBUG_TYPES const struct spa_type_info *spa_debug_type_find_short(const struct spa_type_info *info, const char *name)\n@@ -93,1 +99,1 @@\n-static inline uint32_t spa_debug_type_find_type_short(const struct spa_type_info *info, const char *name)\n+SPA_API_DEBUG_TYPES uint32_t spa_debug_type_find_type_short(const struct spa_type_info *info, const char *name)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/debug\/types.h","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    SPA_IO_Range,        \/**< expected byte range, struct spa_io_range *\/\n+    SPA_IO_Range,        \/**< expected byte range, struct spa_io_range (currently not used in PipeWire) *\/\n@@ -36,1 +36,2 @@\n-    SPA_IO_Latency,        \/**< latency reporting, struct spa_io_latency *\/\n+    SPA_IO_Latency,        \/**< latency reporting, struct spa_io_latency (currently not used in\n+                  * PipeWire). \\see spa_param_latency *\/\n@@ -41,1 +42,2 @@\n-    SPA_IO_Memory,        \/**< memory pointer, struct spa_io_memory *\/\n+    SPA_IO_Memory,        \/**< memory pointer, struct spa_io_memory (currently not used in PipeWire) *\/\n+    SPA_IO_AsyncBuffers,    \/**< async area to exchange buffers, struct spa_io_async_buffers *\/\n@@ -111,0 +113,13 @@\n+ *\n+ * Driver nodes are supposed to update the contents of \\ref SPA_IO_Clock before\n+ * signaling the start of a graph cycle.  These updated clock values become\n+ * visible to other nodes in \\ref SPA_IO_Position. Non-driver nodes do\n+ * not need to update the contents of their \\ref SPA_IO_Clock.\n+ *\n+ * The host generally gives each node a separate \\ref spa_io_clock in \\ref\n+ * SPA_IO_Clock, so that updates made by the driver are not visible in the\n+ * contents of \\ref SPA_IO_Clock of other nodes. Instead, \\ref SPA_IO_Position\n+ * is used to look up the current graph time.\n+ *\n+ * A node is a driver when \\ref spa_io_clock.id in \\ref SPA_IO_Clock and\n+ * \\ref spa_io_position.clock.id in \\ref SPA_IO_Position are the same.\n@@ -113,14 +128,24 @@\n-#define SPA_IO_CLOCK_FLAG_FREEWHEEL (1u<<0)\n-    uint32_t flags;            \/**< clock flags *\/\n-    uint32_t id;            \/**< unique clock id, set by application *\/\n-    char name[64];            \/**< clock name prefixed with API, set by node. The clock name\n-                      *  is unique per clock and can be used to check if nodes\n-                      *  share the same clock. *\/\n-    uint64_t nsec;            \/**< time in nanoseconds against monotonic clock *\/\n-    struct spa_fraction rate;    \/**< rate for position\/duration\/delay *\/\n-    uint64_t position;        \/**< current position *\/\n-    uint64_t duration;        \/**< duration of current cycle *\/\n-    int64_t delay;            \/**< delay between position and hardware,\n-                      *  positive for capture, negative for playback *\/\n-    double rate_diff;        \/**< rate difference between clock and monotonic time *\/\n-    uint64_t next_nsec;        \/**< estimated next wakeup time in nanoseconds *\/\n+#define SPA_IO_CLOCK_FLAG_FREEWHEEL    (1u<<0) \/* graph is freewheeling *\/\n+#define SPA_IO_CLOCK_FLAG_XRUN_RECOVER    (1u<<1) \/* recovering from xrun *\/\n+#define SPA_IO_CLOCK_FLAG_LAZY        (1u<<2) \/* lazy scheduling *\/\n+#define SPA_IO_CLOCK_FLAG_NO_RATE    (1u<<3) \/* the rate of the clock is only approximately.\n+                         * it is recommended to use the nsec as a clock source.\n+                         * The rate_diff contains the measured inaccuracy. *\/\n+    uint32_t flags;            \/**< Clock flags *\/\n+    uint32_t id;            \/**< Unique clock id, set by host application *\/\n+    char name[64];            \/**< Clock name prefixed with API, set by node when it receives\n+                      *  \\ref SPA_IO_Clock. The clock name is unique per clock and\n+                      *  can be used to check if nodes share the same clock. *\/\n+    uint64_t nsec;            \/**< Time in nanoseconds against monotonic clock\n+                      * (CLOCK_MONOTONIC). This fields reflects a real time instant\n+                      * in the past. The value may have jitter. *\/\n+    struct spa_fraction rate;    \/**< Rate for position\/duration\/delay\/xrun *\/\n+    uint64_t position;        \/**< Current position, in samples @ \\ref rate *\/\n+    uint64_t duration;        \/**< Duration of current cycle, in samples @ \\ref rate *\/\n+    int64_t delay;            \/**< Delay between position and hardware, in samples @ \\ref rate *\/\n+    double rate_diff;        \/**< Rate difference between clock and monotonic time, as a ratio of\n+                      *  clock speeds. *\/\n+    uint64_t next_nsec;        \/**< Estimated next wakeup time in nanoseconds.\n+                      *  This time is a logical start time of the next cycle, and\n+                      *  is not necessarily in the future.\n+                      *\/\n@@ -128,3 +153,3 @@\n-    struct spa_fraction target_rate;    \/**< target rate of next cycle *\/\n-    uint64_t target_duration;        \/**< target duration of next cycle *\/\n-    uint32_t target_seq;            \/**< seq counter. must be equal at start and\n+    struct spa_fraction target_rate;    \/**< Target rate of next cycle *\/\n+    uint64_t target_duration;        \/**< Target duration of next cycle *\/\n+    uint32_t target_seq;            \/**< Seq counter. must be equal at start and\n@@ -132,2 +157,2 @@\n-\n-    uint32_t padding[3];\n+    uint32_t cycle;            \/**< incremented each time the graph is started *\/\n+    uint64_t xrun;            \/**< Estimated accumulated xrun duration *\/\n@@ -148,1 +173,5 @@\n-\/** latency reporting *\/\n+\/**\n+ * Latency reporting\n+ *\n+ * Currently not used in PipeWire. Instead, \\see spa_param_latency\n+ *\/\n@@ -169,1 +198,3 @@\n-    uint32_t padding[8];\n+    double bar_start_tick;\n+    double ticks_per_beat;\n+    uint32_t padding[4];\n@@ -248,2 +279,7 @@\n- * It is set on all nodes and the clock id will contain the clock of the\n- * driving node in the graph.\n+ * It is set on all nodes in \\ref SPA_IO_Position, and the contents of \\ref\n+ * spa_io_position.clock contain the clock updates made by the driving node in\n+ * the graph in its \\ref SPA_IO_Clock.  Also, \\ref spa_io_position.clock.id\n+ * will contain the clock id of the driving node in the graph.\n+ *\n+ * The position clock indicates the logical start time of the current graph\n+ * cycle.\n@@ -272,1 +308,34 @@\n-\/** rate matching *\/\n+\/**\n+ * Rate matching.\n+ *\n+ * It is usually set on the nodes that process resampled data, by\n+ * the component (audioadapter) that handles resampling between graph\n+ * and node rates. The \\a flags and \\a rate fields may be modified by the node.\n+ *\n+ * The node can request a correction to the resampling rate in its process(), by setting\n+ * \\ref SPA_IO_RATE_MATCH_ACTIVE on \\a flags, and setting \\a rate to the desired rate\n+ * correction.  Usually the rate is obtained from DLL or other adaptive mechanism that\n+ * e.g. drives the node buffer fill level toward a specific value.\n+ *\n+ * When resampling to (graph->node) direction, the number of samples produced\n+ * by the resampler varies on each cycle, as the rates are not commensurate.\n+ *\n+ * When resampling to (node->graph) direction, the number of samples consumed by the\n+ * resampler varies. Node output ports in process() should produce \\a size number of\n+ * samples to match what the resampler needs to produce one graph quantum of output\n+ * samples.\n+ *\n+ * Resampling filters introduce processing delay, given by \\a delay and \\a delay_frac, in\n+ * samples at node rate. The delay varies on each cycle e.g. when resampling between\n+ * noncommensurate rates.\n+ *\n+ * The first sample output (graph->node) or consumed (node->graph) by the resampler is\n+ * offset by \\a delay + \\a delay_frac \/ 1e9 node samples relative to the nominal graph\n+ * cycle start position:\n+ *\n+ * \\code{.unparsed}\n+ * first_resampled_sample_nsec =\n+ *    first_original_sample_nsec\n+ *    - (rate_match->delay * SPA_NSEC_PER_SEC + rate_match->delay_frac) \/ node_rate\n+ * \\endcode\n+ *\/\n@@ -274,1 +343,2 @@\n-    uint32_t delay;            \/**< extra delay in samples for resampler *\/\n+    uint32_t delay;            \/**< resampling delay, in samples at\n+                     * node rate *\/\n@@ -276,1 +346,1 @@\n-    double rate;            \/**< rate for resampler *\/\n+    double rate;            \/**< rate for resampler (set by node) *\/\n@@ -278,2 +348,10 @@\n-    uint32_t flags;            \/**< extra flags *\/\n-    uint32_t padding[7];\n+    uint32_t flags;            \/**< extra flags (set by node) *\/\n+    int32_t delay_frac;        \/**< resampling delay fractional part,\n+                     * in units of nanosamples (1\/10^9 sample) at node rate *\/\n+    uint32_t padding[6];\n+};\n+\n+\/** async buffers *\/\n+struct spa_io_async_buffers {\n+    struct spa_io_buffers buffers[2];    \/**< async buffers, writers write to current (cycle+1)&1,\n+                          *  readers read from (cycle)&1 *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/node\/io.h","additions":109,"deletions":31,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+    { SPA_IO_AsyncBuffers, SPA_TYPE_Int, SPA_TYPE_INFO_IO_BASE \"AsyncBuffers\", NULL },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/node\/type-info.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -15,0 +15,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/aac-types.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,0 +14,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/aac.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -15,0 +15,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/amr-types.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,0 +14,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/amr.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -15,0 +15,13 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n+#ifndef SPA_API_AUDIO_IEC958_TYPES\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_AUDIO_IEC958_TYPES SPA_API_IMPL\n+ #else\n+  #define SPA_API_AUDIO_IEC958_TYPES static inline\n+ #endif\n+#endif\n+\n@@ -31,0 +44,8 @@\n+SPA_API_AUDIO_IEC958_TYPES uint32_t spa_type_audio_iec958_codec_from_short_name(const char *name)\n+{\n+    return spa_type_from_short_name(name, spa_type_audio_iec958_codec, SPA_AUDIO_IEC958_CODEC_UNKNOWN);\n+}\n+SPA_API_AUDIO_IEC958_TYPES const char * spa_type_audio_iec958_codec_to_short_name(uint32_t type)\n+{\n+    return spa_type_to_short_name(type, spa_type_audio_iec958_codec, \"UNKNOWN\");\n+}\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/iec958-types.h","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -15,0 +15,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/mp3-types.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,0 +14,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/mp3.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -18,0 +18,1 @@\n+#include <spa\/utils\/string.h>\n@@ -20,0 +21,8 @@\n+#ifndef SPA_API_AUDIO_RAW_TYPES\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_AUDIO_RAW_TYPES SPA_API_IMPL\n+ #else\n+  #define SPA_API_AUDIO_RAW_TYPES static inline\n+ #endif\n+#endif\n+\n@@ -131,0 +140,9 @@\n+SPA_API_AUDIO_RAW_TYPES uint32_t spa_type_audio_format_from_short_name(const char *name)\n+{\n+    return spa_type_from_short_name(name, spa_type_audio_format, SPA_AUDIO_FORMAT_UNKNOWN);\n+}\n+SPA_API_AUDIO_RAW_TYPES const char * spa_type_audio_format_to_short_name(uint32_t type)\n+{\n+    return spa_type_to_short_name(type, spa_type_audio_format, \"UNKNOWN\");\n+}\n+\n@@ -250,0 +268,10 @@\n+SPA_API_AUDIO_RAW_TYPES uint32_t spa_type_audio_channel_from_short_name(const char *name)\n+{\n+    return spa_type_from_short_name(name, spa_type_audio_channel, SPA_AUDIO_CHANNEL_UNKNOWN);\n+}\n+SPA_API_AUDIO_RAW_TYPES const char * spa_type_audio_channel_to_short_name(uint32_t type)\n+{\n+    return spa_type_to_short_name(type, spa_type_audio_channel, \"UNK\");\n+}\n+\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/raw-types.h","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -14,9 +14,1 @@\n-#if !defined(__FreeBSD__) && !defined(__MidnightBSD__) && !defined(AIX)\n-#include <endian.h>\n-#endif\n-\n-#if defined(AIX)\n-#include <sys\/machine.h>\n-#define __BIG_ENDIAN      BIG_ENDIAN\n-#define __BYTE_ORDER      BIG_ENDIAN\n-#endif\n+#include <spa\/utils\/endian.h>\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/raw.h","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -15,0 +15,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/wma-types.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -14,0 +14,5 @@\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/audio\/wma.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+    SPA_BLUETOOTH_AUDIO_CODEC_AAC_ELD,\n@@ -37,0 +38,1 @@\n+    SPA_BLUETOOTH_AUDIO_CODEC_OPUS_G,\n@@ -41,0 +43,1 @@\n+    SPA_BLUETOOTH_AUDIO_CODEC_LC3_SWB,\n@@ -44,0 +47,3 @@\n+\n+    \/* ASHA *\/\n+    SPA_BLUETOOTH_AUDIO_CODEC_G722 = 0x300,\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/bluetooth\/audio.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+    { SPA_BLUETOOTH_AUDIO_CODEC_AAC_ELD, SPA_TYPE_Int, SPA_TYPE_INFO_BLUETOOTH_AUDIO_CODEC_BASE \"aac_eld\", NULL },\n@@ -41,0 +42,1 @@\n+    { SPA_BLUETOOTH_AUDIO_CODEC_OPUS_G, SPA_TYPE_Int, SPA_TYPE_INFO_BLUETOOTH_AUDIO_CODEC_BASE \"opus_g\", NULL },\n@@ -44,0 +46,1 @@\n+    { SPA_BLUETOOTH_AUDIO_CODEC_LC3_SWB, SPA_TYPE_Int, SPA_TYPE_INFO_BLUETOOTH_AUDIO_CODEC_BASE \"lc3_swb\", NULL },\n@@ -47,0 +50,2 @@\n+    { SPA_BLUETOOTH_AUDIO_CODEC_G722, SPA_TYPE_Int, SPA_TYPE_INFO_BLUETOOTH_AUDIO_CODEC_BASE \"g722\", NULL },\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/bluetooth\/type-info.h","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    { SPA_PARAM_BUFFERS_metaType, SPA_TYPE_Int, SPA_TYPE_INFO_PARAM_BLOCK_INFO_BASE \"metaType\", NULL },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/buffers-types.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,2 @@\n-    SPA_PARAM_BUFFERS_dataType,    \/**< possible memory types (Int, mask of enum spa_data_type) *\/\n+    SPA_PARAM_BUFFERS_dataType,    \/**< possible memory types (flags choice Int, mask of enum spa_data_type) *\/\n+    SPA_PARAM_BUFFERS_metaType,    \/**< required meta data types (Int, mask of enum spa_meta_type) *\/\n@@ -33,2 +34,2 @@\n-    SPA_PARAM_META_type,    \/**< the metadata, one of enum spa_meta_type (Id enum spa_meta_type) *\/\n-    SPA_PARAM_META_size,    \/**< the expected maximum size the meta (Int) *\/\n+    SPA_PARAM_META_type,        \/**< the metadata, one of enum spa_meta_type (Id enum spa_meta_type) *\/\n+    SPA_PARAM_META_size,        \/**< the expected maximum size the meta (Int) *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/buffers.h","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -21,1 +21,9 @@\n-static inline int\n+#ifndef SPA_API_FORMAT_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_FORMAT_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_FORMAT_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_FORMAT_UTILS int\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/format-utils.h","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -144,0 +144,2 @@\n+    SPA_FORMAT_CONTROL_types,        \/**< possible control types (flags choice Int,\n+                          *  mask of enum spa_control_type) *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/format.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -19,1 +19,18 @@\n-\/** properties for SPA_TYPE_OBJECT_ParamLatency *\/\n+\/**\n+ * Properties for SPA_TYPE_OBJECT_ParamLatency\n+ *\n+ * The latency indicates:\n+ *\n+ * - for playback: time delay between start of a graph cycle, and the rendering of\n+ *   the first sample of that cycle in audio output.\n+ *\n+ * - for capture: time delay between start of a graph cycle, and the first sample\n+ *   of that cycle having occurred in audio input.\n+ *\n+ * For physical output\/input, the latency is intended to correspond to the\n+ * rendering\/capture of physical audio, including hardware internal rendering delay.\n+ *\n+ * The latency values are adjusted by \\ref SPA_PROP_latencyOffsetNsec or\n+ * SPA_PARAM_ProcessLatency, if present. (e.g. for ALSA this is used to adjust for\n+ * the internal hardware latency).\n+ *\/\n@@ -25,2 +42,2 @@\n-    SPA_PARAM_LATENCY_minRate,        \/**< min latency (Int) relative to rate *\/\n-    SPA_PARAM_LATENCY_maxRate,        \/**< max latency (Int) relative to rate *\/\n+    SPA_PARAM_LATENCY_minRate,        \/**< min latency (Int) relative to graph rate *\/\n+    SPA_PARAM_LATENCY_maxRate,        \/**< max latency (Int) relative to graph rate *\/\n@@ -36,4 +53,4 @@\n-    uint32_t min_rate;\n-    uint32_t max_rate;\n-    uint64_t min_ns;\n-    uint64_t max_ns;\n+    int32_t min_rate;\n+    int32_t max_rate;\n+    int64_t min_ns;\n+    int64_t max_ns;\n@@ -44,1 +61,6 @@\n-\/** properties for SPA_TYPE_OBJECT_ParamProcessLatency *\/\n+\/**\n+ * Properties for SPA_TYPE_OBJECT_ParamProcessLatency\n+ *\n+ * The processing latency indicates logical time delay between a sample in an input port,\n+ * and a corresponding sample in an output port, relative to the graph time.\n+ *\/\n@@ -48,1 +70,1 @@\n-    SPA_PARAM_PROCESS_LATENCY_rate,        \/**< latency (Int) relative to rate *\/\n+    SPA_PARAM_PROCESS_LATENCY_rate,        \/**< latency (Int) relative to graph rate *\/\n@@ -55,2 +77,2 @@\n-    uint32_t rate;\n-    uint64_t ns;\n+    int32_t rate;\n+    int64_t ns;\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/latency.h","additions":33,"deletions":11,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    { SPA_PARAM_Tag, SPA_TYPE_OBJECT_ParamTag, SPA_TYPE_INFO_PARAM_ID_BASE \"Tag\", NULL },\n@@ -57,0 +58,5 @@\n+static const struct spa_type_info spa_type_prop_int_array[] = {\n+    { SPA_PROP_START, SPA_TYPE_Int, SPA_TYPE_INFO_BASE \"intArray\", NULL, },\n+    { 0, 0, NULL, NULL },\n+};\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/param-types.h","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    SPA_PARAM_Tag,            \/**< tag reporting, a SPA_TYPE_OBJECT_ParamTag. Since 0.3.79 *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/param.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+    { SPA_PROFILER_followerClock, SPA_TYPE_Struct, SPA_TYPE_INFO_PROFILER_BASE \"followerClock\", NULL, },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/profiler-types.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -42,1 +42,4 @@\n-                              *      Long : clock next_nsec)) *\/\n+                              *      Long : clock next_nsec,\n+                              *      Int : transport_state,\n+                              *      Int : clock cycle,\n+                              *      Long : xrun duration)) *\/\n@@ -51,2 +54,3 @@\n-                              *      Int : driver status),\n-                              *      Fraction : latency))  *\/\n+                              *      Int : driver status,\n+                              *      Fraction : latency,\n+                              *      Int : xrun_count))  *\/\n@@ -64,2 +68,14 @@\n-                              *      Fraction : latency))  *\/\n-\n+                              *      Fraction : latency,\n+                              *      Int : xrun_count))  *\/\n+    SPA_PROFILER_followerClock,            \/**< follower clock information\n+                              *  (Struct(\n+                              *      Int : clock id,\n+                              *      String: clock name,\n+                              *      Long : clock nsec,\n+                              *      Fraction : clock rate,\n+                              *      Long : clock position,\n+                              *      Long : clock duration,\n+                              *      Long : clock delay,\n+                              *      Double : clock rate_diff,\n+                              *      Long : clock next_nsec,\n+                              *      Long : xrun duration)) *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/profiler.h","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -67,3 +67,3 @@\n-    { SPA_PROP_brightness, SPA_TYPE_Int, SPA_TYPE_INFO_PROPS_BASE \"brightness\", NULL },\n-    { SPA_PROP_contrast, SPA_TYPE_Int, SPA_TYPE_INFO_PROPS_BASE \"contrast\", NULL },\n-    { SPA_PROP_saturation, SPA_TYPE_Int, SPA_TYPE_INFO_PROPS_BASE \"saturation\", NULL },\n+    { SPA_PROP_brightness, SPA_TYPE_Float, SPA_TYPE_INFO_PROPS_BASE \"brightness\", NULL },\n+    { SPA_PROP_contrast, SPA_TYPE_Float, SPA_TYPE_INFO_PROPS_BASE \"contrast\", NULL },\n+    { SPA_PROP_saturation, SPA_TYPE_Float, SPA_TYPE_INFO_PROPS_BASE \"saturation\", NULL },\n@@ -73,2 +73,2 @@\n-    { SPA_PROP_gain, SPA_TYPE_Int, SPA_TYPE_INFO_PROPS_BASE \"gain\", NULL },\n-    { SPA_PROP_sharpness, SPA_TYPE_Int, SPA_TYPE_INFO_PROPS_BASE \"sharpness\", NULL },\n+    { SPA_PROP_gain, SPA_TYPE_Float, SPA_TYPE_INFO_PROPS_BASE \"gain\", NULL },\n+    { SPA_PROP_sharpness, SPA_TYPE_Float, SPA_TYPE_INFO_PROPS_BASE \"sharpness\", NULL },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/props-types.h","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    SPA_PROP_volume,                \/**< a volume (Float), 0.0 silence, 1.0 normal *\/\n+    SPA_PROP_volume,            \/**< a volume (Float), 0.0 silence, 1.0 no attenutation *\/\n@@ -67,2 +67,6 @@\n-    SPA_PROP_channelVolumes,        \/**< a volume array, one volume per\n-                          *  channel (Array of Float) *\/\n+    SPA_PROP_channelVolumes,        \/**< a volume array, one (linear) volume per channel\n+                          * (Array of Float). 0.0 is silence, 1.0 is\n+                          *  without attenuation. This is the effective\n+                          *  volume that is applied. It can result\n+                          *  in a hardware volume and software volume\n+                          *  (see softVolumes) *\/\n@@ -74,1 +78,1 @@\n-    SPA_PROP_monitorVolumes,        \/**< a volume array, one volume per\n+    SPA_PROP_monitorVolumes,        \/**< a volume array, one (linear) volume per\n@@ -77,3 +81,6 @@\n-    SPA_PROP_softMute,            \/**< mute (Bool) *\/\n-    SPA_PROP_softVolumes,            \/**< a volume array, one volume per\n-                          *  channel (Array of Float) *\/\n+    SPA_PROP_softMute,            \/**< mute (Bool) applied in software *\/\n+    SPA_PROP_softVolumes,            \/**< a volume array, one (linear) volume per channel\n+                          * (Array of Float). 0.0 is silence, 1.0 is without\n+                          * attenuation. This is the volume applied in\n+                          * software, there might be a part applied in\n+                          * hardware. *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/props.h","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    { SPA_PARAM_ROUTE_profiles, SPA_TYPE_Int, SPA_TYPE_INFO_PARAM_ROUTE_BASE \"profiles\", NULL, },\n+    { SPA_PARAM_ROUTE_profiles, SPA_TYPE_Array, SPA_TYPE_INFO_PARAM_ROUTE_BASE \"profiles\", spa_type_prop_int_array, },\n@@ -37,1 +37,1 @@\n-    { SPA_PARAM_ROUTE_devices, SPA_TYPE_Int, SPA_TYPE_INFO_PARAM_ROUTE_BASE \"devices\", NULL, },\n+    { SPA_PARAM_ROUTE_devices, SPA_TYPE_Array, SPA_TYPE_INFO_PARAM_ROUTE_BASE \"devices\", spa_type_prop_int_array, },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/route-types.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/* Simple Plugin API *\/\n+\/* SPDX-FileCopyrightText: Copyright © 2018 Wim Taymans *\/\n+\/* SPDX-License-Identifier: MIT *\/\n+\n+#ifndef SPA_PARAM_TAG_TYPES_H\n+#define SPA_PARAM_TAG_TYPES_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n+#include <spa\/utils\/enum-types.h>\n+#include <spa\/param\/param-types.h>\n+#include <spa\/param\/tag.h>\n+\n+#define SPA_TYPE_INFO_PARAM_Tag        SPA_TYPE_INFO_PARAM_BASE \"Tag\"\n+#define SPA_TYPE_INFO_PARAM_TAG_BASE    SPA_TYPE_INFO_PARAM_Tag \":\"\n+\n+static const struct spa_type_info spa_type_param_tag[] = {\n+    { SPA_PARAM_TAG_START, SPA_TYPE_Id, SPA_TYPE_INFO_PARAM_TAG_BASE, spa_type_param, },\n+    { SPA_PARAM_TAG_direction, SPA_TYPE_Id, SPA_TYPE_INFO_PARAM_TAG_BASE \"direction\", spa_type_direction, },\n+    { SPA_PARAM_TAG_info, SPA_TYPE_Struct, SPA_TYPE_INFO_PARAM_TAG_BASE \"info\", NULL, },\n+    { 0, 0, NULL, NULL },\n+};\n+\n+\/**\n+ * \\}\n+ *\/\n+\n+#ifdef __cplusplus\n+}  \/* extern \"C\" *\/\n+#endif\n+\n+#endif \/* SPA_PARAM_TAG_TYPES_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/tag-types.h","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,46 @@\n+\/* Simple Plugin API *\/\n+\/* SPDX-FileCopyrightText: Copyright © 2023 Wim Taymans *\/\n+\/* SPDX-License-Identifier: MIT *\/\n+\n+#ifndef SPA_PARAM_TAG_H\n+#define SPA_PARAM_TAG_H\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\/**\n+ * \\addtogroup spa_param\n+ * \\{\n+ *\/\n+\n+#include <spa\/param\/param.h>\n+\n+\/** properties for SPA_TYPE_OBJECT_ParamTag *\/\n+enum spa_param_tag {\n+    SPA_PARAM_TAG_START,\n+    SPA_PARAM_TAG_direction,        \/**< direction, input\/output (Id enum spa_direction) *\/\n+    SPA_PARAM_TAG_info,            \/**< Struct(\n+                          *      Int: n_items\n+                          *      (String: key\n+                          *       String: value)*\n+                          *  ) *\/\n+};\n+\n+\/** helper structure for managing tag objects *\/\n+struct spa_tag_info {\n+    enum spa_direction direction;\n+    const struct spa_pod *info;\n+};\n+\n+#define SPA_TAG_INFO(dir,...) ((struct spa_tag_info) { .direction = (dir), ## __VA_ARGS__ })\n+\n+\/**\n+ * \\}\n+ *\/\n+\n+#ifdef __cplusplus\n+}  \/* extern \"C\" *\/\n+#endif\n+\n+#endif \/* SPA_PARAM_TAG_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/tag.h","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -17,0 +17,1 @@\n+#include <spa\/param\/tag-types.h>\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/type-info.h","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -21,1 +21,9 @@\n-static inline int\n+#ifndef SPA_API_VIDEO_DSP_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_DSP_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_DSP_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_VIDEO_DSP_UTILS int\n@@ -26,1 +34,2 @@\n-    if (spa_pod_find_prop (format, NULL, SPA_FORMAT_VIDEO_modifier)) {\n+    const struct spa_pod_prop *mod_prop;\n+    if ((mod_prop = spa_pod_find_prop (format, NULL, SPA_FORMAT_VIDEO_modifier)) != NULL) {\n@@ -28,0 +37,2 @@\n+        if ((mod_prop->flags & SPA_POD_PROP_FLAG_DONT_FIXATE) == SPA_POD_PROP_FLAG_DONT_FIXATE)\n+            info->flags |= SPA_VIDEO_FLAG_MODIFIER_FIXATION_REQUIRED;\n@@ -36,1 +47,1 @@\n-static inline struct spa_pod *\n+SPA_API_VIDEO_DSP_UTILS struct spa_pod *\n@@ -38,1 +49,1 @@\n-               struct spa_video_info_dsp *info)\n+               const struct spa_video_info_dsp *info)\n@@ -49,3 +60,5 @@\n-    if (info->modifier != 0 || info->flags & SPA_VIDEO_FLAG_MODIFIER)\n-        spa_pod_builder_add(builder,\n-            SPA_FORMAT_VIDEO_modifier,    SPA_POD_Long(info->modifier), 0);\n+    if (info->modifier != 0 || info->flags & SPA_VIDEO_FLAG_MODIFIER) {\n+        spa_pod_builder_prop(builder,\n+            SPA_FORMAT_VIDEO_modifier,    SPA_POD_PROP_FLAG_MANDATORY);\n+        spa_pod_builder_long(builder,           info->modifier);\n+    }\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/dsp-utils.h","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -19,1 +19,9 @@\n-static inline int\n+#ifndef SPA_API_VIDEO_FORMAT_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_FORMAT_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_FORMAT_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_VIDEO_FORMAT_UTILS int\n@@ -43,2 +51,3 @@\n-static inline struct spa_pod *\n-spa_format_video_build(struct spa_pod_builder *builder, uint32_t id, struct spa_video_info *info)\n+SPA_API_VIDEO_FORMAT_UTILS struct spa_pod *\n+spa_format_video_build(struct spa_pod_builder *builder, uint32_t id,\n+               const struct spa_video_info *info)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/format-utils.h","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -21,1 +21,9 @@\n-static inline int\n+#ifndef SPA_API_VIDEO_H264_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_H264_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_H264_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_VIDEO_H264_UTILS int\n@@ -34,1 +42,1 @@\n-static inline struct spa_pod *\n+SPA_API_VIDEO_H264_UTILS struct spa_pod *\n@@ -36,1 +44,1 @@\n-               struct spa_video_info_h264 *info)\n+                const struct spa_video_info_h264 *info)\n@@ -52,1 +60,1 @@\n-            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(info->max_framerate), 0);\n+            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(&info->max_framerate), 0);\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/h264-utils.h","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -21,1 +21,9 @@\n-static inline int\n+#ifndef SPA_API_VIDEO_MJPG_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_MJPG_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_MJPG_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_VIDEO_MJPG_UTILS int\n@@ -32,1 +40,1 @@\n-static inline struct spa_pod *\n+SPA_API_VIDEO_MJPG_UTILS struct spa_pod *\n@@ -34,1 +42,1 @@\n-               struct spa_video_info_mjpg *info)\n+                const struct spa_video_info_mjpg *info)\n@@ -50,1 +58,1 @@\n-            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(info->max_framerate), 0);\n+            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(&info->max_framerate), 0);\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/mjpg-utils.h","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -62,2 +62,1 @@\n-                                *   \\ref spa_video_multiview_meta on raw\n-                                *   video buffers. *\/\n+                                *   metadata on raw video buffers. *\/\n@@ -67,1 +66,1 @@\n-                             *   by the \\ref spa_video_multiview_meta *\/\n+                             *   by the metadata *\/\n@@ -100,3 +99,1 @@\n-                                 *   absence or presence of the\n-                                 *   \\ref SPA_VIDEO_BUFFER_FLAG_MULTIPLE_VIEW\n-                                 *   buffer flag. *\/\n+                                 *   absence or presence of a buffer flag. *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/multiview.h","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -19,0 +19,8 @@\n+#ifndef SPA_API_VIDEO_RAW_TYPES\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_RAW_TYPES SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_RAW_TYPES static inline\n+ #endif\n+#endif\n+\n@@ -23,1 +31,2 @@\n-    { SPA_VIDEO_FORMAT_ENCODED,    SPA_TYPE_Int, SPA_TYPE_INFO_VIDEO_FORMAT_BASE \"encoded\", NULL },\n+    { SPA_VIDEO_FORMAT_UNKNOWN,    SPA_TYPE_Int, SPA_TYPE_INFO_VIDEO_FORMAT_BASE \"UNKNOWN\", NULL },\n+    { SPA_VIDEO_FORMAT_ENCODED,    SPA_TYPE_Int, SPA_TYPE_INFO_VIDEO_FORMAT_BASE \"ENCODED\", NULL },\n@@ -113,0 +122,9 @@\n+SPA_API_VIDEO_RAW_TYPES uint32_t spa_type_video_format_from_short_name(const char *name)\n+{\n+    return spa_type_from_short_name(name, spa_type_video_format, SPA_VIDEO_FORMAT_UNKNOWN);\n+}\n+SPA_API_VIDEO_RAW_TYPES const char * spa_type_video_format_to_short_name(uint32_t type)\n+{\n+    return spa_type_to_short_name(type, spa_type_video_format, \"UNKNOWN\");\n+}\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/raw-types.h","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -21,1 +21,9 @@\n-static inline int\n+#ifndef SPA_API_VIDEO_RAW_UTILS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_VIDEO_RAW_UTILS SPA_API_IMPL\n+ #else\n+  #define SPA_API_VIDEO_RAW_UTILS static inline\n+ #endif\n+#endif\n+\n+SPA_API_VIDEO_RAW_UTILS int\n@@ -26,1 +34,2 @@\n-    if (spa_pod_find_prop (format, NULL, SPA_FORMAT_VIDEO_modifier)) {\n+    const struct spa_pod_prop *mod_prop;\n+    if ((mod_prop = spa_pod_find_prop (format, NULL, SPA_FORMAT_VIDEO_modifier)) != NULL) {\n@@ -28,0 +37,2 @@\n+        if ((mod_prop->flags & SPA_POD_PROP_FLAG_DONT_FIXATE) == SPA_POD_PROP_FLAG_DONT_FIXATE)\n+            info->flags |= SPA_VIDEO_FLAG_MODIFIER_FIXATION_REQUIRED;\n@@ -49,1 +60,1 @@\n-static inline struct spa_pod *\n+SPA_API_VIDEO_RAW_UTILS struct spa_pod *\n@@ -51,1 +62,1 @@\n-               struct spa_video_info_raw *info)\n+               const struct spa_video_info_raw *info)\n@@ -68,3 +79,5 @@\n-    if (info->modifier != 0 || info->flags & SPA_VIDEO_FLAG_MODIFIER)\n-        spa_pod_builder_add(builder,\n-            SPA_FORMAT_VIDEO_modifier,    SPA_POD_Long(info->modifier), 0);\n+    if (info->modifier != 0 || info->flags & SPA_VIDEO_FLAG_MODIFIER) {\n+        spa_pod_builder_prop(builder,\n+            SPA_FORMAT_VIDEO_modifier,    SPA_POD_PROP_FLAG_MANDATORY);\n+        spa_pod_builder_long(builder,           info->modifier);\n+    }\n@@ -73,1 +86,1 @@\n-            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(info->max_framerate), 0);\n+            SPA_FORMAT_VIDEO_maxFramerate,    SPA_POD_Fraction(&info->max_framerate), 0);\n@@ -82,1 +95,1 @@\n-            SPA_FORMAT_VIDEO_pixelAspectRatio,SPA_POD_Fraction(info->pixel_aspect_ratio), 0);\n+            SPA_FORMAT_VIDEO_pixelAspectRatio, SPA_POD_Fraction(&info->pixel_aspect_ratio), 0);\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/raw-utils.h","additions":22,"deletions":9,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -137,5 +137,6 @@\n-    SPA_VIDEO_FLAG_NONE = 0,            \/**< no flags *\/\n-    SPA_VIDEO_FLAG_VARIABLE_FPS = (1 << 0),        \/**< a variable fps is selected, fps_n and fps_d\n-                             *   denote the maximum fps of the video *\/\n-    SPA_VIDEO_FLAG_PREMULTIPLIED_ALPHA = (1 << 1),  \/**< Each color has been scaled by the alpha value. *\/\n-    SPA_VIDEO_FLAG_MODIFIER = (1 << 2),        \/**< use the format modifier *\/\n+    SPA_VIDEO_FLAG_NONE = 0,                \/**< no flags *\/\n+    SPA_VIDEO_FLAG_VARIABLE_FPS = (1 << 0),            \/**< a variable fps is selected, fps_n and fps_d\n+                                 *   denote the maximum fps of the video *\/\n+    SPA_VIDEO_FLAG_PREMULTIPLIED_ALPHA = (1 << 1),        \/**< Each color has been scaled by the alpha value. *\/\n+    SPA_VIDEO_FLAG_MODIFIER = (1 << 2),            \/**< use the format modifier *\/\n+    SPA_VIDEO_FLAG_MODIFIER_FIXATION_REQUIRED = (1 << 3),    \/**< format modifier was not fixated yet *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/param\/video\/raw.h","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -27,0 +27,8 @@\n+#ifndef SPA_API_POD_BUILDER\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_POD_BUILDER SPA_API_IMPL\n+ #else\n+  #define SPA_API_POD_BUILDER static inline\n+ #endif\n+#endif\n+\n@@ -52,1 +60,1 @@\n-#define SPA_POD_BUILDER_INIT(buffer,size)  ((struct spa_pod_builder){ (buffer), (size), 0, {}, {} })\n+#define SPA_POD_BUILDER_INIT(buffer,size)  ((struct spa_pod_builder){ (buffer), (size), 0, {0,0,NULL},{NULL,NULL}})\n@@ -54,1 +62,1 @@\n-static inline void\n+SPA_API_POD_BUILDER void\n@@ -60,1 +68,1 @@\n-static inline void\n+SPA_API_POD_BUILDER void\n@@ -67,1 +75,1 @@\n-static inline void\n+SPA_API_POD_BUILDER void\n@@ -77,1 +85,1 @@\n-static inline void spa_pod_builder_init(struct spa_pod_builder *builder, void *data, uint32_t size)\n+SPA_API_POD_BUILDER void spa_pod_builder_init(struct spa_pod_builder *builder, void *data, uint32_t size)\n@@ -82,1 +90,1 @@\n-static inline struct spa_pod *\n+SPA_API_POD_BUILDER struct spa_pod *\n@@ -94,1 +102,1 @@\n-static inline struct spa_pod *\n+SPA_API_POD_BUILDER struct spa_pod *\n@@ -102,1 +110,1 @@\n-static inline void\n+SPA_API_POD_BUILDER void\n@@ -118,1 +126,1 @@\n-static inline int spa_pod_builder_raw(struct spa_pod_builder *builder, const void *data, uint32_t size)\n+SPA_API_POD_BUILDER int spa_pod_builder_raw(struct spa_pod_builder *builder, const void *data, uint32_t size)\n@@ -142,1 +150,1 @@\n-static inline int spa_pod_builder_pad(struct spa_pod_builder *builder, uint32_t size)\n+SPA_API_POD_BUILDER int spa_pod_builder_pad(struct spa_pod_builder *builder, uint32_t size)\n@@ -149,1 +157,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -158,1 +166,1 @@\n-static inline void *spa_pod_builder_pop(struct spa_pod_builder *builder, struct spa_pod_frame *frame)\n+SPA_API_POD_BUILDER void *spa_pod_builder_pop(struct spa_pod_builder *builder, struct spa_pod_frame *frame)\n@@ -175,1 +183,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -201,1 +209,1 @@\n-static inline int spa_pod_builder_none(struct spa_pod_builder *builder)\n+SPA_API_POD_BUILDER int spa_pod_builder_none(struct spa_pod_builder *builder)\n@@ -207,1 +215,1 @@\n-static inline int spa_pod_builder_child(struct spa_pod_builder *builder, uint32_t size, uint32_t type)\n+SPA_API_POD_BUILDER int spa_pod_builder_child(struct spa_pod_builder *builder, uint32_t size, uint32_t type)\n@@ -216,1 +224,1 @@\n-static inline int spa_pod_builder_bool(struct spa_pod_builder *builder, bool val)\n+SPA_API_POD_BUILDER int spa_pod_builder_bool(struct spa_pod_builder *builder, bool val)\n@@ -224,1 +232,1 @@\n-static inline int spa_pod_builder_id(struct spa_pod_builder *builder, uint32_t val)\n+SPA_API_POD_BUILDER int spa_pod_builder_id(struct spa_pod_builder *builder, uint32_t val)\n@@ -232,1 +240,1 @@\n-static inline int spa_pod_builder_int(struct spa_pod_builder *builder, int32_t val)\n+SPA_API_POD_BUILDER int spa_pod_builder_int(struct spa_pod_builder *builder, int32_t val)\n@@ -240,1 +248,1 @@\n-static inline int spa_pod_builder_long(struct spa_pod_builder *builder, int64_t val)\n+SPA_API_POD_BUILDER int spa_pod_builder_long(struct spa_pod_builder *builder, int64_t val)\n@@ -248,1 +256,1 @@\n-static inline int spa_pod_builder_float(struct spa_pod_builder *builder, float val)\n+SPA_API_POD_BUILDER int spa_pod_builder_float(struct spa_pod_builder *builder, float val)\n@@ -256,1 +264,1 @@\n-static inline int spa_pod_builder_double(struct spa_pod_builder *builder, double val)\n+SPA_API_POD_BUILDER int spa_pod_builder_double(struct spa_pod_builder *builder, double val)\n@@ -264,1 +272,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -276,1 +284,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -286,1 +294,1 @@\n-static inline int spa_pod_builder_string(struct spa_pod_builder *builder, const char *str)\n+SPA_API_POD_BUILDER int spa_pod_builder_string(struct spa_pod_builder *builder, const char *str)\n@@ -294,1 +302,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -303,1 +311,1 @@\n-static inline void *\n+SPA_API_POD_BUILDER void *\n@@ -314,1 +322,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -323,1 +331,1 @@\n-static inline int spa_pod_builder_fd(struct spa_pod_builder *builder, int64_t fd)\n+SPA_API_POD_BUILDER int spa_pod_builder_fd(struct spa_pod_builder *builder, int64_t fd)\n@@ -331,1 +339,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -340,1 +348,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -347,1 +355,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -359,1 +367,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -381,1 +389,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -396,1 +404,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -408,1 +416,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -423,1 +431,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -433,1 +441,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -444,1 +452,1 @@\n-static inline uint32_t\n+SPA_API_POD_BUILDER int\n@@ -451,1 +459,1 @@\n-static inline uint32_t spa_choice_from_id(char id)\n+SPA_API_POD_BUILDER uint32_t spa_choice_from_id(char id)\n@@ -484,1 +492,1 @@\n-        spa_pod_builder_float(builder, va_arg(args, double));        \\\n+        spa_pod_builder_float(builder, (float)va_arg(args, double));    \\\n@@ -563,1 +571,1 @@\n-static inline int\n+SPA_API_POD_BUILDER int\n@@ -621,1 +629,1 @@\n-static inline int spa_pod_builder_add(struct spa_pod_builder *builder, ...)\n+SPA_API_POD_BUILDER int spa_pod_builder_add(struct spa_pod_builder *builder, ...)\n@@ -661,1 +669,1 @@\n-static inline struct spa_pod *\n+SPA_API_POD_BUILDER struct spa_pod *\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/pod\/builder.h","additions":51,"deletions":43,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    { { (size), SPA_TYPE_OBJECT },                    \\\n+    { { (size), SPA_TYPE_Object },                    \\\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/pod\/event.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -17,0 +17,8 @@\n+#ifndef SPA_API_POD_ITER\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_POD_ITER SPA_API_IMPL\n+ #else\n+  #define SPA_API_POD_ITER static inline\n+ #endif\n+#endif\n+\n@@ -29,1 +37,1 @@\n-static inline bool spa_pod_is_inside(const void *pod, uint32_t size, const void *iter)\n+SPA_API_POD_ITER bool spa_pod_is_inside(const void *pod, uint32_t size, const void *iter)\n@@ -31,2 +39,4 @@\n-    return SPA_POD_BODY(iter) <= SPA_PTROFF(pod, size, void) &&\n-        SPA_PTROFF(iter, SPA_POD_SIZE(iter), void) <= SPA_PTROFF(pod, size, void);\n+    size_t remaining;\n+\n+    return spa_ptr_type_inside(pod, size, iter, struct spa_pod, &remaining) &&\n+           remaining >= SPA_POD_BODY_SIZE(iter);\n@@ -35,1 +45,1 @@\n-static inline void *spa_pod_next(const void *iter)\n+SPA_API_POD_ITER void *spa_pod_next(const void *iter)\n@@ -40,1 +50,1 @@\n-static inline struct spa_pod_prop *spa_pod_prop_first(const struct spa_pod_object_body *body)\n+SPA_API_POD_ITER struct spa_pod_prop *spa_pod_prop_first(const struct spa_pod_object_body *body)\n@@ -45,1 +55,1 @@\n-static inline bool spa_pod_prop_is_inside(const struct spa_pod_object_body *body,\n+SPA_API_POD_ITER bool spa_pod_prop_is_inside(const struct spa_pod_object_body *body,\n@@ -48,2 +58,4 @@\n-    return SPA_POD_CONTENTS(struct spa_pod_prop, iter) <= SPA_PTROFF(body, size, void) &&\n-        SPA_PTROFF(iter, SPA_POD_PROP_SIZE(iter), void) <= SPA_PTROFF(body, size, void);\n+    size_t remaining;\n+\n+    return spa_ptr_type_inside(body, size, iter, struct spa_pod_prop, &remaining) &&\n+           remaining >= iter->value.size;\n@@ -52,1 +64,1 @@\n-static inline struct spa_pod_prop *spa_pod_prop_next(const struct spa_pod_prop *iter)\n+SPA_API_POD_ITER struct spa_pod_prop *spa_pod_prop_next(const struct spa_pod_prop *iter)\n@@ -57,1 +69,1 @@\n-static inline struct spa_pod_control *spa_pod_control_first(const struct spa_pod_sequence_body *body)\n+SPA_API_POD_ITER struct spa_pod_control *spa_pod_control_first(const struct spa_pod_sequence_body *body)\n@@ -62,1 +74,1 @@\n-static inline bool spa_pod_control_is_inside(const struct spa_pod_sequence_body *body,\n+SPA_API_POD_ITER bool spa_pod_control_is_inside(const struct spa_pod_sequence_body *body,\n@@ -65,2 +77,4 @@\n-    return SPA_POD_CONTENTS(struct spa_pod_control, iter) <= SPA_PTROFF(body, size, void) &&\n-        SPA_PTROFF(iter, SPA_POD_CONTROL_SIZE(iter), void) <= SPA_PTROFF(body, size, void);\n+    size_t remaining;\n+\n+    return spa_ptr_type_inside(body, size, iter, struct spa_pod_control, &remaining) &&\n+           remaining >= iter->value.size;\n@@ -69,1 +83,1 @@\n-static inline struct spa_pod_control *spa_pod_control_next(const struct spa_pod_control *iter)\n+SPA_API_POD_ITER struct spa_pod_control *spa_pod_control_next(const struct spa_pod_control *iter)\n@@ -76,1 +90,1 @@\n-         (iter) < (__typeof__(iter))SPA_PTROFF((body), (_size), void);                \\\n+         (body)->child.size > 0 && spa_ptrinside(body, _size, iter, (body)->child.size, NULL);    \\\n@@ -84,1 +98,1 @@\n-         (iter) < (__typeof__(iter))SPA_PTROFF((body), (_size), void);                \\\n+         (body)->child.size > 0 && spa_ptrinside(body, _size, iter, (body)->child.size, NULL);    \\\n@@ -115,1 +129,1 @@\n-static inline void *spa_pod_from_data(void *data, size_t maxsize, off_t offset, size_t size)\n+SPA_API_POD_ITER void *spa_pod_from_data(void *data, size_t maxsize, off_t offset, size_t size)\n@@ -126,1 +140,1 @@\n-static inline int spa_pod_is_none(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_none(const struct spa_pod *pod)\n@@ -131,1 +145,1 @@\n-static inline int spa_pod_is_bool(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_bool(const struct spa_pod *pod)\n@@ -136,1 +150,1 @@\n-static inline int spa_pod_get_bool(const struct spa_pod *pod, bool *value)\n+SPA_API_POD_ITER int spa_pod_get_bool(const struct spa_pod *pod, bool *value)\n@@ -144,1 +158,1 @@\n-static inline int spa_pod_is_id(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_id(const struct spa_pod *pod)\n@@ -149,1 +163,1 @@\n-static inline int spa_pod_get_id(const struct spa_pod *pod, uint32_t *value)\n+SPA_API_POD_ITER int spa_pod_get_id(const struct spa_pod *pod, uint32_t *value)\n@@ -157,1 +171,1 @@\n-static inline int spa_pod_is_int(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_int(const struct spa_pod *pod)\n@@ -162,1 +176,1 @@\n-static inline int spa_pod_get_int(const struct spa_pod *pod, int32_t *value)\n+SPA_API_POD_ITER int spa_pod_get_int(const struct spa_pod *pod, int32_t *value)\n@@ -170,1 +184,1 @@\n-static inline int spa_pod_is_long(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_long(const struct spa_pod *pod)\n@@ -175,1 +189,1 @@\n-static inline int spa_pod_get_long(const struct spa_pod *pod, int64_t *value)\n+SPA_API_POD_ITER int spa_pod_get_long(const struct spa_pod *pod, int64_t *value)\n@@ -183,1 +197,1 @@\n-static inline int spa_pod_is_float(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_float(const struct spa_pod *pod)\n@@ -188,1 +202,1 @@\n-static inline int spa_pod_get_float(const struct spa_pod *pod, float *value)\n+SPA_API_POD_ITER int spa_pod_get_float(const struct spa_pod *pod, float *value)\n@@ -196,1 +210,1 @@\n-static inline int spa_pod_is_double(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_double(const struct spa_pod *pod)\n@@ -201,1 +215,1 @@\n-static inline int spa_pod_get_double(const struct spa_pod *pod, double *value)\n+SPA_API_POD_ITER int spa_pod_get_double(const struct spa_pod *pod, double *value)\n@@ -209,1 +223,1 @@\n-static inline int spa_pod_is_string(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_string(const struct spa_pod *pod)\n@@ -217,1 +231,1 @@\n-static inline int spa_pod_get_string(const struct spa_pod *pod, const char **value)\n+SPA_API_POD_ITER int spa_pod_get_string(const struct spa_pod *pod, const char **value)\n@@ -225,1 +239,1 @@\n-static inline int spa_pod_copy_string(const struct spa_pod *pod, size_t maxlen, char *dest)\n+SPA_API_POD_ITER int spa_pod_copy_string(const struct spa_pod *pod, size_t maxlen, char *dest)\n@@ -235,1 +249,1 @@\n-static inline int spa_pod_is_bytes(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_bytes(const struct spa_pod *pod)\n@@ -240,1 +254,1 @@\n-static inline int spa_pod_get_bytes(const struct spa_pod *pod, const void **value, uint32_t *len)\n+SPA_API_POD_ITER int spa_pod_get_bytes(const struct spa_pod *pod, const void **value, uint32_t *len)\n@@ -249,1 +263,1 @@\n-static inline int spa_pod_is_pointer(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_pointer(const struct spa_pod *pod)\n@@ -255,1 +269,1 @@\n-static inline int spa_pod_get_pointer(const struct spa_pod *pod, uint32_t *type, const void **value)\n+SPA_API_POD_ITER int spa_pod_get_pointer(const struct spa_pod *pod, uint32_t *type, const void **value)\n@@ -264,1 +278,1 @@\n-static inline int spa_pod_is_fd(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_fd(const struct spa_pod *pod)\n@@ -270,1 +284,1 @@\n-static inline int spa_pod_get_fd(const struct spa_pod *pod, int64_t *value)\n+SPA_API_POD_ITER int spa_pod_get_fd(const struct spa_pod *pod, int64_t *value)\n@@ -278,1 +292,1 @@\n-static inline int spa_pod_is_rectangle(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_rectangle(const struct spa_pod *pod)\n@@ -284,1 +298,1 @@\n-static inline int spa_pod_get_rectangle(const struct spa_pod *pod, struct spa_rectangle *value)\n+SPA_API_POD_ITER int spa_pod_get_rectangle(const struct spa_pod *pod, struct spa_rectangle *value)\n@@ -292,1 +306,1 @@\n-static inline int spa_pod_is_fraction(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_fraction(const struct spa_pod *pod)\n@@ -298,1 +312,1 @@\n-static inline int spa_pod_get_fraction(const struct spa_pod *pod, struct spa_fraction *value)\n+SPA_API_POD_ITER int spa_pod_get_fraction(const struct spa_pod *pod, struct spa_fraction *value)\n@@ -305,1 +319,1 @@\n-static inline int spa_pod_is_bitmap(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_bitmap(const struct spa_pod *pod)\n@@ -311,1 +325,1 @@\n-static inline int spa_pod_is_array(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_array(const struct spa_pod *pod)\n@@ -317,1 +331,1 @@\n-static inline void *spa_pod_get_array(const struct spa_pod *pod, uint32_t *n_values)\n+SPA_API_POD_ITER void *spa_pod_get_array(const struct spa_pod *pod, uint32_t *n_values)\n@@ -324,1 +338,1 @@\n-static inline uint32_t spa_pod_copy_array(const struct spa_pod *pod, uint32_t type,\n+SPA_API_POD_ITER uint32_t spa_pod_copy_array(const struct spa_pod *pod, uint32_t type,\n@@ -336,1 +350,1 @@\n-static inline int spa_pod_is_choice(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_choice(const struct spa_pod *pod)\n@@ -342,1 +356,1 @@\n-static inline struct spa_pod *spa_pod_get_values(const struct spa_pod *pod, uint32_t *n_vals, uint32_t *choice)\n+SPA_API_POD_ITER struct spa_pod *spa_pod_get_values(const struct spa_pod *pod, uint32_t *n_vals, uint32_t *choice)\n@@ -356,1 +370,1 @@\n-static inline int spa_pod_is_struct(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_struct(const struct spa_pod *pod)\n@@ -361,1 +375,1 @@\n-static inline int spa_pod_is_object(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_object(const struct spa_pod *pod)\n@@ -367,1 +381,1 @@\n-static inline bool spa_pod_is_object_type(const struct spa_pod *pod, uint32_t type)\n+SPA_API_POD_ITER bool spa_pod_is_object_type(const struct spa_pod *pod, uint32_t type)\n@@ -372,1 +386,1 @@\n-static inline bool spa_pod_is_object_id(const struct spa_pod *pod, uint32_t id)\n+SPA_API_POD_ITER bool spa_pod_is_object_id(const struct spa_pod *pod, uint32_t id)\n@@ -377,1 +391,1 @@\n-static inline int spa_pod_is_sequence(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_is_sequence(const struct spa_pod *pod)\n@@ -383,1 +397,1 @@\n-static inline const struct spa_pod_prop *spa_pod_object_find_prop(const struct spa_pod_object *pod,\n+SPA_API_POD_ITER const struct spa_pod_prop *spa_pod_object_find_prop(const struct spa_pod_object *pod,\n@@ -403,1 +417,1 @@\n-static inline const struct spa_pod_prop *spa_pod_find_prop(const struct spa_pod *pod,\n+SPA_API_POD_ITER const struct spa_pod_prop *spa_pod_find_prop(const struct spa_pod *pod,\n@@ -411,1 +425,1 @@\n-static inline int spa_pod_object_fixate(struct spa_pod_object *pod)\n+SPA_API_POD_ITER int spa_pod_object_fixate(struct spa_pod_object *pod)\n@@ -422,1 +436,1 @@\n-static inline int spa_pod_fixate(struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_fixate(struct spa_pod *pod)\n@@ -429,1 +443,1 @@\n-static inline int spa_pod_object_is_fixated(const struct spa_pod_object *pod)\n+SPA_API_POD_ITER int spa_pod_object_is_fixated(const struct spa_pod_object *pod)\n@@ -440,1 +454,9 @@\n-static inline int spa_pod_is_fixated(const struct spa_pod *pod)\n+SPA_API_POD_ITER int spa_pod_object_has_props(const struct spa_pod_object *pod)\n+{\n+    struct spa_pod_prop *res;\n+    SPA_POD_OBJECT_FOREACH(pod, res)\n+        return 1;\n+    return 0;\n+}\n+\n+SPA_API_POD_ITER int spa_pod_is_fixated(const struct spa_pod *pod)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/pod\/iter.h","additions":82,"deletions":60,"binary":false,"changes":142,"status":"modified"},{"patch":"@@ -18,0 +18,8 @@\n+#ifndef SPA_API_POD_PARSER\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_POD_PARSER SPA_API_IMPL\n+ #else\n+  #define SPA_API_POD_PARSER static inline\n+ #endif\n+#endif\n+\n@@ -36,1 +44,1 @@\n-#define SPA_POD_PARSER_INIT(buffer,size)  ((struct spa_pod_parser){ (buffer), (size), 0, {} })\n+#define SPA_POD_PARSER_INIT(buffer,size)  ((struct spa_pod_parser){ (buffer), (size), 0, {0,0,NULL}})\n@@ -38,1 +46,1 @@\n-static inline void spa_pod_parser_init(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER void spa_pod_parser_init(struct spa_pod_parser *parser,\n@@ -44,1 +52,1 @@\n-static inline void spa_pod_parser_pod(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER void spa_pod_parser_pod(struct spa_pod_parser *parser,\n@@ -50,1 +58,1 @@\n-static inline void\n+SPA_API_POD_PARSER void\n@@ -56,1 +64,1 @@\n-static inline void\n+SPA_API_POD_PARSER void\n@@ -62,1 +70,1 @@\n-static inline struct spa_pod *\n+SPA_API_POD_PARSER struct spa_pod *\n@@ -81,1 +89,1 @@\n-static inline struct spa_pod *spa_pod_parser_frame(struct spa_pod_parser *parser, struct spa_pod_frame *frame)\n+SPA_API_POD_PARSER struct spa_pod *spa_pod_parser_frame(struct spa_pod_parser *parser, struct spa_pod_frame *frame)\n@@ -86,1 +94,1 @@\n-static inline void spa_pod_parser_push(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER void spa_pod_parser_push(struct spa_pod_parser *parser,\n@@ -96,1 +104,1 @@\n-static inline struct spa_pod *spa_pod_parser_current(struct spa_pod_parser *parser)\n+SPA_API_POD_PARSER struct spa_pod *spa_pod_parser_current(struct spa_pod_parser *parser)\n@@ -103,1 +111,1 @@\n-static inline void spa_pod_parser_advance(struct spa_pod_parser *parser, const struct spa_pod *pod)\n+SPA_API_POD_PARSER void spa_pod_parser_advance(struct spa_pod_parser *parser, const struct spa_pod *pod)\n@@ -108,1 +116,1 @@\n-static inline struct spa_pod *spa_pod_parser_next(struct spa_pod_parser *parser)\n+SPA_API_POD_PARSER struct spa_pod *spa_pod_parser_next(struct spa_pod_parser *parser)\n@@ -116,1 +124,1 @@\n-static inline int spa_pod_parser_pop(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER int spa_pod_parser_pop(struct spa_pod_parser *parser,\n@@ -124,1 +132,1 @@\n-static inline int spa_pod_parser_get_bool(struct spa_pod_parser *parser, bool *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_bool(struct spa_pod_parser *parser, bool *value)\n@@ -133,1 +141,1 @@\n-static inline int spa_pod_parser_get_id(struct spa_pod_parser *parser, uint32_t *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_id(struct spa_pod_parser *parser, uint32_t *value)\n@@ -142,1 +150,1 @@\n-static inline int spa_pod_parser_get_int(struct spa_pod_parser *parser, int32_t *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_int(struct spa_pod_parser *parser, int32_t *value)\n@@ -151,1 +159,1 @@\n-static inline int spa_pod_parser_get_long(struct spa_pod_parser *parser, int64_t *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_long(struct spa_pod_parser *parser, int64_t *value)\n@@ -160,1 +168,1 @@\n-static inline int spa_pod_parser_get_float(struct spa_pod_parser *parser, float *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_float(struct spa_pod_parser *parser, float *value)\n@@ -169,1 +177,1 @@\n-static inline int spa_pod_parser_get_double(struct spa_pod_parser *parser, double *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_double(struct spa_pod_parser *parser, double *value)\n@@ -178,1 +186,1 @@\n-static inline int spa_pod_parser_get_string(struct spa_pod_parser *parser, const char **value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_string(struct spa_pod_parser *parser, const char **value)\n@@ -187,1 +195,1 @@\n-static inline int spa_pod_parser_get_bytes(struct spa_pod_parser *parser, const void **value, uint32_t *len)\n+SPA_API_POD_PARSER int spa_pod_parser_get_bytes(struct spa_pod_parser *parser, const void **value, uint32_t *len)\n@@ -196,1 +204,1 @@\n-static inline int spa_pod_parser_get_pointer(struct spa_pod_parser *parser, uint32_t *type, const void **value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_pointer(struct spa_pod_parser *parser, uint32_t *type, const void **value)\n@@ -205,1 +213,1 @@\n-static inline int spa_pod_parser_get_fd(struct spa_pod_parser *parser, int64_t *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_fd(struct spa_pod_parser *parser, int64_t *value)\n@@ -214,1 +222,1 @@\n-static inline int spa_pod_parser_get_rectangle(struct spa_pod_parser *parser, struct spa_rectangle *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_rectangle(struct spa_pod_parser *parser, struct spa_rectangle *value)\n@@ -223,1 +231,1 @@\n-static inline int spa_pod_parser_get_fraction(struct spa_pod_parser *parser, struct spa_fraction *value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_fraction(struct spa_pod_parser *parser, struct spa_fraction *value)\n@@ -232,1 +240,1 @@\n-static inline int spa_pod_parser_get_pod(struct spa_pod_parser *parser, struct spa_pod **value)\n+SPA_API_POD_PARSER int spa_pod_parser_get_pod(struct spa_pod_parser *parser, struct spa_pod **value)\n@@ -241,1 +249,1 @@\n-static inline int spa_pod_parser_push_struct(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER int spa_pod_parser_push_struct(struct spa_pod_parser *parser,\n@@ -254,1 +262,1 @@\n-static inline int spa_pod_parser_push_object(struct spa_pod_parser *parser,\n+SPA_API_POD_PARSER int spa_pod_parser_push_object(struct spa_pod_parser *parser,\n@@ -271,1 +279,1 @@\n-static inline bool spa_pod_parser_can_collect(const struct spa_pod *pod, char type)\n+SPA_API_POD_PARSER bool spa_pod_parser_can_collect(const struct spa_pod *pod, char type)\n@@ -446,1 +454,1 @@\n-static inline int spa_pod_parser_getv(struct spa_pod_parser *parser, va_list args)\n+SPA_API_POD_PARSER int spa_pod_parser_getv(struct spa_pod_parser *parser, va_list args)\n@@ -458,1 +466,1 @@\n-        if (ftype == SPA_TYPE_Object) {\n+        if (f && ftype == SPA_TYPE_Object) {\n@@ -499,1 +507,1 @@\n-static inline int spa_pod_parser_get(struct spa_pod_parser *parser, ...)\n+SPA_API_POD_PARSER int spa_pod_parser_get(struct spa_pod_parser *parser, ...)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/pod\/parser.h","additions":39,"deletions":31,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -12,0 +12,2 @@\n+#include <errno.h>\n+\n@@ -16,0 +18,8 @@\n+#ifndef SPA_API_LOOP\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_LOOP SPA_API_IMPL\n+ #else\n+  #define SPA_API_LOOP static inline\n+ #endif\n+#endif\n+\n@@ -69,1 +79,6 @@\n-    \/** add a source to the loop *\/\n+    \/** Add a source to the loop. Must be called from the loop's own thread.\n+     *\n+     * \\param[in] object The callbacks data.\n+     * \\param[in] source The source.\n+     * \\return 0 on success, negative errno-style value on failure.\n+     *\/\n@@ -73,1 +88,6 @@\n-    \/** update the source io mask *\/\n+    \/** Update the source io mask. Must be called from the loop's own thread.\n+     *\n+     * \\param[in] object The callbacks data.\n+     * \\param[in] source The source.\n+     * \\return 0 on success, negative errno-style value on failure.\n+     *\/\n@@ -77,1 +97,6 @@\n-    \/** remove a source from the loop *\/\n+    \/** Remove a source from the loop. Must be called from the loop's own thread.\n+     *\n+     * \\param[in] object The callbacks data.\n+     * \\param[in] source The source.\n+     * \\return 0 on success, negative errno-style value on failure.\n+     *\/\n@@ -81,1 +106,23 @@\n-    \/** invoke a function in the context of this loop *\/\n+    \/** Invoke a function in the context of this loop.\n+     * May be called from any thread and multiple threads at the same time.\n+     * If called from the loop's thread, all callbacks previously queued with\n+     * invoke() will be run synchronously, which might cause unexpected\n+     * reentrancy problems.\n+     *\n+     * \\param[in] object The callbacks data.\n+     * \\param func The function to be invoked.\n+     * \\param seq An opaque sequence number. This will be made\n+     *            available to func.\n+     * \\param[in] data Data that will be copied into the internal ring buffer and made\n+     *             available to func. Because this data is copied, it is okay to\n+     *             pass a pointer to a local variable, but do not pass a pointer to\n+     *             an object that has identity.\n+     * \\param size The size of data to copy.\n+     * \\param block If \\true, do not return until func has been called. Otherwise,\n+     *              returns immediately. Passing \\true does not risk a deadlock because\n+     *              the data thread is never allowed to wait on any other thread.\n+     * \\param user_data An opaque pointer passed to func.\n+     * \\return `-EPIPE` if the internal ring buffer filled up,\n+     *         if block is \\false, 0 if seq was SPA_ID_INVALID or\n+     *         seq with the ASYNC flag set\n+     *         or the return value of func otherwise. *\/\n@@ -91,15 +138,23 @@\n-#define spa_loop_method(o,method,version,...)                \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    struct spa_loop *_o = o;                    \\\n-    spa_interface_call_res(&_o->iface,                \\\n-            struct spa_loop_methods, _res,            \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-\n-#define spa_loop_add_source(l,...)    spa_loop_method(l,add_source,0,##__VA_ARGS__)\n-#define spa_loop_update_source(l,...)    spa_loop_method(l,update_source,0,##__VA_ARGS__)\n-#define spa_loop_remove_source(l,...)    spa_loop_method(l,remove_source,0,##__VA_ARGS__)\n-#define spa_loop_invoke(l,...)        spa_loop_method(l,invoke,0,##__VA_ARGS__)\n-\n+SPA_API_LOOP int spa_loop_add_source(struct spa_loop *object, struct spa_source *source)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop, &object->iface, add_source, 0, source);\n+}\n+SPA_API_LOOP int spa_loop_update_source(struct spa_loop *object, struct spa_source *source)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop, &object->iface, update_source, 0, source);\n+}\n+SPA_API_LOOP int spa_loop_remove_source(struct spa_loop *object, struct spa_source *source)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop, &object->iface, remove_source, 0, source);\n+}\n+SPA_API_LOOP int spa_loop_invoke(struct spa_loop *object,\n+        spa_invoke_func_t func, uint32_t seq, const void *data,\n+        size_t size, bool block, void *user_data)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop, &object->iface, invoke, 0, func, seq, data,\n+            size, block, user_data);\n+}\n@@ -121,15 +176,13 @@\n-#define spa_loop_control_hook_before(l)                            \\\n-({                                            \\\n-    struct spa_hook_list *_l = l;                            \\\n-    struct spa_hook *_h;                                \\\n-    spa_list_for_each_reverse(_h, &_l->list, link)                    \\\n-        spa_callbacks_call(&_h->cb, struct spa_loop_control_hooks, before, 0);    \\\n-})\n-\n-#define spa_loop_control_hook_after(l)                            \\\n-({                                            \\\n-    struct spa_hook_list *_l = l;                            \\\n-    struct spa_hook *_h;                                \\\n-    spa_list_for_each(_h, &_l->list, link)                        \\\n-        spa_callbacks_call(&_h->cb, struct spa_loop_control_hooks, after, 0);    \\\n-})\n+SPA_API_LOOP void spa_loop_control_hook_before(struct spa_hook_list *l)\n+{\n+    struct spa_hook *h;\n+    spa_list_for_each_reverse(h, &l->list, link)\n+        spa_callbacks_call_fast(&h->cb, struct spa_loop_control_hooks, before, 0);\n+}\n+\n+SPA_API_LOOP void spa_loop_control_hook_after(struct spa_hook_list *l)\n+{\n+    struct spa_hook *h;\n+    spa_list_for_each(h, &l->list, link)\n+        spa_callbacks_call_fast(&h->cb, struct spa_loop_control_hooks, after, 0);\n+}\n@@ -139,0 +192,20 @@\n+ *\n+ * The event loop control function provide API to run the event loop.\n+ *\n+ * The below (pseudo)code is a minimal example outlining the use of the loop\n+ * control:\n+ * \\code{.c}\n+ * spa_loop_control_enter(loop);\n+ * while (running) {\n+ *   spa_loop_control_iterate(loop, -1);\n+ * }\n+ * spa_loop_control_leave(loop);\n+ * \\endcode\n+ *\n+ * It is also possible to add the loop to an existing event loop by using the\n+ * spa_loop_control_get_fd() call. This fd will become readable when activity\n+ * has been detected on the sources in the loop. spa_loop_control_iterate() with\n+ * a 0 timeout should be called to process the pending sources.\n+ *\n+ * spa_loop_control_enter() and spa_loop_control_leave() should be called once\n+ * from the thread that will run the iterate() function.\n@@ -146,0 +219,9 @@\n+    \/** get the loop fd\n+     * \\param object the control to query\n+     *\n+     * Get the fd of this loop control. This fd will be readable when a\n+     * source in the loop has activity. The user should call iterate()\n+     * with a 0 timeout to schedule one iteration of the loop and dispatch\n+     * the sources.\n+     * \\return the fd of the loop\n+     *\/\n@@ -149,1 +231,1 @@\n-     * \\param ctrl the control to change\n+     * \\param object the control to change\n@@ -160,1 +242,1 @@\n-     * \\param ctrl the control\n+     * \\param object the control\n@@ -162,3 +244,4 @@\n-     * Start an iteration of the loop. This function should be called\n-     * before calling iterate and is typically used to capture the thread\n-     * that this loop will run in.\n+     * This function should be called before calling iterate and is\n+     * typically used to capture the thread that this loop will run in.\n+     * It should ideally be called once from the thread that will run\n+     * the loop.\n@@ -168,1 +251,1 @@\n-     * \\param ctrl the control\n+     * \\param object the control\n@@ -170,2 +253,2 @@\n-     * Ends the iteration of a loop. This should be called after calling\n-     * iterate.\n+     * It should ideally be called once after calling iterate when the loop\n+     * will no longer be iterated from the thread that called enter().\n@@ -197,24 +280,37 @@\n-#define spa_loop_control_method_v(o,method,version,...)            \\\n-({                                    \\\n-    struct spa_loop_control *_o = o;                \\\n-    spa_interface_call(&_o->iface,                    \\\n-            struct spa_loop_control_methods,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-})\n-\n-#define spa_loop_control_method_r(o,method,version,...)            \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    struct spa_loop_control *_o = o;                \\\n-    spa_interface_call_res(&_o->iface,                \\\n-            struct spa_loop_control_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-\n-#define spa_loop_control_get_fd(l)        spa_loop_control_method_r(l,get_fd,0)\n-#define spa_loop_control_add_hook(l,...)    spa_loop_control_method_v(l,add_hook,0,__VA_ARGS__)\n-#define spa_loop_control_enter(l)        spa_loop_control_method_v(l,enter,0)\n-#define spa_loop_control_leave(l)        spa_loop_control_method_v(l,leave,0)\n-#define spa_loop_control_iterate(l,...)        spa_loop_control_method_r(l,iterate,0,__VA_ARGS__)\n-#define spa_loop_control_check(l)        spa_loop_control_method_r(l,check,1)\n+SPA_API_LOOP int spa_loop_control_get_fd(struct spa_loop_control *object)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_control, &object->iface, get_fd, 0);\n+}\n+SPA_API_LOOP void spa_loop_control_add_hook(struct spa_loop_control *object,\n+        struct spa_hook *hook, const struct spa_loop_control_hooks *hooks,\n+        void *data)\n+{\n+    spa_api_method_v(spa_loop_control, &object->iface, add_hook, 0,\n+            hook, hooks, data);\n+}\n+SPA_API_LOOP void spa_loop_control_enter(struct spa_loop_control *object)\n+{\n+    spa_api_method_v(spa_loop_control, &object->iface, enter, 0);\n+}\n+SPA_API_LOOP void spa_loop_control_leave(struct spa_loop_control *object)\n+{\n+    spa_api_method_v(spa_loop_control, &object->iface, leave, 0);\n+}\n+SPA_API_LOOP int spa_loop_control_iterate(struct spa_loop_control *object,\n+        int timeout)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_control, &object->iface, iterate, 0, timeout);\n+}\n+SPA_API_LOOP int spa_loop_control_iterate_fast(struct spa_loop_control *object,\n+        int timeout)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP,\n+            spa_loop_control, &object->iface, iterate, 0, timeout);\n+}\n+SPA_API_LOOP int spa_loop_control_check(struct spa_loop_control *object)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_control, &object->iface, check, 1);\n+}\n@@ -271,38 +367,65 @@\n-#define spa_loop_utils_method_v(o,method,version,...)            \\\n-({                                    \\\n-    struct spa_loop_utils *_o = o;                    \\\n-    spa_interface_call(&_o->iface,                    \\\n-            struct spa_loop_utils_methods,            \\\n-            method, version, ##__VA_ARGS__);        \\\n-})\n-\n-#define spa_loop_utils_method_r(o,method,version,...)            \\\n-({                                    \\\n-    int _res = -ENOTSUP;                        \\\n-    struct spa_loop_utils *_o = o;                    \\\n-    spa_interface_call_res(&_o->iface,                \\\n-            struct spa_loop_utils_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-#define spa_loop_utils_method_s(o,method,version,...)            \\\n-({                                    \\\n-    struct spa_source *_res = NULL;                    \\\n-    struct spa_loop_utils *_o = o;                    \\\n-    spa_interface_call_res(&_o->iface,                \\\n-            struct spa_loop_utils_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-\n-\n-#define spa_loop_utils_add_io(l,...)        spa_loop_utils_method_s(l,add_io,0,__VA_ARGS__)\n-#define spa_loop_utils_update_io(l,...)        spa_loop_utils_method_r(l,update_io,0,__VA_ARGS__)\n-#define spa_loop_utils_add_idle(l,...)        spa_loop_utils_method_s(l,add_idle,0,__VA_ARGS__)\n-#define spa_loop_utils_enable_idle(l,...)    spa_loop_utils_method_r(l,enable_idle,0,__VA_ARGS__)\n-#define spa_loop_utils_add_event(l,...)        spa_loop_utils_method_s(l,add_event,0,__VA_ARGS__)\n-#define spa_loop_utils_signal_event(l,...)    spa_loop_utils_method_r(l,signal_event,0,__VA_ARGS__)\n-#define spa_loop_utils_add_timer(l,...)        spa_loop_utils_method_s(l,add_timer,0,__VA_ARGS__)\n-#define spa_loop_utils_update_timer(l,...)    spa_loop_utils_method_r(l,update_timer,0,__VA_ARGS__)\n-#define spa_loop_utils_add_signal(l,...)    spa_loop_utils_method_s(l,add_signal,0,__VA_ARGS__)\n-#define spa_loop_utils_destroy_source(l,...)    spa_loop_utils_method_v(l,destroy_source,0,__VA_ARGS__)\n+SPA_API_LOOP struct spa_source *\n+spa_loop_utils_add_io(struct spa_loop_utils *object, int fd, uint32_t mask,\n+        bool close, spa_source_io_func_t func, void *data)\n+{\n+    return spa_api_method_r(struct spa_source *, NULL,\n+            spa_loop_utils, &object->iface, add_io, 0, fd, mask, close, func, data);\n+}\n+SPA_API_LOOP int spa_loop_utils_update_io(struct spa_loop_utils *object,\n+        struct spa_source *source, uint32_t mask)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_utils, &object->iface, update_io, 0, source, mask);\n+}\n+SPA_API_LOOP struct spa_source *\n+spa_loop_utils_add_idle(struct spa_loop_utils *object, bool enabled,\n+        spa_source_idle_func_t func, void *data)\n+{\n+    return spa_api_method_r(struct spa_source *, NULL,\n+            spa_loop_utils, &object->iface, add_idle, 0, enabled, func, data);\n+}\n+SPA_API_LOOP int spa_loop_utils_enable_idle(struct spa_loop_utils *object,\n+        struct spa_source *source, bool enabled)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_utils, &object->iface, enable_idle, 0, source, enabled);\n+}\n+SPA_API_LOOP struct spa_source *\n+spa_loop_utils_add_event(struct spa_loop_utils *object, spa_source_event_func_t func, void *data)\n+{\n+    return spa_api_method_r(struct spa_source *, NULL,\n+            spa_loop_utils, &object->iface, add_event, 0, func, data);\n+}\n+SPA_API_LOOP int spa_loop_utils_signal_event(struct spa_loop_utils *object,\n+        struct spa_source *source)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_utils, &object->iface, signal_event, 0, source);\n+}\n+SPA_API_LOOP struct spa_source *\n+spa_loop_utils_add_timer(struct spa_loop_utils *object, spa_source_timer_func_t func, void *data)\n+{\n+    return spa_api_method_r(struct spa_source *, NULL,\n+            spa_loop_utils, &object->iface, add_timer, 0, func, data);\n+}\n+SPA_API_LOOP int spa_loop_utils_update_timer(struct spa_loop_utils *object,\n+        struct spa_source *source, struct timespec *value,\n+        struct timespec *interval, bool absolute)\n+{\n+    return spa_api_method_r(int, -ENOTSUP,\n+            spa_loop_utils, &object->iface, update_timer, 0, source,\n+            value, interval, absolute);\n+}\n+SPA_API_LOOP struct spa_source *\n+spa_loop_utils_add_signal(struct spa_loop_utils *object, int signal_number,\n+        spa_source_signal_func_t func, void *data)\n+{\n+    return spa_api_method_r(struct spa_source *, NULL,\n+            spa_loop_utils, &object->iface, add_signal, 0,\n+            signal_number, func, data);\n+}\n+SPA_API_LOOP void spa_loop_utils_destroy_source(struct spa_loop_utils *object,\n+        struct spa_source *source)\n+{\n+    spa_api_method_v(spa_loop_utils, &object->iface, destroy_source, 0, source);\n+}\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/support\/loop.h","additions":227,"deletions":104,"binary":false,"changes":331,"status":"modified"},{"patch":"@@ -15,0 +15,1 @@\n+#include <errno.h>\n@@ -20,0 +21,8 @@\n+#ifndef SPA_API_SYSTEM\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_SYSTEM SPA_API_IMPL\n+ #else\n+  #define SPA_API_SYSTEM static inline\n+ #endif\n+#endif\n+\n@@ -100,36 +109,100 @@\n-#define spa_system_method_r(o,method,version,...)            \\\n-({                                    \\\n-    volatile int _res = -ENOTSUP;                    \\\n-    struct spa_system *_o = o;                    \\\n-    spa_interface_call_res(&_o->iface,                \\\n-            struct spa_system_methods, _res,        \\\n-            method, version, ##__VA_ARGS__);        \\\n-    _res;                                \\\n-})\n-\n-\n-#define spa_system_read(s,...)            spa_system_method_r(s,read,0,__VA_ARGS__)\n-#define spa_system_write(s,...)            spa_system_method_r(s,write,0,__VA_ARGS__)\n-#define spa_system_ioctl(s,...)            spa_system_method_r(s,ioctl,0,__VA_ARGS__)\n-#define spa_system_close(s,...)            spa_system_method_r(s,close,0,__VA_ARGS__)\n-\n-#define spa_system_clock_gettime(s,...)        spa_system_method_r(s,clock_gettime,0,__VA_ARGS__)\n-#define spa_system_clock_getres(s,...)        spa_system_method_r(s,clock_getres,0,__VA_ARGS__)\n-\n-#define spa_system_pollfd_create(s,...)        spa_system_method_r(s,pollfd_create,0,__VA_ARGS__)\n-#define spa_system_pollfd_add(s,...)        spa_system_method_r(s,pollfd_add,0,__VA_ARGS__)\n-#define spa_system_pollfd_mod(s,...)        spa_system_method_r(s,pollfd_mod,0,__VA_ARGS__)\n-#define spa_system_pollfd_del(s,...)        spa_system_method_r(s,pollfd_del,0,__VA_ARGS__)\n-#define spa_system_pollfd_wait(s,...)        spa_system_method_r(s,pollfd_wait,0,__VA_ARGS__)\n-\n-#define spa_system_timerfd_create(s,...)    spa_system_method_r(s,timerfd_create,0,__VA_ARGS__)\n-#define spa_system_timerfd_settime(s,...)    spa_system_method_r(s,timerfd_settime,0,__VA_ARGS__)\n-#define spa_system_timerfd_gettime(s,...)    spa_system_method_r(s,timerfd_gettime,0,__VA_ARGS__)\n-#define spa_system_timerfd_read(s,...)        spa_system_method_r(s,timerfd_read,0,__VA_ARGS__)\n-\n-#define spa_system_eventfd_create(s,...)    spa_system_method_r(s,eventfd_create,0,__VA_ARGS__)\n-#define spa_system_eventfd_write(s,...)        spa_system_method_r(s,eventfd_write,0,__VA_ARGS__)\n-#define spa_system_eventfd_read(s,...)        spa_system_method_r(s,eventfd_read,0,__VA_ARGS__)\n-\n-#define spa_system_signalfd_create(s,...)    spa_system_method_r(s,signalfd_create,0,__VA_ARGS__)\n-#define spa_system_signalfd_read(s,...)        spa_system_method_r(s,signalfd_read,0,__VA_ARGS__)\n+SPA_API_SYSTEM ssize_t spa_system_read(struct spa_system *object, int fd, void *buf, size_t count)\n+{\n+    return spa_api_method_fast_r(ssize_t, -ENOTSUP, spa_system, &object->iface, read, 0, fd, buf, count);\n+}\n+SPA_API_SYSTEM ssize_t spa_system_write(struct spa_system *object, int fd, const void *buf, size_t count)\n+{\n+    return spa_api_method_fast_r(ssize_t, -ENOTSUP, spa_system, &object->iface, write, 0, fd, buf, count);\n+}\n+#define spa_system_ioctl(object,fd,request,...)    \\\n+    spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, ioctl, 0, fd, request, ##__VA_ARGS__)\n+\n+SPA_API_SYSTEM int spa_system_close(struct spa_system *object, int fd)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, close, 0, fd);\n+}\n+SPA_API_SYSTEM int spa_system_clock_gettime(struct spa_system *object,\n+            int clockid, struct timespec *value)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, clock_gettime, 0, clockid, value);\n+}\n+SPA_API_SYSTEM int spa_system_clock_getres(struct spa_system *object,\n+            int clockid, struct timespec *res)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, clock_getres, 0, clockid, res);\n+}\n+\n+SPA_API_SYSTEM int spa_system_pollfd_create(struct spa_system *object, int flags)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, pollfd_create, 0, flags);\n+}\n+SPA_API_SYSTEM int spa_system_pollfd_add(struct spa_system *object, int pfd, int fd, uint32_t events, void *data)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, pollfd_add, 0, pfd, fd, events, data);\n+}\n+SPA_API_SYSTEM int spa_system_pollfd_mod(struct spa_system *object, int pfd, int fd, uint32_t events, void *data)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, pollfd_mod, 0, pfd, fd, events, data);\n+}\n+SPA_API_SYSTEM int spa_system_pollfd_del(struct spa_system *object, int pfd, int fd)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, pollfd_del, 0, pfd, fd);\n+}\n+SPA_API_SYSTEM int spa_system_pollfd_wait(struct spa_system *object, int pfd,\n+            struct spa_poll_event *ev, int n_ev, int timeout)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, pollfd_wait, 0, pfd, ev, n_ev, timeout);\n+}\n+\n+SPA_API_SYSTEM int spa_system_timerfd_create(struct spa_system *object, int clockid, int flags)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, timerfd_create, 0, clockid, flags);\n+}\n+\n+SPA_API_SYSTEM int spa_system_timerfd_settime(struct spa_system *object,\n+            int fd, int flags,\n+            const struct itimerspec *new_value,\n+            struct itimerspec *old_value)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, timerfd_settime, 0,\n+            fd, flags, new_value, old_value);\n+}\n+\n+SPA_API_SYSTEM int spa_system_timerfd_gettime(struct spa_system *object,\n+            int fd, struct itimerspec *curr_value)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, timerfd_gettime, 0,\n+            fd, curr_value);\n+}\n+SPA_API_SYSTEM int spa_system_timerfd_read(struct spa_system *object, int fd, uint64_t *expirations)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, timerfd_read, 0,\n+            fd, expirations);\n+}\n+\n+SPA_API_SYSTEM int spa_system_eventfd_create(struct spa_system *object, int flags)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, eventfd_create, 0, flags);\n+}\n+SPA_API_SYSTEM int spa_system_eventfd_write(struct spa_system *object, int fd, uint64_t count)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, eventfd_write, 0,\n+            fd, count);\n+}\n+SPA_API_SYSTEM int spa_system_eventfd_read(struct spa_system *object, int fd, uint64_t *count)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, eventfd_read, 0,\n+            fd, count);\n+}\n+\n+SPA_API_SYSTEM int spa_system_signalfd_create(struct spa_system *object, int signal, int flags)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, signalfd_create, 0,\n+            signal, flags);\n+}\n+\n+SPA_API_SYSTEM int spa_system_signalfd_read(struct spa_system *object, int fd, int *signal)\n+{\n+    return spa_api_method_fast_r(int, -ENOTSUP, spa_system, &object->iface, signalfd_read, 0,\n+            fd, signal);\n+}\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/support\/system.h","additions":109,"deletions":36,"binary":false,"changes":145,"status":"modified"},{"patch":"@@ -0,0 +1,124 @@\n+\/* Simple Plugin API *\/\n+\/* SPDX-FileCopyrightText: Copyright © 2023 PipeWire authors *\/\n+\/* SPDX-License-Identifier: MIT *\/\n+\n+#ifndef SPA_UTILS_CLEANUP_H\n+#define SPA_UTILS_CLEANUP_H\n+\n+#define spa_exchange(var, new_value) \\\n+__extension__ ({ \\\n+    __typeof__(var) *_ptr_ = &(var); \\\n+    __typeof__(var) _old_value_ = *_ptr_; \\\n+    *_ptr_ = (new_value); \\\n+    _old_value_; \\\n+})\n+\n+\/* ========================================================================== *\/\n+\n+#if __GNUC__ >= 10 || defined(__clang__)\n+#define spa_steal_ptr(ptr) ((__typeof__(*(ptr)) *) spa_exchange((ptr), NULL))\n+#else\n+#define spa_steal_ptr(ptr) spa_exchange((ptr), NULL)\n+#endif\n+\n+#define spa_clear_ptr(ptr, destructor) \\\n+__extension__ ({ \\\n+    __typeof__(ptr) _old_value = spa_steal_ptr(ptr); \\\n+    if (_old_value) \\\n+        destructor(_old_value); \\\n+    (void) 0; \\\n+})\n+\n+\/* ========================================================================== *\/\n+\n+#include <errno.h>\n+#include <unistd.h>\n+\n+#define spa_steal_fd(fd) spa_exchange((fd), -1)\n+\n+#define spa_clear_fd(fd) \\\n+__extension__ ({ \\\n+    int _old_value = spa_steal_fd(fd), _res = 0; \\\n+    if (_old_value >= 0) \\\n+        _res = close(_old_value); \\\n+    _res; \\\n+})\n+\n+\/* ========================================================================== *\/\n+\n+#if defined(__has_attribute) && __has_attribute(__cleanup__)\n+\n+#define spa_cleanup(func) __attribute__((__cleanup__(func)))\n+\n+#define SPA_DEFINE_AUTO_CLEANUP(name, type, ...) \\\n+typedef __typeof__(type) _spa_auto_cleanup_type_ ## name; \\\n+static inline void _spa_auto_cleanup_func_ ## name (__typeof__(type) *thing) \\\n+{ \\\n+    int _save_errno = errno; \\\n+    __VA_ARGS__ \\\n+    errno = _save_errno; \\\n+}\n+\n+#define spa_auto(name) \\\n+    spa_cleanup(_spa_auto_cleanup_func_ ## name) \\\n+    _spa_auto_cleanup_type_ ## name\n+\n+#define SPA_DEFINE_AUTOPTR_CLEANUP(name, type, ...) \\\n+typedef __typeof__(type) * _spa_autoptr_cleanup_type_ ## name; \\\n+static inline void _spa_autoptr_cleanup_func_ ## name (__typeof__(type) **thing) \\\n+{ \\\n+    int _save_errno = errno; \\\n+    __VA_ARGS__ \\\n+    errno = _save_errno; \\\n+}\n+\n+#define spa_autoptr(name) \\\n+    spa_cleanup(_spa_autoptr_cleanup_func_ ## name) \\\n+    _spa_autoptr_cleanup_type_ ## name\n+\n+\/* ========================================================================== *\/\n+\n+#include <stdlib.h>\n+\n+static inline void _spa_autofree_cleanup_func(void *p)\n+{\n+    int save_errno = errno;\n+    free(*(void **) p);\n+    errno = save_errno;\n+}\n+#define spa_autofree spa_cleanup(_spa_autofree_cleanup_func)\n+\n+\/* ========================================================================== *\/\n+\n+static inline void _spa_autoclose_cleanup_func(int *fd)\n+{\n+    int save_errno = errno;\n+    spa_clear_fd(*fd);\n+    errno = save_errno;\n+}\n+#define spa_autoclose spa_cleanup(_spa_autoclose_cleanup_func)\n+\n+\/* ========================================================================== *\/\n+\n+#include <stdio.h>\n+\n+SPA_DEFINE_AUTOPTR_CLEANUP(FILE, FILE, {\n+    spa_clear_ptr(*thing, fclose);\n+})\n+\n+\/* ========================================================================== *\/\n+\n+#include <dirent.h>\n+\n+SPA_DEFINE_AUTOPTR_CLEANUP(DIR, DIR, {\n+    spa_clear_ptr(*thing, closedir);\n+})\n+\n+#else\n+\n+#define SPA_DEFINE_AUTO_CLEANUP(name, type, ...)\n+#define SPA_DEFINE_AUTOPTR_CLEANUP(name, type, ...)\n+\n+#endif\n+\n+#endif \/* SPA_UTILS_CLEANUP_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/cleanup.h","additions":124,"deletions":0,"binary":false,"changes":124,"status":"added"},{"patch":"@@ -12,0 +12,1 @@\n+#  define SPA_ALIGNOF alignof\n@@ -13,0 +14,3 @@\n+#elif __STDC_VERSION__ >= 202311L\n+#  define SPA_STATIC_ASSERT_IMPL(expr, msg, ...) static_assert(expr, msg)\n+#  define SPA_ALIGNOF alignof\n@@ -17,0 +21,1 @@\n+#  define SPA_ALIGNOF _Alignof\n@@ -23,0 +28,3 @@\n+#ifndef SPA_ALIGNOF\n+#define SPA_ALIGNOF __alignof__\n+#endif\n@@ -26,0 +34,3 @@\n+#define SPA_CONCAT_NOEXPAND(a, b) a ## b\n+#define SPA_CONCAT(a, b) SPA_CONCAT_NOEXPAND(a, b)\n+\n@@ -125,1 +136,1 @@\n-    for ((ptr) = arr; (void*)(ptr) < SPA_PTROFF(arr, sizeof(arr), void); (ptr)++)\n+    for ((ptr) = arr; (ptr) < (arr) + SPA_N_ELEMENTS(arr); (ptr)++)\n@@ -128,1 +139,1 @@\n-    for (__typeof__((arr)[0])* var = arr; (void*)(var) < SPA_PTROFF(arr, sizeof(arr), void); (var)++)\n+    for (__typeof__((arr)[0])* var = arr; (var) < (arr) + SPA_N_ELEMENTS(arr); (var)++)\n@@ -159,0 +170,4 @@\n+#define SPA_CLAMPD(v,low,high)                \\\n+({                            \\\n+    fmin(fmax(v, low), high);            \\\n+})\n@@ -174,0 +189,10 @@\n+\/** 3-way comparison. NaN > NaN and NaN > finite numbers *\/\n+#define SPA_CMP(a, b)                    \\\n+({                            \\\n+    __typeof__(a) _a = (a);                \\\n+    __typeof__(b) _b = (b);                \\\n+    (_a > _b) ? 1 : (_a == _b) ? 0 : (_a < _b) ? -1 \\\n+        : (_a == _a) ? -1 : (_b == _b) ? 1     \\\n+        : 1;                    \\\n+})\n+\n@@ -181,1 +206,0 @@\n-\n@@ -192,3 +216,0 @@\n-#define SPA_PTR_TO_INT(p) ((int) ((intptr_t) (p)))\n-#define SPA_INT_TO_PTR(u) ((void*) ((intptr_t) (u)))\n-\n@@ -236,0 +257,14 @@\n+#ifndef SPA_API_IMPL\n+#define SPA_API_PROTO static inline\n+#define SPA_API_IMPL static inline\n+#endif\n+\n+#ifndef SPA_API_UTILS_DEFS\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_UTILS_DEFS SPA_API_IMPL\n+ #else\n+  #define SPA_API_UTILS_DEFS static inline\n+ #endif\n+#endif\n+\n+\n@@ -268,1 +303,1 @@\n-#define SPA_PTR_ALIGNMENT(p,align)    ((intptr_t)(p) & ((align)-1))\n+#define SPA_PTR_ALIGNMENT(p,align)    ((uintptr_t)(p) & ((align)-1))\n@@ -282,0 +317,34 @@\n+SPA_API_UTILS_DEFS bool spa_ptrinside(const void *p1, size_t s1, const void *p2, size_t s2,\n+                                 size_t *remaining)\n+{\n+    if (SPA_LIKELY((uintptr_t)p1 <= (uintptr_t)p2 && s2 <= s1 &&\n+                   (uintptr_t)p2 - (uintptr_t)p1 <= s1 - s2)) {\n+        if (remaining != NULL)\n+            *remaining = ((uintptr_t)p1 + s1) - ((uintptr_t)p2 + s2);\n+        return true;\n+    } else {\n+        if (remaining != NULL)\n+            *remaining = 0;\n+        return false;\n+    }\n+}\n+\n+SPA_API_UTILS_DEFS bool spa_ptr_inside_and_aligned(const void *p1, size_t s1,\n+                                              const void *p2, size_t s2, size_t align,\n+                                              size_t *remaining)\n+{\n+    if (SPA_IS_ALIGNED(p2, align)) {\n+        return spa_ptrinside(p1, s1, p2, s2, remaining);\n+    } else {\n+        if (remaining != NULL)\n+            *remaining = 0;\n+        return false;\n+    }\n+}\n+\n+#define spa_ptr_type_inside(p1, s1, p2, type, remaining) \\\n+    spa_ptr_inside_and_aligned(p1, s1, p2, sizeof(type), SPA_ALIGNOF(type), remaining)\n+\n+#define SPA_PTR_TO_INT(p) ((int) ((intptr_t) (p)))\n+#define SPA_INT_TO_PTR(u) ((void*) ((intptr_t) (u)))\n+\n@@ -285,0 +354,8 @@\n+struct spa_error_location {\n+    int line;\n+    int col;\n+    size_t len;\n+    const char *location;\n+    const char *reason;\n+};\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/defs.h","additions":84,"deletions":7,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -16,0 +16,8 @@\n+#ifndef SPA_API_DICT\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_DICT SPA_API_IMPL\n+ #else\n+  #define SPA_API_DICT static inline\n+ #endif\n+#endif\n+\n@@ -31,1 +39,2 @@\n-#define SPA_DICT_ITEM_INIT(key,value) ((struct spa_dict_item) { (key), (value) })\n+#define SPA_DICT_ITEM(key,value) ((struct spa_dict_item) { (key), (value) })\n+#define SPA_DICT_ITEM_INIT(key,value) SPA_DICT_ITEM(key,value)\n@@ -40,2 +49,6 @@\n-#define SPA_DICT_INIT(items,n_items) ((struct spa_dict) { 0, (n_items), (items) })\n-#define SPA_DICT_INIT_ARRAY(items) ((struct spa_dict) { 0, SPA_N_ELEMENTS(items), (items) })\n+#define SPA_DICT(items,n_items) ((struct spa_dict) { 0, (n_items), (items) })\n+#define SPA_DICT_ARRAY(items) SPA_DICT((items),SPA_N_ELEMENTS(items))\n+#define SPA_DICT_ITEMS(...) SPA_DICT_ARRAY(((struct spa_dict_item[]) { __VA_ARGS__}))\n+\n+#define SPA_DICT_INIT(items,n_items) SPA_DICT(items,n_items)\n+#define SPA_DICT_INIT_ARRAY(items) SPA_DICT_ARRAY(items)\n@@ -48,1 +61,1 @@\n-static inline int spa_dict_item_compare(const void *i1, const void *i2)\n+SPA_API_DICT int spa_dict_item_compare(const void *i1, const void *i2)\n@@ -55,1 +68,1 @@\n-static inline void spa_dict_qsort(struct spa_dict *dict)\n+SPA_API_DICT void spa_dict_qsort(struct spa_dict *dict)\n@@ -63,1 +76,1 @@\n-static inline const struct spa_dict_item *spa_dict_lookup_item(const struct spa_dict *dict,\n+SPA_API_DICT const struct spa_dict_item *spa_dict_lookup_item(const struct spa_dict *dict,\n@@ -86,1 +99,1 @@\n-static inline const char *spa_dict_lookup(const struct spa_dict *dict, const char *key)\n+SPA_API_DICT const char *spa_dict_lookup(const struct spa_dict *dict, const char *key)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/dict.h","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,30 @@\n+\/* Spa *\/\n+\/* SPDX-FileCopyrightText: Copyright © 2019 Wim Taymans *\/\n+\/* SPDX-License-Identifier: MIT *\/\n+\n+#ifndef SPA_ENDIAN_H\n+#define SPA_ENDIAN_H\n+\n+#if defined(__FreeBSD__) || defined(__MidnightBSD__)\n+#include <sys\/endian.h>\n+#define bswap_16 bswap16\n+#define bswap_32 bswap32\n+#define bswap_64 bswap64\n+#elif defined(_MSC_VER) && defined(_WIN32)\n+#include <stdlib.h>\n+#define __LITTLE_ENDIAN 1234\n+#define __BIG_ENDIAN 4321\n+#define __BYTE_ORDER __LITTLE_ENDIAN\n+#define bswap_16 _byteswap_ushort\n+#define bswap_32 _byteswap_ulong\n+#define bswap_64 _byteswap_uint64\n+#elif defined(AIX)\n+#include <sys\/machine.h>\n+#define __BIG_ENDIAN      BIG_ENDIAN\n+#define __BYTE_ORDER      BIG_ENDIAN\n+#else\n+#include <endian.h>\n+#include <byteswap.h>\n+#endif\n+\n+#endif \/* SPA_ENDIAN_H *\/\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/endian.h","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -13,0 +13,6 @@\n+#include <spa\/pod\/pod.h>\n+\n+\/**\n+ * \\addtogroup spa_types\n+ * \\{\n+ *\/\n@@ -23,2 +29,0 @@\n-#include <spa\/pod\/pod.h>\n-\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/enum-types.h","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -15,0 +15,8 @@\n+#ifndef SPA_API_HOOK\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_HOOK SPA_API_IMPL\n+ #else\n+  #define SPA_API_HOOK static inline\n+ #endif\n+#endif\n+\n@@ -161,1 +169,1 @@\n-        _f->method((callbacks)->data, ## __VA_ARGS__);            \\\n+        (_f->method)((callbacks)->data, ## __VA_ARGS__);        \\\n@@ -165,0 +173,8 @@\n+#define spa_callbacks_call_fast(callbacks,type,method,vers,...)            \\\n+({                                        \\\n+    const type *_f = (const type *) (callbacks)->funcs;            \\\n+    (_f->method)((callbacks)->data, ## __VA_ARGS__);            \\\n+    true;                                    \\\n+})\n+\n+\n@@ -194,1 +210,1 @@\n-        res = _f->method((callbacks)->data, ## __VA_ARGS__);        \\\n+        res = (_f->method)((callbacks)->data, ## __VA_ARGS__);        \\\n@@ -197,0 +213,5 @@\n+#define spa_callbacks_call_fast_res(callbacks,type,res,method,vers,...)        \\\n+({                                        \\\n+    const type *_f = (const type *) (callbacks)->funcs;            \\\n+    res = (_f->method)((callbacks)->data, ## __VA_ARGS__);            \\\n+})\n@@ -219,0 +240,3 @@\n+#define spa_interface_call_fast(iface,method_type,method,vers,...)        \\\n+    spa_callbacks_call_fast(&(iface)->cb,method_type,method,vers,##__VA_ARGS__)\n+\n@@ -229,0 +253,70 @@\n+#define spa_interface_call_fast_res(iface,method_type,res,method,vers,...)        \\\n+    spa_callbacks_call_fast_res(&(iface)->cb,method_type,res,method,vers,##__VA_ARGS__)\n+\n+\n+#define spa_api_func_v(o,method,version,...)                \\\n+({                                    \\\n+    if (SPA_LIKELY(SPA_CALLBACK_CHECK(o,method,version)))        \\\n+        ((o)->method)(o, ##__VA_ARGS__);            \\\n+})\n+#define spa_api_func_r(rtype,def,o,method,version,...)            \\\n+({                                    \\\n+    rtype _res = def;                        \\\n+    if (SPA_LIKELY(SPA_CALLBACK_CHECK(o,method,version)))        \\\n+        _res = ((o)->method)(o, ##__VA_ARGS__);            \\\n+    _res;                                \\\n+})\n+#define spa_api_func_fast(o,method,...)                    \\\n+({                                    \\\n+    ((o)->method)(o, ##__VA_ARGS__);                \\\n+})\n+\n+#define spa_api_method_v(type,o,method,version,...)            \\\n+({                                    \\\n+    struct spa_interface *_i = o;            \\\n+    spa_interface_call(_i, struct type ##_methods,            \\\n+            method, version, ##__VA_ARGS__);        \\\n+})\n+#define spa_api_method_r(rtype,def,type,o,method,version,...)        \\\n+({                                    \\\n+    rtype _res = def;                        \\\n+    struct spa_interface *_i = o;            \\\n+    spa_interface_call_res(_i, struct type ##_methods,        \\\n+            _res, method, version, ##__VA_ARGS__);        \\\n+    _res;                                \\\n+})\n+#define spa_api_method_null_v(type,co,o,method,version,...)        \\\n+({                                    \\\n+    struct type *_co = co;                        \\\n+    if (SPA_LIKELY(_co != NULL)) {                    \\\n+        struct spa_interface *_i = o;                \\\n+        spa_interface_call(_i, struct type ##_methods,        \\\n+            method, version, ##__VA_ARGS__);        \\\n+    }                                \\\n+})\n+#define spa_api_method_null_r(rtype,def,type,co,o,method,version,...)    \\\n+({                                    \\\n+    rtype _res = def;                        \\\n+    struct type *_co = co;                        \\\n+    if (SPA_LIKELY(_co != NULL)) {                    \\\n+        struct spa_interface *_i = o;                \\\n+        spa_interface_call_res(_i, struct type ##_methods,    \\\n+                _res, method, version, ##__VA_ARGS__);    \\\n+    }                                \\\n+    _res;                                \\\n+})\n+#define spa_api_method_fast_v(type,o,method,version,...)        \\\n+({                                    \\\n+    struct spa_interface *_i = o;                    \\\n+    spa_interface_call_fast(_i, struct type ##_methods,        \\\n+            method, version, ##__VA_ARGS__);        \\\n+})\n+#define spa_api_method_fast_r(rtype,def,type,o,method,version,...)    \\\n+({                                    \\\n+    rtype _res = def;                        \\\n+    struct spa_interface *_i = o;                    \\\n+    spa_interface_call_fast_res(_i, struct type ##_methods,        \\\n+            _res, method, version, ##__VA_ARGS__);        \\\n+    _res;                                \\\n+})\n+\n@@ -332,1 +426,1 @@\n-static inline void spa_hook_list_init(struct spa_hook_list *list)\n+SPA_API_HOOK void spa_hook_list_init(struct spa_hook_list *list)\n@@ -337,1 +431,1 @@\n-static inline bool spa_hook_list_is_empty(struct spa_hook_list *list)\n+SPA_API_HOOK bool spa_hook_list_is_empty(struct spa_hook_list *list)\n@@ -343,1 +437,1 @@\n-static inline void spa_hook_list_append(struct spa_hook_list *list,\n+SPA_API_HOOK void spa_hook_list_append(struct spa_hook_list *list,\n@@ -353,1 +447,1 @@\n-static inline void spa_hook_list_prepend(struct spa_hook_list *list,\n+SPA_API_HOOK void spa_hook_list_prepend(struct spa_hook_list *list,\n@@ -363,1 +457,1 @@\n-static inline void spa_hook_remove(struct spa_hook *hook)\n+SPA_API_HOOK void spa_hook_remove(struct spa_hook *hook)\n@@ -372,1 +466,1 @@\n-static inline void spa_hook_list_clean(struct spa_hook_list *list)\n+SPA_API_HOOK void spa_hook_list_clean(struct spa_hook_list *list)\n@@ -379,1 +473,1 @@\n-static inline void\n+SPA_API_HOOK void\n@@ -393,1 +487,1 @@\n-static inline void\n+SPA_API_HOOK void\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/hook.h","additions":104,"deletions":10,"binary":false,"changes":114,"status":"modified"},{"patch":"@@ -12,0 +12,10 @@\n+#include <spa\/utils\/defs.h>\n+\n+#ifndef SPA_API_LIST\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_LIST SPA_API_IMPL\n+ #else\n+  #define SPA_API_LIST static inline\n+ #endif\n+#endif\n+\n@@ -29,1 +39,1 @@\n-static inline void spa_list_init(struct spa_list *list)\n+SPA_API_LIST void spa_list_init(struct spa_list *list)\n@@ -34,1 +44,1 @@\n-static inline int spa_list_is_initialized(struct spa_list *list)\n+SPA_API_LIST int spa_list_is_initialized(struct spa_list *list)\n@@ -41,1 +51,1 @@\n-static inline void spa_list_insert(struct spa_list *list, struct spa_list *elem)\n+SPA_API_LIST void spa_list_insert(struct spa_list *list, struct spa_list *elem)\n@@ -49,1 +59,1 @@\n-static inline void spa_list_insert_list(struct spa_list *list, struct spa_list *other)\n+SPA_API_LIST void spa_list_insert_list(struct spa_list *list, struct spa_list *other)\n@@ -59,1 +69,1 @@\n-static inline void spa_list_remove(struct spa_list *elem)\n+SPA_API_LIST void spa_list_remove(struct spa_list *elem)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/list.h","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -20,0 +20,8 @@\n+#ifndef SPA_API_STRING\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_STRING SPA_API_IMPL\n+ #else\n+  #define SPA_API_STRING static inline\n+ #endif\n+#endif\n+\n@@ -36,1 +44,1 @@\n-static inline bool spa_streq(const char *s1, const char *s2)\n+SPA_API_STRING bool spa_streq(const char *s1, const char *s2)\n@@ -46,1 +54,1 @@\n-static inline bool spa_strneq(const char *s1, const char *s2, size_t len)\n+SPA_API_STRING bool spa_strneq(const char *s1, const char *s2, size_t len)\n@@ -57,1 +65,1 @@\n-static inline bool spa_strstartswith(const char *s, const char *prefix)\n+SPA_API_STRING bool spa_strstartswith(const char *s, const char *prefix)\n@@ -73,1 +81,1 @@\n-static inline bool spa_strendswith(const char *s, const char *suffix)\n+SPA_API_STRING bool spa_strendswith(const char *s, const char *suffix)\n@@ -95,1 +103,1 @@\n-static inline bool spa_atoi32(const char *str, int32_t *val, int base)\n+SPA_API_STRING bool spa_atoi32(const char *str, int32_t *val, int base)\n@@ -123,1 +131,1 @@\n-static inline bool spa_atou32(const char *str, uint32_t *val, int base)\n+SPA_API_STRING bool spa_atou32(const char *str, uint32_t *val, int base)\n@@ -151,1 +159,1 @@\n-static inline bool spa_atoi64(const char *str, int64_t *val, int base)\n+SPA_API_STRING bool spa_atoi64(const char *str, int64_t *val, int base)\n@@ -176,1 +184,1 @@\n-static inline bool spa_atou64(const char *str, uint64_t *val, int base)\n+SPA_API_STRING bool spa_atou64(const char *str, uint64_t *val, int base)\n@@ -199,1 +207,1 @@\n-static inline bool spa_atob(const char *str)\n+SPA_API_STRING bool spa_atob(const char *str)\n@@ -213,1 +221,1 @@\n-static inline int spa_vscnprintf(char *buffer, size_t size, const char *format, va_list args)\n+SPA_API_STRING int spa_vscnprintf(char *buffer, size_t size, const char *format, va_list args)\n@@ -236,1 +244,1 @@\n-static inline int spa_scnprintf(char *buffer, size_t size, const char *format, ...)\n+SPA_API_STRING int spa_scnprintf(char *buffer, size_t size, const char *format, ...)\n@@ -256,1 +264,1 @@\n-static inline float spa_strtof(const char *str, char **endptr)\n+SPA_API_STRING float spa_strtof(const char *str, char **endptr)\n@@ -282,1 +290,1 @@\n-static inline bool spa_atof(const char *str, float *val)\n+SPA_API_STRING bool spa_atof(const char *str, float *val)\n@@ -306,1 +314,1 @@\n-static inline double spa_strtod(const char *str, char **endptr)\n+SPA_API_STRING double spa_strtod(const char *str, char **endptr)\n@@ -332,1 +340,1 @@\n-static inline bool spa_atod(const char *str, double *val)\n+SPA_API_STRING bool spa_atod(const char *str, double *val)\n@@ -349,1 +357,1 @@\n-static inline char *spa_dtoa(char *str, size_t size, double val)\n+SPA_API_STRING char *spa_dtoa(char *str, size_t size, double val)\n@@ -365,1 +373,1 @@\n-static inline void spa_strbuf_init(struct spa_strbuf *buf, char *buffer, size_t maxsize)\n+SPA_API_STRING void spa_strbuf_init(struct spa_strbuf *buf, char *buffer, size_t maxsize)\n@@ -370,0 +378,2 @@\n+    if (maxsize > 0)\n+        buf->buffer[0] = '\\0';\n@@ -373,1 +383,1 @@\n-static inline int spa_strbuf_append(struct spa_strbuf *buf, const char *fmt, ...)\n+SPA_API_STRING int spa_strbuf_append(struct spa_strbuf *buf, const char *fmt, ...)\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/string.h","additions":28,"deletions":18,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -23,4 +23,0 @@\n-static inline bool spa_type_is_a(const char *type, const char *parent)\n-{\n-    return type != NULL && parent != NULL && strncmp(type, parent, strlen(parent)) == 0;\n-}\n@@ -86,0 +82,1 @@\n+    { SPA_TYPE_OBJECT_ParamTag, SPA_TYPE_Object, SPA_TYPE_INFO_PARAM_Tag, spa_type_param_tag },\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/type-info.h","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -13,0 +13,9 @@\n+#include <spa\/utils\/string.h>\n+\n+#ifndef SPA_API_TYPE\n+ #ifdef SPA_API_IMPL\n+  #define SPA_API_TYPE SPA_API_IMPL\n+ #else\n+  #define SPA_API_TYPE static inline\n+ #endif\n+#endif\n@@ -81,0 +90,1 @@\n+    SPA_TYPE_OBJECT_ParamTag,\n@@ -125,0 +135,41 @@\n+SPA_API_TYPE bool spa_type_is_a(const char *type, const char *parent)\n+{\n+    return type != NULL && parent != NULL && strncmp(type, parent, strlen(parent)) == 0;\n+}\n+\n+SPA_API_TYPE const char *spa_type_short_name(const char *name)\n+{\n+    const char *h;\n+    if ((h = strrchr(name, ':')) != NULL)\n+        name = h + 1;\n+    return name;\n+}\n+\n+SPA_API_TYPE uint32_t spa_type_from_short_name(const char *name,\n+        const struct spa_type_info *info, uint32_t unknown)\n+{\n+    int i;\n+    for (i = 0; info[i].name; i++) {\n+        if (spa_streq(name, spa_type_short_name(info[i].name)))\n+            return info[i].type;\n+    }\n+    return unknown;\n+}\n+SPA_API_TYPE const char * spa_type_to_name(uint32_t type,\n+        const struct spa_type_info *info, const char *unknown)\n+{\n+    int i;\n+    for (i = 0; info[i].name; i++) {\n+        if (info[i].type == type)\n+            return info[i].name;\n+    }\n+    return unknown;\n+}\n+\n+SPA_API_TYPE const char * spa_type_to_short_name(uint32_t type,\n+        const struct spa_type_info *info, const char *unknown)\n+{\n+    const char *n = spa_type_to_name(type, info, unknown);\n+    return n ? spa_type_short_name(n) : NULL;\n+}\n+\n","filename":"src\/java.desktop\/unix\/native\/libpipewire\/include\/spa\/utils\/type.h","additions":51,"deletions":0,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -50,0 +50,2 @@\n+import static java.awt.peer.ComponentPeer.SET_BOUNDS;\n+\n@@ -446,0 +448,15 @@\n+    \/**\n+     * Reapplies the size of this graphics device to\n+     * the given full-screen window.\n+     * @param w a Window that needs resizing\n+     * @param b new full-screen window bounds\n+     *\/\n+    private static void resizeFSWindow(final Window w, final Rectangle b) {\n+        if (w != null) {\n+            WindowPeer peer = AWTAccessor.getComponentAccessor().getPeer(w);\n+            if (peer != null) {\n+                peer.setBounds(b.x, b.y, b.width, b.height, SET_BOUNDS);\n+            }\n+        }\n+    }\n+\n@@ -468,7 +485,3 @@\n-            \/\/ resize the fullscreen window to the dimensions of the new\n-            \/\/ display mode\n-            Rectangle screenBounds = getDefaultConfiguration().getBounds();\n-            w.setBounds(screenBounds.x, screenBounds.y,\n-                        screenBounds.width, screenBounds.height);\n-            \/\/ Note: no call to replaceSurfaceData is required here since\n-            \/\/ replacement will be caused by an upcoming display change event\n+            \/\/ Note: the full-screen window will get resized to the dimensions of the new\n+            \/\/ display mode in the upcoming display change event, when the DPI scales\n+            \/\/ would already be correctly set etc.\n@@ -534,0 +547,4 @@\n+\n+        Rectangle screenBounds = getDefaultConfiguration().getBounds();\n+        resizeFSWindow(getFullScreenWindow(), screenBounds);\n+\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/Win32GraphicsDevice.java","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -153,2 +153,13 @@\n-            this.connection = connection;\n-            if (closeRequested) closeConnection();\n+            boolean closeRequested;\n+            synchronized (this) {\n+                \/\/ check whether this new connection should be\n+                \/\/ closed\n+                closeRequested = this.closeRequested;\n+                if (!closeRequested) {\n+                    this.connection = connection;\n+                } else {\n+                    \/\/ assert this.connection == null\n+                    this.closeRequested = false;\n+                }\n+            }\n+            if (closeRequested) closeConnection(connection);\n@@ -158,3 +169,23 @@\n-            closeRequested = true;\n-            HttpConnection connection = this.connection;\n-            this.connection = null;\n+            HttpConnection connection;\n+            synchronized (this) {\n+                connection = this.connection;\n+                if (connection == null) {\n+                    closeRequested = true;\n+                } else {\n+                    this.connection = null;\n+                }\n+            }\n+            closeConnection(connection);\n+        }\n+\n+        HttpConnection disable() {\n+            HttpConnection connection;\n+            synchronized (this) {\n+                connection = this.connection;\n+                this.connection = null;\n+                this.closeRequested = false;\n+            }\n+            return connection;\n+        }\n+\n+        private static void closeConnection(HttpConnection connection) {\n@@ -169,5 +200,0 @@\n-\n-        void disable() {\n-            connection = null;\n-            closeRequested = false;\n-        }\n@@ -617,0 +643,1 @@\n+                            HttpConnection connection = connectionAborter.disable();\n@@ -618,1 +645,3 @@\n-                            if (cached) connectionAborter.disable();\n+                            if (!cached && connection != null) {\n+                                connectionAborter.connection(connection);\n+                            }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Exchange.java","additions":40,"deletions":11,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.net.ConnectException;\n@@ -103,1 +102,1 @@\n-                    if (connection.closed\n+                    if (!connection.isOpen()\n@@ -159,1 +158,1 @@\n-        if (c.closed || c.finalStream()) {\n+        if (!c.isOpen() || c.finalStream()) {\n@@ -167,0 +166,5 @@\n+            if (!c.isOpen()) {\n+                if (debug.on())\n+                    debug.log(\"skipping offered closed or closing connection: %s\", c);\n+                return false;\n+            }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2ClientImpl.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1076,0 +1076,4 @@\n+    boolean isOpen() {\n+        return !closed && connection.channel().isOpen();\n+    }\n+\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -183,0 +183,1 @@\n+    private boolean hasNonexistentEntries = false;\n@@ -709,0 +710,1 @@\n+        Map<String,Set<String>> entriesInSF = new HashMap<>();\n@@ -756,0 +758,1 @@\n+                                entriesInSF.put(alias, sf.getEntries().keySet());\n@@ -854,0 +857,3 @@\n+                        for (var signed : entriesInSF.values()) {\n+                            signed.remove(name);\n+                        }\n@@ -1047,0 +1053,7 @@\n+                        var signed = entriesInSF.get(s);\n+                        if (!signed.isEmpty()) {\n+                            if (verbose != null) {\n+                                System.out.println(rb.getString(\"history.nonexistent.entries\") + signed);\n+                            }\n+                            hasNonexistentEntries = true;\n+                        }\n@@ -1290,0 +1303,3 @@\n+        if (hasNonexistentEntries) {\n+            warnings.add(rb.getString(\"nonexistent.entries.found\"));\n+        }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -168,0 +168,1 @@\n+        {\"history.nonexistent.entries\", \"    Warning: nonexistent signed entries: \"},\n@@ -178,0 +179,1 @@\n+        {\"nonexistent.entries.found\", \"This jar contains signed entries for files that do not exist. See the -verbose output for more details.\"},\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Resources.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    public synchronized boolean run(String args[]) {\n+    public synchronized boolean run(String[] args) {\n@@ -370,5 +370,3 @@\n-                    InputStream in = new FileInputStream(FileDescriptor.in);\n-                    try {\n-                        list(new BufferedInputStream(in), files);\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        list(bis, files);\n@@ -390,1 +388,1 @@\n-                if (fname != null && files != null) {\n+                if (fname != null) {\n@@ -393,9 +391,3 @@\n-                    InputStream in = (fname == null)\n-                        ? new FileInputStream(FileDescriptor.in)\n-                        : new FileInputStream(fname);\n-                    try {\n-                        if (!extract(new BufferedInputStream(in), files) && fname != null) {\n-                            extract(fname, files);\n-                        }\n-                    } finally {\n-                        in.close();\n+                    try (InputStream in = new FileInputStream(FileDescriptor.in);\n+                         BufferedInputStream bis = new BufferedInputStream(in)) {\n+                        extract(bis, files);\n@@ -498,1 +490,1 @@\n-    boolean parseArgs(String args[]) {\n+    boolean parseArgs(String[] args) {\n@@ -932,4 +924,0 @@\n-        ZipInputStream zis = new ZipInputStream(in);\n-        ZipOutputStream zos = new JarOutputStream(out);\n-        ZipEntry e = null;\n-        boolean foundManifest = false;\n@@ -937,0 +925,2 @@\n+        try (ZipInputStream zis = new ZipInputStream(in);\n+            ZipOutputStream zos = new JarOutputStream(out)) {\n@@ -938,11 +928,12 @@\n-        \/\/ All actual entries added\/updated\/existing, in the jar file (excl manifest\n-        \/\/ and module-info.class ).\n-        Set<String> jentries = new HashSet<>();\n-\n-        if (jarIndex != null) {\n-            addIndex(jarIndex, zos);\n-        }\n-\n-        \/\/ put the old entries first, replace if necessary\n-        while ((e = zis.getNextEntry()) != null) {\n-            String name = e.getName();\n+            if (jarIndex != null) {\n+                addIndex(jarIndex, zos);\n+            }\n+            ZipEntry e = null;\n+            boolean foundManifest = false;\n+            \/\/ All actual entries added\/updated\/existing, in the jar file (excl manifest\n+            \/\/ and module-info.class ).\n+            Set<String> jentries = new HashSet<>();\n+\n+            \/\/ put the old entries first, replace if necessary\n+            while ((e = zis.getNextEntry()) != null) {\n+                String name = e.getName();\n@@ -950,2 +941,2 @@\n-            boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n-            boolean isModuleInfoEntry = isModuleInfoEntry(name);\n+                boolean isManifestEntry = equalsIgnoreCase(name, MANIFEST_NAME);\n+                boolean isModuleInfoEntry = isModuleInfoEntry(name);\n@@ -953,4 +944,4 @@\n-            if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n-                || (Mflag && isManifestEntry)) {\n-                continue;\n-            } else if (isManifestEntry && ((newManifest != null) ||\n+                if ((jarIndex != null && equalsIgnoreCase(name, INDEX_NAME))\n+                        || (Mflag && isManifestEntry)) {\n+                    continue;\n+                } else if (isManifestEntry && ((newManifest != null) ||\n@@ -958,8 +949,9 @@\n-                foundManifest = true;\n-                if (newManifest != null) {\n-                    \/\/ Don't read from the newManifest InputStream, as we\n-                    \/\/ might need it below, and we can't re-read the same data\n-                    \/\/ twice.\n-                    try (FileInputStream fis = new FileInputStream(mname)) {\n-                        if (isAmbiguousMainClass(new Manifest(fis))) {\n-                            return false;\n+                    foundManifest = true;\n+                    if (newManifest != null) {\n+                        \/\/ Don't read from the newManifest InputStream, as we\n+                        \/\/ might need it below, and we can't re-read the same data\n+                        \/\/ twice.\n+                        try (FileInputStream fis = new FileInputStream(mname)) {\n+                            if (isAmbiguousMainClass(new Manifest(fis))) {\n+                                return false;\n+                            }\n@@ -968,23 +960,34 @@\n-                }\n-                \/\/ Update the manifest.\n-                Manifest old = new Manifest(zis);\n-                if (newManifest != null) {\n-                    old.read(newManifest);\n-                }\n-                if (!updateManifest(old, zos)) {\n-                    return false;\n-                }\n-            } else if (moduleInfos != null && isModuleInfoEntry) {\n-                moduleInfos.putIfAbsent(name, zis.readAllBytes());\n-            } else {\n-                boolean isDir = e.isDirectory();\n-                if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n-                    \/\/ do our own compression\n-                    ZipEntry e2 = new ZipEntry(name);\n-                    e2.setMethod(e.getMethod());\n-                    setZipEntryTime(e2, e.getTime());\n-                    e2.setComment(e.getComment());\n-                    e2.setExtra(e.getExtra());\n-                    if (e.getMethod() == ZipEntry.STORED) {\n-                        e2.setSize(e.getSize());\n-                        e2.setCrc(e.getCrc());\n+                    \/\/ Update the manifest.\n+                    Manifest old = new Manifest(zis);\n+                    if (newManifest != null) {\n+                        old.read(newManifest);\n+                    }\n+                    if (!updateManifest(old, zos)) {\n+                        return false;\n+                    }\n+                } else if (moduleInfos != null && isModuleInfoEntry) {\n+                    moduleInfos.putIfAbsent(name, zis.readAllBytes());\n+                } else {\n+                    boolean isDir = e.isDirectory();\n+                    if (!entryMap.containsKey(name)) { \/\/ copy the old stuff\n+                        \/\/ do our own compression\n+                        ZipEntry e2 = new ZipEntry(name);\n+                        e2.setMethod(e.getMethod());\n+                        setZipEntryTime(e2, e.getTime());\n+                        e2.setComment(e.getComment());\n+                        e2.setExtra(e.getExtra());\n+                        if (e.getMethod() == ZipEntry.STORED) {\n+                            e2.setSize(e.getSize());\n+                            e2.setCrc(e.getCrc());\n+                        }\n+                        zos.putNextEntry(e2);\n+                        copy(zis, zos);\n+                    } else { \/\/ replace with the new files\n+                        Entry ent = entryMap.get(name);\n+                        addFile(zos, ent);\n+                        entryMap.remove(name);\n+                        entries.remove(ent);\n+                        isDir = ent.isDir;\n+                    }\n+                    if (!isDir) {\n+                        jentries.add(name);\n@@ -992,11 +995,0 @@\n-                    zos.putNextEntry(e2);\n-                    copy(zis, zos);\n-                } else { \/\/ replace with the new files\n-                    Entry ent = entryMap.get(name);\n-                    addFile(zos, ent);\n-                    entryMap.remove(name);\n-                    entries.remove(ent);\n-                    isDir = ent.isDir;\n-                }\n-                if (!isDir) {\n-                    jentries.add(name);\n@@ -1005,1 +997,0 @@\n-        }\n@@ -1007,5 +998,6 @@\n-        \/\/ add the remaining new files\n-        for (Entry entry : entries) {\n-            addFile(zos, entry);\n-            if (!entry.isDir) {\n-                jentries.add(entry.name);\n+            \/\/ add the remaining new files\n+            for (Entry entry : entries) {\n+                addFile(zos, entry);\n+                if (!entry.isDir) {\n+                    jentries.add(entry.name);\n+                }\n@@ -1013,7 +1005,11 @@\n-        }\n-        if (!foundManifest) {\n-            if (newManifest != null) {\n-                Manifest m = new Manifest(newManifest);\n-                updateOk = !isAmbiguousMainClass(m);\n-                if (updateOk) {\n-                    if (!updateManifest(m, zos)) {\n+            if (!foundManifest) {\n+                if (newManifest != null) {\n+                    Manifest m = new Manifest(newManifest);\n+                    updateOk = !isAmbiguousMainClass(m);\n+                    if (updateOk) {\n+                        if (!updateManifest(m, zos)) {\n+                            updateOk = false;\n+                        }\n+                    }\n+                } else if (ename != null) {\n+                    if (!updateManifest(new Manifest(), zos)) {\n@@ -1023,2 +1019,11 @@\n-            } else if (ename != null) {\n-                if (!updateManifest(new Manifest(), zos)) {\n+            }\n+            if (updateOk) {\n+                if (moduleInfos != null && !moduleInfos.isEmpty()) {\n+                    Set<String> pkgs = new HashSet<>();\n+                    jentries.forEach(je -> addPackageIfNamed(pkgs, je));\n+                    addExtendedModuleAttributes(moduleInfos, pkgs);\n+                    updateOk = checkModuleInfo(moduleInfos.get(MODULE_INFO), jentries);\n+                    updateModuleInfo(moduleInfos, zos);\n+                    \/\/ TODO: check manifest main classes, etc\n+                } else if (moduleVersion != null || modulesToHash != null) {\n+                    error(getMsg(\"error.module.options.without.info\"));\n@@ -1029,15 +1034,0 @@\n-        if (updateOk) {\n-            if (moduleInfos != null && !moduleInfos.isEmpty()) {\n-                Set<String> pkgs = new HashSet<>();\n-                jentries.forEach( je -> addPackageIfNamed(pkgs, je));\n-                addExtendedModuleAttributes(moduleInfos, pkgs);\n-                updateOk = checkModuleInfo(moduleInfos.get(MODULE_INFO), jentries);\n-                updateModuleInfo(moduleInfos, zos);\n-                \/\/ TODO: check manifest main classes, etc\n-            } else if (moduleVersion != null || modulesToHash != null) {\n-                error(getMsg(\"error.module.options.without.info\"));\n-                updateOk = false;\n-            }\n-        }\n-        zis.close();\n-        zos.close();\n@@ -1365,3 +1355,0 @@\n-     *\n-     * @return whether entries were found and successfully extracted\n-     * (indicating this was a zip file without \"leading garbage\")\n@@ -1369,1 +1356,1 @@\n-    boolean extract(InputStream in, String files[]) throws IOException {\n+    void extract(InputStream in, String[] files) throws IOException {\n@@ -1372,3 +1359,0 @@\n-        \/\/ Set of all directory entries specified in archive.  Disallows\n-        \/\/ null entries.  Disallows all entries if using pre-6.0 behavior.\n-        boolean entriesFound = false;\n@@ -1377,1 +1361,0 @@\n-            entriesFound = true;\n@@ -1396,2 +1379,0 @@\n-\n-        return entriesFound;\n@@ -1403,14 +1384,16 @@\n-    void extract(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Set<ZipEntry> dirs = newDirSet();\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            ZipEntry e = zes.nextElement();\n-            if (files == null) {\n-                dirs.add(extractFile(zf.getInputStream(e), e));\n-            } else {\n-                String name = e.getName();\n-                for (String file : files) {\n-                    if (name.startsWith(file)) {\n-                        dirs.add(extractFile(zf.getInputStream(e), e));\n-                        break;\n+    void extract(String fname, String[] files) throws IOException {\n+        final Set<ZipEntry> dirs;\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            dirs = newDirSet();\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                ZipEntry e = zes.nextElement();\n+                if (files == null) {\n+                    dirs.add(extractFile(zf.getInputStream(e), e));\n+                } else {\n+                    String name = e.getName();\n+                    for (String file : files) {\n+                        if (name.startsWith(file)) {\n+                            dirs.add(extractFile(zf.getInputStream(e), e));\n+                            break;\n+                        }\n@@ -1421,1 +1404,0 @@\n-        zf.close();\n@@ -1502,1 +1484,1 @@\n-    void list(InputStream in, String files[]) throws IOException {\n+    void list(InputStream in, String[] files) throws IOException {\n@@ -1520,5 +1502,6 @@\n-    void list(String fname, String files[]) throws IOException {\n-        ZipFile zf = new ZipFile(fname);\n-        Enumeration<? extends ZipEntry> zes = zf.entries();\n-        while (zes.hasMoreElements()) {\n-            printEntry(zes.nextElement(), files);\n+    void list(String fname, String[] files) throws IOException {\n+        try (ZipFile zf = new ZipFile(fname)) {\n+            Enumeration<? extends ZipEntry> zes = zf.entries();\n+            while (zes.hasMoreElements()) {\n+                printEntry(zes.nextElement(), files);\n+            }\n@@ -1526,1 +1509,0 @@\n-        zf.close();\n@@ -1569,4 +1551,2 @@\n-        JarFile rf = new JarFile(jar.replace('\/', File.separatorChar));\n-\n-        if (rf != null) {\n-            Manifest man = rf.getManifest();\n+        try (JarFile jarFile = new JarFile(jar.replace('\/', File.separatorChar))) {\n+            Manifest man = jarFile.getManifest();\n@@ -1593,1 +1573,0 @@\n-        rf.close();\n@@ -1700,1 +1679,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":128,"deletions":149,"binary":false,"changes":277,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-        private long usageTicks = 0;\n-        private long totalTicks = 0;\n+        private volatile long usageTicks;\n+        private volatile long totalTicks;\n","filename":"src\/jdk.management\/unix\/classes\/com\/sun\/management\/internal\/OperatingSystemImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+\n+runtime\/condy\/escapeAnalysis\/TestEscapeCondy.java 8339694 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,0 +81,2 @@\n+gc\/shenandoah\/TestAllocIntArrays.java#aggressive 8309622 generic-all\n+gc\/shenandoah\/TestAllocIntArrays.java#iu-aggressive 8309622 generic-all\n@@ -85,0 +87,1 @@\n+gc\/stress\/gcold\/TestGCOldWithShenandoah.java#iu-aggressive 8309622 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Test that OSR correctly handles method with large number of locals\n+ * @bug 8335662\n+ * @library \/test\/lib \/\n+ * @modules java.base\/jdk.internal.misc\n+ *\n+ * @build jdk.test.whitebox.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ *\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   compiler.c1.TestOSRLotsOfLocals\n+ *\/\n+package compiler.c1;\n+\n+import java.lang.reflect.Method;\n+\n+import jdk.test.whitebox.WhiteBox;\n+\n+import static compiler.whitebox.CompilerWhiteBoxTest.COMP_LEVEL_SIMPLE;\n+\n+public class TestOSRLotsOfLocals {\n+\n+    private static WhiteBox wb = WhiteBox.getWhiteBox();\n+\n+    public static void main(String... args) throws Exception {\n+        Method method = TestOSRLotsOfLocals.class.getDeclaredMethod(\"lotsOfLocals\");\n+\n+        wb.enqueueMethodForCompilation(method, COMP_LEVEL_SIMPLE, 0);\n+        while (wb.isMethodQueuedForCompilation(method)) {\n+            Thread.onSpinWait();\n+        }\n+    }\n+\n+    private static synchronized void lotsOfLocals() {\n+        boolean b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b50, b51, b52, b53, b54, b55, b56, b57, b58, b59, b60, b61, b62, b63, b64, b65, b66, b67, b68, b69, b70, b71, b72, b73, b74, b75, b76, b77, b78, b79, b80, b81, b82, b83, b84, b85, b86, b87, b88, b89, b90, b91, b92, b93, b94, b95, b96, b97, b98, b99,\n+                b100, b101, b102, b103, b104, b105, b106, b107, b108, b109, b110, b111, b112, b113, b114, b115, b116, b117, b118, b119, b120, b121, b122, b123, b124, b125, b126, b127, b128, b129, b130, b131, b132, b133, b134, b135, b136, b137, b138, b139, b140, b141, b142, b143, b144, b145, b146, b147, b148, b149, b150, b151, b152, b153, b154, b155, b156, b157, b158, b159, b160, b161, b162, b163, b164, b165, b166, b167, b168, b169, b170, b171, b172, b173, b174, b175, b176, b177, b178, b179, b180, b181, b182, b183, b184, b185, b186, b187, b188, b189, b190, b191, b192, b193, b194, b195, b196, b197, b198, b199,\n+                b200, b201, b202, b203, b204, b205, b206, b207, b208, b209, b210, b211, b212, b213, b214, b215, b216, b217, b218, b219, b220, b221, b222, b223, b224, b225, b226, b227, b228, b229, b230, b231, b232, b233, b234, b235, b236, b237, b238, b239, b240, b241, b242, b243, b244, b245, b246, b247, b248, b249, b250, b251, b252, b253, b254, b255, b256, b257, b258, b259, b260, b261, b262, b263, b264, b265, b266, b267, b268, b269, b270, b271, b272, b273, b274, b275, b276, b277, b278, b279, b280, b281, b282, b283, b284, b285, b286, b287, b288, b289, b290, b291, b292, b293, b294, b295, b296, b297, b298, b299,\n+                b300, b301, b302, b303, b304, b305, b306, b307, b308, b309, b310, b311, b312, b313, b314, b315, b316, b317, b318, b319, b320, b321, b322, b323, b324, b325, b326, b327, b328, b329, b330, b331, b332, b333, b334, b335, b336, b337, b338, b339, b340, b341, b342, b343, b344, b345, b346, b347, b348, b349, b350, b351, b352, b353, b354, b355, b356, b357, b358, b359, b360, b361, b362, b363, b364, b365, b366, b367, b368, b369, b370, b371, b372, b373, b374, b375, b376, b377, b378, b379, b380, b381, b382, b383, b384, b385, b386, b387, b388, b389, b390, b391, b392, b393, b394, b395, b396, b397, b398, b399,\n+                b400, b401, b402, b403, b404, b405, b406, b407, b408, b409, b410, b411, b412, b413, b414, b415, b416, b417, b418, b419, b420, b421, b422, b423, b424, b425, b426, b427, b428, b429, b430, b431, b432, b433, b434, b435, b436, b437, b438, b439, b440, b441, b442, b443, b444, b445, b446, b447, b448, b449, b450, b451, b452, b453, b454, b455, b456, b457, b458, b459, b460, b461, b462, b463, b464, b465, b466, b467, b468, b469, b470, b471, b472, b473, b474, b475, b476, b477, b478, b479, b480, b481, b482, b483, b484, b485, b486, b487, b488, b489, b490, b491, b492, b493, b494, b495, b496, b497, b498, b499,\n+                b500, b501, b502, b503, b504, b505, b506, b507, b508, b509, b510, b511, b512, b513, b514, b515, b516, b517, b518, b519, b520, b521, b522, b523, b524, b525, b526, b527, b528, b529, b530, b531, b532, b533, b534, b535, b536, b537, b538, b539, b540, b541, b542, b543, b544, b545, b546, b547, b548, b549, b550, b551, b552, b553, b554, b555, b556, b557, b558, b559, b560, b561, b562, b563, b564, b565, b566, b567, b568, b569, b570, b571, b572, b573, b574, b575, b576, b577, b578, b579, b580, b581, b582, b583, b584, b585, b586, b587, b588, b589, b590, b591, b592, b593, b594, b595, b596, b597, b598, b599,\n+                b600, b601, b602, b603, b604, b605, b606, b607, b608, b609, b610, b611, b612, b613, b614, b615, b616, b617, b618, b619, b620, b621, b622, b623, b624, b625, b626, b627, b628, b629, b630, b631, b632, b633, b634, b635, b636, b637, b638, b639, b640, b641, b642, b643, b644, b645, b646, b647, b648, b649, b650, b651, b652, b653, b654, b655, b656, b657, b658, b659, b660, b661, b662, b663, b664, b665, b666, b667, b668, b669, b670, b671, b672, b673, b674, b675, b676, b677, b678, b679, b680, b681, b682, b683, b684, b685, b686, b687, b688, b689, b690, b691, b692, b693, b694, b695, b696, b697, b698, b699,\n+                b700, b701, b702, b703, b704, b705, b706, b707, b708, b709, b710, b711, b712, b713, b714, b715, b716, b717, b718, b719, b720, b721, b722, b723, b724, b725, b726, b727, b728, b729, b730, b731, b732, b733, b734, b735, b736, b737, b738, b739, b740, b741, b742, b743, b744, b745, b746, b747, b748, b749, b750, b751, b752, b753, b754, b755, b756, b757, b758, b759, b760, b761, b762, b763, b764, b765, b766, b767, b768, b769, b770, b771, b772, b773, b774, b775, b776, b777, b778, b779, b780, b781, b782, b783, b784, b785, b786, b787, b788, b789, b790, b791, b792, b793, b794, b795, b796, b797, b798, b799,\n+                b800, b801, b802, b803, b804, b805, b806, b807, b808, b809, b810, b811, b812, b813, b814, b815, b816, b817, b818, b819, b820, b821, b822, b823, b824, b825, b826, b827, b828, b829, b830, b831, b832, b833, b834, b835, b836, b837, b838, b839, b840, b841, b842, b843, b844, b845, b846, b847, b848, b849, b850, b851, b852, b853, b854, b855, b856, b857, b858, b859, b860, b861, b862, b863, b864, b865, b866, b867, b868, b869, b870, b871, b872, b873, b874, b875, b876, b877, b878, b879, b880, b881, b882, b883, b884, b885, b886, b887, b888, b889, b890, b891, b892, b893, b894, b895, b896, b897, b898, b899,\n+                b900, b901, b902, b903, b904, b905, b906, b907, b908, b909, b910, b911, b912, b913, b914, b915, b916, b917, b918, b919, b920, b921, b922, b923, b924, b925, b926, b927, b928, b929, b930, b931, b932, b933, b934, b935, b936, b937, b938, b939, b940, b941, b942, b943, b944, b945, b946, b947, b948, b949, b950, b951, b952, b953, b954, b955, b956, b957, b958, b959, b960, b961, b962, b963, b964, b965, b966, b967, b968, b969, b970, b971, b972, b973, b974, b975, b976, b977, b978, b979, b980, b981, b982, b983, b984, b985, b986, b987, b988, b989, b990, b991, b992, b993, b994, b995, b996, b997, b998, b999,\n+                b1000, b1001, b1002, b1003, b1004, b1005, b1006, b1007, b1008, b1009, b1010, b1011, b1012, b1013, b1014, b1015, b1016, b1017, b1018, b1019, b1020, b1021, b1022, b1023, b1024, b1025, b1026, b1027, b1028, b1029, b1030, b1031, b1032, b1033, b1034, b1035, b1036, b1037, b1038, b1039, b1040, b1041, b1042, b1043, b1044, b1045, b1046, b1047, b1048, b1049, b1050, b1051, b1052, b1053, b1054, b1055, b1056, b1057, b1058, b1059, b1060, b1061, b1062, b1063, b1064, b1065, b1066, b1067, b1068, b1069, b1070, b1071, b1072, b1073, b1074, b1075, b1076, b1077, b1078, b1079, b1080, b1081, b1082, b1083, b1084, b1085, b1086, b1087, b1088, b1089, b1090, b1091, b1092, b1093, b1094, b1095, b1096, b1097, b1098, b1099,\n+                b1100, b1101, b1102, b1103, b1104, b1105, b1106, b1107, b1108, b1109, b1110, b1111, b1112, b1113, b1114, b1115, b1116, b1117, b1118, b1119, b1120, b1121, b1122, b1123, b1124, b1125, b1126, b1127, b1128, b1129, b1130, b1131, b1132, b1133, b1134, b1135, b1136, b1137, b1138, b1139, b1140, b1141, b1142, b1143, b1144, b1145, b1146, b1147, b1148, b1149, b1150, b1151, b1152, b1153, b1154, b1155, b1156, b1157, b1158, b1159, b1160, b1161, b1162, b1163, b1164, b1165, b1166, b1167, b1168, b1169, b1170, b1171, b1172, b1173, b1174, b1175, b1176, b1177, b1178, b1179, b1180, b1181, b1182, b1183, b1184, b1185, b1186, b1187, b1188, b1189, b1190, b1191, b1192, b1193, b1194, b1195, b1196, b1197, b1198, b1199,\n+                b1200, b1201, b1202, b1203, b1204, b1205, b1206, b1207, b1208, b1209, b1210, b1211, b1212, b1213, b1214, b1215, b1216, b1217, b1218, b1219, b1220, b1221, b1222, b1223, b1224, b1225, b1226, b1227, b1228, b1229, b1230, b1231, b1232, b1233, b1234, b1235, b1236, b1237, b1238, b1239, b1240, b1241, b1242, b1243, b1244, b1245, b1246, b1247, b1248, b1249, b1250, b1251, b1252, b1253, b1254, b1255, b1256, b1257, b1258, b1259, b1260, b1261, b1262, b1263, b1264, b1265, b1266, b1267, b1268, b1269, b1270, b1271, b1272, b1273, b1274, b1275, b1276, b1277, b1278, b1279, b1280, b1281, b1282, b1283, b1284, b1285, b1286, b1287, b1288, b1289, b1290, b1291, b1292, b1293, b1294, b1295, b1296, b1297, b1298, b1299,\n+                b1300, b1301, b1302, b1303, b1304, b1305, b1306, b1307, b1308, b1309, b1310, b1311, b1312, b1313, b1314, b1315, b1316, b1317, b1318, b1319, b1320, b1321, b1322, b1323, b1324, b1325, b1326, b1327, b1328, b1329, b1330, b1331, b1332, b1333, b1334, b1335, b1336, b1337, b1338, b1339, b1340, b1341, b1342, b1343, b1344, b1345, b1346, b1347, b1348, b1349, b1350, b1351, b1352, b1353, b1354, b1355, b1356, b1357, b1358, b1359, b1360, b1361, b1362, b1363, b1364, b1365, b1366, b1367, b1368, b1369, b1370, b1371, b1372, b1373, b1374, b1375, b1376, b1377, b1378, b1379, b1380, b1381, b1382, b1383, b1384, b1385, b1386, b1387, b1388, b1389, b1390, b1391, b1392, b1393, b1394, b1395, b1396, b1397, b1398, b1399,\n+                b1400, b1401, b1402, b1403, b1404, b1405, b1406, b1407, b1408, b1409, b1410, b1411, b1412, b1413, b1414, b1415, b1416, b1417, b1418, b1419, b1420, b1421, b1422, b1423, b1424, b1425, b1426, b1427, b1428, b1429, b1430, b1431, b1432, b1433, b1434, b1435, b1436, b1437, b1438, b1439, b1440, b1441, b1442, b1443, b1444, b1445, b1446, b1447, b1448, b1449, b1450, b1451, b1452, b1453, b1454, b1455, b1456, b1457, b1458, b1459, b1460, b1461, b1462, b1463, b1464, b1465, b1466, b1467, b1468, b1469, b1470, b1471, b1472, b1473, b1474, b1475, b1476, b1477, b1478, b1479, b1480, b1481, b1482, b1483, b1484, b1485, b1486, b1487, b1488, b1489, b1490, b1491, b1492, b1493, b1494, b1495, b1496, b1497, b1498, b1499,\n+                b1500, b1501, b1502, b1503, b1504, b1505, b1506, b1507, b1508, b1509, b1510, b1511, b1512, b1513, b1514, b1515, b1516, b1517, b1518, b1519, b1520, b1521, b1522, b1523, b1524, b1525, b1526, b1527, b1528, b1529, b1530, b1531, b1532, b1533, b1534, b1535, b1536, b1537, b1538, b1539, b1540, b1541, b1542, b1543, b1544, b1545, b1546, b1547, b1548, b1549, b1550, b1551, b1552, b1553, b1554, b1555, b1556, b1557, b1558, b1559, b1560, b1561, b1562, b1563, b1564, b1565, b1566, b1567, b1568, b1569, b1570, b1571, b1572, b1573, b1574, b1575, b1576, b1577, b1578, b1579, b1580, b1581, b1582, b1583, b1584, b1585, b1586, b1587, b1588, b1589, b1590, b1591, b1592, b1593, b1594, b1595, b1596, b1597, b1598, b1599,\n+                b1600, b1601, b1602, b1603, b1604, b1605, b1606, b1607, b1608, b1609, b1610, b1611, b1612, b1613, b1614, b1615, b1616, b1617, b1618, b1619, b1620, b1621, b1622, b1623, b1624, b1625, b1626, b1627, b1628, b1629, b1630, b1631, b1632, b1633, b1634, b1635, b1636, b1637, b1638, b1639, b1640, b1641, b1642, b1643, b1644, b1645, b1646, b1647, b1648, b1649, b1650, b1651, b1652, b1653, b1654, b1655, b1656, b1657, b1658, b1659, b1660, b1661, b1662, b1663, b1664, b1665, b1666, b1667, b1668, b1669, b1670, b1671, b1672, b1673, b1674, b1675, b1676, b1677, b1678, b1679, b1680, b1681, b1682, b1683, b1684, b1685, b1686, b1687, b1688, b1689, b1690, b1691, b1692, b1693, b1694, b1695, b1696, b1697, b1698, b1699,\n+                b1700, b1701, b1702, b1703, b1704, b1705, b1706, b1707, b1708, b1709, b1710, b1711, b1712, b1713, b1714, b1715, b1716, b1717, b1718, b1719, b1720, b1721, b1722, b1723, b1724, b1725, b1726, b1727, b1728, b1729, b1730, b1731, b1732, b1733, b1734, b1735, b1736, b1737, b1738, b1739, b1740, b1741, b1742, b1743, b1744, b1745, b1746, b1747, b1748, b1749, b1750, b1751, b1752, b1753, b1754, b1755, b1756, b1757, b1758, b1759, b1760, b1761, b1762, b1763, b1764, b1765, b1766, b1767, b1768, b1769, b1770, b1771, b1772, b1773, b1774, b1775, b1776, b1777, b1778, b1779, b1780, b1781, b1782, b1783, b1784, b1785, b1786, b1787, b1788, b1789, b1790, b1791, b1792, b1793, b1794, b1795, b1796, b1797, b1798, b1799,\n+                b1800, b1801, b1802, b1803, b1804, b1805, b1806, b1807, b1808, b1809, b1810, b1811, b1812, b1813, b1814, b1815, b1816, b1817, b1818, b1819, b1820, b1821, b1822, b1823, b1824, b1825, b1826, b1827, b1828, b1829, b1830, b1831, b1832, b1833, b1834, b1835, b1836, b1837, b1838, b1839, b1840, b1841, b1842, b1843, b1844, b1845, b1846, b1847, b1848, b1849, b1850, b1851, b1852, b1853, b1854, b1855, b1856, b1857, b1858, b1859, b1860, b1861, b1862, b1863, b1864, b1865, b1866, b1867, b1868, b1869, b1870, b1871, b1872, b1873, b1874, b1875, b1876, b1877, b1878, b1879, b1880, b1881, b1882, b1883, b1884, b1885, b1886, b1887, b1888, b1889, b1890, b1891, b1892, b1893, b1894, b1895, b1896, b1897, b1898, b1899,\n+                b1900, b1901, b1902, b1903, b1904, b1905, b1906, b1907, b1908, b1909, b1910, b1911, b1912, b1913, b1914, b1915, b1916, b1917, b1918, b1919, b1920, b1921, b1922, b1923, b1924, b1925, b1926, b1927, b1928, b1929, b1930, b1931, b1932, b1933, b1934, b1935, b1936, b1937, b1938, b1939, b1940, b1941, b1942, b1943, b1944, b1945, b1946, b1947, b1948, b1949, b1950, b1951, b1952, b1953, b1954, b1955, b1956, b1957, b1958, b1959, b1960, b1961, b1962, b1963, b1964, b1965, b1966, b1967, b1968, b1969, b1970, b1971, b1972, b1973, b1974, b1975, b1976, b1977, b1978, b1979, b1980, b1981, b1982, b1983, b1984, b1985, b1986, b1987, b1988, b1989, b1990, b1991, b1992, b1993, b1994, b1995, b1996, b1997, b1998, b1999,\n+                b2000, b2001, b2002, b2003, b2004, b2005, b2006, b2007, b2008, b2009, b2010, b2011, b2012, b2013, b2014, b2015, b2016, b2017, b2018, b2019, b2020, b2021, b2022, b2023, b2024, b2025, b2026, b2027, b2028, b2029, b2030, b2031, b2032, b2033, b2034, b2035, b2036, b2037, b2038, b2039, b2040, b2041, b2042, b2043, b2044, b2045, b2046, b2047, b2048, b2049, b2050, b2051, b2052, b2053, b2054, b2055, b2056, b2057, b2058, b2059, b2060, b2061, b2062, b2063, b2064, b2065, b2066, b2067, b2068, b2069, b2070, b2071, b2072, b2073, b2074, b2075, b2076, b2077, b2078, b2079, b2080, b2081, b2082, b2083, b2084, b2085, b2086, b2087, b2088, b2089, b2090, b2091, b2092, b2093, b2094, b2095, b2096, b2097, b2098, b2099,\n+                b2100, b2101, b2102, b2103, b2104, b2105, b2106, b2107, b2108, b2109, b2110, b2111, b2112, b2113, b2114, b2115, b2116, b2117, b2118, b2119, b2120, b2121, b2122, b2123, b2124, b2125, b2126, b2127, b2128, b2129, b2130, b2131, b2132, b2133, b2134, b2135, b2136, b2137, b2138, b2139, b2140, b2141, b2142, b2143, b2144, b2145, b2146, b2147, b2148, b2149, b2150, b2151, b2152, b2153, b2154, b2155, b2156, b2157, b2158, b2159, b2160, b2161, b2162, b2163, b2164, b2165, b2166, b2167, b2168, b2169, b2170, b2171, b2172, b2173, b2174, b2175, b2176, b2177, b2178, b2179, b2180, b2181, b2182, b2183, b2184, b2185, b2186, b2187, b2188, b2189, b2190, b2191, b2192, b2193, b2194, b2195, b2196, b2197, b2198, b2199,\n+                b2200, b2201, b2202, b2203, b2204, b2205, b2206, b2207, b2208, b2209, b2210, b2211, b2212, b2213, b2214, b2215, b2216, b2217, b2218, b2219, b2220, b2221, b2222, b2223, b2224, b2225, b2226, b2227, b2228, b2229, b2230, b2231, b2232, b2233, b2234, b2235, b2236, b2237, b2238, b2239, b2240, b2241, b2242, b2243, b2244, b2245, b2246, b2247, b2248, b2249, b2250, b2251, b2252, b2253, b2254, b2255, b2256, b2257, b2258, b2259, b2260, b2261, b2262, b2263, b2264, b2265, b2266, b2267, b2268, b2269, b2270, b2271, b2272, b2273, b2274, b2275, b2276, b2277, b2278, b2279, b2280, b2281, b2282, b2283, b2284, b2285, b2286, b2287, b2288, b2289, b2290, b2291, b2292, b2293, b2294, b2295, b2296, b2297, b2298, b2299,\n+                b2300, b2301, b2302, b2303, b2304, b2305, b2306, b2307, b2308, b2309, b2310, b2311, b2312, b2313, b2314, b2315, b2316, b2317, b2318, b2319, b2320, b2321, b2322, b2323, b2324, b2325, b2326, b2327, b2328, b2329, b2330, b2331, b2332, b2333, b2334, b2335, b2336, b2337, b2338, b2339, b2340, b2341, b2342, b2343, b2344, b2345, b2346, b2347, b2348, b2349, b2350, b2351, b2352, b2353, b2354, b2355, b2356, b2357, b2358, b2359, b2360, b2361, b2362, b2363, b2364, b2365, b2366, b2367, b2368, b2369, b2370, b2371, b2372, b2373, b2374, b2375, b2376, b2377, b2378, b2379, b2380, b2381, b2382, b2383, b2384, b2385, b2386, b2387, b2388, b2389, b2390, b2391, b2392, b2393, b2394, b2395, b2396, b2397, b2398, b2399,\n+                b2400, b2401, b2402, b2403, b2404, b2405, b2406, b2407, b2408, b2409, b2410, b2411, b2412, b2413, b2414, b2415, b2416, b2417, b2418, b2419, b2420, b2421, b2422, b2423, b2424, b2425, b2426, b2427, b2428, b2429, b2430, b2431, b2432, b2433, b2434, b2435, b2436, b2437, b2438, b2439, b2440, b2441, b2442, b2443, b2444, b2445, b2446, b2447, b2448, b2449, b2450, b2451, b2452, b2453, b2454, b2455, b2456, b2457, b2458, b2459, b2460, b2461, b2462, b2463, b2464, b2465, b2466, b2467, b2468, b2469, b2470, b2471, b2472, b2473, b2474, b2475, b2476, b2477, b2478, b2479, b2480, b2481, b2482, b2483, b2484, b2485, b2486, b2487, b2488, b2489, b2490, b2491, b2492, b2493, b2494, b2495, b2496, b2497, b2498, b2499,\n+                b2500, b2501, b2502, b2503, b2504, b2505, b2506, b2507, b2508, b2509, b2510, b2511, b2512, b2513, b2514, b2515, b2516, b2517, b2518, b2519, b2520, b2521, b2522, b2523, b2524, b2525, b2526, b2527, b2528, b2529, b2530, b2531, b2532, b2533, b2534, b2535, b2536, b2537, b2538, b2539, b2540, b2541, b2542, b2543, b2544, b2545, b2546, b2547, b2548, b2549, b2550, b2551, b2552, b2553, b2554, b2555, b2556, b2557, b2558, b2559, b2560, b2561, b2562, b2563, b2564, b2565, b2566, b2567, b2568, b2569, b2570, b2571, b2572, b2573, b2574, b2575, b2576, b2577, b2578, b2579, b2580, b2581, b2582, b2583, b2584, b2585, b2586, b2587, b2588, b2589, b2590, b2591, b2592, b2593, b2594, b2595, b2596, b2597, b2598, b2599,\n+                b2600, b2601, b2602, b2603, b2604, b2605, b2606, b2607, b2608, b2609, b2610, b2611, b2612, b2613, b2614, b2615, b2616, b2617, b2618, b2619, b2620, b2621, b2622, b2623, b2624, b2625, b2626, b2627, b2628, b2629, b2630, b2631, b2632, b2633, b2634, b2635, b2636, b2637, b2638, b2639, b2640, b2641, b2642, b2643, b2644, b2645, b2646, b2647, b2648, b2649, b2650, b2651, b2652, b2653, b2654, b2655, b2656, b2657, b2658, b2659, b2660, b2661, b2662, b2663, b2664, b2665, b2666, b2667, b2668, b2669, b2670, b2671, b2672, b2673, b2674, b2675, b2676, b2677, b2678, b2679, b2680, b2681, b2682, b2683, b2684, b2685, b2686, b2687, b2688, b2689, b2690, b2691, b2692, b2693, b2694, b2695, b2696, b2697, b2698, b2699,\n+                b2700, b2701, b2702, b2703, b2704, b2705, b2706, b2707, b2708, b2709, b2710, b2711, b2712, b2713, b2714, b2715, b2716, b2717, b2718, b2719, b2720, b2721, b2722, b2723, b2724, b2725, b2726, b2727, b2728, b2729, b2730, b2731, b2732, b2733, b2734, b2735, b2736, b2737, b2738, b2739, b2740, b2741, b2742, b2743, b2744, b2745, b2746, b2747, b2748, b2749, b2750, b2751, b2752, b2753, b2754, b2755, b2756, b2757, b2758, b2759, b2760, b2761, b2762, b2763, b2764, b2765, b2766, b2767, b2768, b2769, b2770, b2771, b2772, b2773, b2774, b2775, b2776, b2777, b2778, b2779, b2780, b2781, b2782, b2783, b2784, b2785, b2786, b2787, b2788, b2789, b2790, b2791, b2792, b2793, b2794, b2795, b2796, b2797, b2798, b2799,\n+                b2800, b2801, b2802, b2803, b2804, b2805, b2806, b2807, b2808, b2809, b2810, b2811, b2812, b2813, b2814, b2815, b2816, b2817, b2818, b2819, b2820, b2821, b2822, b2823, b2824, b2825, b2826, b2827, b2828, b2829, b2830, b2831, b2832, b2833, b2834, b2835, b2836, b2837, b2838, b2839, b2840, b2841, b2842, b2843, b2844, b2845, b2846, b2847, b2848, b2849, b2850, b2851, b2852, b2853, b2854, b2855, b2856, b2857, b2858, b2859, b2860, b2861, b2862, b2863, b2864, b2865, b2866, b2867, b2868, b2869, b2870, b2871, b2872, b2873, b2874, b2875, b2876, b2877, b2878, b2879, b2880, b2881, b2882, b2883, b2884, b2885, b2886, b2887, b2888, b2889, b2890, b2891, b2892, b2893, b2894, b2895, b2896, b2897, b2898, b2899,\n+                b2900, b2901, b2902, b2903, b2904, b2905, b2906, b2907, b2908, b2909, b2910, b2911, b2912, b2913, b2914, b2915, b2916, b2917, b2918, b2919, b2920, b2921, b2922, b2923, b2924, b2925, b2926, b2927, b2928, b2929, b2930, b2931, b2932, b2933, b2934, b2935, b2936, b2937, b2938, b2939, b2940, b2941, b2942, b2943, b2944, b2945, b2946, b2947, b2948, b2949, b2950, b2951, b2952, b2953, b2954, b2955, b2956, b2957, b2958, b2959, b2960, b2961, b2962, b2963, b2964, b2965, b2966, b2967, b2968, b2969, b2970, b2971, b2972, b2973, b2974, b2975, b2976, b2977, b2978, b2979, b2980, b2981, b2982, b2983, b2984, b2985, b2986, b2987, b2988, b2989, b2990, b2991, b2992, b2993, b2994, b2995, b2996, b2997, b2998, b2999,\n+                b3000, b3001, b3002, b3003, b3004, b3005, b3006, b3007, b3008, b3009, b3010, b3011, b3012, b3013, b3014, b3015, b3016, b3017, b3018, b3019, b3020, b3021, b3022, b3023, b3024, b3025, b3026, b3027, b3028, b3029, b3030, b3031, b3032, b3033, b3034, b3035, b3036, b3037, b3038, b3039, b3040, b3041, b3042, b3043, b3044, b3045, b3046, b3047, b3048, b3049, b3050, b3051, b3052, b3053, b3054, b3055, b3056, b3057, b3058, b3059, b3060, b3061, b3062, b3063, b3064, b3065, b3066, b3067, b3068, b3069, b3070, b3071, b3072, b3073, b3074, b3075, b3076, b3077, b3078, b3079, b3080, b3081, b3082, b3083, b3084, b3085, b3086, b3087, b3088, b3089, b3090, b3091, b3092, b3093, b3094, b3095, b3096, b3097, b3098, b3099,\n+                b3100, b3101, b3102, b3103, b3104, b3105, b3106, b3107, b3108, b3109, b3110, b3111, b3112, b3113, b3114, b3115, b3116, b3117, b3118, b3119, b3120, b3121, b3122, b3123, b3124, b3125, b3126, b3127, b3128, b3129, b3130, b3131, b3132, b3133, b3134, b3135, b3136, b3137, b3138, b3139, b3140, b3141, b3142, b3143, b3144, b3145, b3146, b3147, b3148, b3149, b3150, b3151, b3152, b3153, b3154, b3155, b3156, b3157, b3158, b3159, b3160, b3161, b3162, b3163, b3164, b3165, b3166, b3167, b3168, b3169, b3170, b3171, b3172, b3173, b3174, b3175, b3176, b3177, b3178, b3179, b3180, b3181, b3182, b3183, b3184, b3185, b3186, b3187, b3188, b3189, b3190, b3191, b3192, b3193, b3194, b3195, b3196, b3197, b3198, b3199,\n+                b3200, b3201, b3202, b3203, b3204, b3205, b3206, b3207, b3208, b3209, b3210, b3211, b3212, b3213, b3214, b3215, b3216, b3217, b3218, b3219, b3220, b3221, b3222, b3223, b3224, b3225, b3226, b3227, b3228, b3229, b3230, b3231, b3232, b3233, b3234, b3235, b3236, b3237, b3238, b3239, b3240, b3241, b3242, b3243, b3244, b3245, b3246, b3247, b3248, b3249, b3250, b3251, b3252, b3253, b3254, b3255, b3256, b3257, b3258, b3259, b3260, b3261, b3262, b3263, b3264, b3265, b3266, b3267, b3268, b3269, b3270, b3271, b3272, b3273, b3274, b3275, b3276, b3277, b3278, b3279, b3280, b3281, b3282, b3283, b3284, b3285, b3286, b3287, b3288, b3289, b3290, b3291, b3292, b3293, b3294, b3295, b3296, b3297, b3298, b3299,\n+                b3300, b3301, b3302, b3303, b3304, b3305, b3306, b3307, b3308, b3309, b3310, b3311, b3312, b3313, b3314, b3315, b3316, b3317, b3318, b3319, b3320, b3321, b3322, b3323, b3324, b3325, b3326, b3327, b3328, b3329, b3330, b3331, b3332, b3333, b3334, b3335, b3336, b3337, b3338, b3339, b3340, b3341, b3342, b3343, b3344, b3345, b3346, b3347, b3348, b3349, b3350, b3351, b3352, b3353, b3354, b3355, b3356, b3357, b3358, b3359, b3360, b3361, b3362, b3363, b3364, b3365, b3366, b3367, b3368, b3369, b3370, b3371, b3372, b3373, b3374, b3375, b3376, b3377, b3378, b3379, b3380, b3381, b3382, b3383, b3384, b3385, b3386, b3387, b3388, b3389, b3390, b3391, b3392, b3393, b3394, b3395, b3396, b3397, b3398, b3399,\n+                b3400, b3401, b3402, b3403, b3404, b3405, b3406, b3407, b3408, b3409, b3410, b3411, b3412, b3413, b3414, b3415, b3416, b3417, b3418, b3419, b3420, b3421, b3422, b3423, b3424, b3425, b3426, b3427, b3428, b3429, b3430, b3431, b3432, b3433, b3434, b3435, b3436, b3437, b3438, b3439, b3440, b3441, b3442, b3443, b3444, b3445, b3446, b3447, b3448, b3449, b3450, b3451, b3452, b3453, b3454, b3455, b3456, b3457, b3458, b3459, b3460, b3461, b3462, b3463, b3464, b3465, b3466, b3467, b3468, b3469, b3470, b3471, b3472, b3473, b3474, b3475, b3476, b3477, b3478, b3479, b3480, b3481, b3482, b3483, b3484, b3485, b3486, b3487, b3488, b3489, b3490, b3491, b3492, b3493, b3494, b3495, b3496, b3497, b3498, b3499,\n+                b3500, b3501, b3502, b3503, b3504, b3505, b3506, b3507, b3508, b3509, b3510, b3511, b3512, b3513, b3514, b3515, b3516, b3517, b3518, b3519, b3520, b3521, b3522, b3523, b3524, b3525, b3526, b3527, b3528, b3529, b3530, b3531, b3532, b3533, b3534, b3535, b3536, b3537, b3538, b3539, b3540, b3541, b3542, b3543, b3544, b3545, b3546, b3547, b3548, b3549, b3550, b3551, b3552, b3553, b3554, b3555, b3556, b3557, b3558, b3559, b3560, b3561, b3562, b3563, b3564, b3565, b3566, b3567, b3568, b3569, b3570, b3571, b3572, b3573, b3574, b3575, b3576, b3577, b3578, b3579, b3580, b3581, b3582, b3583, b3584, b3585, b3586, b3587, b3588, b3589, b3590, b3591, b3592, b3593, b3594, b3595, b3596, b3597, b3598, b3599,\n+                b3600, b3601, b3602, b3603, b3604, b3605, b3606, b3607, b3608, b3609, b3610, b3611, b3612, b3613, b3614, b3615, b3616, b3617, b3618, b3619, b3620, b3621, b3622, b3623, b3624, b3625, b3626, b3627, b3628, b3629, b3630, b3631, b3632, b3633, b3634, b3635, b3636, b3637, b3638, b3639, b3640, b3641, b3642, b3643, b3644, b3645, b3646, b3647, b3648, b3649, b3650, b3651, b3652, b3653, b3654, b3655, b3656, b3657, b3658, b3659, b3660, b3661, b3662, b3663, b3664, b3665, b3666, b3667, b3668, b3669, b3670, b3671, b3672, b3673, b3674, b3675, b3676, b3677, b3678, b3679, b3680, b3681, b3682, b3683, b3684, b3685, b3686, b3687, b3688, b3689, b3690, b3691, b3692, b3693, b3694, b3695, b3696, b3697, b3698, b3699,\n+                b3700, b3701, b3702, b3703, b3704, b3705, b3706, b3707, b3708, b3709, b3710, b3711, b3712, b3713, b3714, b3715, b3716, b3717, b3718, b3719, b3720, b3721, b3722, b3723, b3724, b3725, b3726, b3727, b3728, b3729, b3730, b3731, b3732, b3733, b3734, b3735, b3736, b3737, b3738, b3739, b3740, b3741, b3742, b3743, b3744, b3745, b3746, b3747, b3748, b3749, b3750, b3751, b3752, b3753, b3754, b3755, b3756, b3757, b3758, b3759, b3760, b3761, b3762, b3763, b3764, b3765, b3766, b3767, b3768, b3769, b3770, b3771, b3772, b3773, b3774, b3775, b3776, b3777, b3778, b3779, b3780, b3781, b3782, b3783, b3784, b3785, b3786, b3787, b3788, b3789, b3790, b3791, b3792, b3793, b3794, b3795, b3796, b3797, b3798, b3799,\n+                b3800, b3801, b3802, b3803, b3804, b3805, b3806, b3807, b3808, b3809, b3810, b3811, b3812, b3813, b3814, b3815, b3816, b3817, b3818, b3819, b3820, b3821, b3822, b3823, b3824, b3825, b3826, b3827, b3828, b3829, b3830, b3831, b3832, b3833, b3834, b3835, b3836, b3837, b3838, b3839, b3840, b3841, b3842, b3843, b3844, b3845, b3846, b3847, b3848, b3849, b3850, b3851, b3852, b3853, b3854, b3855, b3856, b3857, b3858, b3859, b3860, b3861, b3862, b3863, b3864, b3865, b3866, b3867, b3868, b3869, b3870, b3871, b3872, b3873, b3874, b3875, b3876, b3877, b3878, b3879, b3880, b3881, b3882, b3883, b3884, b3885, b3886, b3887, b3888, b3889, b3890, b3891, b3892, b3893, b3894, b3895, b3896, b3897, b3898, b3899,\n+                b3900, b3901, b3902, b3903, b3904, b3905, b3906, b3907, b3908, b3909, b3910, b3911, b3912, b3913, b3914, b3915, b3916, b3917, b3918, b3919, b3920, b3921, b3922, b3923, b3924, b3925, b3926, b3927, b3928, b3929, b3930, b3931, b3932, b3933, b3934, b3935, b3936, b3937, b3938, b3939, b3940, b3941, b3942, b3943, b3944, b3945, b3946, b3947, b3948, b3949, b3950, b3951, b3952, b3953, b3954, b3955, b3956, b3957, b3958, b3959, b3960, b3961, b3962, b3963, b3964, b3965, b3966, b3967, b3968, b3969, b3970, b3971, b3972, b3973, b3974, b3975, b3976, b3977, b3978, b3979, b3980, b3981, b3982, b3983, b3984, b3985, b3986, b3987, b3988, b3989, b3990, b3991, b3992, b3993, b3994, b3995, b3996, b3997, b3998, b3999,\n+                b4000, b4001, b4002, b4003, b4004, b4005, b4006, b4007, b4008, b4009, b4010, b4011, b4012, b4013, b4014, b4015, b4016, b4017, b4018, b4019, b4020, b4021, b4022, b4023, b4024, b4025, b4026, b4027, b4028, b4029, b4030, b4031, b4032, b4033, b4034, b4035, b4036, b4037, b4038, b4039, b4040, b4041, b4042, b4043, b4044, b4045, b4046, b4047, b4048, b4049, b4050, b4051, b4052, b4053, b4054, b4055, b4056, b4057, b4058, b4059, b4060, b4061, b4062, b4063, b4064, b4065, b4066, b4067, b4068, b4069, b4070, b4071, b4072, b4073, b4074, b4075, b4076, b4077, b4078, b4079, b4080, b4081, b4082, b4083, b4084, b4085, b4086, b4087, b4088, b4089, b4090, b4091, b4092, b4093, b4094, b4095, b4096, b4097, b4098, b4099;\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/TestOSRLotsOfLocals.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ * Build a ClassLoader that loads from classpath and {@code classesDir}.\n+ * Helper class that generates a ClassLoader which allows loading classes\n+ * from the classpath (see {@link Utils#getClassPaths()}) and {@code classesDir}.\n+ * <p>\n+ * The CompileFramework compiles all its classes to a specific {@code classesDir},\n+ * and this generated ClassLoader thus can be used to load those classes.\n+ *\/\n+class ClassLoaderBuilder {\n+\n+    \/**\n+     * Build a ClassLoader that loads from classpath and {@code classesDir}.\n+     *\/\n+    public static ClassLoader build(Path classesDir) {\n+        ClassLoader sysLoader = ClassLoader.getSystemClassLoader();\n+\n+        try {\n+            \/\/ Classpath for all included classes (e.g. IR Framework).\n+            \/\/ Get all class paths, convert to URLs.\n+            List<URL> urls = new ArrayList<>();\n+            for (String path : Utils.getClassPaths()) {\n+                urls.add(new File(path).toURI().toURL());\n+            }\n+            \/\/ And add in the compiled classes from this instance of CompileFramework.\n+            urls.add(new File(classesDir.toString()).toURI().toURL());\n+            return URLClassLoader.newInstance(urls.toArray(URL[]::new), sysLoader);\n+        } catch (IOException e) {\n+            throw new CompileFrameworkException(\"IOException while creating ClassLoader\", e);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/ClassLoaderBuilder.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"},{"patch":"@@ -0,0 +1,202 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+import java.io.BufferedWriter;\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.concurrent.TimeUnit;\n+import java.util.List;\n+import jdk.test.lib.JDKToolFinder;\n+\n+\/**\n+ * Helper class for compilation of Java and Jasm {@link SourceCode}.\n+ *\/\n+class Compile {\n+    private static final int COMPILE_TIMEOUT = 60;\n+\n+    private static final String JAVA_PATH = JDKToolFinder.getJDKTool(\"java\");\n+    private static final String JAVAC_PATH = JDKToolFinder.getJDKTool(\"javac\");\n+\n+    \/**\n+     * Compile all sources in {@code javaSources}. First write them to the {@code sourceDir},\n+     * then compile them to class-files which are stored in {@code classesDir}.\n+     *\/\n+    public static void compileJavaSources(List<SourceCode> javaSources, Path sourceDir, Path classesDir) {\n+        if (javaSources.isEmpty()) {\n+            Utils.printlnVerbose(\"No java sources to compile.\");\n+            return;\n+        }\n+        Utils.printlnVerbose(\"Compiling Java sources: \" + javaSources.size());\n+\n+        List<Path> javaFilePaths = writeSourcesToFiles(javaSources, sourceDir);\n+        compileJavaFiles(javaFilePaths, classesDir);\n+        Utils.printlnVerbose(\"Java sources compiled.\");\n+    }\n+\n+    \/**\n+     * Compile a list of files (i.e. {@code paths}) using javac and store\n+     * them in {@code classesDir}.\n+     *\/\n+    private static void compileJavaFiles(List<Path> paths, Path classesDir) {\n+        List<String> command = new ArrayList<>();\n+\n+        command.add(JAVAC_PATH);\n+        command.add(\"-classpath\");\n+        \/\/ Note: the backslashes from windows paths must be escaped!\n+        command.add(Utils.getEscapedClassPathAndClassesDir(classesDir));\n+        command.add(\"-d\");\n+        command.add(classesDir.toString());\n+        for (Path path : paths) {\n+            command.add(path.toAbsolutePath().toString());\n+        }\n+\n+        executeCompileCommand(command);\n+    }\n+\n+    \/**\n+     * Compile all sources in {@code jasmSources}. First write them to the {@code sourceDir},\n+     * then compile them to class-files which are stored in {@code classesDir}.\n+     *\/\n+    public static void compileJasmSources(List<SourceCode> jasmSources, Path sourceDir, Path classesDir) {\n+        if (jasmSources.isEmpty()) {\n+            Utils.printlnVerbose(\"No jasm sources to compile.\");\n+            return;\n+        }\n+        Utils.printlnVerbose(\"Compiling jasm sources: \" + jasmSources.size());\n+\n+        List<Path> jasmFilePaths = writeSourcesToFiles(jasmSources, sourceDir);\n+        compileJasmFiles(jasmFilePaths, classesDir);\n+        Utils.printlnVerbose(\"Jasm sources compiled.\");\n+    }\n+\n+    \/**\n+     * Compile a list of files (i.e. {@code paths}) using asmtools jasm and store\n+     * them in {@code classesDir}.\n+     *\/\n+    private static void compileJasmFiles(List<Path> paths, Path classesDir) {\n+        List<String> command = new ArrayList<>();\n+\n+        command.add(JAVA_PATH);\n+        command.add(\"-classpath\");\n+        command.add(getAsmToolsPath());\n+        command.add(\"org.openjdk.asmtools.jasm.Main\");\n+        command.add(\"-d\");\n+        command.add(classesDir.toString());\n+        for (Path path : paths) {\n+            command.add(path.toAbsolutePath().toString());\n+        }\n+\n+        executeCompileCommand(command);\n+    }\n+\n+    \/**\n+     * Get the path of asmtools, which is shipped with JTREG.\n+     *\/\n+    private static String getAsmToolsPath() {\n+        for (String path : Utils.getClassPaths()) {\n+            if (path.endsWith(\"jtreg.jar\")) {\n+                File jtreg = new File(path);\n+                File dir = jtreg.getAbsoluteFile().getParentFile();\n+                File asmtools = new File(dir, \"asmtools.jar\");\n+                if (!asmtools.exists()) {\n+                    throw new InternalCompileFrameworkException(\"Found jtreg.jar in classpath, but could not find asmtools.jar\");\n+                }\n+                return asmtools.getAbsolutePath();\n+            }\n+        }\n+        throw new InternalCompileFrameworkException(\"Could not find asmtools because could not find jtreg.jar in classpath\");\n+    }\n+\n+    private static void writeCodeToFile(String code, Path path) {\n+        Utils.printlnVerbose(\"File: \" + path);\n+\n+        \/\/ Ensure directory of the file exists.\n+        Path dir = path.getParent();\n+        try {\n+            Files.createDirectories(dir);\n+        } catch (Exception e) {\n+            throw new CompileFrameworkException(\"Could not create directory: \" + dir, e);\n+        }\n+\n+        \/\/ Write to file.\n+        try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n+            writer.write(code);\n+        } catch (Exception e) {\n+            throw new CompileFrameworkException(\"Could not write file: \" + path, e);\n+        }\n+    }\n+\n+    \/**\n+     * Write each source in {@code sources} to a file inside {@code sourceDir}.\n+     *\/\n+    private static List<Path> writeSourcesToFiles(List<SourceCode> sources, Path sourceDir) {\n+        List<Path> storedFiles = new ArrayList<>();\n+        for (SourceCode sourceCode : sources) {\n+            Path path = sourceDir.resolve(sourceCode.filePathName());\n+            writeCodeToFile(sourceCode.code(), path);\n+            storedFiles.add(path);\n+        }\n+        return storedFiles;\n+    }\n+\n+    \/**\n+     * Execute a given compilation, given as a {@code command}.\n+     *\/\n+    private static void executeCompileCommand(List<String> command) {\n+        Utils.printlnVerbose(\"Compile command: \" + String.join(\" \", command));\n+\n+        ProcessBuilder builder = new ProcessBuilder(command);\n+        builder.redirectErrorStream(true);\n+\n+        String output;\n+        int exitCode;\n+        try {\n+            Process process = builder.start();\n+            boolean exited = process.waitFor(COMPILE_TIMEOUT, TimeUnit.SECONDS);\n+            if (!exited) {\n+                process.destroyForcibly();\n+                System.out.println(\"Timeout: compile command: \" + String.join(\" \", command));\n+                throw new InternalCompileFrameworkException(\"Process timeout: compilation took too long.\");\n+            }\n+            output = new String(process.getInputStream().readAllBytes(), StandardCharsets.UTF_8);\n+            exitCode = process.exitValue();\n+        } catch (IOException e) {\n+            throw new InternalCompileFrameworkException(\"IOException during compilation\", e);\n+        } catch (InterruptedException e) {\n+            throw new CompileFrameworkException(\"InterruptedException during compilation\", e);\n+        }\n+\n+        if (exitCode != 0 || !output.isEmpty()) {\n+            System.err.println(\"Compilation failed.\");\n+            System.err.println(\"Exit code: \" + exitCode);\n+            System.err.println(\"Output: '\" + output + \"'\");\n+            throw new CompileFrameworkException(\"Compilation failed.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/Compile.java","additions":202,"deletions":0,"binary":false,"changes":202,"status":"added"},{"patch":"@@ -0,0 +1,169 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ * This is the entry-point for the Compile Framework. Its purpose it to allow\n+ * compilation and execution of Java and Jasm sources generated at runtime.\n+ *\n+ * <p> Please reference the README.md for more details and examples.\n+ *\/\n+public class CompileFramework {\n+    private final List<SourceCode> javaSources = new ArrayList<>();\n+    private final List<SourceCode> jasmSources = new ArrayList<>();\n+    private final Path sourceDir = Utils.makeUniqueDir(\"compile-framework-sources-\");\n+    private final Path classesDir = Utils.makeUniqueDir(\"compile-framework-classes-\");\n+    private ClassLoader classLoader;\n+\n+    \/**\n+     * Set up a new Compile Framework instance, for a new compilation unit.\n+     *\/\n+    public CompileFramework() {}\n+\n+    \/**\n+     * Add a Java source to the compilation.\n+     *\n+     * @param className Class name of the class (e.g. \"{@code p.xyz.YXZ}\").\n+     * @param code Java code for the class, in the form of a {@link String}.\n+     *\/\n+    public void addJavaSourceCode(String className, String code) {\n+        javaSources.add(new SourceCode(className, \"java\", code));\n+    }\n+\n+    \/**\n+     * Add a Jasm source to the compilation.\n+     *\n+     * @param className Class name of the class (e.g. \"{@code p.xyz.YXZ}\").\n+     * @param code Jasm code for the class, in the form of a {@link String}.\n+     *\/\n+    public void addJasmSourceCode(String className, String code) {\n+        jasmSources.add(new SourceCode(className, \"jasm\", code));\n+    }\n+\n+    \/**\n+     * Compile all sources: store the sources to the {@link sourceDir} directory, compile\n+     * Java and Jasm sources and store the generated class-files in the {@link classesDir}\n+     * directory.\n+     *\/\n+    public void compile() {\n+        if (classLoader != null) {\n+            throw new CompileFrameworkException(\"Cannot compile twice!\");\n+        }\n+\n+        Utils.printlnVerbose(\"------------------ CompileFramework: SourceCode -------------------\");\n+        Utils.printlnVerbose(sourceCodesAsString(jasmSources));\n+        Utils.printlnVerbose(sourceCodesAsString(javaSources));\n+\n+        System.out.println(\"------------------ CompileFramework: Compilation ------------------\");\n+        System.out.println(\"Source directory: \" + sourceDir);\n+        System.out.println(\"Classes directory: \" + classesDir);\n+\n+        Compile.compileJasmSources(jasmSources, sourceDir, classesDir);\n+        Compile.compileJavaSources(javaSources, sourceDir, classesDir);\n+        classLoader = ClassLoaderBuilder.build(classesDir);\n+    }\n+\n+    private static String sourceCodesAsString(List<SourceCode> sourceCodes) {\n+        StringBuilder builder = new StringBuilder();\n+        for (SourceCode sourceCode : sourceCodes) {\n+            builder.append(\"SourceCode: \").append(sourceCode.filePathName()).append(System.lineSeparator());\n+            builder.append(sourceCode.code()).append(System.lineSeparator());\n+        }\n+        return builder.toString();\n+    }\n+\n+    \/**\n+     * Access a class from the compiled code.\n+     *\n+     * @param name Name of the class to be retrieved.\n+     * @return The class corresponding to the {@code name}.\n+     *\/\n+    public Class<?> getClass(String name) {\n+        try {\n+            return Class.forName(name, true, classLoader);\n+        } catch (ClassNotFoundException e) {\n+            throw new CompileFrameworkException(\"Class not found:\", e);\n+        }\n+    }\n+\n+    \/**\n+     * Invoke a static method from the compiled code.\n+     *\n+     * @param className Class name of a compiled class.\n+     * @param methodName Method name of the class.\n+     * @param args List of arguments for the method invocation.\n+     * @return Return value from the invocation.\n+     *\/\n+    public Object invoke(String className, String methodName, Object[] args) {\n+        Method method = findMethod(className, methodName);\n+\n+        try {\n+            return method.invoke(null, args);\n+        } catch (IllegalAccessException e) {\n+            throw new CompileFrameworkException(\"Illegal access:\", e);\n+        } catch (InvocationTargetException e) {\n+            throw new CompileFrameworkException(\"Invocation target:\", e);\n+        }\n+    }\n+\n+    private Method findMethod(String className, String methodName) {\n+        Class<?> c = getClass(className);\n+        Method[] methods = c.getDeclaredMethods();\n+        Method method = null;\n+\n+        for (Method m : methods) {\n+            if (m.getName().equals(methodName)) {\n+                if (method != null) {\n+                  throw new CompileFrameworkException(\"Method name \\\"\" + methodName + \"\\\" not unique in class \\n\" + className + \"\\\".\");\n+                }\n+                method = m;\n+            }\n+        }\n+\n+        if (method == null) {\n+            throw new CompileFrameworkException(\"Method \\\"\" + methodName + \"\\\" not found in class \\n\" + className + \"\\\".\");\n+        }\n+\n+        return method;\n+    }\n+\n+    \/**\n+     * Returns the classpath appended with the {@link classesDir}, where\n+     * the compiled classes are stored. This enables another VM to load\n+     * the compiled classes. Note, the string is already backslash escaped,\n+     * so that Windows paths which use backslashes can be used directly\n+     * as strings.\n+     *\n+     * @return Classpath appended with the path to the compiled classes.\n+     *\/\n+    public String getEscapedClassPathOfCompiledClasses() {\n+        return Utils.getEscapedClassPathAndClassesDir(classesDir);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/CompileFramework.java","additions":169,"deletions":0,"binary":false,"changes":169,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+\/**\n+ * Exception thrown in the Compilation Framework. Most likely, the user is responsible for the failure.\n+ *\/\n+public class CompileFrameworkException extends RuntimeException {\n+    public CompileFrameworkException(String message) {\n+        super(\"Exception in Compile Framework:\" + System.lineSeparator() + message);\n+    }\n+\n+    public CompileFrameworkException(String message, Throwable e) {\n+        super(\"Exception in Compile Framework:\" + System.lineSeparator() + message, e);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/CompileFrameworkException.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+\/**\n+ * Internal exception thrown in Compilation Framework. Most likely, this is due to a bug in the CompileFramework.\n+ *\/\n+public class InternalCompileFrameworkException extends RuntimeException {\n+    public InternalCompileFrameworkException(String message) {\n+        super(\"Internal exception in Compile Framework, please file a bug:\" + System.lineSeparator() + message);\n+    }\n+\n+    public InternalCompileFrameworkException(String message, Throwable e) {\n+        super(\"Internal exception in Compile Framework, please file a bug:\" + System.lineSeparator() + message, e);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/InternalCompileFrameworkException.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+# Compile Framework\n+The Compile Framework allows the compilation and execution of Java and Jasm sources, which are generated at runtime.\n+\n+## Motivation\n+We want to be able to generate Java and Jasm source code in the form of Strings at runtime, then compile them, load the classes and invoke some methods. This allows us to write more elaborate tests. For example small dedicated fuzzers that are targetted at some specific compiler optimization.\n+\n+This is more powerful than hand-written tests, as we can generalize tests and cover more examples. It can also be better than a script-generated test: those are static and often the script is not integrated with the generated test. Another limitation of a generator script is that it is only run once, creating fixed static tests. Compilation at runtime allows us to randomly generate tests each time.\n+\n+Of course we could compile at runtime without this framework, but it abstracts away the complexity of compilation, and allows the test-writer to focus on the generation of the source code.\n+\n+## How to Use the Compile Framework\n+\n+Please reference the examples found in [examples](..\/..\/..\/testlibrary_tests\/compile_framework\/examples\/). Some basic tests can be found in [tests](..\/..\/..\/testlibrary_tests\/compile_framework\/tests\/).\n+\n+Here a very simple example:\n+\n+    \/\/ Create a new CompileFramework instance.\n+    CompileFramework compileFramework = new CompileFramework();\n+\n+    \/\/ Add a java source file.\n+    compileFramework.addJavaSourceCode(\"XYZ\", \"<your XYZ definition string>\");\n+\n+    \/\/ Compile the source file.\n+    compileFramework.compile();\n+\n+    \/\/ Object returnValue = XYZ.test(5);\n+    Object returnValue = compileFramework.invoke(\"XYZ\", \"test\", new Object[] {5});\n+\n+### Creating a new Compile Framework Instance\n+\n+First, one must create a `new CompileFramework()`, which creates two directories: a sources and a classes directory (see `sourcesDir` and `classesDir` in [CompileFramework](.\/CompileFramework.java)). The sources directory is where all the sources are placed by the Compile Framework, and the classes directory is where all the compiled classes are placed by the Compile Framework.\n+\n+The Compile Framework prints the names of the directories, they are subdirectories of the JTREG scratch directory `JTWork\/scratch`.\n+\n+### Adding Sources to the Compilation\n+\n+Java and Jasm sources can be added to the compilation using `compileFramework.addJavaSourceCode()` and `compileFramework.addJasmSourceCode()`. The source classes can depend on each other, and they can also use the IR Framework ([IRFrameworkJavaExample](..\/..\/..\/testlibrary_tests\/compile_framework\/examples\/IRFrameworkJavaExample.java)).\n+\n+When using the IR Framework, or any other library that needs to be compiled, it can be necessary to explicitly let JTREG compile that library. For example with `@compile ..\/..\/..\/compiler\/lib\/ir_framework\/TestFramework.java`. Otherwise, the corresponding class files may not be available, and a corresponding failure will be encounter at class loading.\n+\n+### Compiling\n+\n+All sources are compiled with `compileFramework.compile()`. First, the sources are stored to the sources directory, then compiled, and then the class-files stored in the classes directory. The respective directory names are printed, so that the user can easily access the generated files for debugging.\n+\n+### Interacting with the Compiled Code\n+\n+The compiled code is then loaded with a `ClassLoader`. The classes can be accessed directly with `compileFramework.getClass(name)`. Specific methods can also directly be invoked with `compileFramework.invoke()`.\n+\n+Should one require the modified classpath that includes the compiled classes, this is available with `compileFramework.getEscapedClassPathOfCompiledClasses()`. This can be necessary if the test launches any other VMs that also access the compiled classes. This is for example necessary when using the IR Framework.\n+\n+### Running the Compiled Code in a New VM\n+\n+One can also run the compiled code in a new VM. For this, one has to set the classpath with `compileFramework.getEscapedClassPathOfCompiledClasses()` ([RunWithFlagsExample](..\/..\/..\/testlibrary_tests\/compile_framework\/examples\/RunWithFlagsExample.java))\n+\n+### Verbose Printing\n+\n+For debugging purposes, one can enable verbose printing, with `-DCompileFrameworkVerbose=true`.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/README.md","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+\/**\n+ * This class represents the source code of a specific class.\n+ *\/\n+record SourceCode(String className, String extension, String code) {\n+    public String filePathName() {\n+        StringBuilder builder = new StringBuilder();\n+        builder.append(className.replace('.','\/')).append(\".\").append(extension);\n+        return builder.toString();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/SourceCode.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.compile_framework;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.Path;\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/**\n+ * Utility class, with many helper methods for the Compile Framework.\n+ *\/\n+class Utils {\n+    private static final boolean VERBOSE = Boolean.getBoolean(\"CompileFrameworkVerbose\");\n+\n+    \/**\n+     * Verbose printing, enabled with {@code -DCompileFrameworkVerbose=true}.\n+     *\/\n+    public static void printlnVerbose(String s) {\n+        if (VERBOSE) {\n+            System.out.println(s);\n+        }\n+    }\n+\n+    \/**\n+     * Create a temporary directory with a unique name to avoid collisions\n+     * with multi-threading. Used to create the sources and classes directories. Since they\n+     * are unique even across threads, the Compile Framework is multi-threading safe, i.e.\n+     * it does not have collisions if two instances generate classes with the same name.\n+     *\/\n+    public static Path makeUniqueDir(String prefix) {\n+        try {\n+            return Files.createTempDirectory(Paths.get(\".\"), prefix);\n+        } catch (Exception e) {\n+            throw new InternalCompileFrameworkException(\"Could not set up temporary directory\", e);\n+        }\n+    }\n+\n+    \/**\n+     * Get all paths in the classpath.\n+     *\/\n+    public static String[] getClassPaths() {\n+        String separator = File.pathSeparator;\n+        return System.getProperty(\"java.class.path\").split(separator);\n+    }\n+\n+    \/**\n+     * Return the classpath, appended with the {@code classesDir}.\n+     *\/\n+    public static String getEscapedClassPathAndClassesDir(Path classesDir) {\n+        String cp = System.getProperty(\"java.class.path\") +\n+                    File.pathSeparator +\n+                    classesDir.toAbsolutePath();\n+        \/\/ Escape the backslash for Windows paths. We are using the path in the\n+        \/\/ command-line and Java code, so we always want it to be escaped.\n+        return cp.replace(\"\\\\\", \"\\\\\\\\\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/compile_framework\/Utils.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -78,0 +78,1 @@\n+            testMemorySwapLimitSanity();\n@@ -156,0 +157,25 @@\n+    \/*\n+     * This test verifies that no confusingly large positive numbers get printed on\n+     * systems with swapaccount=0 kernel option. On some systems -2 were converted\n+     * to unsigned long and printed that way. Ensure this oddity doesn't occur.\n+     *\/\n+    private static void testMemorySwapLimitSanity() throws Exception {\n+        String valueToSet = \"500m\";\n+        String expectedTraceValue = \"524288000\";\n+        Common.logNewTestCase(\"memory swap sanity: \" + valueToSet);\n+\n+        DockerRunOptions opts = Common.newOpts(imageName, \"PrintContainerInfo\");\n+        Common.addWhiteBoxOpts(opts);\n+        opts.addDockerOpts(\"--memory=\" + valueToSet);\n+        opts.addDockerOpts(\"--memory-swap=\" + valueToSet);\n+\n+        String neg2InUnsignedLong = \"18446744073709551614\";\n+\n+        Common.run(opts)\n+            .shouldMatch(\"Memory Limit is:.*\" + expectedTraceValue)\n+            \/\/ Either for cgroup v1: a_1) same as memory limit, or b_1) -2 on systems with swapaccount=0\n+            \/\/ Either for cgroup v2: a_2) 0, or b_2) -2 on systems with swapaccount=0\n+            .shouldMatch(\"Memory and Swap Limit is:.*(\" + expectedTraceValue + \"|-2|0)\")\n+            .shouldNotMatch(\"Memory and Swap Limit is:.*\" + neg2InUnsignedLong);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-        \/\/ we only have Memory and Swap Limit is: <huge integer> in the output\n+        \/\/ we only have 'Memory and Swap Limit is: -2' in the output\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryWithCgroupV1.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-import java.lang.management.GarbageCollectorMXBean;\n+import java.lang.invoke.VarHandle;\n@@ -186,0 +186,35 @@\n+class PerfCounterSnapshot {\n+    private static long getMinCapacity(String ns) throws Exception {\n+        return PerfCounters.findByName(ns + \".minCapacity\").longValue();\n+    }\n+\n+    private static long getCapacity(String ns) throws Exception {\n+        return PerfCounters.findByName(ns + \".capacity\").longValue();\n+    }\n+\n+    private static long getMaxCapacity(String ns) throws Exception {\n+        return PerfCounters.findByName(ns + \".maxCapacity\").longValue();\n+    }\n+\n+    private static long getUsed(String ns) throws Exception {\n+        return PerfCounters.findByName(ns + \".used\").longValue();\n+    }\n+\n+    public long minCapacity;\n+    public long maxCapacity;\n+    public long capacity;\n+    public long used;\n+\n+    public void get(String ns) throws Exception {\n+        minCapacity = getMinCapacity(ns);\n+        maxCapacity = getMaxCapacity(ns);\n+        used = getUsed(ns);\n+        capacity = getCapacity(ns);\n+    }\n+\n+    public boolean consistentWith(PerfCounterSnapshot other) {\n+        return (minCapacity == other.minCapacity) && (maxCapacity == other.maxCapacity) &&\n+            (used == other.used) && (capacity == other.capacity);\n+    }\n+}\n+\n@@ -189,1 +224,0 @@\n-    private static final List<GarbageCollectorMXBean> gcBeans = ManagementFactoryHelper.getGarbageCollectorMXBeans();\n@@ -207,26 +241,22 @@\n-        long gcCountBefore;\n-        long gcCountAfter;\n-        long minCapacity;\n-        long maxCapacity;\n-        long capacity;\n-        long used;\n-\n-        \/\/ The perf counter values are updated during GC and to be able to\n-        \/\/ do the assertions below we need to ensure that the values are from\n-        \/\/ the same GC cycle.\n-        do {\n-            gcCountBefore = currentGCCount();\n-\n-            minCapacity = getMinCapacity(ns);\n-            maxCapacity = getMaxCapacity(ns);\n-            capacity = getCapacity(ns);\n-            used = getUsed(ns);\n-\n-            gcCountAfter = currentGCCount();\n-            assertGTE(gcCountAfter, gcCountBefore);\n-        } while(gcCountAfter > gcCountBefore);\n-\n-        assertGTE(minCapacity, 0L);\n-        assertGTE(used, minCapacity);\n-        assertGTE(capacity, used);\n-        assertGTE(maxCapacity, capacity);\n+        PerfCounterSnapshot snap1 = new PerfCounterSnapshot();\n+        PerfCounterSnapshot snap2 = new PerfCounterSnapshot();\n+\n+        final int MaxAttempts = 10;\n+\n+        for (int attempts = 0; ; attempts++) {\n+            snap1.get(ns);\n+            VarHandle.fullFence();\n+            snap2.get(ns);\n+\n+            if (snap1.consistentWith(snap2)) {\n+              \/\/ Got a consistent snapshot for examination.\n+              break;\n+            } else if (attempts == MaxAttempts) {\n+              throw new Exception(\"Failed to get stable reading of metaspace performance counters after \" + attempts + \" tries\");\n+            }\n+        }\n+\n+        assertGTE(snap1.minCapacity, 0L);\n+        assertGTE(snap1.used, snap1.minCapacity);\n+        assertGTE(snap1.capacity, snap1.used);\n+        assertGTE(snap1.maxCapacity, snap1.capacity);\n@@ -246,1 +276,2 @@\n-        long before = getUsed(ns);\n+        PerfCounterSnapshot before = new PerfCounterSnapshot();\n+        before.get(ns);\n@@ -249,1 +280,2 @@\n-        long after = getUsed(ns);\n+        PerfCounterSnapshot after = new PerfCounterSnapshot();\n+        after.get(ns);\n@@ -251,1 +283,1 @@\n-        assertGT(after, before);\n+        assertGT(after.used, before.used);\n@@ -270,24 +302,0 @@\n-\n-    private static long getMinCapacity(String ns) throws Exception {\n-        return PerfCounters.findByName(ns + \".minCapacity\").longValue();\n-    }\n-\n-    private static long getCapacity(String ns) throws Exception {\n-        return PerfCounters.findByName(ns + \".capacity\").longValue();\n-    }\n-\n-    private static long getMaxCapacity(String ns) throws Exception {\n-        return PerfCounters.findByName(ns + \".maxCapacity\").longValue();\n-    }\n-\n-    private static long getUsed(String ns) throws Exception {\n-        return PerfCounters.findByName(ns + \".used\").longValue();\n-    }\n-\n-    private static long currentGCCount() {\n-        long gcCount = 0;\n-        for (GarbageCollectorMXBean bean : gcBeans) {\n-            gcCount += bean.getCollectionCount();\n-        }\n-        return gcCount;\n-    }\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspacePerfCounters.java","additions":63,"deletions":55,"binary":false,"changes":118,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+            \"-Xmx1g\",\n@@ -83,3 +84,3 @@\n-        \/\/ Figure out suitable number of workers (~1 per gig).\n-        int gigsOfAllocation = (int) Math.ceil((double) allocationSize \/ G);\n-        int numWorkers = Math.min(gigsOfAllocation, Runtime.getRuntime().availableProcessors());\n+        \/\/ Figure out suitable number of workers (~1 per 100M).\n+        int allocationChunks = (int) Math.ceil((double) allocationSize \/ (100 * M));\n+        int numWorkers = Math.min(allocationChunks, Runtime.getRuntime().availableProcessors());\n","filename":"test\/hotspot\/jtreg\/gc\/stress\/TestStressG1Uncommit.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @requires vm.flagless\n@@ -45,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"CondyUsesIndyBSM\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"CondyUsesIndyBSM\");\n@@ -53,1 +52,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"IndyUsesCondyBSM\");\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"IndyUsesCondyBSM\");\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/BadBSMUseTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @requires vm.flagless\n@@ -45,1 +44,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-Xverify:all\",\n@@ -53,1 +52,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"-Xverify:all\",\n@@ -62,1 +61,1 @@\n-        pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+        pb = ProcessTools.createTestJavaProcessBuilder(\"-Xverify:all\",\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyLDCTest.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @requires vm.flagless\n@@ -41,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"-Xverify:all\",\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"-Xverify:all\",\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/CondyNewInvokeSpecialTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @requires vm.flagless\n@@ -46,1 +45,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/escapeAnalysis\/TestEscapeCondy.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @requires vm.flagless\n@@ -41,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createLimitedTestJavaProcessBuilder(\"Example\");\n+        ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\"Example\");\n@@ -55,1 +54,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/runtime\/condy\/staticInit\/TestInitException.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.CombinedJavaJasmExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+\n+\/**\n+ * This test shows a compilation of multiple Java and Jasm source code files.\n+ * In this example, the classes even reference each other.\n+ *\/\n+public class CombinedJavaJasmExample {\n+\n+    \/\/ Generate a source jasm file as String\n+    public static String generateJasm() {\n+        return \"\"\"\n+               package p\/xyz;\n+\n+               super public class XYZJasm {\n+                   public static Method test:\"(I)I\"\n+                   stack 20 locals 20\n+                   {\n+                       iload_0;\n+                       iconst_2;\n+                       imul;\n+                       invokestatic Method p\/xyz\/XYZJava.\"mul3\":\"(I)I\";\n+                       ireturn;\n+                   }\n+\n+                   public static Method mul5:\"(I)I\"\n+                   stack 20 locals 20\n+                   {\n+                       iload_0;\n+                       ldc 5;\n+                       imul;\n+                       ireturn;\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    \/\/ Generate a source java file as String\n+    public static String generateJava() {\n+        return \"\"\"\n+               package p.xyz;\n+\n+               public class XYZJava {\n+                   public static int test(int i) {\n+                       return p.xyz.XYZJasm.mul5(i * 7);\n+                   }\n+\n+                   public static int mul3(int i) {\n+                       return i * 3;\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Generate files.\n+        comp.addJasmSourceCode(\"p.xyz.XYZJasm\", generateJasm());\n+        comp.addJavaSourceCode(\"p.xyz.XYZJava\", generateJava());\n+\n+        \/\/ Compile the source files.\n+        comp.compile();\n+\n+        test(comp, \"p.xyz.XYZJasm\", \"test\", 11, 11 * 2 * 3);\n+        test(comp, \"p.xyz.XYZJava\", \"test\", 13, 13 * 7 * 5);\n+\n+        System.out.println(\"Success.\");\n+    }\n+\n+    public static void test(CompileFramework comp, String className, String methodName, int input, int expected) {\n+        Object ret = comp.invoke(className, methodName, new Object[] {input});\n+\n+        \/\/ Extract return value of invocation, verify its value.\n+        int i = (int)ret;\n+        System.out.println(\"Result of call: \" + i + \" vs expected: \" + expected);\n+        if (i != expected) {\n+            throw new RuntimeException(\"wrong value: \" + i);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/CombinedJavaJasmExample.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework together with the IR Framework (i.e. TestFramework).\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @compile ..\/..\/..\/compiler\/lib\/ir_framework\/TestFramework.java\n+ * @run driver compile_framework.examples.IRFrameworkJavaExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.Platform;\n+import java.lang.reflect.InvocationTargetException;\n+\n+\/**\n+ * This test shows that the IR verification can be done on code compiled by the Compile Framework.\n+ * The \"@compile\" command for JTREG is required so that the IRFramework is compiled, other javac\n+ * might not compile it because it is not present in the class, only in the dynamically compiled\n+ * code.\n+ * <p>\n+ * Additionally, we must set the classpath for the Test-VM, so that it has access to all compiled\n+ * classes (see {@link CompileFramework#getEscapedClassPathOfCompiledClasses}).\n+ *\/\n+public class IRFrameworkJavaExample {\n+\n+    public static void main(String[] args) {\n+        testX1();\n+        testX2();\n+    }\n+\n+    \/\/ Generate a source java file as String\n+    public static String generateX1(CompileFramework comp) {\n+        return String.format(\"\"\"\n+               import compiler.lib.ir_framework.*;\n+\n+               public class X1 {\n+                   public static void main(String args[]) {\n+                       TestFramework framework = new TestFramework(X1.class);\n+                       framework.addFlags(\"-classpath\", \"%s\");\n+                       framework.start();\n+                   }\n+\n+                   @Test\n+                   \/\/@IR(counts = {IRNode.LOAD_VECTOR_F, \"> 0\"},\n+                   \/\/    applyIfCPUFeatureOr = {\"sse2\", \"true\", \"asimd\", \"true\"})\n+                   static float[] test() {\n+                       float[] a = new float[1024*8];\n+                       for (int i = 0; i < a.length; i++) {\n+                           a[i]++;\n+                       }\n+                       return a;\n+                   }\n+               }\n+               \"\"\", comp.getEscapedClassPathOfCompiledClasses());\n+    }\n+\n+    static void testX1() {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJavaSourceCode(\"X1\", generateX1(comp));\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ X1.main();\n+        comp.invoke(\"X1\", \"main\", new Object[] {null});\n+    }\n+\n+    \/\/ Generate a source java file as String\n+    public static String generateX2(CompileFramework comp) {\n+        \/\/ Example with conflicting \"@IR\" rules -> expect a IRViolationException.\n+        return String.format(\"\"\"\n+               import compiler.lib.ir_framework.*;\n+\n+               public class X2 {\n+                   public static void main(String args[]) {\n+                       TestFramework framework = new TestFramework(X2.class);\n+                       framework.addFlags(\"-classpath\", \"%s\");\n+                       framework.start();\n+                   }\n+\n+                   @Test\n+                   @IR(counts = {IRNode.LOAD, \"> 0\"})\n+                   @IR(failOn = IRNode.LOAD)\n+                   static void test() {\n+                   }\n+               }\n+               \"\"\", comp.getEscapedClassPathOfCompiledClasses());\n+    }\n+\n+    static void testX2() {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJavaSourceCode(\"X2\", generateX2(comp));\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ Load the compiled class.\n+        Class<?> c = comp.getClass(\"X2\");\n+\n+        \/\/ Invoke the \"X2.main\" method from the compiled and loaded class.\n+        try {\n+            c.getDeclaredMethod(\"main\", new Class[] { String[].class }).invoke(null, new Object[] { null });\n+\n+            \/\/ Check if IR framework is expected to execute the IR rules.\n+            if (Utils.getTestJavaOpts().length == 0 && Platform.isDebugBuild() && !Platform.isInt() && !Platform.isComp()) {\n+                throw new RuntimeException(\"IRViolationException expected.\");\n+            } else {\n+                System.out.println(\"Got no IRViolationException, but was also not expected.\");\n+            }\n+        } catch (NoSuchMethodException e) {\n+            throw new RuntimeException(\"No such method:\", e);\n+        } catch (IllegalAccessException e) {\n+            throw new RuntimeException(\"Illegal access:\", e);\n+        } catch (InvocationTargetException e) {\n+            Throwable t = e.getCause();\n+            if (t == null) {\n+                throw new RuntimeException(\"IRViolationException expected:\", e);\n+            }\n+            if (!t.getClass().getSimpleName().equals(\"IRViolationException\")) {\n+                throw new RuntimeException(\"IRViolationException expected:\", e);\n+            }\n+            System.out.println(\"Success, we got a IRViolationException.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/IRFrameworkJavaExample.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver comile_framework.examples.MultiFileJasmExample\n+ *\/\n+\n+package comile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+import java.io.StringWriter;\n+import java.io.PrintWriter;\n+\n+\/**\n+ * This test shows a compilation of multiple jasm source code files.\n+ *\/\n+public class MultiFileJasmExample {\n+\n+    \/\/ Generate a source jasm file as String\n+    public static String generate(int i) {\n+        StringWriter writer = new StringWriter();\n+        PrintWriter out = new PrintWriter(writer);\n+        out.println(\"package p\/xyz;\");\n+        out.println(\"\");\n+        out.println(\"super public class XYZ\" + i + \" {\");\n+        out.println(\"    public static Method test:\\\"(I)I\\\"\");\n+        out.println(\"    stack 20 locals 20\");\n+        out.println(\"    {\");\n+        out.println(\"        iload_0;\");\n+        out.println(\"        iconst_2;\"); \/\/ every call multiplies by 2, in total 2^10 = 1024\n+        out.println(\"        imul;\");\n+        if (i != 0) {\n+            out.println(\"        invokestatic Method p\/xyz\/XYZ\" + (i-1) + \".\\\"test\\\":\\\"(I)I\\\";\");\n+        }\n+        out.println(\"        ireturn;\");\n+        out.println(\"    }\");\n+        out.println(\"}\");\n+        return writer.toString();\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Generate 10 files.\n+        for (int i = 0; i < 10; i++) {\n+            comp.addJasmSourceCode(\"p.xyz.XYZ\" + i, generate(i));\n+        }\n+\n+        \/\/ Compile the source files.\n+        comp.compile();\n+\n+        \/\/ Object ret = XYZ9.test(5);\n+        Object ret = comp.invoke(\"p.xyz.XYZ9\", \"test\", new Object[] { 5 });\n+\n+        \/\/ Extract return value of invocation, verify its value.\n+        int i = (int)ret;\n+        System.out.println(\"Result of call: \" + i);\n+        if (i != 5 * 1024) {\n+            throw new RuntimeException(\"wrong value: \" + i);\n+        }\n+        System.out.println(\"Success.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/MultiFileJasmExample.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.MultiFileJavaExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+import java.io.StringWriter;\n+import java.io.PrintWriter;\n+\n+\/**\n+ * This test shows a compilation of multiple java source code files.\n+ *\/\n+public class MultiFileJavaExample {\n+\n+    \/\/ Generate a source java file as String\n+    public static String generate(int i) {\n+        StringWriter writer = new StringWriter();\n+        PrintWriter out = new PrintWriter(writer);\n+        out.println(\"package p.xyz;\");\n+        out.println(\"\");\n+        out.println(\"public class XYZ\" + i + \" {\");\n+        if (i > 0) {\n+            out.println(\"    public XYZ\" + (i - 1) + \" xyz = new XYZ\" + (i - 1) + \"();\");\n+        }\n+        out.println(\"\");\n+        out.println(\"    public static Object test() {\");\n+        out.println(\"        return new XYZ\" + i + \"();\");\n+        out.println(\"    }\");\n+        out.println(\"}\");\n+        return writer.toString();\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Generate 10 files.\n+        for (int i = 0; i < 10; i++) {\n+            comp.addJavaSourceCode(\"p.xyz.XYZ\" + i, generate(i));\n+        }\n+\n+        \/\/ Compile the source files.\n+        comp.compile();\n+\n+        \/\/ Object ret = XYZ9.test();\n+        Object ret = comp.invoke(\"p.xyz.XYZ9\", \"test\", new Object[] {});\n+\n+        if (!ret.getClass().getSimpleName().equals(\"XYZ9\")) {\n+            throw new RuntimeException(\"wrong result:\" + ret);\n+        }\n+        System.out.println(\"Success.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/MultiFileJavaExample.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework and run the compiled code with additional flags\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.RunWithFlagsExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+\/**\n+ * This test shows how the generated code can be compiled and invoked in a new VM. This allows\n+ * the execution of the code with additional VM flags and options.\n+ * <p>\n+ * The new VM must be able to locate the class files of the newly compiled code. For this we\n+ * set the class path using {@link CompileFramework#getEscapedClassPathOfCompiledClasses}.\n+ *\/\n+public class RunWithFlagsExample {\n+\n+    private static String generate() {\n+        return \"\"\"\n+               package p.xyz;\n+\n+               public class X {\n+                   public static void main(String args[]) {\n+                       System.out.println(\"Hello world!\");\n+                       System.out.println(System.getProperty(\"MyMessage\", \"fail\"));\n+                       System.err.println(args[0]);\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a Java source file.\n+        comp.addJavaSourceCode(\"p.xyz.X\", generate());\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ Build command line.\n+        String[] command = {\n+            \/\/ Set the classpath to include our newly compiled class.\n+            \"-classpath\",\n+            comp.getEscapedClassPathOfCompiledClasses(),\n+            \/\/ Pass additional flags here.\n+            \/\/ \"-Xbatch\" is a harmless VM flag, so this example runs everywhere without issues.\n+            \"-Xbatch\",\n+            \/\/ We can also pass properties like \"MyMessage\".\n+            \"-DMyMessage=hello_world\",\n+            \"p.xyz.X\",\n+            \"hello_arg\"\n+        };\n+\n+        \/\/ Execute the command, and capture the output.\n+        \/\/ The JTREG Java and VM options are automatically passed to the test VM.\n+        OutputAnalyzer analyzer = ProcessTools.executeTestJava(command);\n+\n+        \/\/ Verify output.\n+        analyzer.shouldHaveExitValue(0);\n+        analyzer.stdoutContains(\"Hello world!\");\n+        analyzer.stdoutContains(\"hello_world\");\n+        analyzer.stdoutContains(\"hello_arg\");\n+\n+        \/\/ Print output to stderr.\n+        analyzer.reportDiagnosticSummary();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/RunWithFlagsExample.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.SimpleJasmExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+\n+\/**\n+ * This test shows a simple compilation of java source code, and its invocation.\n+ *\/\n+public class SimpleJasmExample {\n+\n+    \/\/ Generate a source jasm file as String\n+    public static String generate() {\n+        return \"\"\"\n+               super public class XYZ {\n+                   public static Method test:\"(I)I\"\n+                   stack 20 locals 20\n+                   {\n+                       iload_0;\n+                       iconst_2;\n+                       imul;\n+                       ireturn;\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        String src = generate();\n+        comp.addJasmSourceCode(\"XYZ\", src);\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ Object ret = XYZ.test(5);\n+        Object ret = comp.invoke(\"XYZ\", \"test\", new Object[] {5});\n+\n+        \/\/ Extract return value of invocation, verify its value.\n+        int i = (int)ret;\n+        System.out.println(\"Result of call: \" + i);\n+        if (i != 10) {\n+            throw new RuntimeException(\"wrong value: \" + i);\n+        }\n+        System.out.println(\"Success.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/SimpleJasmExample.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test to use the Compile Framework.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.examples.SimpleJavaExample\n+ *\/\n+\n+package compile_framework.examples;\n+\n+import compiler.lib.compile_framework.*;\n+\n+\/**\n+ * This test shows a simple compilation of java source code, and its invocation.\n+ *\/\n+public class SimpleJavaExample {\n+\n+    \/\/ Generate a source java file as String\n+    public static String generate() {\n+        return \"\"\"\n+               public class XYZ {\n+                   public static int test(int i) {\n+                       System.out.println(\"Hello from XYZ.test: \" + i);\n+                       return i * 2;\n+                   }\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJavaSourceCode(\"XYZ\", generate());\n+\n+        \/\/ Compile the source file.\n+        comp.compile();\n+\n+        \/\/ Object ret = XYZ.test(5);\n+        Object ret = comp.invoke(\"XYZ\", \"test\", new Object[] {5});\n+\n+        \/\/ Extract return value of invocation, verify its value.\n+        int i = (int)ret;\n+        System.out.println(\"Result of call: \" + i);\n+        if (i != 10) {\n+            throw new RuntimeException(\"wrong value: \" + i);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/examples\/SimpleJavaExample.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test with failing jasm compilation.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.tests.TestBadJasmCompilation\n+ *\/\n+\n+package compile_framework.tests;\n+\n+import compiler.lib.compile_framework.*;\n+\n+public class TestBadJasmCompilation {\n+\n+    \/\/ Generate a source jasm file as String\n+    public static String generate() {\n+        return \"\"\"\n+               super public class XYZ {\n+                   some bad code\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJasmSourceCode(\"XYZ\", generate());\n+\n+        try {\n+            \/\/ Compile the source file.\n+            comp.compile();\n+            throw new RuntimeException(\"Expected compilation to fail.\");\n+        } catch (CompileFrameworkException e) {\n+            System.out.println(\"Success, expected compilation to fail.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/tests\/TestBadJasmCompilation.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test with failing java compilation.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.tests.TestBadJavaCompilation\n+ *\/\n+\n+package compile_framework.tests;\n+\n+import compiler.lib.compile_framework.*;\n+\n+public class TestBadJavaCompilation {\n+\n+    \/\/ Generate a source java file as String\n+    public static String generate() {\n+        return \"\"\"\n+               public class XYZ {\n+                   some bad code\n+               }\n+               \"\"\";\n+    }\n+\n+    public static void main(String[] args) {\n+        \/\/ Create a new CompileFramework instance.\n+        CompileFramework comp = new CompileFramework();\n+\n+        \/\/ Add a java source file.\n+        comp.addJavaSourceCode(\"XYZ\", generate());\n+\n+        try {\n+            \/\/ Compile the source file.\n+            comp.compile();\n+            throw new RuntimeException(\"Expected compilation to fail.\");\n+        } catch (CompileFrameworkException e) {\n+            System.out.println(\"Success, expected compilation to fail.\");\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/tests\/TestBadJavaCompilation.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,108 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary Example test with multi-threaded use of the CompileFramework.\n+ *          Tests that the source and class directories are set up correctly.\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compile_framework.tests.TestConcurrentCompilation\n+ *\/\n+\n+package compile_framework.tests;\n+\n+import compiler.lib.compile_framework.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class TestConcurrentCompilation {\n+\n+    \/\/ Generate a source java file as String\n+    public static String generate(int i) {\n+        return String.format(\"\"\"\n+                             public class XYZ {\n+                                 public static int test() {\n+                                     return %d;\n+                                 }\n+                             }\n+                             \"\"\", i);\n+    }\n+\n+    public static void test(int i) {\n+        System.out.println(\"Generate and compile XYZ for \" + i);\n+        CompileFramework comp = new CompileFramework();\n+        comp.addJavaSourceCode(\"XYZ\", generate(i));\n+        comp.compile();\n+\n+        \/\/ Now, sleep to give the other threads time to compile and store their class-files.\n+        System.out.println(\"Sleep for \" + i);\n+        try {\n+            Thread.sleep(100);\n+        } catch (InterruptedException e) {\n+            System.out.println(\"Sleep interrupted for \" + i);\n+        }\n+\n+        \/\/ Now, hopefully all threads have compiled and stored their class-files.\n+        \/\/ We can check if we get the expected result, i.e. the class-file from the current thread.\n+        System.out.println(\"Run XYZ.test for \" + i);\n+        int j = (int)comp.invoke(\"XYZ\", \"test\", new Object[] {});\n+        if (i != j) {\n+            System.out.println(\"Wrong value: \" + i + \" vs \" + j);\n+            throw new RuntimeException(\"Wrong value: \" + i + \" vs \" + j);\n+        }\n+        System.out.println(\"Success for \" + i);\n+    }\n+\n+    public static class MyRunnable implements Runnable {\n+        private int i;\n+\n+        public MyRunnable(int i) {\n+            this.i = i;\n+        }\n+\n+        public void run() {\n+            TestConcurrentCompilation.test(i);\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"Generating threads:\");\n+        List<Thread> threads = new ArrayList<Thread>();\n+        for (int i = 0; i < 3; i++) {\n+            Thread thread = new Thread(new MyRunnable(i));\n+            thread.start();\n+            threads.add(thread);\n+        }\n+        System.out.println(\"Waiting to join threads:\");\n+        try {\n+            for (Thread thread : threads) {\n+                thread.join();\n+            }\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(\"interrupted\", e);\n+        }\n+        System.out.println(\"Success.\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/compile_framework\/tests\/TestConcurrentCompilation.java","additions":108,"deletions":0,"binary":false,"changes":108,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n- *      -agentlib:sp05t003=-waittime=5\n+ *      -agentlib:sp05t003=-waittime=5,-verbose\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/scenarios\/sampling\/SP05\/sp05t003\/TestDescription.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+java\/awt\/Frame\/InitialIconifiedTest.java 8203920 macosx-all,linux-all\n@@ -129,0 +130,2 @@\n+java\/awt\/dnd\/DragExitBeforeDropTest.java 8242805 macosx-all\n+java\/awt\/dnd\/DragThresholdTest.java 8076299 macosx-all\n@@ -137,0 +140,3 @@\n+java\/awt\/Focus\/TestDisabledAutoTransfer.java 8159871 macosx-all,windows-all\n+java\/awt\/Focus\/TestDisabledAutoTransferSwing.java 6962362 windows-all\n+java\/awt\/Focus\/ActivateOnProperAppContextTest.java 8136516 macosx-all\n@@ -139,0 +145,1 @@\n+java\/awt\/EventQueue\/PushPopDeadlock\/PushPopDeadlock.java 8024034 generic-all\n@@ -481,0 +488,1 @@\n+java\/awt\/Dialog\/ChoiceModalDialogTest.java 8161475 macosx-all\n@@ -484,1 +492,0 @@\n-java\/awt\/FullScreen\/FullscreenWindowProps\/FullscreenWindowProps.java 8280991 linux-x64\n@@ -521,2 +528,0 @@\n-javax\/management\/monitor\/DerivedGaugeMonitorTest.java         8042211 generic-all\n-\n@@ -826,0 +831,2 @@\n+java\/awt\/Frame\/SizeMinimizedTest.java 8305915 linux-x64\n+java\/awt\/dnd\/WinMoveFileToShellTest.java 8341665 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -236,0 +236,1 @@\n+        new EARelockingSimpleWithAccessInOtherThread_02_DynamicCall_Target()                .run();\n@@ -356,0 +357,1 @@\n+        new EARelockingSimpleWithAccessInOtherThread_02_DynamicCall()                 .run(this);\n@@ -1815,0 +1817,89 @@\n+\/\/ The debugger reads and publishes an object with eliminated locking to an instance field.\n+\/\/ A 2nd thread in the debuggee finds it there and changes its state using a synchronized method.\n+\/\/ Without eager relocking the accesses are unsynchronized which can be observed.\n+\/\/ This is a variant of EARelockingSimpleWithAccessInOtherThread with a dynamic call (not devirtualized).\n+class EARelockingSimpleWithAccessInOtherThread_02_DynamicCall extends EATestCaseBaseDebugger {\n+\n+    public void runTestCase() throws Exception {\n+        BreakpointEvent bpe = resumeTo(TARGET_TESTCASE_BASE_NAME, \"dontinline_brkpt\", \"()V\");\n+        printStack(bpe.thread());\n+        String l1ClassName = EARelockingSimpleWithAccessInOtherThread_02_DynamicCall_Target.SyncCounter.class.getName();\n+        ObjectReference ctr = getLocalRef(bpe.thread().frame(2), l1ClassName, \"l1\");\n+        setField(testCase, \"sharedCounter\", ctr);\n+        terminateEndlessLoop();\n+    }\n+}\n+\n+class EARelockingSimpleWithAccessInOtherThread_02_DynamicCall_Target extends EATestCaseBaseTarget {\n+\n+    public static final BrkPtDispatchA[] disp =\n+        {new BrkPtDispatchA(), new BrkPtDispatchB(), new BrkPtDispatchC(), new BrkPtDispatchD()};\n+\n+    public static class BrkPtDispatchA {\n+        public EATestCaseBaseTarget testCase;\n+        public void dontinline_brkpt() { testCase.dontinline_brkpt(); }\n+    }\n+\n+    public static class BrkPtDispatchB extends BrkPtDispatchA {\n+        @Override\n+        public void dontinline_brkpt() { testCase.dontinline_brkpt(); }\n+    }\n+\n+    public static class BrkPtDispatchC extends BrkPtDispatchA {\n+        @Override\n+        public void dontinline_brkpt() { testCase.dontinline_brkpt(); }\n+    }\n+\n+    public static class BrkPtDispatchD extends BrkPtDispatchA {\n+        @Override\n+        public void dontinline_brkpt() {\n+            testCase.dontinline_brkpt();\n+        }\n+    }\n+\n+    public static class SyncCounter {\n+        private int val;\n+        public synchronized int inc() { return val++; }\n+    }\n+\n+    public volatile SyncCounter sharedCounter;\n+\n+    @Override\n+    public void setUp() {\n+        super.setUp();\n+        testMethodDepth = 2;\n+        for (BrkPtDispatchA d : disp) {\n+            d.testCase = this;\n+        }\n+        doLoop = true;\n+        new Thread(() -> {\n+                while (doLoop) {\n+                    SyncCounter ctr = sharedCounter;\n+                    if (ctr != null) {\n+                        ctr.inc();\n+                    }\n+                }\n+            }).start();\n+    }\n+\n+    public int dispCount;\n+    public void dontinline_testMethod() {\n+        SyncCounter l1 = new SyncCounter();\n+        synchronized (l1) {      \/\/ Eliminated locking\n+            l1.inc();\n+            \/\/ Use different types for the subsequent call to prevent devirtualization.\n+            BrkPtDispatchA d = disp[(dispCount++) & 3];\n+            d.dontinline_brkpt();  \/\/ Dynamic call. Debugger publishes l1 to sharedCounter.\n+            iResult = l1.inc();    \/\/ Changes by the 2nd thread will be observed if l1\n+                                   \/\/ was not relocked before passing it to the debugger.\n+        }\n+    }\n+\n+    @Override\n+    public int getExpectedIResult() {\n+        return 1;\n+    }\n+}\n+\n+\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n+\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6225679\n+ * @summary Tests that checkbox changes into radiobutton dynamically\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DynamicChangeTest\n+ *\/\n+\n+import java.awt.Checkbox;\n+import java.awt.CheckboxGroup;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+\n+public class DynamicChangeTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                This test is primarily for Windows platform, but should pass\n+                on other platforms as well. Ensure that 'This is checkbox' is\n+                checkbox, and 'This is radiobutton' is radiobutton.\n+                If it is so, press pass else fail.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(DynamicChangeTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"Dynamic Change Checkbox Test\");\n+        f.setSize(200, 200);\n+\n+        f.setLayout(new GridLayout(2, 1));\n+        Checkbox ch1 = new Checkbox(\"This is checkbox\",\n+                new CheckboxGroup(), true);\n+        f.add(ch1);\n+        Checkbox ch2 = new Checkbox(\"This is radiobutton\", null, true);\n+        f.add(ch2);\n+\n+        ch1.setCheckboxGroup(null);\n+        ch2.setCheckboxGroup(new CheckboxGroup());\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Checkbox\/DynamicChangeTest\/DynamicChangeTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import javax.swing.JComponent;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4151949\n+ * @summary Verifies that Components are reshaped to their preferred size\n+ *          when their Container is packed.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual CheckChoiceTest\n+ *\/\n+\n+public class CheckChoiceTest {\n+\n+    private static JComponent componentToFocus;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Verify that the widths of the Choice components are all the same\n+            and that none is the minimum possible size.\n+            (The Choices should be at least as wide as the Frame.)\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .title(\"CheckChoiceTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(CheckChoiceTest::createAndShowUI)\n+                .splitUIBottom(CheckChoiceTest::createComponentToFocus)\n+                .build();\n+\n+        \/\/ focus away from the window with choices\n+        Thread.sleep(300);\n+        SwingUtilities.invokeAndWait(() -> componentToFocus.requestFocus());\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    private static JComponent createComponentToFocus() {\n+        componentToFocus = new JPanel();\n+        return componentToFocus;\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame f = new Frame(\"Check Choice\");\n+        f.setLayout(new BorderLayout());\n+\n+        Choice choice1 = new Choice();\n+        Choice choice2 = new Choice();\n+        Choice choice3 = new Choice();\n+\n+        f.add(choice1, BorderLayout.NORTH);\n+        f.add(choice3, BorderLayout.CENTER);\n+        f.add(choice2, BorderLayout.SOUTH);\n+        f.pack();\n+\n+        choice1.add(\"I am Choice, yes I am : 0\");\n+        choice2.add(\"I am the same, yes I am : 0\");\n+        choice3.add(\"I am the same, yes I am : 0\");\n+\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/CheckChoiceTest.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.FlowLayout;\n+import java.awt.Window;\n+\n+\/*\n+ * @test\n+ * @bug 4288285\n+ * @summary Verifies choice works with many items\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChoiceBigTest\n+ *\/\n+\n+public class ChoiceBigTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click the Choice button, press Pass if:\n+\n+            - all looks good.\n+            - if you can select the item 1000\n+\n+            Otherwise press Fail.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ChoiceBigTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(ChoiceBigTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Frame frame = new Frame(\"Check Choice\");\n+        frame.setLayout(new FlowLayout());\n+        Choice choice = new Choice();\n+        frame.setSize(400, 200);\n+        for (int i = 1; i < 1001; ++i) {\n+            choice.add(\"I am Choice, yes I am : \" + i);\n+        }\n+        frame.add(choice);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceBigTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,210 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6251983 6722236\n+ * @summary MouseDragged events not triggered for Choice when dragging it with left mouse button\n+ * @key headful\n+ * @run main ChoiceDragEventsInside\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseMotionAdapter;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class ChoiceDragEventsInside extends Frame {\n+    Robot robot;\n+    Choice choice1;\n+    Point pt;\n+    Dimension size;\n+    volatile boolean mouseDragged = false;\n+    volatile boolean mouseDraggedOutside = false;\n+\n+    public void setupUI() {\n+        setTitle(\"Choce Drag Events Inside\");\n+        choice1 = new Choice();\n+        for (int i = 1; i < 50; i++) {\n+            choice1.add(\"item-0\" + i);\n+        }\n+        choice1.setForeground(Color.red);\n+        choice1.setBackground(Color.red);\n+        choice1.addMouseMotionListener(new MouseMotionAdapter() {\n+                public void mouseMoved(MouseEvent me) {\n+                    System.out.println(me);\n+                }\n+\n+                public void mouseDragged(MouseEvent me) {\n+                    System.out.println(me);\n+                    mouseDragged = true;\n+                    if (me.getY() < 0) {\n+                        mouseDraggedOutside = true;\n+                    }\n+                }\n+            }\n+        );\n+        add(choice1);\n+        setLayout(new FlowLayout());\n+        setSize(200, 200);\n+        setLocationRelativeTo(null);\n+        setVisible(true);\n+        validate();\n+    }\n+\n+    public void start() {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoWaitForIdle(true);\n+            robot.setAutoDelay(50);\n+            robot.delay(100);\n+            EventQueue.invokeAndWait(() -> {\n+                pt = choice1.getLocationOnScreen();\n+                size = choice1.getSize();\n+            });\n+            testDragInsideChoice(InputEvent.BUTTON1_MASK);\n+            testDragInsideChoiceList(InputEvent.BUTTON1_MASK);\n+            testDragOutsideChoice(InputEvent.BUTTON1_MASK);\n+        } catch (Throwable e) {\n+            throw new RuntimeException(\"Test failed. Exception thrown: \" + e);\n+        }\n+    }\n+\n+    public void testDragInsideChoice(int button) {\n+        robot.mouseMove(pt.x + size.width \/ 2, pt.y + size.height \/ 2);\n+        robot.delay(100);\n+        robot.mousePress(button);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+        robot.mousePress(button);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+\n+        \/\/close opened choice\n+        robot.keyPress(KeyEvent.VK_ESCAPE);\n+        robot.keyRelease(KeyEvent.VK_ESCAPE);\n+        robot.delay(200);\n+\n+        robot.mouseMove(pt.x + size.width \/ 4, pt.y + size.height \/ 2);\n+        robot.mousePress(button);\n+\n+        dragMouse(pt.x + size.width \/ 4, pt.y + size.height \/ 2,\n+                pt.x + size.width * 3 \/ 4, pt.y + size.height \/ 2);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+        if (!mouseDragged) {\n+            throw new RuntimeException(\"Test failed. Choice should generate MouseDragged events inside Choice itself\");\n+        } else {\n+            System.out.println(\"Stage 1 passed. Choice generates MouseDragged events inside Choice itself\");\n+        }\n+        mouseDragged = false;\n+        \/\/close opened choice\n+        robot.keyPress(KeyEvent.VK_ESCAPE);\n+        robot.keyRelease(KeyEvent.VK_ESCAPE);\n+        robot.delay(200);\n+    }\n+\n+    public void testDragInsideChoiceList(int button) {\n+        robot.mouseMove(pt.x + size.width \/ 2, pt.y + size.height \/ 2);\n+        robot.delay(100);\n+        robot.mousePress(button);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+\n+        robot.mouseMove(pt.x + size.width \/ 2, pt.y + 5 * size.height);\n+        robot.delay(200);\n+        robot.mousePress(button);\n+\n+        dragMouse(pt.x + size.width \/ 2, pt.y + 5 * size.height,\n+                pt.x + size.width \/ 2, pt.y + 8 * size.height);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+        if (mouseDragged) {\n+            throw new RuntimeException(\"Test failed. Choice shouldn't generate MouseDragged events inside Choice's list\");\n+        } else {\n+            System.out.println(\"Stage 2 passed. Choice doesn't generate MouseDragged events inside Choice's list\");\n+        }\n+        robot.keyPress(KeyEvent.VK_ESCAPE);\n+        robot.keyRelease(KeyEvent.VK_ESCAPE);\n+        robot.delay(200);\n+        mouseDragged = false;\n+    }\n+\n+    public void testDragOutsideChoice(int button) {\n+        pt = choice1.getLocationOnScreen();\n+        robot.mouseMove(pt.x + size.width \/ 2, pt.y + size.height \/ 2);\n+        robot.delay(100);\n+\n+        robot.mousePress(button);\n+        \/\/drag mouse outside of Choice\n+        dragMouse(pt.x + size.width \/ 2, pt.y + size.height \/ 2,\n+                pt.x + size.width \/ 2, pt.y - 3 * size.height);\n+        robot.mouseRelease(button);\n+        robot.delay(200);\n+        if (!mouseDragged || !mouseDraggedOutside) {\n+            throw new RuntimeException(\"Test failed. Choice should generate MouseDragged events outside Choice\");\n+        } else {\n+            System.out.println(\"Stage 3 passed. Choice generates MouseDragged events outside Choice\");\n+        }\n+        robot.keyPress(KeyEvent.VK_ESCAPE);\n+        robot.keyRelease(KeyEvent.VK_ESCAPE);\n+        robot.delay(200);\n+        mouseDragged = false;\n+    }\n+\n+    public void dragMouse(int x0, int y0, int x1, int y1) {\n+        int curX = x0;\n+        int curY = y0;\n+        int dx = x0 < x1 ? 1 : -1;\n+        int dy = y0 < y1 ? 1 : -1;\n+\n+        while (curX != x1) {\n+            curX += dx;\n+            robot.mouseMove(curX, curY);\n+        }\n+        while (curY != y1) {\n+            curY += dy;\n+            robot.mouseMove(curX, curY);\n+        }\n+    }\n+\n+    public static void main(final String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        ChoiceDragEventsInside app = new ChoiceDragEventsInside();\n+        try {\n+            EventQueue.invokeAndWait(app::setupUI);\n+            app.start();\n+        } finally {\n+            EventQueue.invokeAndWait(app::dispose);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceDragEventsInside.java","additions":210,"deletions":0,"binary":false,"changes":210,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.Window;\n+\n+\/*\n+ * @test\n+ * @bug 4927930\n+ * @summary Verify that the focus is set to the selected item after calling the java.awt.Choice.select() method\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChoiceFocusTest\n+ *\/\n+\n+public class ChoiceFocusTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. Use the mouse to select Item 5 in the Choice list.\n+            2. Click on the Choice. Item5 is now selected and highlighted. This is the correct behavior.\n+            3. Select Item 1 in the Choice list.\n+            4. Click the \"choice.select(5)\" button. This causes a call to Choice.select(5). Item 5 is now selected.\n+            5. Click on the Choice.\n+            6. If the cursor and focus are on item 5, the test passes. Otherwise, it fails.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ChoiceFocusTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(50)\n+                .testUI(ChoiceFocusTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Panel panel = new Panel();\n+        Choice choice = new Choice();\n+        Button button = new Button(\"choice.select(5);\");\n+\n+        for (int i = 0; i < 10; i++) {\n+            choice.add(String.valueOf(i));\n+        }\n+\n+        button.addActionListener(e -> choice.select(5));\n+\n+        panel.add(button);\n+        panel.add(choice);\n+\n+        Frame frame = new Frame(\"ChoiceFocusTest\");\n+        frame.add(panel);\n+        frame.pack();\n+\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceFocusTest.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4319246\n+ * @summary Tests that MouseReleased, MouseClicked and MouseDragged are triggered on choice\n+ * @key headful\n+ * @run main ChoiceMouseEventTest\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+\n+public class ChoiceMouseEventTest extends Frame {\n+    static volatile boolean mousePressed = false;\n+    static volatile boolean mouseReleased = false;\n+    static volatile boolean mouseClicked = false;\n+    Choice choice = new Choice();\n+    static Point location;\n+    static Dimension size;\n+\n+    public void setupGUI() {\n+        setTitle(\"Choice Mouse Event Test\");\n+        this.setLayout(new BorderLayout());\n+        choice.add(\"item-1\");\n+        choice.add(\"item-2\");\n+        choice.add(\"item-3\");\n+        choice.add(\"item-4\");\n+        add(\"Center\", choice);\n+        choice.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                mouseClicked = true;\n+            }\n+\n+            @Override\n+            public void mousePressed(MouseEvent e) {\n+                mousePressed = true;\n+            }\n+\n+            @Override\n+            public void mouseReleased(MouseEvent e) {\n+                mouseReleased = true;\n+            }\n+        });\n+        setLocationRelativeTo(null);\n+        setSize(400, 200);\n+        setVisible(true);\n+    }\n+\n+    public Point _location() {\n+        return choice.getLocationOnScreen();\n+    }\n+\n+    public Dimension _size() {\n+        return choice.getSize();\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException, AWTException {\n+        ChoiceMouseEventTest test = new ChoiceMouseEventTest();\n+        try {\n+            EventQueue.invokeAndWait(test::setupGUI);\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            robot.delay(1000);\n+            robot.waitForIdle();\n+            EventQueue.invokeAndWait(() -> {\n+                location = test._location();\n+                size = test._size();\n+            });\n+            robot.waitForIdle();\n+            robot.mouseMove(location.x + size.width - 10, location.y + (size.height \/ 2));\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(2000);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(2000);\n+            robot.waitForIdle();\n+            if (!mouseClicked || !mousePressed || !mouseReleased) {\n+                throw new RuntimeException(String.format(\"One of the events not arrived: \" +\n+                        \"mouseClicked = %b, mousePressed = %b, mouseReleased = %b\",\n+                        mouseClicked, mousePressed, mouseReleased));\n+            }\n+        } finally {\n+            if (test != null) {\n+                EventQueue.invokeAndWait(test::dispose);\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceMouseEventTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"},{"patch":"@@ -0,0 +1,137 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Insets;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n+\n+\/*\n+ * @test\n+ * @bug 4075194\n+ * @summary 4075194, Choice may not be displayed at the location requested\n+ * @key headful\n+ *\/\n+\n+public class ChoicePosTest {\n+\n+    private static Robot robot;\n+    private static Frame frame;\n+    private static final int GAP = 10;\n+    private static volatile Choice c1,c2;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(ChoicePosTest::createAndShowGUI);\n+\n+            robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            captureAndTestChoices();\n+        } finally {\n+            EventQueue.invokeAndWait(frame::dispose);\n+        }\n+\n+        System.out.println(\"Passed\");\n+    }\n+\n+    private static void createAndShowGUI() {\n+        frame = new Frame(\"ChoicePosTest\");\n+        Insets insets = frame.getInsets();\n+        frame.setSize( insets.left + 400 + insets.right, insets.top + 400 + insets.bottom );\n+        frame.setBackground(Color.RED);\n+        frame.setLayout(null);\n+        frame.setLocationRelativeTo(null);\n+\n+        c1 = new Choice();\n+        c1.setBackground(Color.GREEN);\n+        frame.add( c1 );\n+        c1.setBounds( 20, 50, 100, 100 );\n+\n+        c2 = new Choice();\n+        c2.setBackground(Color.GREEN);\n+        frame.add(c2);\n+        c2.addItem(\"One\");\n+        c2.addItem(\"Two\");\n+        c2.addItem(\"Three\");\n+        c2.setBounds( 125, 50, 100, 100 );\n+\n+        frame.validate();\n+        frame.setVisible(true);\n+    }\n+\n+    private static void captureAndTestChoices() {\n+        Point c1loc = c1.getLocationOnScreen();\n+        Point c2loc = c2.getLocationOnScreen();\n+\n+        int startX = c1loc.x - GAP;\n+        int startY = c1loc.y - GAP;\n+        int captureWidth = c2loc.x + c2.getWidth() + GAP - startX;\n+        int captureHeight = c2loc.y + c2.getHeight() + GAP - startY;\n+\n+        BufferedImage bi = robot.createScreenCapture(\n+                new Rectangle(startX, startY, captureWidth, captureHeight)\n+        );\n+\n+        int redPix = Color.RED.getRGB();\n+\n+        int lastNonRedCount = 0;\n+\n+        for (int y = 0; y < captureHeight; y++) {\n+            int nonRedCount = 0;\n+            for (int x = 0; x < captureWidth; x++) {\n+                int pix = bi.getRGB(x, y);\n+                if (pix != redPix) {\n+                    nonRedCount++;\n+                }\n+            }\n+\n+            if (nonRedCount > 0 && lastNonRedCount > 0) {\n+                if (lastNonRedCount - nonRedCount > 0) {\n+                    System.err.printf(\n+                            \"Failed at %d, nonRedCount: %d lastNonRedCount: %d\\n\",\n+                            y, nonRedCount, lastNonRedCount\n+                    );\n+\n+                    try {\n+                        ImageIO.write(bi, \"png\", new File(\"choices.png\"));\n+                    } catch (IOException ignored) {\n+                    }\n+\n+                    throw new RuntimeException(\"Choices are not aligned\");\n+                }\n+            }\n+\n+            lastNonRedCount = nonRedCount;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoicePosTest.java","additions":137,"deletions":0,"binary":false,"changes":137,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4079027\n+ * @summary Removing an item dynamically from a Choice object breaks lower items.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ChoiceRemoveTest\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Label;\n+import java.awt.Panel;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class ChoiceRemoveTest extends Frame {\n+    Choice selector;\n+    static final String INSTRUCTIONS = \"\"\"\n+            After window 'Choice Remove Test' appears wait for three seconds\n+            and then click on the choice. In popup there should be no\n+            'Choice A' variant. Try selecting each variant with mouse\n+            and verify by the log that the correct variant gets selected.\n+            If after selecting item in the list the correct item gets selected\n+            and correct item name appears in the log press Pass otherwise press Fail.\n+            \"\"\";\n+\n+    public static void main(String[] argv) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .testUI(ChoiceRemoveTest::new)\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public ChoiceRemoveTest() {\n+        super(\"Choice Remove Test\");\n+        Panel p;\n+        Label prompt;\n+\n+        addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowOpened(WindowEvent e) {\n+                super.windowOpened(e);\n+                new Thread(() -> {\n+                    try {\n+                        Thread.sleep(2000);\n+                    } catch (InterruptedException ignore) {\n+                    }\n+                    removeFirst();\n+                }).start();\n+            }\n+        });\n+\n+        setLayout(new GridLayout());\n+        p = new Panel();\n+\n+        prompt = new Label(\"Select different items including the last one\");\n+        p.add(prompt);\n+\n+        selector = new Choice();\n+        selector.add(\"Choice A\");\n+        selector.add(\"Choice B\");\n+        selector.add(\"Choice C\");\n+        selector.add(\"Choice D\");\n+        selector.add(\"Choice E\");\n+        selector.addItemListener(e -> {\n+            if (e.getStateChange() == ItemEvent.SELECTED) {\n+                Object selected = e.getItem();\n+                PassFailJFrame.log(selected.toString());\n+            }\n+        });\n+        p.add(selector);\n+        add(p);\n+        pack();\n+    }\n+\n+    public void removeFirst() {\n+        selector.remove(\"Choice A\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ChoiceRemoveTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,113 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import jdk.test.lib.Platform;\n+\n+\/*\n+ * @test\n+ * @bug 4134619\n+ * @summary    Tests that the EventDispatchThread doesn't deadlock with\n+ *             user threads which are modifying a Choice component.\n+ * @library \/java\/awt\/regtesthelpers \/test\/lib\n+ * @build PassFailJFrame jdk.test.lib.Platform\n+ * @run main\/manual DeadlockTest\n+ *\/\n+\n+public class DeadlockTest extends Thread {\n+\n+    static volatile Choice choice1;\n+    static volatile Choice choice2;\n+    static volatile Choice choice3;\n+    static volatile Frame frame;\n+    static int itemCount = 0;\n+\n+    private static final boolean isWindows = Platform.isWindows();\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Click on the top Choice component and hold the mouse still briefly.\n+            Then, without releasing the mouse button, move the cursor to a menu\n+            item and then again hold the mouse still briefly.\n+            %s\n+            Release the button and repeat this process.\n+\n+            Verify that this does not cause a deadlock\n+            or crash within a reasonable amount of time.\n+            \"\"\".formatted(\n+                isWindows\n+                    ? \"(menu can automatically collapse sometimes, this is ok)\\n\"\n+                    : \"\"\n+\n+    )       ;\n+\n+    public static void main(String[] args) throws Exception {\n+        DeadlockTest deadlockTest = new DeadlockTest();\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .title(\"DeadlockTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(deadlockTest::createAndShowUI)\n+                .build();\n+\n+        deadlockTest.start();\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+   public Frame createAndShowUI() {\n+       frame = new Frame(\"Check Choice\");\n+       frame.setLayout(new BorderLayout());\n+       choice1 = new Choice();\n+       choice2 = new Choice();\n+       choice3 = new Choice();\n+       frame.add(choice1, BorderLayout.NORTH);\n+       frame.add(choice3, BorderLayout.CENTER);\n+       frame.add(choice2, BorderLayout.SOUTH);\n+       frame.pack();\n+       return frame;\n+   }\n+\n+    public void run() {\n+        while (true) {\n+            if (choice1 != null && itemCount < 40) {\n+                choice1.add(\"I am Choice, yes I am : \" + itemCount * itemCount);\n+                choice2.add(\"I am the same, yes I am : \" + itemCount * itemCount);\n+                choice3.add(\"I am the same, yes I am : \" + itemCount * itemCount);\n+                itemCount++;\n+            }\n+            if (itemCount >= 20 && choice1 != null &&\n+                    choice1.getItemCount() > 0) {\n+                choice1.removeAll();\n+                choice2.removeAll();\n+                choice3.removeAll();\n+                itemCount = 0;\n+            }\n+            frame.validate();\n+            try {\n+                Thread.sleep(1000);\n+            } catch (Exception ignored) {}\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/DeadlockTest.java","additions":113,"deletions":0,"binary":false,"changes":113,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Checkbox;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.awt.Window;\n+import java.awt.event.ItemEvent;\n+\n+\/*\n+ * @test\n+ * @bug 6476183\n+ * @summary Drop down of a Choice changed to enabled state has a disabled like appearance\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DisabledList\n+ *\/\n+\n+public class DisabledList {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1) Select the checkbox\n+            2) Open Choice\n+            3) Drag mouse over the scrollbar or drag out it the choice\n+            4) If choice's items become disabled press fail, otherwise pass\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"DisabledList Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 3)\n+                .columns(45)\n+                .testUI(DisabledList::createAndShowUI)\n+                .logArea(4)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Window createAndShowUI() {\n+        Frame frame = new Frame(\"DisabledList\");\n+        frame.setSize(200, 200);\n+        frame.validate();\n+        Checkbox checkbox = new Checkbox(\"checkbox\");\n+        final Choice choice = new Choice();\n+        choice.setEnabled(false);\n+        for (int i = 0; i < 15; i++) {\n+            choice.addItem(\"Item\" + i);\n+        }\n+        checkbox.addItemListener(event -> {\n+            PassFailJFrame.log(\"CheckBox.itemStateChanged occurred\");\n+            choice.setEnabled(event.getStateChange() == ItemEvent.SELECTED);\n+        });\n+        frame.add(BorderLayout.NORTH, checkbox);\n+        frame.add(BorderLayout.CENTER, choice);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/DisabledList.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6240046\n+ * @summary REG:Choice's Drop-down does not disappear when clicking somewhere, after popup menu is disposed-XTkt\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PopupMenuOnChoiceArea\n+ *\/\n+\n+\n+import java.awt.CheckboxMenuItem;\n+import java.awt.Choice;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.PopupMenu;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class PopupMenuOnChoiceArea extends Frame {\n+    static final String INSTRUCTIONS = \"\"\"\n+            You would see a window named 'Popup menu on choice area'\n+            with Choice in it. Move the mouse pointer to the choice.\n+            Click right mouse button on it.\n+            You should see a popup menu with 'File' in it.\n+            Close this popup menu by pressing Esc.\n+            Click the left mouse button on the Choice.\n+            You should see a Choice drop-down menu.\n+            Move mouse pointer into drop-down menu.\n+            Click right mouse button on any item in it.\n+            If you see a 'File' popup menu press Fail.\n+            If Choice drop-down closes instead press Pass.\n+            \"\"\";\n+\n+    public PopupMenuOnChoiceArea() {\n+        super(\"Popup menu on choice area\");\n+        this.setLayout(new FlowLayout());\n+        Choice choice = new Choice();\n+        choice.add(\"item-1\");\n+        choice.add(\"item-2\");\n+        choice.add(\"item-3\");\n+        choice.add(\"item-4\");\n+        add(\"Center\", choice);\n+        Menu fileMenu = new Menu(\"File\");\n+        Menu open = new Menu(\"Open\");\n+        Menu save = new Menu(\"save\");\n+        CheckboxMenuItem exit = new CheckboxMenuItem(\"Exit\");\n+        fileMenu.add(open);\n+        fileMenu.add(save);\n+        fileMenu.add(exit);\n+        final PopupMenu pop = new PopupMenu();\n+        pop.setLabel(\"This is a popup menu\");\n+        pop.setName(\"a menu\");\n+        pop.add(fileMenu);\n+        choice.add(pop);\n+        choice.addMouseListener(new MouseAdapter() {\n+            public void mousePressed(MouseEvent me) {\n+                if (me.isPopupTrigger()) {\n+                    pop.show(me.getComponent(), me.getX(), me.getY());\n+                }\n+            }\n+\n+            public void mouseReleased(MouseEvent me) {\n+                if (me.isPopupTrigger()) {\n+                    pop.show(me.getComponent(), me.getX(), me.getY());\n+                }\n+            }\n+        });\n+        setSize(200, 200);\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .testUI(PopupMenuOnChoiceArea::new)\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/PopupMenuOnChoiceArea.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6405707\n+ * @summary Choice popup & scrollbar gets Flickering when mouse is pressed & drag on the scrollbar\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ScrollbarFlickers\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Frame;\n+import java.lang.reflect.InvocationTargetException;\n+\n+public class ScrollbarFlickers extends Frame {\n+    static final String INSTRUCTIONS = \"\"\"\n+            Open the choice popup. Select any item in it and\n+            drag it with the mouse above or below the choice.\n+            Keep the choice opened.\n+            Continue dragging the mouse outside of the choice\n+            making content of the popup scroll.\n+            If you see that scrollbar flickers press Fail.\n+            Otherwise press Pass.\n+            \"\"\";\n+\n+    public ScrollbarFlickers() {\n+        super(\"Scrollbar Flickering Test\");\n+        Choice ch = new Choice();\n+        setLayout(new BorderLayout());\n+        ch.add(\"Praveen\");\n+        ch.add(\"Mohan\");\n+        ch.add(\"Rakesh\");\n+        ch.add(\"Menon\");\n+        ch.add(\"Girish\");\n+        ch.add(\"Ramachandran\");\n+        ch.add(\"Elancheran\");\n+        ch.add(\"Subramanian\");\n+        ch.add(\"Raju\");\n+        ch.add(\"Pallath\");\n+        ch.add(\"Mayank\");\n+        ch.add(\"Joshi\");\n+        ch.add(\"Sundar\");\n+        ch.add(\"Srinivas\");\n+        ch.add(\"Mandalika\");\n+        ch.add(\"Suresh\");\n+        ch.add(\"Chandar\");\n+        add(ch);\n+        setSize(200, 200);\n+        validate();\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .testUI(ScrollbarFlickers::new)\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/ScrollbarFlickers.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Choice;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+\n+\/*\n+ * @test\n+ * @bug 4293346\n+ * @summary Checks that Choice does update its dimensions on font change\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual SetFontTest\n+ *\/\n+\n+public class SetFontTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Choice component used to not update its dimension on font change.\n+            Select one of fonts on the choice pull down list.\n+            Pull down the list after the font change; if items in the list are\n+            shown correctly the test is passed, otherwise it failed.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"SetFontTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(SetFontTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"SetFontTest\");\n+        Choice choice = new Choice();\n+        frame.setBounds(100, 400, 400, 100);\n+        choice.addItem(\"dummy\");\n+        choice.addItem(\"Set LARGE Font\");\n+        choice.addItem(\"Set small Font\");\n+        choice.addItem(\"addNewItem\");\n+        choice.addItem(\"deleteItem\");\n+\n+        choice.addItemListener(e -> {\n+            if (e.getItem().toString().equals(\"addNewItem\")) {\n+                choice.addItem(\"very very very very long item\");\n+                frame.validate();\n+            } else if (e.getItem().toString().equals(\"deleteItem\")) {\n+                if (choice.getItemCount() > 4) {\n+                    choice.remove(4);\n+                    frame.validate();\n+                }\n+            } else if (e.getItem().toString().equals(\"Set LARGE Font\")) {\n+                choice.setFont(new Font(\"Dialog\", Font.PLAIN, 24));\n+                frame.validate();\n+            } else if (e.getItem().toString().equals(\"Set small Font\")) {\n+                choice.setFont(new Font(\"Dialog\", Font.PLAIN, 10));\n+                frame.validate();\n+            }\n+        });\n+        Panel panel = new Panel();\n+        panel.add(choice);\n+        frame.add(panel, BorderLayout.CENTER);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Choice\/SetFontTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4313052\n+ * @summary Test cursor changes after mouse dragging ends\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ListDragCursor\n+ *\/\n+\n+import java.awt.Cursor;\n+import java.awt.Frame;\n+import java.awt.List;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+\n+public class ListDragCursor {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Move mouse to the TextArea.\n+                2. Press the left mouse button.\n+                3. Drag mouse to the list.\n+                4. Release the left mouse button.\n+\n+                If the mouse cursor starts as a Text Line Cursor and changes\n+                to a regular Pointer Cursor, then Hand Cursor when hovering\n+                the list, pass the test. This test fails if the cursor does\n+                not update at all when pointing over the different components.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ListDragCursor::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame frame = new Frame(\"Cursor change after drag\");\n+        Panel panel = new Panel();\n+\n+        List list = new List(2);\n+        list.add(\"List1\");\n+        list.add(\"List2\");\n+        list.add(\"List3\");\n+        list.add(\"List4\");\n+        list.setCursor(new Cursor(Cursor.HAND_CURSOR));\n+\n+        TextArea textArea = new TextArea(3, 5);\n+        textArea.setCursor(new Cursor(Cursor.TEXT_CURSOR));\n+\n+        panel.add(textArea);\n+        panel.add(list);\n+\n+        frame.add(panel);\n+        frame.setBounds(300, 100, 300, 150);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Cursor\/CursorDragTest\/ListDragCursor.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5079694\n+ * @summary Test if JDialog respects setCursor\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HiddenDialogParentTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Cursor;\n+\n+import javax.swing.JDialog;\n+import javax.swing.JLabel;\n+import javax.swing.border.LineBorder;\n+\n+public class HiddenDialogParentTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                 You can see a label area in the center of JDialog.\n+                 Verify that the cursor is a hand cursor in this area.\n+                 If so, press pass, else press fail.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HiddenDialogParentTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static JDialog createUI() {\n+        JDialog dialog = new JDialog();\n+        dialog.setTitle(\"JDialog Cursor Test\");\n+        dialog.setLayout(new BorderLayout());\n+        JLabel centerLabel = new JLabel(\"Cursor should be a hand in this \" +\n+                \"label area\");\n+        centerLabel.setBorder(new LineBorder(Color.BLACK));\n+        centerLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+        dialog.add(centerLabel, BorderLayout.CENTER);\n+        dialog.setSize(300, 200);\n+\n+        return dialog;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Cursor\/HiddenDialogParentTest\/HiddenDialogParentTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,95 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4212593\n+ * @summary The Toolkit.createCustomCursor does not check absence of the\n+ *          image of cursor\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual InvalidImageCustomCursorTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Cursor;\n+import java.awt.Frame;\n+import java.awt.Image;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Toolkit;\n+\n+public class InvalidImageCustomCursorTest {\n+    static Cursor cursor;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Press 'Hide' button to hide (set transparent) cursor for the\n+                green panel. Move the pointer over the green panel - pointer\n+                should disappear. Press 'Default' button to set default cursor\n+                for the green panel.\n+\n+                If you see any exceptions or cursor is not transparent,\n+                test failed, otherwise it passed.\n+                \"\"\";\n+\n+        Toolkit tk = Toolkit.getDefaultToolkit();\n+        Image image = tk.getImage(\"NON_EXISTING_FILE.gif\");\n+        Point p = new Point(0, 0);\n+\n+        cursor = tk.createCustomCursor(image, p, \"Test\");\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(InvalidImageCustomCursorTest::createUI)\n+                .logArea(5)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"Invalid Cursor Image Test\");\n+        f.setLayout(new BorderLayout());\n+        f.setSize(200, 200);\n+\n+        Button def = new Button(\"Default\");\n+        Button hide = new Button(\"Hide\");\n+        Panel panel = new Panel();\n+\n+        def.addActionListener(e -> panel.setCursor(Cursor.getDefaultCursor()));\n+        hide.addActionListener(e -> panel.setCursor(cursor));\n+\n+        panel.setBackground(Color.green);\n+        panel.setSize(100, 100);\n+        f.add(\"Center\", panel);\n+        f.add(\"North\", hide);\n+        f.add(\"South\", def);\n+\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Cursor\/InvalidImageCustomCursorTest\/InvalidImageCustomCursorTest.java","additions":95,"deletions":0,"binary":false,"changes":95,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4111379\n+ * @summary Test for setting cursor to null for lightweight components\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual NullCursorTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Cursor;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+public class NullCursorTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                 1. Hover over each colored area as described:\n+                        Green area shows a CrossCursor.\n+                        Red area shows a TextCursor.\n+                        Yellow area shows a HandCursor.\n+                 2. Click once in red area, then:\n+                        Green area shows a HandCursor.\n+                        Red area shows a BusyCursor.\n+                        Yellow area shows a HandCursor.\n+                 3. Click again in red area, then:\n+                        Green area shows a CrossCursor.\n+                        Red area shows a HandCursor.\n+                        Yellow area shows a HandCursor.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(NullCursorTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"Null Cursor Test Frame\");\n+        f.setSize(200, 200);\n+        final Container p = f;\n+        p.setName(\"parent\");\n+        p.setLayout(null);\n+\n+        final Component green = p.add(new Component() {\n+            public void paint(Graphics g) {\n+                Rectangle r = getBounds();\n+                g.setColor(Color.green);\n+                g.fillRect(0, 0, r.width, r.height);\n+            }\n+        });\n+        green.setName(\"green\");\n+        green.setBackground(Color.red);\n+        green.setBounds(50, 50, 75, 75);\n+        green.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));\n+\n+        Container h = new Container() {\n+            public void paint(Graphics g) {\n+                Rectangle r = getBounds();\n+                g.setColor(Color.yellow);\n+                g.fillRect(0, 0, r.width, r.height);\n+                super.paint(g);\n+            }\n+        };\n+        h.setBounds(15, 25, 150, 150);\n+        h.setName(\"container\");\n+        h.setBackground(Color.yellow);\n+        h.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+        final Component red = new Component() {\n+            public void paint(Graphics g) {\n+                Rectangle r = getBounds();\n+                Color c = getBackground();\n+                g.setColor(c);\n+                g.fillRect(0, 0, r.width, r.height);\n+                super.paint(g);\n+            }\n+        };\n+        red.setName(\"red\");\n+        red.setBackground(Color.red);\n+        red.setBounds(10, 10, 120, 120);\n+        red.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));\n+\n+        final Button b = (Button)h.add(new Button(\"Test\"));\n+        b.setBounds(10, 10, 40, 20);\n+        h.add(red);\n+        p.add(h);\n+\n+        b.addActionListener(new ActionListener() {\n+            boolean f = false;\n+            public void actionPerformed(ActionEvent e) {\n+                if (f) {\n+                    b.setCursor(null);\n+                } else {\n+                    b.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+                }\n+                f = !f;\n+            }\n+        });\n+        red.addMouseListener(new MouseAdapter() {\n+            boolean f = true;\n+\n+            public void mouseClicked(MouseEvent e) {\n+                Component c = (Component)e.getSource();\n+                if (f) {\n+                    c.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n+                    p.setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));\n+                    green.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+                    f = false;\n+                } else {\n+                    c.setCursor(null);\n+                    p.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n+                    green.setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));\n+                    f = true;\n+                }\n+            }\n+        });\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Cursor\/NullCursorTest\/NullCursorTest.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"},{"patch":"@@ -0,0 +1,201 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6255196\n+ * @key headful\n+ * @summary Verifies the supported actions on different platforms.\n+ * @library \/test\/lib\n+ * @run main\/othervm ActionSupportTest\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.io.File;\n+import java.net.URI;\n+import javax.swing.JMenuBar;\n+import jtreg.SkippedException;\n+\n+import static java.awt.desktop.QuitStrategy.NORMAL_EXIT;\n+\n+public class ActionSupportTest {\n+\n+    public static void main(String[] args) {\n+        final File file = new File(\"nonExistentFile\");\n+        final URI uri = URI.create(\"nonExistentSchema:anything\");\n+        final StringBuilder error = new StringBuilder();\n+\n+        if (!Desktop.isDesktopSupported()) {\n+            throw new SkippedException(\"Class java.awt.Desktop is not supported on \" +\n+                    \"current platform. Farther testing will not be performed\");\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+        for (Desktop.Action action : Desktop.Action.values()) {\n+            boolean supported = desktop.isSupported(action);\n+\n+            try {\n+                switch (action) {\n+                    case OPEN:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.open(file);\n+                        break;\n+                    case EDIT:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.edit(file);\n+                        break;\n+                    case PRINT:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.print(file);\n+                        break;\n+                    case MAIL:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.mail(uri);\n+                        break;\n+                    case BROWSE:\n+                        if (supported) {\n+                            continue; \/\/ prevent native message about strange schema\n+                        }\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.browse(uri);\n+                        break;\n+                    case APP_EVENT_FOREGROUND:\n+                    case APP_EVENT_HIDDEN:\n+                    case APP_EVENT_REOPENED:\n+                    case APP_EVENT_SCREEN_SLEEP:\n+                    case APP_EVENT_SYSTEM_SLEEP:\n+                    case APP_EVENT_USER_SESSION:\n+                        continue; \/\/ Has no effect if SystemEventListener's sub-type\n+                        \/\/ is unsupported on the current platform.\n+                    case APP_ABOUT:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setAboutHandler(e -> {\n+                        });\n+                        break;\n+                    case APP_PREFERENCES:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setPreferencesHandler(e -> {\n+                        });\n+                        break;\n+                    case APP_OPEN_FILE:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setOpenFileHandler(e -> {\n+                        });\n+                        break;\n+                    case APP_PRINT_FILE:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setPrintFileHandler(e -> {\n+                        });\n+                        break;\n+                    case APP_OPEN_URI:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setOpenURIHandler(e -> {\n+                        });\n+                        break;\n+                    case APP_QUIT_HANDLER:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setQuitHandler((e, response) -> {\n+                        });\n+                        break;\n+                    case APP_QUIT_STRATEGY:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setQuitStrategy(NORMAL_EXIT);\n+                        break;\n+                    case APP_SUDDEN_TERMINATION:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.enableSuddenTermination();\n+                        break;\n+                    case APP_REQUEST_FOREGROUND:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.requestForeground(true);\n+                        break;\n+                    case APP_HELP_VIEWER:\n+                        if (supported) {\n+                            continue; \/\/ prevent open separate window\n+                        }\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.openHelpViewer();\n+                        break;\n+                    case APP_MENU_BAR:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.setDefaultMenuBar(new JMenuBar());\n+                        break;\n+                    case BROWSE_FILE_DIR:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.browseFileDirectory(file);\n+                        break;\n+                    case MOVE_TO_TRASH:\n+                        \/\/ if not supported, an UnsupportedOperationException will be thrown.\n+                        \/\/ if supported, other exception might be thrown.\n+                        desktop.moveToTrash(file);\n+                        break;\n+                }\n+                \/\/ no exception has been thrown.\n+                if (!supported) {\n+                    error.append(\"Action \" + action.name() + \" is an \" +\n+                            \"unsupported operation, but no exception has been thrown\\n\");\n+                }\n+            } catch (UnsupportedOperationException uoe) {\n+                if (!supported) {\n+                    System.out.println(\"Action \" + action.name() + \"is not supported.\");\n+                } else {\n+                    error.append(\"Action \" + action.name() + \" is a \" +\n+                            \"supported operation, \" +\n+                            \"but UnsupportedOperationException has been thrown\\n\");\n+                }\n+            } catch (Exception e) {\n+                if (supported) {\n+                    System.out.println(\"Action \" + action.name() + \"supported.\");\n+                } else {\n+                    error.append(\"Action \" + action.name() + \" is an \" +\n+                            \"unsupported operation, but \" +\n+                            \"UnsupportedOperationException has not been thrown\\n\");\n+                }\n+            }\n+        }\n+\n+        if (!error.isEmpty()) {\n+            System.err.println(error);\n+            throw new RuntimeException(\"One or more tests failed. \" +\n+                    \"Look at the error output for details\");\n+        }\n+        System.out.println(\"Test completed\");\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/ActionSupportTest.java","additions":201,"deletions":0,"binary":false,"changes":201,"status":"added"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6255196\n+ * @summary  Verifies the function of method browse(java.net.URI uri).\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual BrowseTest\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.URI;\n+import javax.swing.JPanel;\n+\n+public class BrowseTest extends JPanel {\n+    static final String INSTRUCTIONS = \"\"\"\n+            This test could launch default file manager to open user's home\n+            directory, and default web browser to show the URL of java vendor.\n+            After test execution close the native file manager and web browser\n+            windows if they were launched by test.\n+            Also check output for any unexpected EXCEPTIONS,\n+            if you see any failure messages press Fail otherwise press Pass.\n+            \"\"\";\n+\n+    public BrowseTest() {\n+        if (!Desktop.isDesktopSupported()) {\n+            PassFailJFrame.log(\"Class java.awt.Desktop is not supported on \" +\n+                    \"current platform. Farther testing will not be performed\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+\n+        URI dirURI = new File(System.getProperty(\"user.home\")).toURI();\n+        URI webURI = URI.create(System.getProperty(\"java.vendor.url\", \"http:\/\/www.java.com\"));\n+        boolean failed = false;\n+        try {\n+            PassFailJFrame.log(\"Try to browse \" + dirURI + \" ...\");\n+            desktop.browse(dirURI);\n+            PassFailJFrame.log(\"Succeed.\\n\");\n+        } catch (Exception e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+\n+        try {\n+            PassFailJFrame.log(\"Try to browse \" + webURI + \" ...\");\n+            desktop.browse(webURI);\n+            PassFailJFrame.log(\"Succeed.\\n\");\n+        } catch (Exception e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Browser Test\")\n+                .splitUI(BrowseTest::new)\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(40)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/BrowseTest.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6255196\n+ * @key headful\n+ * @summary Verifies if class Desktop is supported on current platform.\n+ * @run main DesktopSupportTest\n+ *\/\n+\n+import java.awt.Desktop;\n+\n+public class DesktopSupportTest {\n+    public static void main(String[] args) {\n+        boolean supported = Desktop.isDesktopSupported();\n+        try {\n+            Desktop desktop = Desktop.getDesktop();\n+            if (!supported) {\n+                throw new RuntimeException(\"UnsupportedOperationException \" +\n+                        \"should be thrown, as this class is not supported \" +\n+                        \"on current platform.\");\n+            }\n+        } catch (UnsupportedOperationException uoe) {\n+            if (supported) {\n+                throw new RuntimeException(\"UnsupportedOperationException \" +\n+                        \"should NOT be thrown, as this class is supported \" +\n+                        \"on current platform.\");\n+            }\n+        } catch (Exception e) {\n+            if (!supported) {\n+                throw new RuntimeException(\"UnsupportedOperationException \" +\n+                        \"should be thrown, as this class is not supported \" +\n+                        \"on current platform. But \" + e.getClass().getName() +\n+                        \" has been thrown instead.\");\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/DesktopSupportTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,116 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6255196\n+ * @summary Verifies the function of methods mail() and mail(java.net.URI uri).\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MailTest\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import java.net.URI;\n+import javax.swing.JPanel;\n+\n+public class MailTest extends JPanel {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+            This test could launch the mail client to compose mail\n+            with and without filling the message fields.\n+            After test execution close the mail composing windows if they\n+            were launched by test.\n+            If you see any unexpected EXCEPTION messages in the output\n+            press Fail. Otherwise press Pass.\n+            \"\"\";\n+\n+    private MailTest() {\n+        if (!Desktop.isDesktopSupported()) {\n+            PassFailJFrame.log(\"Class java.awt.Desktop is not supported on \" +\n+                    \"current platform. Farther testing will not be performed\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+        if (!desktop.isSupported(Desktop.Action.MAIL)) {\n+            PassFailJFrame.log(\"Action.MAIL is not supported.\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        \/*\n+         * Part 1: launch the mail composing window without a mailto URI.\n+         *\/\n+        try {\n+            desktop.mail();\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+\n+        \/*\n+         * Part 2: launch the mail composing window with a mailto URI.\n+         *\/\n+        URI testURI = null;\n+        try {\n+            testURI = new URI(\"mailto\", \"foo@bar.com?subject=test subject\" +\n+                    \"&cc=foocc@bar.com&body=test body\", null);\n+            desktop.mail(testURI);\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        } catch (java.net.URISyntaxException use) {\n+            \/\/ Should not reach here.\n+            PassFailJFrame.log(\"EXCEPTION: \" + use.getMessage());\n+        }\n+\n+        \/*\n+         * Part 3: try to launch the mail composing window with a URI with a\n+         * scheme which is not \"mailto\":\n+         *   http:\/\/java.net.\n+         * An IOException should be thrown in this case.\n+         *\/\n+        try {\n+            testURI = URI.create(\"http:\/\/java.com\");\n+            PassFailJFrame.log(\"Try to mail: \" + testURI);\n+            desktop.mail(testURI);\n+        } catch (IllegalArgumentException e) {\n+            PassFailJFrame.log(\"Caught expected IllegalArgumentException\");\n+        } catch (IOException ioe) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + ioe.getMessage());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Mail Test\")\n+                .splitUI(MailTest::new)\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(40)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/MailTest.java","additions":116,"deletions":0,"binary":false,"changes":116,"status":"added"},{"patch":"@@ -0,0 +1,114 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6255196\n+ * @summary Verifies the function of method open(java.io.File file).\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual\/othervm OpenTest\n+ *\/\n+\n+import java.awt.Desktop;\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.swing.JPanel;\n+\n+public class OpenTest extends JPanel {\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+            This test could open the user's home directory and a .txt file.\n+            After test execution, close the native application windows that\n+            are used to open the directory and .txt file if they were launched\n+            by the test.\n+            If you see any unexpected EXCEPTION messages in the output press Fail.\n+            Otherwise press Pass.\n+            \"\"\";\n+\n+    public OpenTest() {\n+        if (!Desktop.isDesktopSupported()) {\n+            PassFailJFrame.log(\"Class java.awt.Desktop is not supported on \" +\n+                    \"current platform. Further testing will not be performed\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        Desktop desktop = Desktop.getDesktop();\n+\n+        \/*\n+         * Part 1: open a directory, which should launch the system default\n+         * file explorer.\n+         *\n+         * On Windows platforms, the default file explorer is explorer;\n+         * on UNIX platforms with Gnome installed and running, the default\n+         * file explorer is Nautilus.\n+         *\/\n+        File userHome = new File(System.getProperty(\"user.home\"));\n+\n+        try {\n+            PassFailJFrame.log(\"Try to open \" + userHome);\n+            desktop.open(userHome);\n+            PassFailJFrame.log(\"Succeed.\");\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+\n+        \/*\n+         * Part 2: open a normal .txt file, which should launch the registered\n+         * application for .txt files.\n+         *\/\n+        \/\/ Create a temp .txt file for test.\n+        File testFile = null;\n+        try {\n+            PassFailJFrame.log(\"Creating temporary file\");\n+            testFile = File.createTempFile(\"JDIC-test\", \".txt\",\n+                    new File(System.getProperty(\"java.io.tmpdir\")));\n+            testFile.deleteOnExit();\n+        } catch (java.io.IOException ioe) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + ioe.getMessage());\n+            PassFailJFrame.log(\"Failed to create test file\");\n+        }\n+\n+        try {\n+            PassFailJFrame.log(\"Try to open \" + testFile);\n+            desktop.open(testFile);\n+            PassFailJFrame.log(\"Succeed.\");\n+        } catch (IOException e) {\n+            PassFailJFrame.log(\"EXCEPTION: \" + e.getMessage());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame.builder()\n+                .title(\"Mail Test\")\n+                .splitUI(OpenTest::new)\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 1)\n+                .columns(40)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Desktop\/OpenTest.java","additions":114,"deletions":0,"binary":false,"changes":114,"status":"added"},{"patch":"@@ -0,0 +1,140 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6213128\n+ * @key headful\n+ * @summary Tests that choice is releasing input capture when a modal\n+ *          dialog is shown\n+ * @run main ChoiceModalDialogTest\n+ *\/\n+\n+import java.awt.Choice;\n+import java.awt.Dialog;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.TextField;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+public class ChoiceModalDialogTest {\n+    static Frame f;\n+    static Dialog d;\n+    static volatile boolean keyOK;\n+    static volatile boolean mouseOK;\n+    static TextField tf;\n+    static Choice c;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot r;\n+        try {\n+            r = new Robot();\n+            r.setAutoDelay(100);\n+            EventQueue.invokeAndWait(() -> {\n+                f = new Frame(\"Frame\");\n+                c = new Choice();\n+                f.setBounds(100, 300, 300, 200);\n+                f.setLayout(new FlowLayout());\n+                tf = new TextField(3);\n+                f.add(tf);\n+\n+                c.add(\"1\");\n+                c.add(\"2\");\n+                c.add(\"3\");\n+                c.add(\"4\");\n+                f.add(c);\n+\n+                tf.addFocusListener(new FocusAdapter() {\n+                    public void focusLost(FocusEvent ev) {\n+                        d = new Dialog(f, \"Dialog\", true);\n+                        d.setBounds(300, 300, 200, 150);\n+                        d.addKeyListener(new KeyAdapter() {\n+                            public void keyPressed(KeyEvent ev) {\n+                                keyOK = true;\n+                            }\n+                        });\n+                        d.addMouseListener(new MouseAdapter() {\n+                            public void mousePressed(MouseEvent ev) {\n+                                mouseOK = true;\n+                            }\n+                        });\n+                        d.setVisible(true);\n+                    }\n+                });\n+\n+                f.setVisible(true);\n+                f.toFront();\n+            });\n+            r.waitForIdle();\n+            r.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                r.mouseMove(tf.getLocationOnScreen().x + tf.getSize().width \/ 2,\n+                        tf.getLocationOnScreen().y + tf.getSize().height \/ 2);\n+            });\n+            r.waitForIdle();\n+            r.delay(500);\n+            EventQueue.invokeAndWait(() -> {\n+                r.mouseMove(c.getLocationOnScreen().x + c.getSize().width - 4,\n+                        c.getLocationOnScreen().y + c.getSize().height \/ 2);\n+                r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            });\n+            r.waitForIdle();\n+            r.delay(500);\n+            EventQueue.invokeAndWait(() -> {\n+                r.mouseMove(d.getLocationOnScreen().x + d.getSize().width \/ 2,\n+                        d.getLocationOnScreen().y + d.getSize().height \/ 2);\n+                r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                r.keyPress(KeyEvent.VK_A);\n+                r.keyRelease(KeyEvent.VK_A);\n+            });\n+            r.waitForIdle();\n+            r.delay(500);\n+            if (!mouseOK) {\n+                throw new RuntimeException(\"Test Failed due to Mouse release failure!\");\n+            }\n+            if (!keyOK) {\n+                throw new RuntimeException(\"Test Failed due to Key release failure!\");\n+            }\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (d != null) {\n+                    d.dispose();\n+                }\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/ChoiceModalDialogTest.java","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4255230 4191946\n+ * @summary Tests to verify Dialog inherits background from its owner\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DialogBackgroundTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Dialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.TextField;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+public class DialogBackgroundTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Perform the following steps:\n+                1) Select \"New Frame\" from the \"File\" menu of the\n+                   \"TreeCopy Frame #1\" frame.\n+                2) Select \"Configure\" from the \"File\" menu in the\n+                   *new* frame.\n+                   If label text \"This is a label:\" in the appeared\n+                   \"Configuration Dialog\" dialog has a grey background\n+                   test PASSES, otherwise it FAILS\n+                   \"\"\";\n+        TreeCopy treeCopy = new TreeCopy(++TreeCopy.windowCount, null);\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(treeCopy)\n+                .logArea(8)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n+class TreeCopy extends Frame implements ActionListener {\n+    TextField tfRoot;\n+    ConfigDialog configDlg;\n+    MenuItem miConfigure = new MenuItem(\"Configure...\");\n+    MenuItem miNewWindow = new MenuItem(\"New Frame\");\n+    static int windowCount = 0;\n+    Window parent;\n+\n+    public TreeCopy(int windowNum, Window myParent) {\n+        super();\n+        setTitle(\"TreeCopy Frame #\" + windowNum);\n+        MenuBar mb = new MenuBar();\n+        Menu m = new Menu(\"File\");\n+        configDlg = new ConfigDialog(this);\n+        parent = myParent;\n+\n+        m.add(miConfigure);\n+        m.add(miNewWindow);\n+        miConfigure.addActionListener(this);\n+        miNewWindow.addActionListener(this);\n+        mb.add(m);\n+        setMenuBar(mb);\n+        m.addActionListener(this);\n+\n+        tfRoot = new TextField();\n+        tfRoot.setEditable(false);\n+        add(tfRoot);\n+\n+        addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent we) {\n+                dispose();\n+            }\n+        });\n+\n+        setSize(200, 100);\n+        setLocationRelativeTo(parent);\n+    }\n+\n+    public void actionPerformed(ActionEvent ae) {\n+        Object source = ae.getSource();\n+\n+        if (source == miConfigure) {\n+            configDlg.setVisible(true);\n+            if (configDlg.getBackground() != configDlg.labelColor)\n+                PassFailJFrame.log(\"FAIL: Test failed!!!\");\n+        } else if (source == miNewWindow) {\n+            new TreeCopy(++windowCount, this).setVisible(true);\n+        }\n+    }\n+}\n+\n+class ConfigDialog extends Dialog implements ActionListener {\n+    public Button okButton;\n+    public Button cancelButton;\n+    public Label l2;\n+    public Color labelColor;\n+\n+    public ConfigDialog(Frame parent) {\n+        super(parent, \"Configuration Dialog\");\n+        okButton = new Button(\"OK\");\n+        cancelButton = new Button(\"Cancel\");\n+        l2 = new Label(\"This is a label:\");\n+\n+        setLayout(new FlowLayout());\n+        add(l2);\n+        add(okButton);\n+        add(cancelButton);\n+\n+        okButton.addActionListener(this);\n+        cancelButton.addActionListener(this);\n+\n+        pack();\n+        labelColor = l2.getBackground();\n+    }\n+\n+    public void actionPerformed(ActionEvent ae) {\n+        dispose();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/DialogBackgroundTest.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4232374\n+ * @summary Tests that dismissing a modal dialog does not enable\n+ *          disabled components\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual EnabledResetTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class EnabledResetTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Press \"Create Child\" twice to create three windows\n+                   Verify that the parent windows are disabled\n+                2. Press \"Create Modal Dialog\"\n+                   Verify that the parent windows are disabled\n+                3. Press \"enable\"\n+                   Verify that no windows accept mouse events\n+                4. Press \"ok\"\n+                   Verify that the first window is still disabled\n+                   If all the verifications are done, then test is\n+                   PASSED, else test fails.\n+                   \"\"\";\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(new ChildDialog(1, null))\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n+class ChildDialog extends Frame implements ActionListener {\n+    Window parent;\n+    int id;\n+    Button b, c, d;\n+\n+    public ChildDialog(int frameNumber, Window myParent) {\n+        super();\n+        id = frameNumber;\n+        parent = myParent;\n+\n+        setTitle(\"Frame Number \" + id);\n+\n+        b = new Button(\"Dismiss me\");\n+        c = new Button(\"Create Child\");\n+        d = new Button(\"Create Modal Dialog\");\n+\n+        setLayout(new BorderLayout());\n+        add(\"North\", c);\n+        add(\"Center\", d);\n+        add(\"South\", b);\n+        pack();\n+\n+        b.addActionListener(this);\n+        c.addActionListener(this);\n+        d.addActionListener(this);\n+    }\n+\n+    public void setVisible(boolean b) {\n+        if (parent != null) {\n+            if (b) {\n+                parent.setEnabled(false);\n+            } else {\n+                parent.setEnabled(true);\n+                parent.requestFocus();\n+            }\n+        }\n+\n+        super.setVisible(b);\n+    }\n+\n+    public void dispose() {\n+        if (parent != null) {\n+            parent.setEnabled(true);\n+            parent.requestFocus();\n+        }\n+        super.dispose();\n+    }\n+\n+\n+    public void actionPerformed(ActionEvent evt) {\n+        if (evt.getSource() == c) {\n+            (new ChildDialog(id + 1, this)).setVisible(true);\n+        } else if (evt.getSource() == d) {\n+            Dialog D = new Dialog(this, \"Modal Dialog \");\n+            D.setLayout(new FlowLayout());\n+            Button b = new Button(\"ok\");\n+            Button e = new Button(\"enable\");\n+            D.add(b);\n+            D.add(e);\n+            D.setModal(true);\n+            D.pack();\n+            b.addActionListener(this);\n+            e.addActionListener(this);\n+            D.setVisible(true);\n+        } else if (evt.getSource() == b) {\n+            dispose();\n+        } else if (evt.getSource() instanceof Button) {\n+            if (\"ok\".equals(evt.getActionCommand())) {\n+                Button target = (Button) evt.getSource();\n+                Window w = (Window) target.getParent();\n+                w.dispose();\n+            }\n+            if (\"enable\".equals(evt.getActionCommand())) {\n+                parent.setEnabled(true);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/EnabledResetTest.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4414105\n+ * @summary Tests that FileDialog returns null when cancelled\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FileDialogGetFileTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+\n+public class FileDialogGetFileTest {\n+    static FileDialog fd;\n+    static Frame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                1. Open FileDialog from \"Show File Dialog\" button.\n+                2. Click cancel button without selecting any file\/folder.\n+                3. If FileDialog.getFile return null then test PASSES,\n+                   else test FAILS automatically.\n+                   \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(initialize())\n+                .logArea(4)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame initialize() {\n+        frame = new Frame(\"FileDialog GetFile test\");\n+        fd = new FileDialog(frame);\n+        fd.setFile(\"FileDialogGetFileTest.html\");\n+        fd.setBounds(100, 100, 400, 400);\n+        Button showBtn = new Button(\"Show File Dialog\");\n+        frame.add(showBtn);\n+        frame.pack();\n+        showBtn.addActionListener(e -> {\n+            fd.setVisible(true);\n+            if (fd.getFile() != null) {\n+                PassFailJFrame.forceFail(\"Test failed: FileDialog returned non-null value\");\n+            } else {\n+                PassFailJFrame.log(\"Test Passed!\");\n+            }\n+        });\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Dialog\/FileDialogGetFileTest.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4212687\n+ * @summary Verifies that calling EventQueue.push() and EventQueue.pop()\n+ *          does not deadlock.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PushPopDeadlock\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+\n+public class PushPopDeadlock {\n+    static int counter = 0;\n+    static Robot robot;\n+    static Frame f;\n+    static Label l;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        String INSTRUCTIONS = \"\"\"\n+                Click rapidly in the Frame labeled 'Click Here!'.\n+                The number in the Frame should continue to increase. If the number\n+                stops increasing (remains at a constant value), the test fails.\n+                \"\"\";\n+\n+        PassFailJFrame pfJFrame = PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(PushPopDeadlock::createUI)\n+                .build();\n+        PushPopDeadlock.test();\n+        pfJFrame.awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        f = new Frame(\"Click Here!\");\n+        l = new Label(\"Counter: \" + counter);\n+        f.add(l);\n+        f.setSize(200, 200);\n+        return f;\n+    }\n+\n+    public static void test() {\n+        EventQueue q = new EventQueue() {\n+            public void push(EventQueue queue) {\n+                super.push(queue);\n+                pop();\n+            }\n+        };\n+        EventQueue q2 = new EventQueue();\n+\n+        Toolkit.getDefaultToolkit().getSystemEventQueue().push(q);\n+\n+        new Thread(() -> {\n+            while (true) {\n+                robot.delay(500);\n+                l.setText(\"Counter: \" + ++counter);\n+                q.push(q2);\n+                try {\n+                    Thread.currentThread().sleep(500);\n+                } catch (InterruptedException e) {\n+                    return;\n+                }\n+            }\n+        }).start();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/EventQueue\/PushPopDeadlock\/PushPopDeadlock.java","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 6227750\n+ * @summary Tests that FileDialog can be closed by clicking the 'close' (X) button\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DoubleActionCloseX\n+ *\/\n+\n+public class DoubleActionCloseX {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                NOTE: On Linux and Mac, there is no 'close'(X) button\n+                      when file dialog is visible, press Pass.\n+\n+                Click the 'Open File Dialog' button to open FileDialog.\n+                A file dialog will appear on the screen.\n+                Click on the 'close'(X) button.\n+                The dialog should be closed.\n+                If not, the test failed, press Fail otherwise press Pass.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"DoubleActionCloseX Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(DoubleActionCloseX::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"DoubleActionCloseX Test\");\n+        Button b = new Button(\"Open File Dialog\");\n+        FileDialog fd = new FileDialog(f);\n+        b.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                fd.setVisible(true);\n+            }\n+        });\n+        f.add(b);\n+        f.setSize(300, 200);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/DoubleActionCloseX.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.util.concurrent.CountDownLatch;\n+\n+\/*\n+ * @test\n+ * @bug 5097243\n+ * @summary Tests that FileDialog can be closed by ESC any time\n+ * @key headful\n+ * @run main DoubleActionESC\n+ *\/\n+\n+public class DoubleActionESC {\n+    private static Frame f;\n+    private static Button showBtn;\n+    private static FileDialog fd;\n+    private static Robot robot;\n+    private static volatile Point p;\n+    private static volatile Dimension d;\n+    private static volatile CountDownLatch latch;\n+    private static final int REPEAT_COUNT = 2;\n+\n+    public static void main(String[] args) throws Exception {\n+        latch = new CountDownLatch(1);\n+\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+\n+            robot.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                p = showBtn.getLocationOnScreen();\n+                d = showBtn.getSize();\n+            });\n+\n+            for (int i = 0; i < REPEAT_COUNT; ++i) {\n+                Thread thread = new Thread(() -> {\n+                    robot.mouseMove(p.x + d.width \/ 2, p.y + d.height \/ 2);\n+                    robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                    robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                });\n+                thread.start();\n+                robot.delay(3000);\n+\n+                Thread thread1 = new Thread(() -> {\n+                    robot.keyPress(KeyEvent.VK_ESCAPE);\n+                    robot.keyRelease(KeyEvent.VK_ESCAPE);\n+                    robot.waitForIdle();\n+                });\n+                thread1.start();\n+                robot.delay(3000);\n+            }\n+\n+            latch.await();\n+            if (fd.isVisible()) {\n+                throw new RuntimeException(\"File Dialog is not closed\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        f = new Frame(\"DoubleActionESC Test\");\n+        showBtn = new Button(\"Show File Dialog\");\n+        fd = new FileDialog(f);\n+        showBtn.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                if (e.getSource() == showBtn) {\n+                    fd.setSize(200, 200);\n+                    fd.setLocation(200, 200);\n+                    fd.setVisible(true);\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        f.add(showBtn);\n+        f.setSize(300, 200);\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/DoubleActionESC.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.FileDialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4906972\n+ * @summary Tests using of JNI reference to peer object.\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestFileDialogDupJNIRef\n+ *\/\n+\n+public class TestFileDialogDupJNIRef {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                This is a crash test.\n+                After test started you will see 'Test Frame' with one button.\n+                1. Click the button to open FileDialog.\n+                2. Go to the dialog and choose any directory with some files in it..\n+                3. Click on any file to highlight it.\n+                4. Click on the file again to rename.\n+                5. Leave the file in edit mode and click Open button\n+\n+                If there was no crash the test passed, Press Pass.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"TestFileDialogDupJNIRef Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(TestFileDialogDupJNIRef::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame frame = new Frame(\"TestFileDialogDupJNIRef Test Frame\");\n+        Button open = new Button(\"Open File Dialog\");\n+\n+        open.addActionListener(new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    FileDialog fd = new FileDialog(frame);\n+                    fd.setVisible(true);\n+                }\n+            });\n+\n+        frame.setLayout(new FlowLayout());\n+        frame.add(open);\n+        frame.setSize(250, 70);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/FileDialog\/TestFileDialogDupJNIRef.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,245 @@\n+\/*\n+ * Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+* @test\n+* @bug 6385277\n+* @key headful\n+* @summary   Tests that activation happens on correct AppContext.\n+* @modules java.desktop\/sun.awt\n+* @run main ActivateOnProperAppContextTest\n+*\/\n+\n+import sun.awt.AppContext;\n+import sun.awt.SunToolkit;\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Cursor;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.InputEvent;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+public class ActivateOnProperAppContextTest {\n+    static Robot robot;\n+    SunToolkit toolkit;\n+\n+    ThreadGroup threadGroup = new ThreadGroup(\"Test_Thread_Group\");\n+    AppContext appContext;\n+    Frame frame;\n+    volatile boolean passed = true;\n+    AtomicBoolean cond = new AtomicBoolean(false);\n+\n+    public static void main(String[] args) throws Exception {\n+        ActivateOnProperAppContextTest app = new ActivateOnProperAppContextTest();\n+        robot = new Robot();\n+        app.start();\n+    }\n+\n+    public void start() {\n+        toolkit = (SunToolkit)Toolkit.getDefaultToolkit();\n+\n+        Runnable runnable = new Runnable() {\n+                public void run() {\n+                    test();\n+\n+                    synchronized (cond) {\n+                        cond.set(true);\n+                        cond.notifyAll();\n+                    }\n+                }\n+            };\n+\n+        Thread thread = new Thread(threadGroup, runnable, \"Test Thread\");\n+\n+        synchronized (cond) {\n+\n+            thread.start();\n+\n+            while (!cond.get()) {\n+                try {\n+                    cond.wait();\n+                } catch (InterruptedException ie) {\n+                    ie.printStackTrace();\n+                }\n+            }\n+        }\n+\n+        if (passed) {\n+            System.out.println(\"Test passed.\");\n+        } else {\n+            throw new TestFailedException(\"Test failed!\");\n+        }\n+    }\n+\n+    void test() {\n+        appContext = SunToolkit.createNewAppContext();\n+        System.out.println(\"Created new AppContext: \" + appContext);\n+\n+        frame = new Frame(\"ActivateOnProperAppContextTest Frame\") {\n+                public boolean isActive() {\n+                    verifyAppContext(\"Frame.isActive()\");\n+                    return super.isActive();\n+                }\n+                public boolean isFocused() {\n+                    verifyAppContext(\"Frame.isFocused()\");\n+                    return super.isFocused();\n+                }\n+                public boolean isFocusable() {\n+                    verifyAppContext(\"Frame.isFocusable()\");\n+                    return super.isFocusable();\n+                }\n+                public Window getOwner() {\n+                    verifyAppContext(\"Frame.getOwner()\");\n+                    return super.getOwner();\n+                }\n+                public boolean isEnabled() {\n+                    verifyAppContext(\"Frame.isEnabled()\");\n+                    return super.isEnabled();\n+                }\n+                public boolean isVisible() {\n+                    verifyAppContext(\"Frame.isVisible()\");\n+                    return super.isVisible();\n+                }\n+                public Container getParent() {\n+                    verifyAppContext(\"Frame.getParent()\");\n+                    return super.getParent();\n+                }\n+                public Cursor getCursor() {\n+                    verifyAppContext(\"Frame.getCursor()\");\n+                    return super.getCursor();\n+                }\n+                public Point getLocation() {\n+                    verifyAppContext(\"Frame.getLocation()\");\n+                    return super.getLocation();\n+                }\n+                public Point getLocationOnScreen() {\n+                    verifyAppContext(\"Frame.getLocationOnScreen()\");\n+                    return super.getLocationOnScreen();\n+                }\n+            };\n+        Window window = new Window(frame) {\n+                public boolean isFocused() {\n+                    verifyAppContext(\"Window.isFocused()\");\n+                    return super.isFocused();\n+                }\n+                public boolean isFocusable() {\n+                    verifyAppContext(\"Window.isFocusable()\");\n+                    return super.isFocusable();\n+                }\n+                public Window getOwner() {\n+                    verifyAppContext(\"Window.getOwner()\");\n+                    return super.getOwner();\n+                }\n+                public boolean isEnabled() {\n+                    verifyAppContext(\"Window.isEnabled()\");\n+                    return super.isEnabled();\n+                }\n+                public boolean isVisible() {\n+                    verifyAppContext(\"Window.isVisible()\");\n+                    return super.isVisible();\n+                }\n+                public Container getParent() {\n+                    verifyAppContext(\"Window.getParent()\");\n+                    return super.getParent();\n+                }\n+                public Cursor getCursor() {\n+                    verifyAppContext(\"Window.getCursor()\");\n+                    return super.getCursor();\n+                }\n+                public Point getLocation() {\n+                    verifyAppContext(\"Window.getLocation()\");\n+                    return super.getLocation();\n+                }\n+                public Point getLocationOnScreen() {\n+                    verifyAppContext(\"Window.getLocationOnScreen()\");\n+                    return super.getLocationOnScreen();\n+                }\n+            };\n+        Button button = new Button(\"button\");\n+        Label label = new Label(\"label\");\n+\n+        window.setLayout(new FlowLayout());\n+        window.add(button);\n+        window.add(label);\n+        window.setLocation(800, 0);\n+        window.pack();\n+        window.setVisible(true);\n+\n+        frame.setBounds(800, 100, 100, 50);\n+        frame.setVisible(true);\n+\n+        toolkit.realSync();\n+\n+        \/*\n+         * When the label is clicked in the window some of\n+         * the owner's public method get called.\n+         *\/\n+        clickOn(label);\n+    }\n+\n+    void verifyAppContext(String methodName) {\n+        AppContext ac = AppContext.getAppContext();\n+        println(methodName + \" called on AppContext: \" + ac);\n+\n+        if (ac != appContext) {\n+            passed = false;\n+            System.err.println(\"Test failed: \" + methodName + \" is called on wrong AppContext!\");\n+            Thread.dumpStack();\n+        }\n+    }\n+\n+    void clickOn(Component c) {\n+        Point p = c.getLocationOnScreen();\n+        Dimension d = c.getSize();\n+\n+        robot.mouseMove(p.x + (int)(d.getWidth()\/2), p.y + (int)(d.getHeight()\/2));\n+\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(20);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        toolkit.realSync();\n+    }\n+\n+    void println(final String msg) {\n+        SunToolkit.executeOnEventHandlerThread(frame, new Runnable() {\n+                public void run() {\n+                    System.out.println(msg);\n+                }\n+            });\n+    }\n+}\n+\n+class TestFailedException extends RuntimeException {\n+    TestFailedException(String msg) {\n+        super(msg);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Focus\/ActivateOnProperAppContextTest.java","additions":245,"deletions":0,"binary":false,"changes":245,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4380809\n+ * @summary Focus disappears after deiconifying frame\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DeiconifyTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+\n+public class DeiconifyTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         1. Activate frame \\\"Main frame\\\"\n+         be sure that button has focus\n+         2. Minimize frame and then restore it.\n+         If the button has focus then test passed, else failed\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"DeiconifyTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(DeiconifyTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI()   {\n+        Frame frame = new Frame(\"Main frame\");\n+        Button button = new Button(\"button\");\n+        button.addFocusListener(new FocusListener() {\n+              public void focusGained(FocusEvent fe) {\n+                  println(\"focus gained\");\n+              }\n+              public void focusLost(FocusEvent fe) {\n+                  println(\"focus lost\");\n+              }\n+          });\n+        frame.add(button);\n+        frame.setSize(300, 100);\n+\n+        return frame;\n+    }\n+\n+    static void println(String messageIn) {\n+        PassFailJFrame.log(messageIn);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/DeiconifyTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4060975\n+ * @summary tests that a component doesn't lose focus on resize\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FocusChangeOnResizeTest\n+*\/\n+\n+import java.util.List;\n+\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+import java.awt.TextField;\n+import java.awt.Window;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+\n+public class FocusChangeOnResizeTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+          For the Frame and the Dialog:\n+          Press the LOWER BUTTON to resize the Frame or Dialog programmatically.\n+          Give the focus to the LOWER BUTTON and resize the Frame or Dialog manually.\n+          If the LOWER BUTTON always has focus after resize\n+          (for both frame and dialog) the test passes.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"PopupMenu Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(FocusChangeOnResizeTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static List<Window> createTestUI() {\n+        Frame frame = new Frame(\"FocusChangeOnResizeTest frame\");\n+        Dialog dialog = new Dialog(frame, \"Test dialog\");\n+        frame.add(new TestPanel(frame));\n+        dialog.add(new TestPanel(dialog));\n+        frame.setBounds (150, 200, 200, 200);\n+        dialog.setBounds (150, 500, 200, 200);\n+        return List.of(frame, dialog);\n+    }\n+\n+    static FocusListener eventLogger = new FocusListener() {\n+        public void focusGained(FocusEvent e) {\n+            PassFailJFrame.log(e.toString());\n+        }\n+        public void focusLost(FocusEvent e) {\n+           PassFailJFrame.log(e.toString());\n+        }\n+    };\n+}\n+\n+class TestPanel extends Panel {\n+\n+    TextField textField = new TextField(\"TEXT FIELD\");\n+    Button button1 = new Button(\"UPPER BUTTON\");\n+    Button button2 = new Button(\"LOWER BUTTON\");\n+\n+    public TestPanel(Window parent) {\n+        setLayout(new GridLayout(3, 1));\n+        add(textField);\n+        add(button1);\n+        add(button2);\n+        textField.setName(\"TEXT FIELD\");\n+        button1.setName(\"UPPER BUTTON\");\n+        button2.setName(\"LOWER BUTTON\");\n+        textField.addFocusListener(FocusChangeOnResizeTest.eventLogger);\n+        button1.addFocusListener(FocusChangeOnResizeTest.eventLogger);\n+        button2.addFocusListener(FocusChangeOnResizeTest.eventLogger);\n+\n+        button2.addActionListener(new Resizer(parent));\n+    }\n+}\n+\n+class Resizer implements ActionListener {\n+    Window target;\n+\n+    public Resizer(Window window) {\n+        target = window;\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        target.setSize(200, 100);\n+        target.doLayout();\n+        target.pack();\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/FocusChangeOnResizeTest.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4157017\n+ * @summary Checks whether focus can be traversed when component not visible\n+           within parent container.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual HiddenTraversalTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+\n+public class HiddenTraversalTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         Examine the Frame. If six buttons are visible, resize the frame\n+         so that only four are visible. If fewer than six buttons are\n+         visible, do nothing.\\n\n+         Now, repeatedly press the tab key. Focus should cycle through the\n+         visible and invisible buttons. If after six presses of the tab\n+         button 'Button 0' has focus, the test passes. If focus is instead\n+         stuck at 'Button 3', the test fails.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"HiddenTraversalTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(HiddenTraversalTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame f = new Frame(\"Focus test\");\n+        Panel p = new Panel(new FlowLayout());\n+        for (int i = 0; i < 6; i++) {\n+            p.add(new Button(\"Button \" + i));\n+        }\n+        f.add(p);\n+        f.setSize(200, 100);\n+        return f;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/HiddenTraversalTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,80 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4402942\n+ * @summary After deactivation and activation of frame, focus should be restored correctlty\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual KillFocusTest\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.TextField;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+\n+public class KillFocusTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+         After starting the test you should see \\\"Test Frame\\\"\n+         with the \\\"Click me\\\" text field.\n+         Click on this text field and try to type something in it.\n+         Make sure that the field receives focus and you can enter text in it.\n+         Click on any non-java window.\n+         Click on \\\"Click me\\\" text field to return focus to it\n+         If the caret is in the text field and you are able to type\n+         in it then press pass else press fail.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"KillFocusTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(KillFocusTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+\n+        Frame frame = new Frame(\"KillFocusTest Frame\");\n+        TextField textField = new TextField(\"Click me\", 10);\n+        textField.addFocusListener(new FocusListener() {\n+            public void focusGained(FocusEvent fe) {\n+                PassFailJFrame.log(\"Focus gained\");\n+            }\n+            public void focusLost(FocusEvent fe) {\n+                PassFailJFrame.log(\"Focus lost\");\n+            }\n+        });\n+        frame.add(textField);\n+        frame.setSize(200, 100);\n+        return frame;\n+    }\n+\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/KillFocusTest.java","additions":80,"deletions":0,"binary":false,"changes":80,"status":"added"},{"patch":"@@ -0,0 +1,261 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4124119\n+ * @summary Checks that lightweight components do not lose focus after\n+        dragging the frame by using the mouse.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual LightweightFocusLostTest\n+*\/\n+\n+import java.awt.AWTEvent;\n+import java.awt.AWTEventMulticaster;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Cursor;\n+import java.awt.Label;\n+import java.awt.Dimension;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.SystemColor;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\n+public class LightweightFocusLostTest {\n+\n+     private static final String INSTRUCTIONS = \"\"\"\n+        Steps to try to reproduce this problem:\n+        When this test is run a window will display (Test Focus).\n+        Click in the text field to give it the focus (a blinking cursor\n+        will appear) and then move the frame with the mouse. The text field\n+        (component which uses a lightweight component) should still have focus.\n+        You should still see the blinking cursor in the text field after the\n+        frame has been moved. If this is the behavior that you observe, the\n+        test has passed, Press the Pass button. Otherwise the test has failed,\n+        Press the Fail button.\"\"\";\n+\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"LightweightFocusLostTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 5)\n+                .columns(35)\n+                .testUI(LightweightFocusLostTest::createTestUI)\n+                .logArea()\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createTestUI() {\n+        Frame f = new Frame(\"LightweightFocusLostTest\");\n+        f.setLayout(new BorderLayout());\n+        String sLabel = \"Lightweight component below (text field)\";\n+        Label TFL = new Label(sLabel, Label.LEFT);\n+        f.add(TFL, BorderLayout.NORTH);\n+        SimpleTextField canvas = new SimpleTextField(30, 5);\n+        f.add(canvas, BorderLayout.CENTER);\n+        f.setSize(new Dimension(300,125));\n+        f.requestFocus();\n+        return f;\n+\n+    }\n+\n+}\n+\n+class SimpleTextField extends Component implements Runnable {\n+    int border;\n+    int length;\n+    Font font;\n+    FontMetrics fontM;\n+    char[] buffer;\n+    int bufferIx;\n+\n+    boolean hasFocus;\n+    boolean cursorOn;\n+\n+    SimpleTextField(int len, int bor) {\n+        super();\n+        border = bor;\n+        length = len;\n+        buffer = new char[len];\n+        font = getFont();\n+        if (font == null) {\n+            font = new Font(\"Dialog\", Font.PLAIN, 20);\n+        }\n+        fontM = getFontMetrics(font);\n+\n+        \/\/ Listen for key and mouse events.\n+        this.addMouseListener(new MouseEventHandler());\n+        this.addFocusListener(new FocusEventHandler());\n+        this.addKeyListener(new KeyEventHandler());\n+\n+        \/\/ Set text cursor.\n+        setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR));\n+\n+        \/\/ Start the thread that blinks the cursor.\n+        (new Thread(this)).start();\n+    }\n+\n+    public Dimension getMinimumSize() {\n+        \/\/ The minimum height depends on the point size.\n+        int w = fontM.charWidth('m') * length;\n+        return new Dimension(w + 2 * border, fontM.getHeight() + 2 * border);\n+    }\n+    public Dimension getPreferredSize() {\n+        return getMinimumSize();\n+    }\n+    public Dimension getMaximumSize() {\n+        return new Dimension(Short.MAX_VALUE, getPreferredSize().height);\n+    }\n+\n+    public boolean isFocusTraversable() {\n+        return true;\n+    }\n+\n+    public void paint(Graphics g) {\n+        int y = (getSize().height-fontM.getHeight())\/2;\n+\n+        \/\/ Clear the background using the text background color.\n+        g.setColor(SystemColor.text);\n+        g.fillRect(0, 0, getSize().width, getSize().height);\n+\n+        g.setFont(font);\n+        g.setColor(SystemColor.textText);\n+        g.drawChars(buffer, 0, bufferIx, border, y + fontM.getAscent());\n+\n+        \/\/ Draw blinking cursor.\n+        int x = fontM.charsWidth(buffer, 0, bufferIx) + border;\n+        int w = fontM.charWidth('c');\n+        if (hasFocus) {\n+            g.setColor(getForeground());\n+            g.fillRect(x, y, w, fontM.getHeight());\n+            if (cursorOn) {\n+                if (bufferIx < buffer.length) {\n+                    g.setColor(SystemColor.text);\n+                    g.fillRect(x + 2, y + 2, w - 4, fontM.getHeight() - 4);\n+                }\n+            }\n+        }\n+    }\n+\n+    \/\/ Event handlers\n+    class MouseEventHandler extends MouseAdapter {\n+        public void mousePressed(MouseEvent evt) {\n+            requestFocus();\n+        }\n+    }\n+    class FocusEventHandler extends FocusAdapter {\n+        public void focusGained(FocusEvent evt) {\n+            PassFailJFrame.log(\"Focus gained: \" + evt);\n+\n+            hasFocus = true;\n+            repaint();\n+        }\n+        public void focusLost(FocusEvent evt) {\n+            PassFailJFrame.log(\"Focus lost: \" + evt);\n+            hasFocus = false;\n+            repaint();\n+        }\n+    }\n+    class KeyEventHandler extends KeyAdapter {\n+        public void keyPressed(KeyEvent evt) {\n+            switch (evt.getKeyCode()) {\n+              case KeyEvent.VK_DELETE:\n+              case KeyEvent.VK_BACK_SPACE:\n+                if (bufferIx > 0) {\n+                    bufferIx--;\n+                    repaint();\n+                }\n+                break;\n+              case KeyEvent.VK_ENTER:\n+                ActionEvent action =\n+                    new ActionEvent(SimpleTextField.this,\n+                                    ActionEvent.ACTION_PERFORMED,\n+                                    String.valueOf(buffer, 0, bufferIx));\n+                \/\/ Send contents of buffer to listeners\n+                processEvent(action);\n+                break;\n+              default:\n+                repaint();\n+            }\n+        }\n+        public void keyTyped(KeyEvent evt) {\n+            if (bufferIx < buffer.length\n+                    && !evt.isActionKey()\n+                    && !Character.isISOControl(evt.getKeyChar())) {\n+                buffer[bufferIx++] = evt.getKeyChar();\n+            }\n+        }\n+    }\n+\n+    \/\/ Support for Action Listener.\n+    ActionListener actionListener;\n+\n+    public void addActionListener(ActionListener l) {\n+        actionListener = AWTEventMulticaster.add(actionListener, l);\n+    }\n+\n+    \/\/ Override processEvent() to deal with ActionEvent.\n+    protected void processEvent(AWTEvent evt) {\n+        if (evt instanceof ActionEvent) {\n+            processActionEvent((ActionEvent)evt);\n+        } else {\n+            super.processEvent(evt);\n+        }\n+    }\n+\n+    \/\/ Supply method to process Action event.\n+    protected void processActionEvent(ActionEvent evt) {\n+        if (actionListener != null) {\n+            actionListener.actionPerformed(evt);\n+        }\n+    }\n+\n+    public void run() {\n+        while (true) {\n+            try {\n+                \/\/ If component has focus, blink the cursor every 1\/2 second.\n+                Thread.sleep(500);\n+                cursorOn = !cursorOn;\n+                if (hasFocus) {\n+                    repaint();\n+                }\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/LightweightFocusLostTest.java","additions":261,"deletions":0,"binary":false,"changes":261,"status":"added"},{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4472032\n+ * @summary Switching between lightweight menus by horizontal arrow key works incorrect\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual LightweightPopupTest\n+*\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+\n+public class LightweightPopupTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+            When the test starts, you will see a frame titled\n+            'Lightweight Popup Test', which contains a button\n+            (titled 'JButton') and two menus ('Menu 1' and 'Menu 2').\n+            Make sure that both menus, when expanded, fit entirely\n+            into the frame. Now take the following steps:\n+                1. Click on 'JButton' to focus it.\n+                2. Click 'Menu 1' to expand it.\n+                3. Press right arrow to select 'Menu 2'.\n+            Now check where the focus is. If it is on 'JButton'\n+            (you can press space bar to see if it is there), then\n+            the test failed. If 'JButton' is not focused, then\n+            the test passed.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"LightweightPopupTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int)INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(LightweightPopupTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+\n+        JFrame frame = new JFrame(\"Lightweight Popup Test\");\n+        JButton button = new JButton(\"JButton\");\n+        JMenuBar menuBar = new JMenuBar();\n+        JMenu menu1 = new JMenu(\"Menu 1\");\n+        menu1.add(new JMenuItem(\"Menu Item 1\"));\n+        menu1.add(new JMenuItem(\"Menu Item 2\"));\n+        menuBar.add(menu1);\n+        JMenu menu2 = new JMenu(\"Menu 2\");\n+        menu2.add(new JMenuItem(\"Menu Item 3\"));\n+        menu2.add(new JMenuItem(\"Menu Item 4\"));\n+        menuBar.add(menu2);\n+\n+        frame.add(button);\n+        frame.setJMenuBar(menuBar);\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/LightweightPopupTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"},{"patch":"@@ -0,0 +1,207 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug  4098290 4140890\n+ * @summary Using non-opaque windows - popups are initially not painted correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MixedWeightFocus\n+*\/\n+\n+import java.util.List;\n+import java.awt.AWTEvent;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.FlowLayout;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Panel;\n+import java.awt.Toolkit;\n+import java.awt.Window;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+public class MixedWeightFocus {\n+\n+    static FocusFrame f;\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+        This tests that permanent FOCUS_LOST messages are sent to lightweight\n+        components when the focus shifts to a heavyweight component. It also\n+        tests that components retain the focus when their parent window is\n+        deactivated and activated.\n+\n+        1. Tab or mouse between the light and heavyweight buttons in this test\n+           and verify that the focus rectangle on the lightweight components\n+           disappears when focus shifts to a heavyweight button.\n+\n+        2. Activate another application then reactivate the test frame window.\n+           Verify that the component that had the focus (light or heavy) when\n+           the frame was deactivated regains the focus when it's reactivated. Do\n+           the same thing for the modeless dialog. Also test this by moving the\n+           activation between the dialog and the frame.\n+\n+        3. Verify that lightweight components with the focus in a deactivated\n+           window draw their focus rectangles in gray instead of blue-- this indicates\n+           they received temporary instead of permanent FOCUS_LOST events.\n+\n+        NOTE: There is currently another problem with lightweight components\n+           where if you click on one to activate its frame window, the lightweight\n+           that previously had the focus will not get a FOCUS_LOST event. This\n+           may manifest itself with a gray focus rectangle not getting erased.\n+           Ignore this for now (Win32 only).\"\"\";\n+\n+    public static void main(String[] argv) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"MixedWeightFocus Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 5)\n+                .columns(45)\n+                .testUI(MixedWeightFocus::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static List<Window> createTestUI() {\n+        FocusFrame f = new FocusFrame();\n+        ModelessDialog dlg = new ModelessDialog(f);\n+\n+        return List.of(f, dlg);\n+    }\n+}\n+\n+class FocusFrame extends Frame {\n+    public FocusFrame() {\n+        super(\"FocusFrame\");\n+        Panel p = new Panel();\n+\n+        p.add(new Button(\"button 1\"));\n+        p.add(new LightweightComp(\"lw 1\"));\n+        p.add(new Button(\"button 2\"));\n+        p.add(new LightweightComp(\"lw 2\"));\n+        add(p);\n+\n+        pack();\n+        setLocation(100, 100);\n+\n+        addWindowListener(new WindowAdapter() {\n+                              public void windowClosing(WindowEvent ev) {\n+                                  dispose();\n+                              }\n+                         });\n+    }\n+\n+}\n+\n+class ModelessDialog extends Dialog {\n+    public ModelessDialog(Frame frame) {\n+        super(frame, \"ModelessDialog\", false);\n+        setLayout( new FlowLayout() );\n+        add(new Button(\"button 1\"));\n+        add(new LightweightComp(\"lw 1\"));\n+        pack();\n+        setLocation(100, 400);\n+    }\n+}\n+\n+\/\/ simple lightweight component, focus traversable, highlights upon focus\n+class LightweightComp extends Component {\n+    FontMetrics fm;\n+    String label;\n+    private static final int FOCUS_GONE = 0;\n+    private static final int FOCUS_TEMP = 1;\n+    private static final int FOCUS_HAVE = 2;\n+    int focusLevel = FOCUS_GONE;\n+    public static int nameCounter = 0;\n+\n+    public LightweightComp(String lwLabel ) {\n+        label = lwLabel;\n+        enableEvents(AWTEvent.FOCUS_EVENT_MASK|AWTEvent.MOUSE_EVENT_MASK);\n+        setName(\"lw\"+Integer.toString(nameCounter++));\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        if (fm == null) {\n+            fm = Toolkit.getDefaultToolkit().getFontMetrics(getFont());\n+        }\n+        return new Dimension(fm.stringWidth(label) + 2, fm.getHeight() + 2);\n+    }\n+\n+    public void paint(Graphics g) {\n+        Dimension s=getSize();\n+\n+        \/\/ erase the background\n+        g.setColor(getBackground());\n+        g.fillRect(0, 0, s.width, s.height);\n+\n+        g.setColor(getForeground());\n+\n+        \/\/ draw the string\n+        g.drawString(label, 2, fm.getHeight());\n+\n+        \/\/ draw a focus rectangle\n+        if (focusLevel > FOCUS_GONE) {\n+            if (focusLevel == FOCUS_TEMP) {\n+                g.setColor(Color.gray);\n+            } else {\n+                g.setColor(Color.blue);\n+            }\n+            g.drawRect(1,1,s.width-2,s.height-2);\n+        }\n+    }\n+\n+\n+    public boolean isFocusTraversable() {\n+        return true;\n+    }\n+\n+    protected void processFocusEvent(FocusEvent e) {\n+        super.processFocusEvent(e);\n+        if (e.getID() == FocusEvent.FOCUS_GAINED) {\n+            focusLevel = FOCUS_HAVE;\n+        } else {\n+            if (e.isTemporary()) {\n+                focusLevel = FOCUS_TEMP;\n+            } else {\n+                focusLevel = FOCUS_GONE;\n+            }\n+        }\n+        repaint();\n+    }\n+\n+    protected void processMouseEvent(MouseEvent e) {\n+\n+        if (e.getID()==MouseEvent.MOUSE_PRESSED) {\n+            requestFocus();\n+        }\n+        super.processMouseEvent(e);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Focus\/MixedWeightFocus.java","additions":207,"deletions":0,"binary":false,"changes":207,"status":"added"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 4474893\n+ * @summary Component.nextFocusHelper should search for first visible focus cycle root ancst\n+ * @key headful\n+ * @run main NextFocusHelperTest\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.FlowLayout;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+\n+public class NextFocusHelperTest {\n+    static Panel panel;\n+    static Frame frame;\n+    static Button btn1;\n+    static Button btn3;\n+    static Button hideButton;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> createTestUI());\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point loc = btn1.getLocationOnScreen();\n+            Dimension dim = btn1.getSize();\n+            robot.mouseMove(loc.x + dim.width\/2, loc.y + dim.height\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            Point loc1 = hideButton.getLocationOnScreen();\n+            Dimension dim1 = hideButton.getSize();\n+            robot.mouseMove(loc1.x + dim1.width\/2, loc1.y + dim1.height\/2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            if (KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner()\n+                    instanceof Button btn) {\n+                if (!btn.getLabel().equals(\"Button 3\")) {\n+                    throw new RuntimeException(\"Wrong button has focus\");\n+                }\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createTestUI() {\n+        frame = new Frame(\"NextFocusHelperTest Frame\");\n+        frame.setLayout(new FlowLayout());\n+\n+        panel = new Panel();\n+        panel.setFocusCycleRoot(true);\n+        btn1 = new Button(\"Button In Panel\");\n+        panel.add(btn1);\n+\n+        hideButton = new Button(\"Hide Panel\");\n+        hideButton.setFocusable(false);\n+        hideButton.addActionListener(e -> {\n+            panel.setVisible(false);\n+        });\n+\n+        frame.add(new Button(\"Button 1\"));\n+        frame.add(panel);\n+        frame.add(new Button(\"Button 3\"));\n+        frame.add(hideButton);\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/NextFocusHelperTest.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4396407\n+ * @summary Tests that after a proxied window is hidden, focus is being restored correctly\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual ProxiedWindowHideTest\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Container;\n+import javax.swing.Box;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+\n+public class ProxiedWindowHideTest {\n+\n+    private static final String INSTRUCTIONS = \"\"\"\n+           You will see a JFrame.\n+           Click on JComboBox, list will expand then select any item in it.\n+           After selection, list should collapse.\n+           Click on Button('Push').\n+           If you are able to make it focused by mouse click,\n+           (black rectangle will appear around it) the test is PASSED,\n+           otherwise the test is FAILED.\"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"ProxiedWindowHideTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(ProxiedWindowHideTest::createTestUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createTestUI() {\n+        JFrame frame = new JFrame(\"ProxiedWindowHideTest frame\");\n+        String[] petStrings = { \"Bird\", \"Cat\", \"Dog\", \"Rabbit\", \"Pig\" };\n+        JComboBox cb = new JComboBox(petStrings);\n+\n+        cb.setLightWeightPopupEnabled(false);\n+        Container parent = Box.createVerticalBox();\n+        parent.add(new Button(\"Push\"));\n+        parent.add(cb);\n+        frame.add(parent, BorderLayout.CENTER);\n+        frame.pack();\n+        return frame;\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/ProxiedWindowHideTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -0,0 +1,156 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 6180261\n+ * @summary Test that auto-transfer doesn't happen when there are pending focus requests\n+ * @key headful\n+ * @run main TestDisabledAutoTransfer\n+*\/\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.InputEvent;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+public class TestDisabledAutoTransfer {\n+    static Frame frame;\n+    static Robot robot;\n+    Button b1;\n+    Button desired;\n+    AtomicBoolean focused = new AtomicBoolean();\n+    ActionListener mover;\n+    volatile Point loc;\n+    volatile Dimension dim;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        try {\n+            TestDisabledAutoTransfer test = new TestDisabledAutoTransfer();\n+            test.createTestUI();\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            test.doTest();\n+        } finally {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+        }\n+    }\n+\n+    public void createTestUI() {\n+        frame = new Frame(\"TestDisabledAutoTransfer\");\n+        frame.setLayout(new FlowLayout());\n+        desired = new Button(\"Desired\");\n+        FocusAdapter watcher = new FocusAdapter() {\n+                public void focusGained(FocusEvent e) {\n+                    synchronized(focused) {\n+                        focused.set(true);\n+                    }\n+                }\n+            };\n+        b1 = new Button(\"Press to disable\");\n+        mover = new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                desired.requestFocus();\n+                    ((Component)e.getSource()).setEnabled(false);\n+                }\n+            };\n+        b1.addFocusListener(watcher);\n+        desired.addFocusListener(watcher);\n+        frame.add(b1);\n+        Button misc = new Button(\"Next\");\n+        frame.add(misc);\n+        misc.addFocusListener(watcher);\n+        frame.add(desired);\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        frame.validate();\n+\n+    }\n+\n+    public void doTest() {\n+\n+        loc = b1.getLocationOnScreen();\n+        dim = b1.getSize();\n+        robot.mouseMove(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        b1.requestFocus();\n+\n+        try {\n+            synchronized(focused) {\n+                if (!focused.get()) {\n+                    focused.wait(1000);\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            throw new RuntimeException(\"Test was interrupted\");\n+        }\n+\n+        if (!focused.get()) {\n+            throw new RuntimeException(\"b1 didn't get focus\");\n+        }\n+        focused.set(false);\n+\n+        b1.addActionListener(mover);\n+        robot.mouseMove(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+\n+        try {\n+            synchronized(focused) {\n+                if (!focused.get()) {\n+                    focused.wait(1000);\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            throw new RuntimeException(\"Test was interrupted\");\n+        }\n+\n+        if (!focused.get()) {\n+            throw new RuntimeException(\"none got focus\");\n+        }\n+\n+        if (!desired.isFocusOwner()) {\n+            throw new RuntimeException(\"desired didn't get focus\");\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Focus\/TestDisabledAutoTransfer.java","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,165 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 6180261\n+ * @summary Test that auto-transfer doesn't happen when there are pending focus requests\n+ * @key headful\n+ * @run main TestDisabledAutoTransferSwing\n+*\/\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+public class TestDisabledAutoTransferSwing {\n+    static JFrame frame;\n+    static Robot robot;\n+    JButton b1;\n+    JButton desired;\n+    AtomicBoolean focused = new AtomicBoolean();\n+    ActionListener mover;\n+    volatile Point loc;\n+    volatile Dimension dim;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        try {\n+            TestDisabledAutoTransferSwing test = new TestDisabledAutoTransferSwing();\n+            SwingUtilities.invokeAndWait(() -> {\n+                test.createTestUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            test.doTest();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public void createTestUI() {\n+        frame = new JFrame(\"TestDisabledAutoTransferSwing\");\n+        frame.setLayout (new FlowLayout ());\n+        desired = new JButton(\"Desired\");\n+        FocusAdapter watcher = new FocusAdapter() {\n+                public void focusGained(FocusEvent e) {\n+                    synchronized(focused) {\n+                        focused.set(true);\n+                    }\n+                }\n+            };\n+        b1 = new JButton(\"Press to disable\");\n+        mover = new ActionListener() {\n+                public void actionPerformed(ActionEvent e) {\n+                    desired.requestFocus();\n+                    ((Component)e.getSource()).setEnabled(false);\n+                }\n+            };\n+        b1.addFocusListener(watcher);\n+        desired.addFocusListener(watcher);\n+        frame.add(b1);\n+        JButton misc = new JButton(\"Next\");\n+        frame.add(misc);\n+        misc.addFocusListener(watcher);\n+        frame.add(desired);\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        frame.validate();\n+\n+    }\n+\n+    public void doTest() throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            loc = b1.getLocationOnScreen();\n+            dim = b1.getSize();\n+        });\n+        robot.mouseMove(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            b1.requestFocus();\n+        });\n+\n+        try {\n+            synchronized(focused) {\n+                if (!focused.get()) {\n+                    focused.wait(2000);\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            throw new RuntimeException(\"Test was interrupted\");\n+        }\n+\n+        if (!focused.get()) {\n+            throw new RuntimeException(\"b1 didn't get focus\");\n+        }\n+        focused.set(false);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            b1.addActionListener(mover);\n+        });\n+        robot.mouseMove(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+\n+        try {\n+            synchronized(focused) {\n+                if (!focused.get()) {\n+                    focused.wait(2000);\n+                }\n+            }\n+        } catch (InterruptedException ie) {\n+            throw new RuntimeException(\"Test was interrupted\");\n+        }\n+\n+        if (!focused.get()) {\n+            throw new RuntimeException(\"none got focus\");\n+        }\n+\n+        if (!desired.isFocusOwner()) {\n+            throw new RuntimeException(\"desired didn't get focus\");\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/Focus\/TestDisabledAutoTransferSwing.java","additions":165,"deletions":0,"binary":false,"changes":165,"status":"added"},{"patch":"@@ -0,0 +1,140 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * DeiconifyClipTest.java\n+ *\n+ * summary:\n+ *\n+ * What happens is that we call AwtWindow::UpdateInsets when\n+ * processing WM_NCCALCSIZE delivered on programmatic deiconification.\n+ * At this point IsIconic returns false (so UpdateInsets proceeds),\n+ * but the rect sizes still seems to be those weird of the iconic\n+ * state.  Based on them we compute insets with top = left = 0 (and\n+ * bottom and right that are completely bogus) and pass them to\n+ * PaintUpdateRgn which results in incorrect clip origin.  Immediately\n+ * after that we do UpdateInsets again during WM_SIZE processing and\n+ * get real values.\n+ *\/\n+\n+import javax.swing.BoxLayout;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+\n+\/*\n+ * @test\n+ * @bug 4792958\n+ * @summary Incorrect clip region after programmatic restore\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual DeiconifyClipTest\n+*\/\n+\n+public class DeiconifyClipTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            This test creates a frame that is automatically iconified\/deiconified\n+            in a cycle.\n+\n+            The test FAILS if after deiconfication the frame has a greyed-out area\n+            in the lower-right corner.\n+            If the frame contents is drawn completely - the test PASSES.\n+\n+            Press PASS or FAIL button accordingly.\n+            \"\"\";\n+\n+    static TestFrame testFrame;\n+    static volatile boolean shouldContinue = true;\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                .title(\"DeiconifyClipTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(DeiconifyClipTest::createAndShowUI)\n+                .build();\n+        try {\n+            runThread();\n+        } finally {\n+            passFailJFrame.awaitAndCheck();\n+            shouldContinue = false;\n+        }\n+    }\n+\n+    private static void runThread() {\n+        new Thread(() -> {\n+            for (int i = 0; i < 1000 && shouldContinue; ++i) {\n+                try {\n+                    Thread.sleep(3000);\n+                    SwingUtilities.invokeAndWait(() -> {\n+                        if ((testFrame.getExtendedState() & Frame.ICONIFIED)\n+                                != 0) {\n+                            testFrame.setExtendedState(Frame.NORMAL);\n+                        } else {\n+                            testFrame.setState(Frame.ICONIFIED);\n+                        }\n+                    });\n+                } catch (Exception ignored) {\n+                }\n+            }\n+        }).start();\n+    }\n+\n+    static Frame createAndShowUI() {\n+        testFrame = new TestFrame();\n+        testFrame.getContentPane().setLayout(new BoxLayout(testFrame.getContentPane(),\n+                                                   BoxLayout.Y_AXIS));\n+        testFrame.getContentPane().setBackground(Color.yellow);\n+        testFrame.setSize(300, 300);\n+        return testFrame;\n+    }\n+\n+    static class TestFrame extends JFrame {\n+        public TestFrame() {\n+            super(\"DeiconifyClipTest\");\n+        }\n+\n+        \/\/ make it more visible if the clip is wrong.\n+        public void paint(Graphics g) {\n+            Insets b = getInsets();\n+            Dimension d = getSize();\n+\n+            int x = b.left;\n+            int y = b.top;\n+            int w = d.width - x - b.right;\n+            int h = d.height - y - b.bottom;\n+\n+            g.setColor(Color.white);\n+            g.fillRect(0, 0, d.width, d.height);\n+\n+            g.setColor(Color.green);\n+            g.drawRect(x, y, w-1, h-1);\n+            g.drawLine(x, y, x+w, y+h);\n+            g.drawLine(x, y+h, x+w, y);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/DeiconifyClipTest.java","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Label;\n+\n+\/*\n+ * @test\n+ * @bug 4106068\n+ * @summary Test to verify maximized window is not too big\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FrameMaximizedTest\n+ *\/\n+\n+public class FrameMaximizedTest {\n+    public static void main (String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Maximize the frame window. Check that the right and bottom edges of the\n+                window are not off the edge of the screen. If they are not, the test\n+                is successful and the bug is fixed.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(4)\n+                .columns(40)\n+                .testUI(new TestFrame())\n+                .build()\n+                .awaitAndCheck();\n+    }\n+}\n+\n+class TestFrame extends Frame {\n+    public TestFrame() {\n+        setTitle(\"FrameMaximizedTest\");\n+        setSize(500, 300);\n+        add(\"North\", new Label(\"Maximize me and check if my \" +\n+                \"bottom and right edge are on screen.\"));\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameMaximizedTest.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+\n+\/*\n+ * @test\n+ * @bug 4172782\n+ * @summary Test if non-resizable frame is minimizable\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FrameMinimizeTest\n+ *\/\n+\n+public class FrameMinimizeTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                When the blank FrameMinimizeTest frame is shown, verify that\n+                  1. It is not resizable;\n+                  2. It is minimizable.\n+                                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(4)\n+                .columns(35)\n+                .testUI(FrameMinimizeTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame initialize() {\n+        Frame f = new Frame(\"FrameMinimizeTest\");\n+        f.setSize(200, 200);\n+        f.setResizable(false);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameMinimizeTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Cursor;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.event.ActionListener;\n+import java.lang.Exception;\n+import java.lang.InterruptedException;\n+import java.lang.Object;\n+import java.lang.String;\n+import java.lang.Thread;\n+\n+\/*\n+ * @test\n+ * @bug 4097226\n+ * @summary Frame.setCursor() sometimes doesn't update the cursor until user moves the mouse\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual FrameSetCursorTest\n+ *\/\n+\n+public class FrameSetCursorTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            1. Keep the instruction dialog and TestFrame side by side so that\n+               you can read the instructions while doing the test\n+            2. Click on the 'Start Busy' button on the frame titled 'TestFrame'\n+               and DO NOT MOVE THE MOUSE ANYWHERE till you complete the steps below\n+            3. The cursor on the TestFrame changes to busy cursor\n+            4. If you don't see the busy cursor press 'Fail' after\n+               the `done sleeping` message\n+            5. If the busy cursor is seen, after 5 seconds the message\n+               'done sleeping' is displayed in the message window\n+            6. Check for the cursor type after the display of 'done sleeping'\n+            7. If the cursor on the TestFrame has changed back to default cursor\n+               (without you touching or moving the mouse), then press 'Pass'\n+               else if the frame still shows the busy cursor press 'Fail'\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                .title(\"FrameSetCursorTest Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(45)\n+                .testUI(FrameSetCursorTest::createAndShowUI)\n+                .logArea(5)\n+                .build()\n+                .awaitAndCheck();\n+\n+    }\n+\n+    static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"TestFrame\");\n+        Panel panel = new Panel();\n+        Button busyButton = new Button(\"Start Busy\");\n+\n+        ActionListener actionListener = event -> {\n+            Object source = event.getSource();\n+            if (source == busyButton) {\n+                frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));\n+                try {\n+                    Thread.sleep(5000);\n+                } catch (InterruptedException ignored) {}\n+                PassFailJFrame.log(\"done sleeping\");\n+                frame.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n+            }\n+        };\n+\n+        busyButton.addActionListener(actionListener);\n+        panel.setLayout(new BorderLayout());\n+        panel.add(\"North\", busyButton);\n+\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setSize(200, 200);\n+        return frame;\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameSetCursorTest.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import java.awt.Color;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4851435\n+ * @summary Frame is not shown initially iconified after pack\n+ *\/\n+\n+public class InitialIconifiedTest {\n+\n+    private static Frame backgroundFrame;\n+    private static Frame testedFrame;\n+\n+    private static final Rectangle backgroundFrameBounds =\n+            new Rectangle(100, 100, 200, 200);\n+    private static final Rectangle testedFrameBounds =\n+            new Rectangle(150, 150, 100, 100);\n+\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+\n+        try {\n+            EventQueue.invokeAndWait(InitialIconifiedTest::initAndShowGui);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            test();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                backgroundFrame.dispose();\n+                testedFrame.dispose();\n+            });\n+        }\n+    }\n+\n+    private static void initAndShowGui() {\n+        backgroundFrame = new Frame(\"DisposeTest background\");\n+        backgroundFrame.setUndecorated(true);\n+        backgroundFrame.setBackground(Color.RED);\n+        backgroundFrame.setBounds(backgroundFrameBounds);\n+        backgroundFrame.setVisible(true);\n+\n+        testedFrame = new Frame(\"Should have started ICONIC\");\n+        testedFrame.setExtendedState(Frame.ICONIFIED);\n+        testedFrame.setBounds(testedFrameBounds);\n+        testedFrame.setVisible(true);\n+    }\n+\n+    private static void test() {\n+        BufferedImage bi = robot.createScreenCapture(backgroundFrameBounds);\n+        int redPix = Color.RED.getRGB();\n+\n+        for (int x = 0; x < bi.getWidth(); x++) {\n+            for (int y = 0; y < bi.getHeight(); y++) {\n+                if (bi.getRGB(x, y) != redPix) {\n+                    try {\n+                        ImageIO.write(bi, \"png\",\n+                                new File(\"failure.png\"));\n+                    } catch (IOException ignored) {}\n+                    throw new RuntimeException(\"Test failed\");\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/InitialIconifiedTest.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4091426\n+ * @key headful\n+ * @summary Test inset correction when setVisible(true) BEFORE setSize(), setLocation()\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual InsetCorrectionTest\n+ *\/\n+\n+public class InsetCorrectionTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            There is a frame of size 300x300 at location (100,100).\n+            It has a menubar with one menu, 'File', but the frame\n+            is otherwise empty.  In particular, there should be no\n+            part of the frame that is not shown in the background color.\n+            Upon test completion, click Pass or Fail appropriately.\n+            \"\"\";\n+\n+    private static InsetCorrection testFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(() -> testFrame = new InsetCorrection());\n+\n+        try {\n+            PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+                    .title(\"InsetCorrectionTest Instructions\")\n+                    .instructions(INSTRUCTIONS)\n+                    .columns(45)\n+                    .logArea(3)\n+                    .build();\n+            EventQueue.invokeAndWait(() ->\n+                    PassFailJFrame.log(\"frame location: \" + testFrame.getBounds()));\n+            passFailJFrame.awaitAndCheck();\n+        } finally {\n+            EventQueue.invokeAndWait(testFrame::dispose);\n+        }\n+    }\n+\n+    static class InsetCorrection extends Frame\n+            implements ActionListener {\n+        MenuBar mb;\n+        Menu file;\n+        MenuItem cause_bug_b;\n+\n+        public InsetCorrection() {\n+            super(\"InsetCorrection\");\n+            mb = new MenuBar();\n+            file = new Menu(\"File\");\n+            mb.add(file);\n+            cause_bug_b = new MenuItem(\"cause bug\");\n+            file.add(cause_bug_b);\n+            setMenuBar(mb);\n+            cause_bug_b.addActionListener(this);\n+\n+            \/\/ Making the frame visible before setSize and setLocation()\n+            \/\/ are being called causes sometimes strange behaviour with\n+            \/\/ JDK1.1.5G. The frame is then sometimes to large and the\n+            \/\/ excess areas are drawn in black. This only happens\n+            \/\/ sometimes.\n+            setVisible(true);\n+            setSize(300, 300);\n+            setLocation(100, 100);\n+        }\n+\n+        public void actionPerformed(ActionEvent e) {\n+            setVisible(false);\n+            setVisible(true);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/InsetCorrectionTest.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,273 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Canvas;\n+import java.awt.Color;\n+import java.awt.Dialog;\n+import java.awt.Dimension;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.GridLayout;\n+import java.awt.Image;\n+import java.awt.Label;\n+import java.awt.MediaTracker;\n+import java.awt.Panel;\n+import java.awt.Toolkit;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.image.ImageProducer;\n+import java.net.URL;\n+\n+\/*\n+ * @test\n+ * @bug 4175560\n+ * @summary Test use of user-defined icons\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MegaIconTest\n+ *\/\n+\n+public class MegaIconTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Each of the buttons in the main window represents a test\n+                of certain icon functionality -  background transparency\/opacity\n+                of the icon, scaling etc.\n+                Clicking on each button brings up a window displaying the graphic\n+                that should appear in the corresponding icon.\n+                Click on each button, minimize the resulting window, and check that\n+                the icon is displayed as the test name indicates.\n+                On Win32, icons should also be displayed correctly in the title bar.\n+                If all the test pass, then this test passes, else fail.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows(10)\n+                .columns(35)\n+                .testUI(MegaIconTest::initialize)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame initialize() {\n+        \/\/Create the iconTestFrames and add to IconTestButtons\n+        IconTestButtons itb = new IconTestButtons(new IconTestFrame[]{\n+                new IconTestFrame(\"Opaque, Scaled Icon Test\",\n+                        \"duke_404.gif\"),\n+\n+                new IconTestFrame(\"Transparent Icon\",\n+                        \"dukeWave.gif\"),\n+\n+                new IconTestFrameBG(\"Transparent, Scaled Icon with bg\",\n+                        \"fight.gif\", Color.red),\n+\n+                new IconTestFrameDlg(\"Transparent icon w\/ Dialog\",\n+                        \"dukeWave.gif\")\n+        });\n+        itb.pack();\n+        return itb;\n+    }\n+}\n+\n+class IconTestButtons extends Frame {\n+    public IconTestButtons(IconTestFrame[] iconTests) {\n+        IconTestFrame tempTest;\n+        Button newBtn;\n+        Panel newPnl;\n+        DoneLabel newLbl;\n+\n+        setTitle(\"MegaIconTest\");\n+\n+        setLayout(new GridLayout(iconTests.length, 1));\n+\n+        \/\/For each icon test frame\n+        \/\/Get name, add button with name and action to\n+        \/\/display the window, and add label \"done\" after\n+\n+        for (int i = 0; i < iconTests.length; i++) {\n+            tempTest = iconTests[i];\n+            newBtn = new Button(tempTest.getTestName());\n+            newLbl = new DoneLabel();\n+            newBtn.addActionListener(new IconTestActionListener(tempTest,\n+                    newLbl));\n+            newPnl = new Panel();\n+            newPnl.add(newBtn);\n+            newPnl.add(newLbl);\n+            add(newPnl);\n+        }\n+    }\n+\n+    protected class DoneLabel extends Label {\n+        public DoneLabel() {\n+            super(\"Done\");\n+            setVisible(false);\n+        }\n+    }\n+\n+    protected class IconTestActionListener implements ActionListener {\n+        IconTestFrame f;\n+        DoneLabel l;\n+\n+        public IconTestActionListener(IconTestFrame frame, DoneLabel label) {\n+            this.f = frame;\n+            this.l = label;\n+        }\n+\n+        public void actionPerformed(ActionEvent e) {\n+            f.pack();\n+            f.setVisible(true);\n+            l.setVisible(true);\n+            IconTestButtons.this.pack();\n+        }\n+    }\n+}\n+\n+class IconTestFrame extends Frame {\n+    private String testName;\n+    int width, height;\n+    Image iconImage;\n+    MediaTracker tracker;\n+\n+    public IconTestFrame(String testName, String iconFileName) {\n+        super(testName);\n+        this.testName = testName;\n+        tracker = new MediaTracker(this);\n+\n+        \/\/Set icon image\n+        URL url = MegaIconTest.class.getResource(iconFileName);\n+        Toolkit tk = Toolkit.getDefaultToolkit();\n+        if (tk == null) {\n+            System.out.println(\"Toolkit is null!\");\n+        }\n+        if (url == null) {\n+            System.out.println(\"Can't load icon is null!\");\n+            return;\n+        }\n+        try {\n+            iconImage = tk.createImage((ImageProducer) url.getContent());\n+        } catch (java.io.IOException e) {\n+            System.out.println(\"Unable to load icon image from url: \" + url);\n+        }\n+        tracker.addImage(iconImage, 0);\n+        try {\n+            tracker.waitForAll();\n+        } catch (java.lang.InterruptedException e) {\n+            System.err.println(e);\n+        }\n+        width = iconImage.getWidth(this);\n+        height = iconImage.getHeight(this);\n+        setIconImage(iconImage);\n+\n+        addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                setVisible(false);\n+            }\n+        });\n+\n+        setLayout(new BorderLayout());\n+        setBackground(Color.YELLOW);\n+\n+        \/\/Add the icon graphic and instructions to the Frame\n+        add(new IconCanvas(), \"Center\");\n+        pack();\n+    }\n+\n+    class IconCanvas extends Canvas {\n+        public void paint(Graphics g) {\n+            if (IconTestFrame.this.iconImage == null) {\n+                throw new NullPointerException();\n+            }\n+            g.drawImage(IconTestFrame.this.iconImage, 0, 0, this);\n+        }\n+\n+        public Dimension getPreferredSize() {\n+            return new Dimension(IconTestFrame.this.width,\n+                    IconTestFrame.this.height);\n+        }\n+\n+        public Dimension getMinimumSize() {\n+            return getPreferredSize();\n+        }\n+\n+        public Dimension getMaximumSize() {\n+            return getPreferredSize();\n+        }\n+    }\n+\n+    public String getTestName() {\n+        return testName;\n+    }\n+}\n+\n+class IconTestFrameBG extends IconTestFrame {\n+    public IconTestFrameBG(String testName, String iconFileName, Color bg) {\n+        super(testName, iconFileName);\n+        setBackground(bg);\n+        Panel p = new Panel();\n+        p.setLayout(new GridLayout(3, 1));\n+        p.add(new Label(\"The background of this window has been set.\"));\n+        p.add(new Label(\"Unless the default icon background is the same color,\"));\n+        p.add(new Label(\"the icon background should NOT be this color.\"));\n+        add(p, \"North\");\n+        pack();\n+    }\n+}\n+\n+class IconTestFrameDlg extends IconTestFrame implements ActionListener {\n+    Dialog dlg;\n+    Button dlgBtn;\n+\n+    public IconTestFrameDlg(String testName, String iconFilename) {\n+        super(testName, iconFilename);\n+        Panel p = new Panel();\n+        p.setLayout(new GridLayout(4, 1));\n+        p.add(new Label(\"Click on the button below to display a child dialog.\"));\n+        p.add(new Label(\"On Win32, the Dialog's titlebar icon should match\"));\n+        p.add(new Label(\"the titlebar icon of this window.\"));\n+        p.add(new Label(\"Minimizing this Frame should yield only one icon.\"));\n+        add(p, \"North\");\n+\n+        dlg = new Dialog(this);\n+        dlg.setSize(200, 200);\n+        dlg.add(new Label(\"Dialog stuff.\"));\n+        dlg.addWindowListener(new WindowAdapter() {\n+            public void windowClosing(WindowEvent e) {\n+                setVisible(false);\n+            }\n+        });\n+\n+        dlgBtn = new Button(\"Display Dialog\");\n+        dlgBtn.addActionListener(this);\n+        add(dlgBtn, \"South\");\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        dlg.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/MegaIconTest\/MegaIconTest.java","additions":273,"deletions":0,"binary":false,"changes":273,"status":"added"},{"filename":"test\/jdk\/java\/awt\/Frame\/MegaIconTest\/dukeWave.gif","binary":true,"status":"added"},{"filename":"test\/jdk\/java\/awt\/Frame\/MegaIconTest\/duke_404.gif","binary":true,"status":"added"},{"patch":"","filename":"test\/jdk\/java\/awt\/Frame\/MegaIconTest\/fight.gif","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/demo\/share\/jfc\/J2Ddemo\/images\/fight.gif","status":"copied"},{"patch":"@@ -0,0 +1,140 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4065534\n+ * @summary Frame.setSize() doesn't change size if window is in an iconified state\n+ * @run main SizeMinimizedTest\n+ *\/\n+\n+public class SizeMinimizedTest {\n+    private static Frame frame;\n+    private static final int INITIAL_SIZE = 100;\n+    private static final int INITIAL_X = 150;\n+    private static final int INITIAL_Y = 50;\n+    private static final int RESET_SIZE = 200;\n+    private static final int OFFSET = 10;\n+    private static int iterationCnt = 0;\n+    private static Dimension expectedSize;\n+    private static Dimension frameSize;\n+    private static Point expectedLoc;\n+    private static Point frameLoc;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                createUI();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setState(Frame.ICONIFIED);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setSize(RESET_SIZE, RESET_SIZE);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            for (int i = 0; i < 5; i++) {\n+                EventQueue.invokeAndWait(() -> {\n+                    Point pt = frame.getLocation();\n+                    frame.setLocation(pt.x + OFFSET, pt.y);\n+                });\n+                iterationCnt++;\n+                robot.waitForIdle();\n+                robot.delay(100);\n+            }\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setState(Frame.NORMAL);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createUI() {\n+        frame = new Frame(\"Frame size test\");\n+        frame.setSize(INITIAL_SIZE, INITIAL_SIZE);\n+        frame.setLocation(INITIAL_X, INITIAL_Y);\n+\n+        frame.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowOpened(WindowEvent e) {\n+                System.out.println(\"Initial Frame Size: \" + frame.getSize());\n+                System.out.println(\"Initial Frame Location: \" +\n+                        frame.getLocationOnScreen());\n+            }\n+        });\n+\n+        frame.addWindowStateListener(new WindowAdapter() {\n+            @Override\n+            public void windowStateChanged(WindowEvent e) {\n+                if (e.getNewState() == Frame.NORMAL) {\n+                    System.out.println(\"Frame Size: \" + frame.getSize());\n+                    System.out.println(\"Frame Location: \" +\n+                            frame.getLocationOnScreen());\n+                    expectedSize = new Dimension(RESET_SIZE, RESET_SIZE);\n+                    frameSize = frame.getSize();\n+\n+                    if (!expectedSize.equals(frameSize)) {\n+                        throw new RuntimeException(\"Test Failed due to size mismatch.\");\n+                    }\n+\n+                    expectedLoc = new Point(INITIAL_X + OFFSET * iterationCnt,\n+                            INITIAL_Y);\n+                    frameLoc = frame.getLocationOnScreen();\n+\n+                    if (!expectedLoc.equals(frameLoc)) {\n+                        throw new RuntimeException(\"Test Failed due to \" +\n+                                \"location mismatch.\");\n+                    }\n+                }\n+            }\n+        });\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Frame\/SizeMinimizedTest.java","additions":140,"deletions":0,"binary":false,"changes":140,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @bug 8211999\n+ * @bug 8211999 8282863\n@@ -55,0 +55,4 @@\n+                g.setColor(Color.RED);\n+                DisplayMode displayMode =\n+                        getGraphicsConfiguration().getDevice().getDisplayMode();\n+                g.drawString(displayMode.toString(), 100, 100);\n","filename":"test\/jdk\/java\/awt\/FullScreen\/FullscreenWindowProps\/FullscreenWindowProps.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+ * @library \/test\/lib\n+ * @build   jdk.test.lib.Platform jtreg.SkippedException\n@@ -47,0 +49,6 @@\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+import jdk.test.lib.Platform;\n+import jtreg.SkippedException;\n@@ -49,0 +57,1 @@\n+\n@@ -50,0 +59,5 @@\n+        if (Platform.isOnWayland() && !isFixDelivered()) {\n+            throw new SkippedException(\"Test skipped because fix was not\" +\n+                    \"delivered in current GnomeShell version\");\n+        }\n+\n@@ -234,0 +248,30 @@\n+\n+    private static boolean isFixDelivered() {\n+        try {\n+            Process process =\n+                    new ProcessBuilder(\"\/usr\/bin\/gnome-shell\", \"--version\")\n+                            .start();\n+\n+            try (BufferedReader reader = process.inputReader()) {\n+                if (process.waitFor(2, SECONDS) &&  process.exitValue() == 0) {\n+                    String line = reader.readLine();\n+                    if (line != null) {\n+                        System.out.println(\"Gnome shell version: \" + line);\n+                        String[] versionComponents = line\n+                                .replaceAll(\"[^\\\\d.]\", \"\")\n+                                .split(\"\\\\.\");\n+\n+                        if (versionComponents.length >= 1) {\n+                            return Integer.parseInt(versionComponents[0]) > 42;\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (IOException\n+                 | InterruptedException\n+                 | IllegalThreadStateException\n+                 | NumberFormatException ignored) {\n+        }\n+\n+        return false;\n+    }\n","filename":"test\/jdk\/java\/awt\/FullScreen\/NoResizeEventOnDMChangeTest\/NoResizeEventOnDMChangeTest.java","additions":45,"deletions":1,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -0,0 +1,99 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4147246\n+ * @summary Simple check for peer != null in Component.componentMoved\n+ * @key headful\n+ * @run main LWParentMovedTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Container;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+\n+public class LWParentMovedTest {\n+    static CMTFrame f;\n+\n+    \/\/ test will throw an exception and fail if lwc is null\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> f = new CMTFrame());\n+        } finally {\n+            if (f != null) {\n+                EventQueue.invokeAndWait(() -> f.dispose());\n+            }\n+        }\n+    }\n+}\n+\n+class CMTFrame extends Frame {\n+    Container lwc;\n+    Button button;\n+\n+    public CMTFrame() {\n+        super(\"Moving LWC Test\");\n+        setLayout(new FlowLayout());\n+        lwc = new LWSquare(Color.blue, 100, 100);\n+        button = new Button();\n+        lwc.add(button);\n+        add(lwc);\n+\n+        setSize(400, 300);\n+        setVisible(true);\n+\n+        \/\/ queue up a bunch of COMPONENT_MOVED events\n+        for (int i = 0; i < 1000; i++) {\n+            lwc.setLocation(i, i);\n+        }\n+\n+        \/\/ remove heavyweight from lightweight container\n+        lwc.remove(button);\n+    }\n+}\n+\n+\/\/\n+\/\/ Lightweight container\n+\/\/\n+class LWSquare extends Container {\n+    int width;\n+    int height;\n+\n+    public LWSquare(Color color, int w, int h) {\n+        setBackground(color);\n+        setLayout(new FlowLayout());\n+        width = w;\n+        height = h;\n+        setName(\"LWSquare-\" + color.toString());\n+    }\n+\n+    public void paint(Graphics g) {\n+        g.setColor(getBackground());\n+        g.fillRect(0, 0, 1000, 1000);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/LWParentMovedTest\/LWParentMovedTest.java","additions":99,"deletions":0,"binary":false,"changes":99,"status":"added"},{"patch":"@@ -0,0 +1,154 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4095214\n+ * @summary Test change of focus on lightweights using the tab key\n+ * @key headful\n+ * @run main LightWeightTabFocus\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+public class LightWeightTabFocus {\n+    private static Frame f;\n+    private static LightweightButton btn1;\n+    private static Button btn2;\n+    private static Robot robot;\n+    private static volatile Point point;\n+    private static Point loc;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            EventQueue.invokeAndWait(() -> createUI());\n+            robot.delay(1000);\n+            EventQueue.invokeAndWait(() -> {\n+                loc = f.getLocation();\n+                point = btn2.getLocation();\n+            });\n+            robot.mouseMove(loc.x + point.x, loc.y + point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            \/\/ First TAB\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            if (!btn1.hasFocus()) {\n+                new RuntimeException(\"First tab failed\");\n+            }\n+            \/\/ Second TAB\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            if (!btn2.hasFocus()) {\n+                new RuntimeException(\"Second tab failed\");\n+            }\n+            \/\/ First SHIFT+TAB\n+            robot.keyPress(KeyEvent.VK_SHIFT);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.delay(100);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_SHIFT);\n+            if (!btn1.hasFocus()) {\n+                new RuntimeException(\"First shift+tab failed\");\n+            }\n+            \/\/ Second SHIFT+TAB\n+            robot.keyPress(KeyEvent.VK_SHIFT);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.delay(100);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_SHIFT);\n+            if (!btn2.hasFocus()) {\n+                new RuntimeException(\"Second shift+tab failed\");\n+            }\n+\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static Frame createUI() {\n+        f = new Frame(\"TAB Focus Change on LW Test\");\n+        f.setLayout(new FlowLayout());\n+        btn1 = new LightweightButton();\n+        f.add(btn1);\n+        btn2 = new Button(\"Click Me To start\");\n+        f.add(btn2);\n+        f.pack();\n+        f.setVisible(true);\n+        return f;\n+    }\n+}\n+\n+class LightweightButton extends Component implements FocusListener {\n+    boolean focus;\n+    LightweightButton() {\n+        focus = false;\n+        addFocusListener(this);\n+    }\n+\n+    public Dimension getPreferredSize()\n+    {\n+        return new Dimension(100, 100);\n+    }\n+\n+    public void focusGained(FocusEvent e) {\n+        focus = true;\n+        repaint();\n+    }\n+\n+    public void focusLost(FocusEvent e) {\n+        focus = false;\n+        repaint();\n+    }\n+\n+    public void paint(Graphics g) {\n+        if (focus) {\n+            g.drawString(\"Has Focus\", 10, 20);\n+        } else {\n+            g.drawString(\"Not Focused\", 10, 20);\n+        }\n+    }\n+\n+    public boolean isFocusable() {\n+        return true;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/LightWeightTabFocus\/LightWeightTabFocus.java","additions":154,"deletions":0,"binary":false,"changes":154,"status":"added"},{"patch":"@@ -0,0 +1,182 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4077709 4153989\n+ * @summary Lightweight component font settable test\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual LightweightFontTest\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+\n+\n+public class LightweightFontTest {\n+    static Font desiredFont = null;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                [ There are 7 steps to this test ]\n+                1. The 2 bordered labels (Emacs vs. vi) should be in a LARGE font\n+                   (approximately 1\/2 inch tall)\n+                2. The labels should not overlap.\n+                3. Each button should be large enough to contain the entire label.\n+                4. The labels should have red backgrounds\n+                5. The text in the left label should be blue and the right yellow\n+                6. Resize the window to make it much smaller and larger\n+                7. The buttons should never overlap, and they should be large\n+                   enough to contain the entire label.\n+                   (although the button may disappear if there is not enough\n+                   room in the window)\"\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(35)\n+                .testUI(LightweightFontTest::createUI)\n+                .logArea(5)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"Lightweight Font Test\");\n+        f.setLayout(new FlowLayout());\n+\n+        desiredFont = new Font(Font.DIALOG, Font.PLAIN, 36);\n+        Component component;\n+        component = new BorderedLabel(\"Emacs or vi?\");\n+        component.setFont(desiredFont);\n+        component.setBackground(Color.red);\n+        component.setForeground(Color.blue);\n+        f.add(component);\n+        component = new BorderedLabel(\"Vi or Emacs???\");\n+        component.setFont(desiredFont);\n+        component.setBackground(Color.red);\n+        component.setForeground(Color.yellow);\n+        f.add(component);\n+        f.pack();\n+        return f;\n+    }\n+}\n+\n+\/**\n+ * Lightweight component\n+ *\/\n+class BorderedLabel extends Component {\n+    boolean superIsButton;\n+    String labelString;\n+\n+    BorderedLabel(String labelString) {\n+        this.labelString = labelString;\n+\n+        Component thisComponent = this;\n+        superIsButton = (thisComponent instanceof Button);\n+        if(superIsButton) {\n+            ((Button)thisComponent).setLabel(labelString);\n+        }\n+    }\n+\n+    public Dimension getMinimumSize() {\n+        Dimension minSize = new Dimension();\n+\n+        if (superIsButton) {\n+            minSize = super.getMinimumSize();\n+        } else {\n+\n+            Graphics g = getGraphics();\n+            verifyFont(g);\n+            FontMetrics metrics = g.getFontMetrics();\n+\n+            minSize.width = metrics.stringWidth(labelString) + 14;\n+            minSize.height = metrics.getMaxAscent() + metrics.getMaxDescent() + 9;\n+\n+            g.dispose();\n+        }\n+        return minSize;\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        Dimension prefSize = new Dimension();\n+        if (superIsButton) {\n+            prefSize = super.getPreferredSize();\n+        } else {\n+            prefSize = getMinimumSize();\n+        }\n+        return prefSize;\n+    }\n+\n+    public void paint(Graphics g) {\n+        verifyFont(g);\n+        super.paint(g);\n+        if (superIsButton) {\n+            return;\n+        }\n+        Dimension size = getSize();\n+        Color oldColor = g.getColor();\n+\n+        \/\/ draw border\n+        g.setColor(getBackground());\n+        g.fill3DRect(0, 0, size.width, size.height, false);\n+        g.fill3DRect(3, 3, size.width - 6, size.height - 6, true);\n+\n+        \/\/ draw text\n+        FontMetrics metrics = g.getFontMetrics();\n+        int centerX = size.width \/ 2;\n+        int centerY = size.height \/ 2;\n+        int textX = centerX - (metrics.stringWidth(labelString) \/ 2);\n+        int textY = centerY + ((metrics.getMaxAscent()\n+                + metrics.getMaxDescent()) \/ 2);\n+        g.setColor(getForeground());\n+        g.drawString(labelString, textX, textY);\n+\n+        g.setColor(oldColor);\n+    }\n+\n+    \/**\n+     * Verifies that the font is correct and prints a warning\n+     * message and\/or throws a RuntimeException if it is not.\n+     *\/\n+    private void verifyFont(Graphics g) {\n+        Font desiredFont = LightweightFontTest.desiredFont;\n+        Font actualFont = g.getFont();\n+        if (!actualFont.equals(desiredFont)) {\n+            PassFailJFrame.log(\"AWT BUG: FONT INFORMATION LOST!\");\n+            PassFailJFrame.log(\"         Desired font: \" + desiredFont);\n+            PassFailJFrame.log(\"          Actual font: \" + actualFont);\n+            PassFailJFrame.forceFail();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/LightweightFontTest\/LightweightFontTest.java","additions":182,"deletions":0,"binary":false,"changes":182,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4058400\n+ * @summary Tests that calling addNotify on a lightweight component more than\n+ *          once does not break event dispatching for that component.\n+ * @key headful\n+ * @run main MultipleAddNotifyTest\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+public class MultipleAddNotifyTest {\n+    static volatile boolean passFlag;\n+    static volatile int posX;\n+    static volatile int posY;\n+    static Frame f;\n+    static LightComponent l;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot r;\n+        try {\n+            r = new Robot();\n+            r.setAutoWaitForIdle(true);\n+            passFlag = false;\n+\n+            EventQueue.invokeAndWait(() -> {\n+                f = new Frame(\"Multiple addNotify Test\");\n+                l = new LightComponent();\n+                f.setLayout(new FlowLayout());\n+                l.addMouseListener(new MouseAdapter() {\n+                    @Override\n+                    public void mouseClicked(MouseEvent e) {\n+                        System.out.println(\"Mouse Clicked\");\n+                        passFlag = true;\n+                    }\n+                });\n+                f.add(l);\n+                f.addNotify();\n+                f.addNotify();\n+\n+                if (!l.isVisible()) {\n+                    throw new RuntimeException(\"Test failed. LW Component \" +\n+                            \"not visible.\");\n+                }\n+                f.setSize(200, 200);\n+                f.setLocationRelativeTo(null);\n+                f.setVisible(true);\n+            });\n+            r.waitForIdle();\n+            r.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                posX = f.getX() + l.getWidth() + (l.getWidth() \/ 2);\n+                posY = f.getY() + l.getHeight();\n+            });\n+\n+            r.mouseMove(posX, posY);\n+            r.delay(500);\n+\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            r.delay(500);\n+\n+            if (!passFlag) {\n+                throw new RuntimeException(\"Test failed. MouseClicked event \" +\n+                        \"not working properly.\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n+\n+class LightComponent extends Component {\n+    public void paint(Graphics g) {\n+        setSize(100, 100);\n+        Dimension d = getSize();\n+        g.setColor(Color.red);\n+        g.fillRect(0, 0, d.width, d.height);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/MultipleAddNotifyTest\/MultipleAddNotifyTest.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4476083\n+ * @summary Disabled components do not receive MouseEvent in Popups\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PopupTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Frame;\n+\n+import javax.swing.JButton;\n+import javax.swing.JLabel;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+\n+public class PopupTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                PopupMenus should disappear when a disabled component is\n+                clicked.\n+\n+                Step 1. Pop down the popup menu by clicking on it.\n+                Step 2. Click on the disabled component to make the menu\n+                disappear.\n+\n+                If the menu disappears when the disabled component is clicked,\n+                the test passes, otherwise, the test fails.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(PopupTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame f = new Frame(\"Disabled Component in Popup Test\");\n+        f.setLayout(new BorderLayout());\n+\n+        JButton b = new JButton(\"step 1: press me to display menu\");\n+        b.addActionListener(e -> {\n+            JPopupMenu m = new JPopupMenu();\n+            m.add(new JMenuItem(\"item 1\"));\n+            m.add(new JMenuItem(\"item 2\"));\n+            m.add(new JMenuItem(\"item 3\"));\n+            m.add(new JMenuItem(\"item 4\"));\n+            m.add(new JMenuItem(\"item 5\"));\n+            m.add(new JMenuItem(\"item 6\"));\n+            m.show((Component) e.getSource(), 0, 10);\n+        });\n+\n+        JLabel disabled = new JLabel(\"step 2: click me. the menu should be \" +\n+                \"dismissed\");\n+        disabled.setEnabled(false);\n+\n+        JLabel enabled = new JLabel(\"step 3: there is no step 3\");\n+\n+        f.add(BorderLayout.NORTH, b);\n+        f.add(BorderLayout.CENTER, disabled);\n+        f.add(BorderLayout.SOUTH, enabled);\n+        f.setSize(300, 200);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/LightweightComponent\/PopupTest\/PopupTest.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,3 @@\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main ItemEventTest\n@@ -32,0 +35,2 @@\n+\/\/ Pass -save to the test to enable screenshots at each select\/deselect\n+\n@@ -40,1 +45,0 @@\n-import java.awt.event.KeyEvent;\n@@ -42,18 +46,23 @@\n-import java.awt.event.ItemEvent;\n-import java.awt.event.ItemListener;\n-\n-public class ItemEventTest extends Frame\n-{\n-    List list;\n-    final String expectedSelectionOrder;\n-    StringBuilder actualSelectionOrder;\n-    Robot robot;\n-\n-    public ItemEventTest()\n-    {\n-        try {\n-            robot = new Robot();\n-        } catch(AWTException e) {\n-            throw new RuntimeException(e.getMessage());\n-        }\n-        expectedSelectionOrder = \"01230123\";\n+import java.awt.event.KeyEvent;\n+import java.awt.image.RenderedImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import javax.imageio.ImageIO;\n+\n+import jdk.test.lib.Platform;\n+\n+public final class ItemEventTest extends Frame {\n+    private static final String expectedSelectionOrder = \"01230123\";\n+\n+    private static boolean saveScreenshots;\n+\n+    private final StringBuffer actualSelectionOrder\n+            = new StringBuffer(expectedSelectionOrder.length());\n+\n+    private final List list;\n+    private final Robot robot;\n+\n+    private ItemEventTest() throws AWTException {\n+        robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n@@ -68,0 +77,1 @@\n+\n@@ -71,0 +81,1 @@\n+        setLocationRelativeTo(null);\n@@ -76,0 +87,1 @@\n+    @SuppressWarnings(\"deprecation\")\n@@ -77,4 +89,4 @@\n-        if (e.target instanceof List) {\n-            if (e.id == Event.LIST_DESELECT || e.id == Event.LIST_SELECT) {\n-                actualSelectionOrder.append(e.arg);\n-            }\n+        if ((e.target instanceof List)\n+            && (e.id == Event.LIST_DESELECT\n+                || e.id == Event.LIST_SELECT)) {\n+            logEvent(\"handleEvent: \", e.arg);\n@@ -85,1 +97,6 @@\n-    void testHandleEvent() {\n+    private void logEvent(String method, Object listItem) {\n+        actualSelectionOrder.append(listItem);\n+        System.out.println(method + listItem);\n+    }\n+\n+    private void testHandleEvent() {\n@@ -91,7 +108,3 @@\n-    void testItemListener() {\n-        list.addItemListener(new ItemListener() {\n-            @Override\n-            public void itemStateChanged(ItemEvent ie) {\n-                actualSelectionOrder.append(ie.getItem());\n-            }\n-        });\n+    private void testItemListener() {\n+        list.addItemListener(ie\n+                -> logEvent(\"testItemListener: \", ie.getItem()));\n@@ -101,6 +114,7 @@\n-    void performTest() {\n-        actualSelectionOrder = new StringBuilder();\n-        Point loc = list.getLocationOnScreen();\n-        Rectangle rect = list.getBounds();\n-        int dY = rect.height \/ list.getItemCount();\n-        loc = new Point(loc.x + 10, loc.y + 5);\n+    private void performTest() {\n+        actualSelectionOrder.setLength(0);\n+\n+        final Rectangle rect = getListBoundsOnScreen();\n+        final int dY = rect.height \/ list.getItemCount();\n+        final Point loc = new Point(rect.x + rect.width \/ 2,\n+                                    rect.y + dY \/ 2);\n@@ -108,3 +122,1 @@\n-        String osName = System.getProperty(\"os.name\");\n-        boolean isMac = osName.contains(\"Mac\") || osName.contains(\"mac\");\n-        if(isMac) {\n+        if (Platform.isOSX()) {\n@@ -112,1 +124,0 @@\n-            robot.waitForIdle();\n@@ -119,0 +130,2 @@\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -120,4 +133,4 @@\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n-                robot.waitForIdle();\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-                robot.waitForIdle();\n+\n+                if (saveScreenshots) {\n+                    saveImage(robot.createScreenCapture(rect));\n+                }\n@@ -127,1 +140,1 @@\n-        if(isMac) {\n+        if (Platform.isOSX()) {\n@@ -131,2 +144,3 @@\n-        if (!expectedSelectionOrder.equals(actualSelectionOrder.toString())) {\n-            dispose();\n+        if (!expectedSelectionOrder.contentEquals(actualSelectionOrder)) {\n+            saveImage(robot.createScreenCapture(rect));\n+\n@@ -140,5 +154,27 @@\n-    public static void main(String args[]) {\n-       ItemEventTest test = new ItemEventTest();\n-       test.testHandleEvent();\n-       test.testItemListener();\n-       test.dispose();\n+    private Rectangle getListBoundsOnScreen() {\n+        return new Rectangle(list.getLocationOnScreen(),\n+                             list.getSize());\n+    }\n+\n+    private static int imageNo = 0;\n+\n+    private static void saveImage(RenderedImage image) {\n+        try {\n+            ImageIO.write(image,\n+                          \"png\",\n+                          new File(String.format(\"image-%02d.png\",\n+                                                 ++imageNo)));\n+        } catch (IOException ignored) {\n+        }\n+    }\n+\n+    public static void main(String[] args) throws AWTException {\n+        saveScreenshots = args.length > 0 && \"-save\".equals(args[0]);\n+\n+        ItemEventTest test = new ItemEventTest();\n+        try {\n+            test.testHandleEvent();\n+            test.testItemListener();\n+        } finally {\n+            test.dispose();\n+        }\n","filename":"test\/jdk\/java\/awt\/List\/ItemEventTest\/ItemEventTest.java","additions":90,"deletions":54,"binary":false,"changes":144,"status":"modified"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @bug 4700350\n+ * @requires os.family != \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests menu item font is big\n+ * @run main\/manual GiantFontTest\n+ *\/\n+\n+public class GiantFontTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                        A frame with one menu will appear.\n+                        On Linux, the menu's (present on menu bar) font should\n+                        be quite large (48 point).\n+                        If not, test fails.\n+\n+                        On Windows, the menu's (present on menu bar) font\n+                        should be normal size.\n+                        If the menu text is clipped by the title bar, or is painted over\n+                        the title bar or client area, the test fails.\n+\n+                        On both Windows and Linux, the menu items in the popup\n+                        menu should be large.\n+\n+                        If so, test passes.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"GiantFontTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(GiantFontTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Font giantFont = new Font(\"Dialog\", Font.PLAIN, 48);\n+        Frame f = new Frame(\"GiantFontTest\");\n+        MenuBar mb = new MenuBar();\n+        Menu m = new Menu(\"My font is too big!\");\n+        m.setFont(giantFont);\n+        for (int i = 0; i < 5; i++) {\n+            m.add(new MenuItem(\"Some MenuItems\"));\n+        }\n+        mb.add(m);\n+        f.setMenuBar(mb);\n+        f.setSize(450, 400);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/GiantFontTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,117 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4175790\n+ * @requires os.family == \"windows\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Win32: Running out of command ids for menu items\n+ * @run main\/manual LotsOfMenuItemsTest\n+ *\/\n+\n+public class LotsOfMenuItemsTest extends ComponentAdapter {\n+    private static final int NUM_WINDOWS = 400;\n+    private static TestFrame firstFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        LotsOfMenuItemsTest obj = new LotsOfMenuItemsTest();\n+        String INSTRUCTIONS = \"\"\"\n+                This test creates lots of frames with menu bars.\n+                When it's done you will see two frames.\n+                Try to select menu items from each of them.\n+\n+                If everything seems to work - test passed.\n+                Click \"Pass\" button in the test harness window.\n+\n+                If test crashes on you - test failed.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"LotsOfMenuItemsTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(obj::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private Frame createAndShowUI() {\n+        firstFrame = new TestFrame(\"First frame\");\n+        firstFrame.addComponentListener(this);\n+        return firstFrame;\n+    }\n+\n+    @Override\n+    public void componentShown(ComponentEvent e) {\n+        final int x = firstFrame.getX();\n+        final int y = firstFrame.getY() + firstFrame.getHeight() + 8;\n+        TestFrame testFrame;\n+        for (int i = 1; i < NUM_WINDOWS - 1; ++i) {\n+            testFrame = new TestFrame(\"Running(\" + i + \")...\", x, y);\n+            testFrame.setVisible(false);\n+            testFrame.dispose();\n+        }\n+        testFrame = new TestFrame(\"Last Frame\", x, y);\n+        PassFailJFrame.addTestWindow(testFrame);\n+    }\n+\n+    private static class TestFrame extends Frame {\n+        static int n = 0;\n+\n+        public TestFrame(String title) {\n+            this(title, 0, 0, false);\n+        }\n+\n+        public TestFrame(String s, int x, int y) {\n+            this(s, x, y, true);\n+        }\n+\n+        private TestFrame(String title, int x, int y, boolean visible) {\n+            super(title);\n+            MenuBar mb = new MenuBar();\n+            for (int i = 0; i < 10; ++i) {\n+                Menu m = new Menu(\"Menu_\" + (i + 1));\n+                for (int j = 0; j < 20; ++j) {\n+                    MenuItem mi = new MenuItem(\"Menu item \" + ++n);\n+                    m.add(mi);\n+                }\n+                mb.add(m);\n+            }\n+            setMenuBar(mb);\n+            setLocation(x, y);\n+            setSize(450, 150);\n+            if (visible) {\n+                setVisible(true);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/LotsOfMenuItemsTest.java","additions":117,"deletions":0,"binary":false,"changes":117,"status":"added"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @bug 4066657 8009454\n+ * @requires os.family != \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Tests that setting a font on the Menu with MenuItem takes effect.\n+ * @run main\/manual MenuSetFontTest\n+ *\/\n+\n+public class MenuSetFontTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                    Look at the menu in the upper left corner of the 'SetFont Test' frame.\n+                    Click on the \"File\" menu. You will see \"menu item\" item.\n+                    Press Pass if menu item is displayed using bold and large font,\n+                    otherwise press Fail.\n+                    If you do not see menu at all, press Fail.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"MenuSetFontTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(MenuSetFontTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"SetFont Test\");\n+        MenuBar menuBar = new MenuBar();\n+        Menu menu = new Menu(\"File\");\n+        MenuItem item = new MenuItem(\"menu item\");\n+        menu.add(item);\n+        menuBar.add(menu);\n+        menuBar.setFont(new Font(Font.MONOSPACED, Font.BOLD, 24));\n+        frame.setMenuBar(menuBar);\n+        frame.setSize(300, 200);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/MenuSetFontTest.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -0,0 +1,105 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4251036\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary MenuItem setLabel(null\/\"\") behaves differently under Win32 and Solaris\n+ * @run main\/manual NullOrEmptyStringLabelTest\n+ *\/\n+\n+public class NullOrEmptyStringLabelTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                The bug is reproducible under Win32 and Solaris.\n+                Setting 'null' and \"\" as a label of menu item\n+                should set blank label on all platforms according to the specification.\n+                But under Solaris setting \"\" as a label of menu item used to\n+                cause some garbage to be set as label.\n+                Under Win32 setting 'null' as a label used to result in\n+                throwing NullPointerException.\n+\n+                If you see any of these things happen test fails otherwise\n+                it passes.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"NullOrEmptyStringLabelTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(NullOrEmptyStringLabelTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"Null Or Empty String Label Test\");\n+        Menu menu = new Menu(\"Menu\");\n+        MenuItem mi = new MenuItem(\"Item\");\n+        MenuBar mb = new MenuBar();\n+        Button button1 = new Button(\"Set MenuItem label to 'null'\");\n+        Button button2 = new Button(\"Set MenuItem label to \\\"\\\"\");\n+        Button button3 = new Button(\"Set MenuItem label to 'text'\");\n+        button1.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to null\");\n+                mi.setLabel(null);\n+            }\n+        });\n+        button2.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to \\\"\\\"\");\n+                mi.setLabel(\"\");\n+            }\n+        });\n+        button3.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent ev) {\n+                System.out.println(\"Setting MenuItem label to 'text'\");\n+                mi.setLabel(\"text\");\n+            }\n+        });\n+        menu.add(mi);\n+        mb.add(menu);\n+        frame.add(button1, BorderLayout.NORTH);\n+        frame.add(button2, BorderLayout.CENTER);\n+        frame.add(button3, BorderLayout.SOUTH);\n+        frame.setMenuBar(mb);\n+        frame.setSize(200, 135);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/NullOrEmptyStringLabelTest.java","additions":105,"deletions":0,"binary":false,"changes":105,"status":"added"},{"patch":"@@ -0,0 +1,91 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+\n+\/*\n+ * @test\n+ * @bug 4099695\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary menu items with Unicode labels treated as separators\n+ * @run main\/manual UnicodeMenuItemTest\n+ *\/\n+\n+public class UnicodeMenuItemTest {\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Click on the \"Menu\" on the top-left corner of frame.\n+\n+                The menu should have four entries:\n+                1) a row of five unicode characters: \\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\n+                2) a menu separator\n+                3) a unicode character:  \\u012d\n+                4) a unicode character:  \\u022d\n+\n+                If the menu items look like the list above, the test passes.\n+                It is okay if the unicode characters look like empty boxes\n+                or something - as long as they are not separators.\n+\n+                If either of the last two menu items show up as separators,\n+                the test FAILS.\n+\n+                Press 'Pass' if above instructions hold good else press 'Fail'.\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"UnicodeMenuItemTest\")\n+                .instructions(INSTRUCTIONS)\n+                .rows((int) INSTRUCTIONS.lines().count() + 2)\n+                .columns(40)\n+                .testUI(UnicodeMenuItemTest::createAndShowUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"Unicode MenuItem Test\");\n+        MenuBar mb = new MenuBar();\n+        Menu m = new Menu(\"Menu\");\n+\n+        MenuItem mi1 = new MenuItem(\"\\u00c4\\u00cb\\u00cf\\u00d6\\u00dc\");\n+        m.add(mi1);\n+\n+        MenuItem separator = new MenuItem(\"-\");\n+        m.add(separator);\n+\n+        MenuItem mi2 = new MenuItem(\"\\u012d\");\n+        m.add(mi2);\n+\n+        MenuItem mi3 = new MenuItem(\"\\u022d\");\n+        m.add(mi3);\n+\n+        mb.add(m);\n+\n+        frame.setMenuBar(mb);\n+        frame.setSize(450, 150);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/MenuItem\/UnicodeMenuItemTest.java","additions":91,"deletions":0,"binary":false,"changes":91,"status":"added"},{"patch":"@@ -0,0 +1,455 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4148078\n+ * @summary Repainting problems in scrolled panel\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual PanelRepaint\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Scrollbar;\n+import java.awt.TextField;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.FocusListener;\n+\n+public class PanelRepaint extends Panel implements FocusListener {\n+    static ScrollPanel sPanel;\n+    static Panel panel;\n+\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Using scrollbars or tab keys to scroll the panel and\n+                the panel is messy sometimes, e.g. one row bumps into\n+                another. If all components painted correctly, the test passes.\n+                Otherwise, the test fails.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"Test Instructions\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(35)\n+                .testUI(PanelRepaint::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    public static Frame createUI() {\n+        Frame f = new Frame(\"Panel Repaint Test\");\n+        f.setLayout(new FlowLayout());\n+        f.setSize(620, 288);\n+        PanelRepaint pr = new PanelRepaint();\n+\n+        panel = new Panel();\n+        panel.setLayout(null);\n+        panel.setSize(500, 500);\n+        sPanel = new ScrollPanel(panel);\n+\n+        Button btn = new Button(\"Open\");\n+        pr.addComp(btn);\n+        btn.setBounds(400, 10, 60, 20);\n+        btn.setActionCommand(\"OPEN\");\n+\n+        Button btn1 = new Button(\"Close\");\n+        pr.addComp(btn1);\n+        btn1.setBounds(400, 50, 60, 20);\n+        btn1.setActionCommand(\"CLOSE\");\n+\n+        TextField t1 = new TextField(\"1\");\n+        pr.addComp(t1);\n+        t1.setBounds(10, 10, 100, 20);\n+        TextField t2 = new TextField(\"2\");\n+        pr.addComp(t2);\n+        t2.setBounds(10, 50, 100, 20);\n+        TextField t3 = new TextField(\"3\");\n+        pr.addComp(t3);\n+        t3.setBounds(10, 90, 100, 20);\n+        TextField t4 = new TextField(\"4\");\n+        pr.addComp(t4);\n+        t4.setBounds(10, 130, 100, 20);\n+        TextField t5 = new TextField(\"5\");\n+        pr.addComp(t5);\n+        t5.setBounds(10, 170, 100, 20);\n+        TextField t6 = new TextField(\"6\");\n+        pr.addComp(t6);\n+        t6.setBounds(10, 210, 100, 20);\n+        TextField t7 = new TextField(\"7\");\n+        pr.addComp(t7);\n+        t7.setBounds(10, 250, 100, 20);\n+        TextField t8 = new TextField(\"8\");\n+        pr.addComp(t8);\n+        t8.setBounds(10, 290, 100, 20);\n+        TextField t9 = new TextField(\"9\");\n+        pr.addComp(t9);\n+        t9.setBounds(10, 330, 100, 20);\n+\n+        TextField t11 = new TextField(\"1\");\n+        pr.addComp(t11);\n+        t11.setBounds(120, 10, 100, 20);\n+        TextField t12 = new TextField(\"2\");\n+        pr.addComp(t12);\n+        t12.setBounds(120, 50, 100, 20);\n+        TextField t13 = new TextField(\"3\");\n+        pr.addComp(t13);\n+        t13.setBounds(120, 90, 100, 20);\n+        TextField t14 = new TextField(\"4\");\n+        pr.addComp(t14);\n+        t14.setBounds(120, 130, 100, 20);\n+        TextField t15 = new TextField(\"5\");\n+        pr.addComp(t15);\n+        t15.setBounds(120, 170, 100, 20);\n+        TextField t16 = new TextField(\"6\");\n+        pr.addComp(t16);\n+        t16.setBounds(120, 210, 100, 20);\n+        TextField t17 = new TextField(\"7\");\n+        pr.addComp(t17);\n+        t17.setBounds(120, 250, 100, 20);\n+        TextField t18 = new TextField(\"8\");\n+        pr.addComp(t18);\n+        t18.setBounds(120, 290, 100, 20);\n+        TextField t19 = new TextField(\"9\");\n+        pr.addComp(t19);\n+        t19.setBounds(120, 330, 100, 20);\n+\n+\n+        TextField t21 = new TextField(\"1\");\n+        pr.addComp(t21);\n+        t21.setBounds(240, 10, 100, 20);\n+        TextField t22 = new TextField(\"2\");\n+        pr.addComp(t22);\n+        t22.setBounds(240, 50, 100, 20);\n+        TextField t23 = new TextField(\"3\");\n+        pr.addComp(t23);\n+        t23.setBounds(240, 90, 100, 20);\n+        TextField t24 = new TextField(\"4\");\n+        pr.addComp(t24);\n+        t24.setBounds(240, 130, 100, 20);\n+        TextField t25 = new TextField(\"5\");\n+        pr.addComp(t25);\n+        t25.setBounds(240, 170, 100, 20);\n+        TextField t26 = new TextField(\"6\");\n+        pr.addComp(t26);\n+        t26.setBounds(240, 210, 100, 20);\n+        TextField t27 = new TextField(\"7\");\n+        pr.addComp(t27);\n+        t27.setBounds(240, 250, 100, 20);\n+        TextField t28 = new TextField(\"8\");\n+        pr.addComp(t28);\n+        t28.setBounds(240, 290, 100, 20);\n+        TextField t29 = new TextField(\"9\");\n+        pr.addComp(t29);\n+        t29.setBounds(240, 330, 100, 20);\n+\n+        pr.add(sPanel);\n+        f.add(pr);\n+        sPanel.setBounds(100, 100, 500, 250);\n+        sPanel.doLayout();\n+        return f;\n+    }\n+\n+    public void addComp(Component c) {\n+        panel.add(c);\n+        c.addFocusListener(this);\n+    }\n+\n+    public void focusGained(FocusEvent e) {\n+        sPanel.showComponent(e.getComponent());\n+    }\n+\n+    public void focusLost(FocusEvent e) {\n+    }\n+}\n+\n+class ScrollPanel extends Panel implements AdjustmentListener {\n+    \/**\n+     * Constructor\n+     *\/\n+    public ScrollPanel(Component c) {\n+        setLayout(null);\n+        setBackground(Color.lightGray);\n+        add(hScroll = new Scrollbar(Scrollbar.HORIZONTAL));\n+        add(vScroll = new Scrollbar(Scrollbar.VERTICAL));\n+        add(square = new Panel());\n+        square.setBackground(Color.lightGray);\n+        add(c);\n+    }\n+\n+    \/**\n+     * Scroll up\/down\/left\/right to show the component specified\n+     *\n+     * @param comp is the component to be shown\n+     *\/\n+    public void showComponent(Component comp) {\n+        Component view = getComponent(3);\n+        Rectangle viewRect = view.getBounds();\n+        Rectangle scrollRect = getBounds();\n+        Rectangle rect = comp.getBounds();\n+        while (comp != null) {\n+            Component parent = comp.getParent();\n+            if (parent == null || parent == view) {\n+                break;\n+            }\n+            Point p = parent.getLocation();\n+            rect.x += p.x;\n+            rect.y += p.y;\n+            comp = parent;\n+        }\n+\n+        int i = viewRect.y + rect.y;\n+        int j = (viewRect.y + rect.y + rect.height + ScrollPanel.H_HEIGHT)\n+                - (scrollRect.height);\n+\n+        if (i < 0) {\n+            vertUpdate(i);\n+        } else if (j > 0) {\n+            vertUpdate(j);\n+        }\n+\n+        i = viewRect.x + rect.x;\n+        j = (viewRect.x + rect.x + rect.width + (V_WIDTH * 2)) - (scrollRect.width);\n+\n+        if (i < 0) {\n+            horzUpdate(i);\n+        } else if (j > 0) {\n+            horzUpdate(j);\n+        }\n+    }\n+\n+    \/**\n+     * Returns the panel component of ScrollPanel\n+     *\n+     * @return the panel component of ScrollPanel\n+     *\/\n+    public Component getScrolled() {\n+        return getComponent(3);\n+    }\n+\n+    \/**\n+     * updates the scroll panel vertically with value i passed\n+     *\n+     * @param i the value to be updated with\n+     *\/\n+    public void vertUpdate(int i) {\n+        update(true, vScroll.getValue() + i);\n+    }\n+\n+    \/**\n+     * updates the scroll panel horizontally with value i passed\n+     *\n+     * @param i the value to be updated with\n+     *\/\n+    public void horzUpdate(int i) {\n+        update(false, hScroll.getValue() + i);\n+    }\n+\n+    \/**\n+     * updates the scroll panel vertically if bVert is true else horizontally\n+     *\n+     * @param n is the value\n+     *\/\n+    public void update(boolean bVert, int n) {\n+        if (n < 0) n = 0;\n+        if (bVert) {\n+            if (n > max.height) {\n+                n = max.height;\n+            }\n+            if (offset.y != n) {\n+                offset.y = n;\n+                vScroll.setValue(n);\n+            }\n+        } else {\n+            if (n > max.width) {\n+                n = max.width;\n+            }\n+            if (offset.x != n) {\n+                offset.x = n;\n+                hScroll.setValue(n);\n+            }\n+        }\n+        getScrolled().setLocation(-offset.x, -offset.y);\n+    }\n+\n+    \/**\n+     * Implementation of AdjustmentListener\n+     *\/\n+    public void adjustmentValueChanged(AdjustmentEvent e) {\n+        boolean bVert = e.getSource() == vScroll;\n+        update(bVert, e.getValue());\n+    }\n+\n+    \/**\n+     * Reimplementation of Component Methods\n+     *\/\n+    public void addNotify() {\n+        super.addNotify();\n+        vScroll.addAdjustmentListener(this);\n+        hScroll.addAdjustmentListener(this);\n+    }\n+\n+    public void removeNotify() {\n+        super.removeNotify();\n+        vScroll.removeAdjustmentListener(this);\n+        hScroll.removeAdjustmentListener(this);\n+    }\n+\n+    public void setBounds(int x, int y, int w, int h) {\n+        super.setBounds(x, y, w, h);\n+        doLayout();\n+    }\n+\n+    public void doLayout() {\n+        Component c = getScrolled();\n+        Dimension d = c.getSize();\n+        if (d.width == 0 || d.height == 0) {\n+            d = c.getPreferredSize();\n+        }\n+        vert = 0;\n+        horz = 0;\n+        Dimension m = getSize();\n+        if (d.height > m.height || isScroll(true, m.height - horz, 0, d.height)) {\n+            vert = V_WIDTH;\n+        }\n+        if (d.width + vert > m.width || isScroll(false, m.width - vert, 0, d.width)) {\n+            horz = H_HEIGHT;\n+        }\n+        if (d.height + horz > m.height || isScroll(true, m.height - horz, 0, d.height)) {\n+            vert = V_WIDTH;\n+        }\n+        if (d.width + vert > m.width || isScroll(false, m.width - vert, 0, d.width)) {\n+            horz = H_HEIGHT;\n+        }\n+        if (horz != 0) {\n+            if (m.width <= 0) {\n+                m.width = 1;\n+            }\n+            hScroll.setBounds(0, m.height - H_HEIGHT, m.width - vert, H_HEIGHT);\n+            hScroll.setValues(offset.x, m.width - vert, 0, d.width);\n+            int i = d.width \/ 10;\n+            if (i < 2) {\n+                i = 2;\n+            }\n+            hScroll.setBlockIncrement(i);\n+            i = d.width \/ 50;\n+            if (i < 1) {\n+                i = 1;\n+            }\n+            hScroll.setUnitIncrement(i);\n+            max.width = d.width;\n+            hScroll.setVisible(true);\n+        } else {\n+            offset.x = 0;\n+        }\n+        if (vert != 0) {\n+            if (m.height <= 0) {\n+                m.height = 1;\n+            }\n+            vScroll.setBounds(m.width - V_WIDTH, 0, V_WIDTH, m.height - horz);\n+            vScroll.setValues(offset.y, m.height - horz, 0, d.height);\n+            int i = d.height \/ 10;\n+            if (i < 2) i = 2;\n+            vScroll.setBlockIncrement(i);\n+            i = d.height \/ 50;\n+            if (i < 1) i = 1;\n+            vScroll.setUnitIncrement(i);\n+            max.height = d.height;\n+            vScroll.setVisible(true);\n+        } else {\n+            offset.y = 0;\n+        }\n+        if (horz != 0 && vert != 0) {\n+            square.setBounds(m.width - V_WIDTH, m.height - H_HEIGHT, V_WIDTH, H_HEIGHT);\n+            square.setVisible(true);\n+        } else {\n+            square.setVisible(false);\n+        }\n+        c.setBounds(-offset.x, -offset.y, d.width, d.height);\n+        c.repaint();\n+        updateScroll(true, offset.y);\n+        updateScroll(false, offset.x);\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return getScrolled().getPreferredSize();\n+    }\n+\n+    public Dimension getMinimumSize() {\n+        return getScrolled().getMinimumSize();\n+    }\n+\n+    boolean isScroll(boolean bVert, int visible, int min, int max) {\n+        int tot = max - min;\n+        int net = tot - visible;\n+        if (net <= 0) {\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    void updateScroll(boolean bVert, int n) {\n+        Component c = getScrolled();\n+        Dimension d = c.getSize();\n+        Dimension m = getSize();\n+        m.width -= vert;\n+        m.height -= horz;\n+        if (bVert) {\n+            if (n >= 0 && d.height > m.height) {\n+                if (n + m.height > d.height)\n+                    n = d.height - m.height;\n+            } else\n+                n = 0;\n+            update(true, n);\n+        } else {\n+            if (n >= 0 && d.width > m.width) {\n+                if (n + m.width > d.width)\n+                    n = d.width - m.width;\n+            } else\n+                n = 0;\n+            update(false, n);\n+        }\n+    }\n+\n+    static Scrollbar hScroll;\n+    static Scrollbar vScroll;\n+    static int vert = 0;\n+    static int horz = 0;\n+\n+    static Point offset = new Point();\n+    static Dimension max = new Dimension();\n+    \/\/  ScrollTimer timer;\n+    static Component square;\n+    final static int V_WIDTH = 17;\n+    final static int H_HEIGHT = 17;\n+}\n","filename":"test\/jdk\/java\/awt\/Panel\/PanelRepaint\/PanelRepaint.java","additions":455,"deletions":0,"binary":false,"changes":455,"status":"added"},{"patch":"@@ -0,0 +1,220 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuBar;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.Robot;\n+\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+import java.util.Hashtable;\n+\n+\/*\n+ * @test\n+ * @bug 4214550\n+ * @summary Tests that there is no seg fault on repeatedly showing\n+ *          PopupMenu by right-clicking Label, Panel or Button\n+ * @key headful\n+ * @run main ActivePopupCrashTest\n+ *\/\n+\n+public class ActivePopupCrashTest {\n+    private static Frame f;\n+    private static Label l;\n+    private static Button b;\n+    private static Panel p;\n+\n+    private static volatile Point labelCenter;\n+    private static volatile Point buttonCenter;\n+    private static volatile Point panelCenter;\n+\n+    public static void main(String[] args) throws Exception {\n+        final int REPEAT_COUNT = 5;\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            EventQueue.invokeAndWait(ActivePopupCrashTest::createAndShowUI);\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                labelCenter = getCenterPoint(l);\n+                buttonCenter = getCenterPoint(b);\n+                panelCenter = getCenterPoint(p);\n+            });\n+\n+            for (int i = 0; i < REPEAT_COUNT; i++) {\n+                robot.mouseMove(labelCenter.x, labelCenter.y);\n+                robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+                robot.mouseMove(buttonCenter.x, buttonCenter.y);\n+                robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+                robot.mouseMove(panelCenter.x, panelCenter.y);\n+                robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+            }\n+\n+            \/\/ To close the popup, otherwise test fails on windows with timeout error\n+            robot.mouseMove(panelCenter.x - 5, panelCenter.y - 5);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static Point getCenterPoint(Component component) {\n+        Point p = component.getLocationOnScreen();\n+        Dimension size = component.getSize();\n+        return new Point(p.x + size.width \/ 2, p.y + size.height \/ 2);\n+    }\n+\n+    public static void createAndShowUI() {\n+        f = new Frame(\"ActivePopupCrashTest Test\");\n+        MenuItem item = new MenuItem(\"file-1\");\n+        item.addActionListener(ActivePopupCrashTest::logActionEvent);\n+        Menu m = new Menu(\"file\");\n+        m.add(item);\n+        item = new MenuItem(\"file-2\");\n+        m.add(item);\n+        MenuBar mb = new MenuBar();\n+        mb.add(m);\n+\n+        f.setMenuBar(mb);\n+        f.setSize(200, 200);\n+        f.setLayout(new BorderLayout());\n+\n+        l = new Label(\"label\");\n+        addPopup(l, \"label\");\n+        f.add(l, BorderLayout.NORTH);\n+\n+        p = new Panel();\n+        addPopup(p, \"panel\");\n+        f.add(p, BorderLayout.CENTER);\n+\n+        b = new Button(\"button\");\n+        addPopup(b, \"button\");\n+        f.add(b, BorderLayout.SOUTH);\n+\n+        f.setSize(400, 300);\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+\n+    static void addPopup(Component c, String name) {\n+        PopupMenu pm = new PopupMenu();\n+        MenuItem mi = new MenuItem(name + \"-1\");\n+        mi.addActionListener(ActivePopupCrashTest::logActionEvent);\n+        pm.add(mi);\n+\n+        mi = new MenuItem(name + \"-2\");\n+        pm.add(mi);\n+\n+        setHash(c, pm);\n+        c.add(pm);\n+        c.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                mouseAction(\"mouseClicked\", e);\n+            }\n+\n+            @Override\n+            public void mousePressed(MouseEvent e) {\n+                mouseAction(\"mousePressed\", e);\n+            }\n+\n+            @Override\n+            public void mouseReleased(MouseEvent e) {\n+                mouseAction(\"mouseReleased\", e);\n+            }\n+        });\n+    }\n+\n+    static void logActionEvent(ActionEvent e) {\n+        System.out.println(\"actionPerformed, event=\" + e + \", mod=\" + getMods(e));\n+        System.out.println(\"command=\" + e.getActionCommand());\n+        System.out.println(\"param=\" + e.paramString());\n+        System.out.println(\"source=\" + e.getSource());\n+    }\n+\n+    static String getMods(ActionEvent e) { return getMods(e.getModifiers()); }\n+\n+    static String getMods(MouseEvent e) { return getMods(e.getModifiers()); }\n+\n+    static String getMods(int mods) {\n+        String modstr = \"\";\n+        if ((mods & ActionEvent.SHIFT_MASK) == ActionEvent.SHIFT_MASK) {\n+            modstr += (\" SHIFT\");\n+        } else if ((mods & ActionEvent.ALT_MASK) == ActionEvent.ALT_MASK) {\n+            modstr += (\" ALT\");\n+        } else if ((mods & ActionEvent.CTRL_MASK) == ActionEvent.CTRL_MASK) {\n+            modstr += (\" CTRL\");\n+        } else if ((mods & ActionEvent.META_MASK) == ActionEvent.META_MASK) {\n+            modstr += (\" META\");\n+        }\n+        return modstr;\n+    }\n+\n+    static void mouseAction(String which, MouseEvent e) {\n+        Component c = e.getComponent();\n+        System.out.println(which + \" e = \" + e + \" , mods = \" + getMods(e) +\n+                \" , component = \" + c);\n+        if (e.isPopupTrigger()) {\n+            System.out.println(\"isPopup\");\n+            PopupMenu pm = getHash(c);\n+            pm.show(c, c.getWidth() \/ 2, c.getHeight() \/ 2);\n+        }\n+    }\n+\n+    static Hashtable<Component, PopupMenu> popupTable = new Hashtable<>();\n+\n+    static void setHash(Component c, PopupMenu p) {\n+        popupTable.put(c, p);\n+    }\n+\n+    static PopupMenu getHash(Component c) {\n+        return popupTable.get(c);\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/ActivePopupCrashTest.java","additions":220,"deletions":0,"binary":false,"changes":220,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2004, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Menu;\n+import java.awt.MenuItem;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.Robot;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 5021183\n+ * @summary Tests Key Traversal doesn't crash PopupMenu\n+ * @key headful\n+ * @run main KeyTraversalCrash\n+ *\/\n+\n+public class KeyTraversalCrash {\n+    private static Frame f;\n+    private static Label label;\n+\n+    private static volatile Point loc;\n+    private static volatile Dimension dim;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            EventQueue.invokeAndWait(KeyTraversalCrash::createAndShowUI);\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                loc = label.getLocationOnScreen();\n+                dim = label.getSize();\n+            });\n+\n+            robot.mouseMove(loc.x + 20, loc.y + 20);\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+            robot.mouseMove(loc.x + 25, loc.y + 25);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.keyPress(KeyEvent.VK_LEFT);\n+            robot.keyRelease(KeyEvent.VK_LEFT);\n+\n+            robot.keyPress(KeyEvent.VK_DOWN);\n+            robot.keyRelease(KeyEvent.VK_DOWN);\n+\n+            \/\/ To close the popup, otherwise test fails on windows with timeout error\n+            robot.mouseMove(loc.x + dim.width - 20, loc.y + dim.height - 20);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        f = new Frame(\"KeyTraversalCrash Test\");\n+        final PopupMenu popup = new PopupMenu();\n+        for (int i = 0; i < 10; i++) {\n+            Menu menu = new Menu(\"Menu \" + i);\n+            for(int j = 0; j < 10; j++) {\n+                MenuItem menuItem = new MenuItem(\"MenuItem \" + j);\n+                menu.add(menuItem);\n+            }\n+            popup.add(menu);\n+        }\n+        label = new Label(\"Label\");\n+        f.add(label);\n+        f.add(popup);\n+        label.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mousePressed(MouseEvent me) {\n+                if (me.isPopupTrigger()) {\n+                    popup.show(me.getComponent(), me.getX(), me.getY());\n+                }\n+            }\n+\n+            @Override\n+            public void mouseReleased(MouseEvent me) {\n+                if (me.isPopupTrigger()) {\n+                    popup.show(me.getComponent(), me.getX(), me.getY());\n+                }\n+            }\n+        });\n+        f.setSize(200, 200);\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/KeyTraversalCrash.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.AWTEvent;\n+import java.awt.Button;\n+import java.awt.Frame;\n+import java.awt.MenuItem;\n+import java.awt.PopupMenu;\n+\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4186663 4265525\n+ * @summary Tests that multiple PopupMenus cannot appear at the same time\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual MultiplePopupMenusTest\n+ *\/\n+\n+public class MultiplePopupMenusTest {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                Click the right mouse button on the button\n+                If multiple popups appear at the same time the\n+                test fails else passes.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"MultiplePopupMenusTest Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(30)\n+                .testUI(MultiplePopupMenusTest::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        Frame fr = new Frame(\"MultiplePopupMenusTest Test\");\n+        TestButton button = new TestButton(\"button\");\n+        fr.add(button);\n+        fr.setSize(200, 200);\n+        return fr;\n+    }\n+\n+    static class TestButton extends Button {\n+        public TestButton(String title) {\n+            super(title);\n+            enableEvents(AWTEvent.MOUSE_EVENT_MASK);\n+        }\n+\n+        @Override\n+        public void processMouseEvent(MouseEvent e) {\n+            if (e.isPopupTrigger()) {\n+                for (int i = 0; i < 10; i++) {\n+                    PopupMenu pm = new PopupMenu(\"Popup \" + i);\n+                    pm.add(new MenuItem(\"item 1\"));\n+                    pm.add(new MenuItem(\"item 2\"));\n+                    add(pm);\n+                    pm.show(this, e.getX() + i * 5, e.getY() + i * 5);\n+                }\n+            }\n+            super.processMouseEvent(e);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/MultiplePopupMenusTest.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.MenuItem;\n+import java.awt.PopupMenu;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4281273\n+ * @summary PopupMenu crashed in Java. Simplified testcase.\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"windows\")\n+ * @run main\/manual PopupMenuCrash\n+ *\/\n+\n+public class PopupMenuCrash {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                This tests a windows specific problem.\n+                When you see a frame titled \"PopupMenuCrash Test\", right-click on it\n+                several times for a few seconds. Then wait about 10 seconds before the\n+                PopupMenus start to appear. Then dispose them one by one by clicking on them.\n+                When PopupMenus do not appear anymore, press Pass.\n+                In case of a failure, you'll see a crash.\n+                \"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"PopupMenuCrash Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .testUI(PopupMenuCrash::createUI)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static Frame createUI() {\n+        final Frame f = new Frame(\"PopupMenuCrash Test\");\n+        f.setLayout(new FlowLayout());\n+        f.add(new Label(\"Press right mouse button inside this frame.\"));\n+        f.add(new Label(\"A pop-up menu should appear.\"));\n+        f.addMouseListener(new MouseAdapter() {\n+            PopupMenu popup;\n+            boolean firstPress = true;\n+\n+            @Override\n+            public void mousePressed(MouseEvent evt) {\n+                if (firstPress) {\n+                    firstPress = false;\n+                    try {\n+                        Thread.sleep(10000);\n+                    } catch (InterruptedException ignored) {\n+                    }\n+                }\n+\n+                if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) != 0) {\n+                    popup = new PopupMenu(\"Popup Menu Title\");\n+                    MenuItem mi = new MenuItem(\"MenuItem\");\n+                    popup.add(mi);\n+                    f.add(popup);\n+                    popup.show(evt.getComponent(), evt.getX(), evt.getY());\n+                }\n+            }\n+\n+            @Override\n+            public void mouseReleased(MouseEvent evt) {\n+                if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) != 0) {\n+                    if (popup != null) {\n+                        f.remove(popup);\n+                        popup = null;\n+                    }\n+                }\n+            }\n+        });\n+\n+        f.setSize(400, 350);\n+        return f;\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/PopupMenuCrash.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.MenuItem;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.PopupMenu;\n+import java.awt.Robot;\n+\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4083400\n+ * @key headful\n+ * @summary Tests that excessive popping up and down does not crash or\n+ *          throw an exception.\n+ * @run main StressTest\n+ *\/\n+\n+public class StressTest {\n+    private static Frame fr;\n+    private static PopupTestPanel panel;\n+\n+    private static volatile Point panelCenter;\n+\n+    public static void main(String[] args) throws Exception {\n+        final int REPEAT_COUNT = 5;\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(50);\n+            EventQueue.invokeAndWait(StressTest::createAndShowUI);\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                Point loc = panel.getLocationOnScreen();\n+                Dimension dim = panel.getSize();\n+                panelCenter = new Point(loc.x + dim.width \/ 2, loc.y + dim.height \/ 2);\n+            });\n+\n+            for (int i = 0; i < REPEAT_COUNT; i++) {\n+                robot.mouseMove(panelCenter.x + i * 2, panelCenter.y + i * 2);\n+\n+                robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+\n+                robot.mouseMove(panelCenter.x - i * 2, panelCenter.y - i * 2);\n+\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        fr = new Frame(\"PopupMenu Test\");\n+        panel = new PopupTestPanel();\n+        fr.add(panel);\n+        fr.setSize(300, 200);\n+        fr.setVisible(true);\n+    }\n+\n+    static class PopupTestPanel extends Panel {\n+\n+        static class Item extends MenuItem {\n+            public Item(String text) {\n+                super(text);\n+            }\n+\n+            public boolean isEnabled() {\n+                try {\n+                    Thread.sleep(100);\n+                } catch (InterruptedException ignored) {\n+                }\n+                return super.isEnabled();\n+            }\n+        }\n+\n+        final PopupMenu popup;\n+\n+        public PopupTestPanel() {\n+            popup = new PopupMenu();\n+            popup.add(new Item(\"Soap\"));\n+            popup.add(new Item(\"Sponge\"));\n+            popup.add(new Item(\"Flannel\"));\n+            popup.add(new Item(\"Mat\"));\n+            popup.add(new Item(\"Towel\"));\n+            add(popup);\n+            addMouseListener(new MouseAdapter() {\n+                @Override\n+                public void mousePressed(MouseEvent e) {\n+                    if (e.isPopupTrigger()) {\n+                        showPopup(e);\n+                    }\n+                }\n+\n+                @Override\n+                public void mouseReleased(MouseEvent e) {\n+                    if (e.isPopupTrigger()) {\n+                        showPopup(e);\n+                    }\n+                }\n+\n+                private void showPopup(MouseEvent e) {\n+                    popup.show((Component) e.getSource(), e.getX(), e.getY());\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/PopupMenu\/StressTest.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"},{"patch":"@@ -0,0 +1,270 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4102292\n+ * @summary Tests that location by platform works with other APIs\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestLocationByPlatformWithControls\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Checkbox;\n+import java.awt.Frame;\n+import java.awt.Label;\n+import java.awt.Panel;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n+import java.util.Vector;\n+\n+public class TestLocationByPlatformWithControls extends Frame\n+    implements ActionListener, ItemListener {\n+    Panel northP;\n+    Panel centerP;\n+    Checkbox undecoratedCB;\n+    Checkbox defaultLocationCB;\n+    Checkbox visibleCB;\n+    Checkbox iconifiedCB;\n+    Checkbox maximizedCB;\n+    Button createB;\n+    Button packB;\n+    Button moveB;\n+    Button resizeB;\n+    Button reshapeB;\n+    Button disposeB;\n+    Vector frames;\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            This test is to check that LocationByPlatform works with other\n+            controls API.\n+            1) Create New Frame by clicking on \"Create\" Button in\n+            \"TestLocationByPlatformWithControls\" window.\n+            2) Initially this Frame will not be visible, Click on checkbox\n+            \"LocationByPlatform\" to set default platform location for the frame\n+            and then click on checkbox \"Visible\" to see that Frame is displayed\n+            at default offsets.\n+            3) Now you can play with different controls like Iconified,\n+            Maximized, Pack, Move, Resize and Reshape to verify that these\n+            controls work properly with the Frame.\n+            4) At the end dispose the Frame by clicking on \"Dispose\" button.\n+            5) Also we can do verify this for Undecorated Frame but for that we\n+            need to follow same steps but in step 2 before we click on checkbox\n+            \"Visible\", select \"Undecorated\" checkbox along with\n+            \"LocationByPlatform\".\n+            6) If everything works properly test is passed, otherwise failed.\n+            \"\"\";\n+\n+        PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .columns(40)\n+            .testUI(TestLocationByPlatformWithControls::new)\n+            .logArea(4)\n+            .build()\n+            .awaitAndCheck();\n+    }\n+\n+    public TestLocationByPlatformWithControls() {\n+        northP = new Panel();\n+        centerP = new Panel();\n+\n+        undecoratedCB = new Checkbox(\"Undecorated\");\n+        defaultLocationCB = new Checkbox(\"LocationByPlatform\");\n+        visibleCB = new Checkbox(\"Visible\");\n+        iconifiedCB = new Checkbox(\"Iconified\");\n+        maximizedCB = new Checkbox(\"Maximized\");\n+\n+        createB = new Button(\"Create\");\n+        packB = new Button(\"Pack\");\n+        moveB = new Button(\"Move\");\n+        resizeB = new Button(\"Resize\");\n+        reshapeB = new Button(\"Reshape\");\n+        disposeB = new Button(\"Dispose\");\n+\n+        frames = new Vector(10);\n+        this.setTitle(\"TestLocationByPlatformWithControls\");\n+        this.setLayout(new BorderLayout());\n+        this.add(northP, BorderLayout.NORTH);\n+\n+        northP.add(new Label(\"New Frame\"));\n+\n+        createB.addActionListener(this);\n+        northP.add(createB);\n+\n+        centerP.setEnabled(false);\n+        this.add(centerP, BorderLayout.CENTER);\n+\n+        centerP.add(new Label(\"Last Frame\"));\n+\n+        centerP.add(defaultLocationCB);\n+        defaultLocationCB.addItemListener(this);\n+\n+        centerP.add(undecoratedCB);\n+        undecoratedCB.addItemListener(this);\n+\n+        centerP.add(iconifiedCB);\n+        iconifiedCB.addItemListener(this);\n+\n+        centerP.add(maximizedCB);\n+        maximizedCB.addItemListener(this);\n+\n+        centerP.add(visibleCB);\n+        visibleCB.addItemListener(this);\n+\n+        packB.addActionListener(this);\n+        centerP.add(packB);\n+\n+        moveB.addActionListener(this);\n+        centerP.add(moveB);\n+\n+        resizeB.addActionListener(this);\n+        centerP.add(resizeB);\n+\n+        reshapeB.addActionListener(this);\n+        centerP.add(reshapeB);\n+\n+        disposeB.addActionListener(this);\n+        centerP.add(disposeB);\n+        this.pack();\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        if (e.getSource() ==  createB) {\n+            Frame frame = new Frame();\n+            frame.setSize(200, 200);\n+            frames.add(frame);\n+            updateControls(frame);\n+            Panel panel = new Panel();\n+            frame.add(panel);\n+            panel.add(new Button (\"Test Button\"));\n+            panel.add(new Button (\"Test Button 1\"));\n+            panel.add(new Button (\"Test Button  2\"));\n+            panel.add(new Button (\"Test Button   3\"));\n+            centerP.setEnabled(true);\n+            return;\n+        }\n+\n+        if (frames.isEmpty()) {\n+            return;\n+        }\n+\n+        Frame last = (Frame)frames.lastElement();\n+\n+        if (e.getSource() == packB) {\n+            last.pack();\n+        } else\n+        if (e.getSource() == moveB) {\n+            int x = (int)(Math.random() * 200);\n+            int y = (int)(Math.random() * 200);\n+            last.setLocation(x, y);\n+        } else\n+        if (e.getSource() == resizeB) {\n+            int w = (int)(Math.random() * 200);\n+            int h = (int)(Math.random() * 200);\n+            last.setSize(w, h);\n+        } else\n+        if (e.getSource() == reshapeB) {\n+            int x = (int)(Math.random() * 200);\n+            int y = (int)(Math.random() * 200);\n+            int w = (int)(Math.random() * 200);\n+            int h = (int)(Math.random() * 200);\n+            last.setBounds(x, y, w, h);\n+        } else\n+        if (e.getSource() == disposeB) {\n+            last.dispose();\n+            frames.remove(frames.size() - 1);\n+            if (frames.isEmpty()) {\n+                updateControls(null);\n+                centerP.setEnabled(false);\n+                return;\n+            }\n+            last = (Frame)frames.lastElement();\n+        }\n+        updateControls(last);\n+    }\n+\n+    public void updateControls(Frame f) {\n+        undecoratedCB.setState(f != null ?\n+            f.isUndecorated() : false);\n+        defaultLocationCB.setState(f != null ?\n+            f.isLocationByPlatform() : false);\n+        visibleCB.setState(f != null ?\n+            f.isVisible() : false);\n+        iconifiedCB.setState(f != null ?\n+            (f.getExtendedState() & Frame.ICONIFIED) != 0 : false);\n+        maximizedCB.setState(f != null ?\n+            (f.getExtendedState() & Frame.MAXIMIZED_BOTH) != 0 : false);\n+    }\n+\n+    public void itemStateChanged(ItemEvent e) {\n+        Frame last = (Frame)frames.lastElement();\n+        try {\n+            boolean state = e.getStateChange() == ItemEvent.SELECTED;\n+            if (e.getSource() == visibleCB) {\n+                last.setVisible(state);\n+            } else\n+            if (e.getSource() == defaultLocationCB) {\n+                last.setLocationByPlatform(state);\n+            } else\n+            if (e.getSource() == undecoratedCB) {\n+                last.setUndecorated(state);\n+            } else\n+            if (e.getSource() == iconifiedCB) {\n+                if (state) {\n+                    last.setExtendedState(last.getExtendedState() |\n+                        Frame.ICONIFIED);\n+                } else {\n+                    last.setExtendedState(last.getExtendedState() &\n+                        ~Frame.ICONIFIED);\n+                }\n+            } else\n+            if (e.getSource() == maximizedCB) {\n+                if (state) {\n+                    last.setExtendedState(last.getExtendedState() |\n+                        Frame.MAXIMIZED_BOTH);\n+                } else {\n+                    last.setExtendedState(last.getExtendedState() &\n+                        ~Frame.MAXIMIZED_BOTH);\n+                }\n+            }\n+        } catch (Throwable ex) {\n+            PassFailJFrame.log(ex.getMessage());\n+        } finally {\n+            updateControls(last);\n+        }\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        while (!frames.isEmpty()) {\n+            Frame last = (Frame)frames.lastElement();\n+            last.dispose();\n+            frames.remove(frames.size() - 1);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/LocationByPlatformWithControls\/TestLocationByPlatformWithControls.java","additions":270,"deletions":0,"binary":false,"changes":270,"status":"added"},{"patch":"@@ -0,0 +1,82 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4942457\n+ * @key headful\n+ * @summary Verifies that filtering of resize events on native level works.\n+ * I.E.after Frame is shown no additional resize events are generated.\n+ * @library \/java\/awt\/patchlib ..\/..\/regtesthelpers\n+ * @build java.desktop\/java.awt.Helper\n+ * @build Util\n+ * @run main NoResizeEvent\n+ *\/\n+\n+import test.java.awt.regtesthelpers.Util;\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.event.ComponentAdapter;\n+import java.awt.event.ComponentEvent;\n+\n+public class NoResizeEvent {\n+    \/\/Mutter can send window insets too late, causing additional resize events.\n+    private static final boolean IS_MUTTER = Util.getWMID() == Util.MUTTER_WM;\n+    private static final int RESIZE_COUNT_LIMIT = IS_MUTTER ? 5 : 3;\n+    private static Frame frame;\n+    static int resize_count = 0;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> createUI());\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+            if (resize_count > RESIZE_COUNT_LIMIT) {\n+                throw new RuntimeException(\"Resize event arrived: \"\n+                    + resize_count + \" times.\");\n+            }\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new Frame(\"NoResizeEvent\");\n+        frame.addComponentListener(new ComponentAdapter() {\n+            public void componentResized(ComponentEvent e) {\n+                System.out.println(e);\n+                resize_count++;\n+            }\n+        });\n+        frame.setVisible(true);\n+\n+        try {\n+            Thread.sleep(3000);\n+        } catch (InterruptedException ie) {\n+        }\n+        System.out.println(\"Resize count: \" + resize_count);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/NoResizeEvent\/NoResizeEvent.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"added"},{"patch":"@@ -0,0 +1,192 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4381561\n+ * @key headful\n+ * @summary Tests that when we show the popup window AWT doesn't crash due to\n+ * the problems with focus proxy window code\n+ * @run main PopupProxyCrash\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Color;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+\n+import javax.swing.Box;\n+import javax.swing.JComboBox;\n+import javax.swing.JTextField;\n+import javax.swing.plaf.basic.BasicComboBoxUI;\n+import javax.swing.plaf.basic.BasicComboPopup;\n+import javax.swing.plaf.basic.ComboPopup;\n+\n+public class PopupProxyCrash implements ActionListener {\n+    private static JTextField jtf;\n+    private static Button tf;\n+    private static Panel panel;\n+    private static Font[] fonts;\n+    private static Robot robot;\n+\n+    private static JComboBox cb;\n+\n+    private static MyComboBoxUI comboBoxUI;\n+    private static Frame frame;\n+    private static int TEST_COUNT = 10;\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n+            EventQueue.invokeAndWait(() -> createUI());\n+            robot.waitForIdle();\n+            runTest();\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createUI() {\n+        frame = new Frame(\"PopupProxyCrash\");\n+        Font dialog = new Font(\"Dialog\", Font.PLAIN, 12);\n+        Font serif = new Font(\"Serif\", Font.PLAIN, 12);\n+        Font monospaced = new Font(\"Monospaced\", Font.PLAIN, 12);\n+\n+        fonts = new Font[] { dialog, serif, monospaced };\n+\n+        cb = new JComboBox(fonts);\n+\n+        cb.setLightWeightPopupEnabled(false);\n+        comboBoxUI = new MyComboBoxUI();\n+        cb.setUI(comboBoxUI);\n+        jtf = new JTextField(\"JTextField\");\n+        jtf.setFont(fonts[1]);\n+        tf = new Button(\"TextField\");\n+        tf.setFont(fonts[1]);\n+        cb.addActionListener(new PopupProxyCrash());\n+\n+        panel = new Panel() {\n+            public Dimension getPreferredSize() {\n+                return new Dimension(100, 20);\n+            }\n+            public void paint(Graphics g) {\n+                System.out.println(\"Painting with font \" + getFont());\n+                g.setColor(Color.white);\n+                g.fillRect(0, 0, getWidth(), getHeight());\n+                g.setColor(Color.black);\n+                g.setFont(getFont());\n+                g.drawString(\"LightWeight\", 10, 10);\n+            }\n+        };\n+        panel.setFont(fonts[1]);\n+\n+        Container parent = Box.createVerticalBox();\n+        parent.add(jtf);\n+        parent.add(tf);\n+        parent.add(panel);\n+        parent.add(cb);\n+\n+        frame.add(parent, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static Point getComboBoxLocation() throws Exception {\n+        final Point[] result = new Point[1];\n+\n+        EventQueue.invokeAndWait(() -> {\n+            Point point = cb.getLocationOnScreen();\n+            Dimension size = cb.getSize();\n+\n+            point.x += size.width \/ 2;\n+            point.y += size.height \/ 2;\n+            result[0] = point;\n+        });\n+        return result[0];\n+    }\n+\n+    private static Point getItemPointToClick(final int item) throws Exception {\n+        final Point[] result = new Point[1];\n+\n+        EventQueue.invokeAndWait(() -> {\n+            BasicComboPopup popup = (BasicComboPopup)comboBoxUI.getComboPopup();\n+            Point point = popup.getLocationOnScreen();\n+            Dimension size = popup.getSize();\n+\n+            int step = size.height \/ fonts.length;\n+            point.x += size.width \/ 2;\n+            point.y += step \/ 2 + step * item;\n+            result[0] = point;\n+        });\n+        return result[0];\n+    }\n+\n+    static void runTest() throws Exception {\n+        for (int i = 0; i < TEST_COUNT; i++) {\n+            Point point = getComboBoxLocation();\n+            robot.mouseMove(point.x, point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            point = getItemPointToClick(i % fonts.length);\n+            robot.mouseMove(point.x, point.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+        }\n+    }\n+    public void actionPerformed(ActionEvent ae) {\n+        System.out.println(\"Font selected\");\n+        Font font = fonts[((JComboBox)ae.getSource()).getSelectedIndex()];\n+\n+        tf.setFont(font);\n+        jtf.setFont(font);\n+        panel.setFont(font);\n+        panel.repaint();\n+    }\n+\n+    private static class MyComboBoxUI extends BasicComboBoxUI {\n+        public ComboPopup getComboPopup() {\n+            return popup;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/ProxyCrash\/PopupProxyCrash.java","additions":192,"deletions":0,"binary":false,"changes":192,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4488209\n+ * @summary JFrame toFront causes the entire frame to be repainted, causes UI\n+ * to flash\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual WindowToFrontTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class WindowToFrontTest implements ActionListener {\n+    static Frame frame;\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+            1) Click the \"toFront\" button, this causes the\n+            \"WindowToFrontTest\" frame to move front and gets repainted\n+            completely.\n+            2) Move \"WindowToFrontTest\" window and continue to click on \"toFront\n+            multiple times. If the \"WindowToFrontTest\" Frame content is not\n+            drawn properly and continues to blink, test is failed\n+            otherwise passed.\n+            \"\"\";\n+\n+        PassFailJFrame passFailJFrame = PassFailJFrame.builder()\n+            .title(\"Test Instructions\")\n+            .instructions(INSTRUCTIONS)\n+            .rows(13)\n+            .columns(40)\n+            .build();\n+        EventQueue.invokeAndWait(() -> createUI());\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    private static void createUI() {\n+        frame = new Frame(\"WindowToFrontTest\");\n+        frame.setLayout(new BorderLayout());\n+        frame.setSize(512, 512);\n+        PassFailJFrame.addTestWindow(frame);\n+        frame.setVisible(true);\n+\n+        Frame buttonFrame = new Frame(\"Test Button\");\n+        Button push = new Button(\"toFront\");\n+        push.addActionListener(new WindowToFrontTest());\n+        buttonFrame.add(push);\n+        buttonFrame.pack();\n+        PassFailJFrame.addTestWindow(buttonFrame);\n+        buttonFrame.setVisible(true);\n+    }\n+\n+    public void actionPerformed(ActionEvent e) {\n+        frame.toFront();\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Window\/WindowToFrontTest\/WindowToFrontTest.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.GradientPaint;\n+import java.awt.Graphics2D;\n+import java.awt.Transparency;\n+import java.awt.color.ColorSpace;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorConvertOp;\n+import java.awt.image.ComponentColorModel;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.WritableRaster;\n+\n+\/*\n+ * @test\n+ * @bug 8316497\n+ * @summary Verifies Color filter on non-ICC profile\n+ *\/\n+public final class NonICCFilterTest {\n+    private static final int WIDTH = 100;\n+    private static final int HEIGHT = 100;\n+\n+    private enum ColorSpaceSelector {\n+        GRAY,\n+        RGB,\n+        PYCC,\n+        WRAPPED_GRAY,\n+        WRAPPED_RGB,\n+        WRAPPED_PYCC\n+    }\n+\n+    private static final class TestColorSpace extends ColorSpace {\n+\n+        private final ColorSpace cs;\n+\n+        TestColorSpace(ColorSpace cs) {\n+            super(cs.getType(), cs.getNumComponents());\n+            this.cs = cs;\n+        }\n+\n+        @Override\n+        public float[] toRGB(float[] colorvalue) {\n+            return cs.toRGB(colorvalue);\n+        }\n+\n+        @Override\n+        public float[] fromRGB(float[] rgbvalue) {\n+            return cs.fromRGB(rgbvalue);\n+        }\n+\n+        @Override\n+        public float[] toCIEXYZ(float[] colorvalue) {\n+            return cs.toCIEXYZ(colorvalue);\n+        }\n+\n+        @Override\n+        public float[] fromCIEXYZ(float[] xyzvalue) {\n+            return cs.fromCIEXYZ(xyzvalue);\n+        }\n+    }\n+\n+    private static BufferedImage createTestImage(final ColorSpace cs) {\n+        ComponentColorModel cm = new ComponentColorModel(cs, false, false,\n+                Transparency.OPAQUE, DataBuffer.TYPE_BYTE);\n+        WritableRaster raster = cm.createCompatibleWritableRaster(WIDTH, HEIGHT);\n+        BufferedImage img = new BufferedImage(cm, raster, false, null);\n+\n+        Graphics2D g = img.createGraphics();\n+        GradientPaint gp = new GradientPaint(0, 0, Color.GREEN,\n+                raster.getWidth(), raster.getHeight(), Color.BLUE);\n+        g.setPaint(gp);\n+        g.fillRect(0, 0, raster.getWidth(), raster.getHeight());\n+        g.dispose();\n+\n+        return img;\n+    }\n+\n+    private static ColorSpace createCS(ColorSpaceSelector selector) {\n+        return switch (selector) {\n+            case GRAY -> ColorSpace.getInstance(ColorSpace.CS_GRAY);\n+            case WRAPPED_GRAY -> new TestColorSpace(ColorSpace.getInstance(ColorSpace.CS_GRAY));\n+\n+            case RGB -> ColorSpace.getInstance(ColorSpace.CS_sRGB);\n+            case WRAPPED_RGB -> new TestColorSpace(ColorSpace.getInstance(ColorSpace.CS_sRGB));\n+\n+            case PYCC -> ColorSpace.getInstance(ColorSpace.CS_PYCC);\n+            case WRAPPED_PYCC -> new TestColorSpace(ColorSpace.getInstance(ColorSpace.CS_PYCC));\n+        };\n+    }\n+\n+    private static boolean areImagesEqual(BufferedImage destTest, BufferedImage destGold) {\n+        for (int x = 0; x < destTest.getWidth(); x++) {\n+            for (int y = 0; y < destTest.getHeight(); y++) {\n+                int rgb1 = destTest.getRGB(x, y);\n+                int rgb2 = destGold.getRGB(x, y);\n+                if (rgb1 != rgb2) {\n+                    System.err.println(\"x = \" + x + \", y = \" + y);\n+                    System.err.println(\"rgb1 = \" + Integer.toHexString(rgb1));\n+                    System.err.println(\"rgb2 = \" + Integer.toHexString(rgb2));\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+    public static void main(String[] args) {\n+        BufferedImage srcTest = createTestImage(createCS(ColorSpaceSelector.WRAPPED_GRAY));\n+        BufferedImage destTest = createTestImage(createCS(ColorSpaceSelector.WRAPPED_RGB));\n+\n+        BufferedImage srcGold = createTestImage(createCS(ColorSpaceSelector.GRAY));\n+        BufferedImage destGold = createTestImage(createCS(ColorSpaceSelector.RGB));\n+\n+        ColorConvertOp gold = new ColorConvertOp(createCS(ColorSpaceSelector.PYCC), null);\n+        gold.filter(srcTest, destTest);\n+        gold.filter(srcGold, destGold);\n+\n+        if (!areImagesEqual(destTest, destGold)) {\n+            throw new RuntimeException(\"ICC test failed\");\n+        }\n+\n+        ColorConvertOp test = new ColorConvertOp(createCS(ColorSpaceSelector.WRAPPED_PYCC), null);\n+        test.filter(srcTest, destTest);\n+        test.filter(srcGold, destGold);\n+\n+        if (!areImagesEqual(destTest, destGold)) {\n+            throw new RuntimeException(\"Wrapper test failed\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/color\/NonICCFilterTest.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -0,0 +1,257 @@\n+\/*\n+ * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.GridLayout;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureEvent;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.DragSourceDragEvent;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DragSourceEvent;\n+import java.awt.dnd.DragSourceListener;\n+import java.awt.dnd.DropTarget;\n+import java.awt.dnd.DropTargetContext;\n+import java.awt.dnd.DropTargetDragEvent;\n+import java.awt.dnd.DropTargetDropEvent;\n+import java.awt.dnd.DropTargetEvent;\n+import java.awt.dnd.DropTargetListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+\n+\/*\n+ * @test\n+ * @bug 4395290\n+ * @key headful\n+ * @summary tests that dragExit() is not called before drop()\n+ *\/\n+\n+public class DragExitBeforeDropTest {\n+    private static Frame frame;\n+    private static final DragSourceButton dragSourceButton = new DragSourceButton();\n+    private static final DropTargetPanel dropTargetPanel = new DropTargetPanel();\n+    private static volatile Point srcPoint;\n+    private static volatile Point dstPoint;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            EventQueue.invokeAndWait(DragExitBeforeDropTest::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                Point p = dragSourceButton.getLocationOnScreen();\n+                Dimension d = dragSourceButton.getSize();\n+                p.translate(d.width \/ 2, d.height \/ 2);\n+                srcPoint = p;\n+\n+                p = dropTargetPanel.getLocationOnScreen();\n+                d = dropTargetPanel.getSize();\n+                p.translate(d.width \/ 2, d.height \/ 2);\n+                dstPoint = p;\n+            });\n+\n+            robot.mouseMove(srcPoint.x, srcPoint.y);\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            for (; !srcPoint.equals(dstPoint);\n+                 srcPoint.translate(sign(dstPoint.x - srcPoint.x),\n+                                    sign(dstPoint.y - srcPoint.y))) {\n+                robot.mouseMove(srcPoint.x, srcPoint.y);\n+                robot.delay(10);\n+            }\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            if (!dropTargetPanel.getStatus()) {\n+                throw new RuntimeException(\"The test failed: dragExit()\"\n+                                           + \" is called before drop()\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new Frame(\"DragExitBeforeDropTest\");\n+        frame.setLayout(new GridLayout(2, 1));\n+        frame.add(dragSourceButton);\n+        frame.add(dropTargetPanel);\n+        frame.setLocationRelativeTo(null);\n+        frame.setSize(300, 400);\n+        frame.setVisible(true);\n+    }\n+\n+    public static int sign(int n) {\n+        return Integer.compare(n, 0);\n+    }\n+\n+    private static class DragSourceButton extends Button implements Serializable,\n+            Transferable,\n+            DragGestureListener,\n+            DragSourceListener {\n+        private final DataFlavor dataflavor =\n+                new DataFlavor(Button.class, \"DragSourceButton\");\n+\n+        public DragSourceButton() {\n+            this(\"DragSourceButton\");\n+        }\n+\n+        public DragSourceButton(String str) {\n+            super(str);\n+\n+            DragSource ds = DragSource.getDefaultDragSource();\n+            ds.createDefaultDragGestureRecognizer(this, DnDConstants.ACTION_COPY,\n+                                                  this);\n+        }\n+\n+        public void dragGestureRecognized(DragGestureEvent dge) {\n+            dge.startDrag(null, this, this);\n+        }\n+\n+        public void dragEnter(DragSourceDragEvent dsde) {}\n+\n+        public void dragExit(DragSourceEvent dse) {}\n+\n+        public void dragOver(DragSourceDragEvent dsde) {}\n+\n+        public void dragDropEnd(DragSourceDropEvent dsde) {}\n+\n+        public void dropActionChanged(DragSourceDragEvent dsde) {}\n+\n+        public Object getTransferData(DataFlavor flavor)\n+                throws UnsupportedFlavorException, IOException {\n+\n+            if (!isDataFlavorSupported(flavor)) {\n+                throw new UnsupportedFlavorException(flavor);\n+            }\n+\n+            Object retObj;\n+\n+            ByteArrayOutputStream baoStream = new ByteArrayOutputStream();\n+            ObjectOutputStream ooStream = new ObjectOutputStream(baoStream);\n+            ooStream.writeObject(this);\n+\n+            ByteArrayInputStream baiStream =\n+                    new ByteArrayInputStream(baoStream.toByteArray());\n+            ObjectInputStream ois = new ObjectInputStream(baiStream);\n+            try {\n+                retObj = ois.readObject();\n+            } catch (ClassNotFoundException e) {\n+                e.printStackTrace();\n+                throw new RuntimeException(e.toString());\n+            }\n+\n+            return retObj;\n+        }\n+\n+        public DataFlavor[] getTransferDataFlavors() {\n+            return new DataFlavor[] { dataflavor };\n+        }\n+\n+        public boolean isDataFlavorSupported(DataFlavor dflavor) {\n+            return dataflavor.equals(dflavor);\n+        }\n+    }\n+\n+    private static class DropTargetPanel extends Panel implements DropTargetListener {\n+\n+        final Dimension preferredDimension = new Dimension(200, 100);\n+        volatile boolean testPassed = true;\n+\n+        public DropTargetPanel() {\n+            setDropTarget(new DropTarget(this, this));\n+        }\n+\n+        public boolean getStatus() {\n+            return testPassed;\n+        }\n+\n+        public Dimension getPreferredSize() {\n+            return preferredDimension;\n+        }\n+\n+        public void dragEnter(DropTargetDragEvent dtde) {}\n+\n+        public void dragExit(DropTargetEvent dte) {\n+            testPassed = false;\n+        }\n+\n+        public void dragOver(DropTargetDragEvent dtde) {}\n+\n+        public void dropActionChanged(DropTargetDragEvent dtde) {}\n+\n+        public void drop(DropTargetDropEvent dtde) {\n+            DropTargetContext dtc = dtde.getDropTargetContext();\n+\n+            if ((dtde.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n+                dtde.acceptDrop(DnDConstants.ACTION_COPY);\n+            } else {\n+                dtde.rejectDrop();\n+            }\n+\n+            DataFlavor[] dfs = dtde.getCurrentDataFlavors();\n+            Component comp = null;\n+\n+            if(dfs != null && dfs.length >= 1) {\n+                Transferable transfer = dtde.getTransferable();\n+\n+                try {\n+                    comp = (Component)transfer.getTransferData(dfs[0]);\n+                } catch (Throwable e) {\n+                    e.printStackTrace();\n+                    dtc.dropComplete(false);\n+                }\n+            }\n+            dtc.dropComplete(true);\n+            add(comp);\n+        }\n+    }\n+}\n+\n+\n+\n","filename":"test\/jdk\/java\/awt\/dnd\/DragExitBeforeDropTest.java","additions":257,"deletions":0,"binary":false,"changes":257,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSource;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseMotionAdapter;\n+\n+\/*\n+  @test\n+  @key headful\n+  @bug 4415175\n+  @summary tests DragSource.getDragThreshold() and\n+           that the AWT default drag gesture recognizers\n+           honor the drag gesture motion threshold\n+*\/\n+\n+public class DragThresholdTest {\n+    private static Frame frame;\n+    private static Panel panel;\n+    private static MouseEvent lastMouseEvent;\n+    private static volatile boolean failed;\n+    private static volatile Point startPoint;\n+    private static volatile Point endPoint;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+\n+            EventQueue.invokeAndWait(DragThresholdTest::createAndShowDnD);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            EventQueue.invokeAndWait(() -> {\n+                Point p = panel.getLocationOnScreen();\n+                p.translate(50, 50);\n+                startPoint = p;\n+                endPoint = new Point(p.x + 2 * DragSource.getDragThreshold(),\n+                                     p.y + 2 * DragSource.getDragThreshold());\n+            });\n+\n+            robot.mouseMove(startPoint.x, startPoint.y);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            for (Point p = new Point(startPoint); !p.equals(endPoint);\n+                 p.translate(sign(endPoint.x - p.x),\n+                             sign(endPoint.y - p.y))) {\n+                robot.mouseMove(p.x, p.y);\n+                robot.delay(100);\n+            }\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(200);\n+\n+            if (failed) {\n+                throw new RuntimeException(\"drag gesture recognized too early\");\n+            }\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowDnD() {\n+        frame = new Frame(\"DragThresholdTest\");\n+        panel = new Panel();\n+        \/\/ Mouse motion listener mml is added to the panel first.\n+        \/\/ We rely on it that this listener will be called first.\n+        panel.addMouseMotionListener(new MouseMotionAdapter() {\n+            public void mouseDragged(MouseEvent evt) {\n+                lastMouseEvent = evt;\n+                System.out.println(evt);\n+            }\n+        });\n+        frame.add(panel);\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+\n+        DragGestureListener dgl = dge -> {\n+            Point dragOrigin = dge.getDragOrigin();\n+            int diffx = Math.abs(dragOrigin.x - lastMouseEvent.getX());\n+            int diffy = Math.abs(dragOrigin.y - lastMouseEvent.getY());\n+            System.out.println(\"dragGestureRecognized(): \" +\n+                               \" diffx=\" + diffx + \" diffy=\" + diffy +\n+                               \" DragSource.getDragThreshold()=\"\n+                               + DragSource.getDragThreshold());\n+            if (diffx <= DragSource.getDragThreshold() &&\n+                diffy <= DragSource.getDragThreshold()) {\n+                failed = true;\n+                System.out.println(\"drag gesture recognized too early!\");\n+            }\n+        };\n+\n+        \/\/ Default drag gesture recognizer is a mouse motion listener.\n+        \/\/ It is added to the panel second.\n+        new DragSource().createDefaultDragGestureRecognizer(\n+                panel,\n+                DnDConstants.ACTION_COPY_OR_MOVE, dgl);\n+        frame.setVisible(true);\n+    }\n+\n+    private static int sign(int n) {\n+        return Integer.compare(n, 0);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/dnd\/DragThresholdTest.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2002, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+import java.awt.dnd.DnDConstants;\n+import java.awt.dnd.DragGestureListener;\n+import java.awt.dnd.DragSource;\n+import java.awt.dnd.DragSourceAdapter;\n+import java.awt.dnd.DragSourceDropEvent;\n+import java.awt.dnd.DragSourceListener;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 4414739\n+ * @requires (os.family == \"windows\")\n+ * @summary verifies that getDropSuccess() returns correct value for moving\n+            a file from a Java drag source to the Windows shell\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual WinMoveFileToShellTest\n+ *\/\n+\n+public class WinMoveFileToShellTest {\n+    private static final String INSTRUCTIONS = \"\"\"\n+            Drag from the frame titled \"Drag Frame\" and drop on to Windows Desktop.\n+            After Drag and Drop, check for \"Drop Success\" status in the log area.\n+            If \"Drop Success\" is true press PASS else FAIL.\n+            \"\"\";\n+\n+    public static void main(String[] args) throws Exception {\n+        PassFailJFrame.builder()\n+                      .title(\"Test Instructions\")\n+                      .instructions(INSTRUCTIONS)\n+                      .columns(40)\n+                      .testUI(WinMoveFileToShellTest::createAndShowUI)\n+                      .logArea(5)\n+                      .build()\n+                      .awaitAndCheck();\n+    }\n+\n+    private static Frame createAndShowUI() {\n+        Frame frame = new Frame(\"Drag Frame\");\n+        final DragSourceListener dsl = new DragSourceAdapter() {\n+            public void dragDropEnd(DragSourceDropEvent e) {\n+                PassFailJFrame.log(\"Drop Success: \" + e.getDropSuccess());\n+            }\n+        };\n+\n+        DragGestureListener dgl = dge -> {\n+            File file = new File(System.getProperty(\"test.classes\", \".\")\n+                                 + File.separator + \"move.me\");\n+            try {\n+                file.createNewFile();\n+            } catch (IOException exc) {\n+                exc.printStackTrace();\n+            }\n+            ArrayList<File> list = new ArrayList<>();\n+            list.add(file);\n+            dge.startDrag(null, new FileListSelection(list), dsl);\n+        };\n+\n+        new DragSource().createDefaultDragGestureRecognizer(frame,\n+                                                            DnDConstants.ACTION_MOVE, dgl);\n+        frame.setSize(200, 100);\n+        return frame;\n+    }\n+\n+    private static class FileListSelection implements Transferable {\n+        private static final int FL = 0;\n+\n+        private static final DataFlavor[] flavors =\n+                new DataFlavor[] { DataFlavor.javaFileListFlavor };\n+\n+\n+        private List data;\n+\n+        public FileListSelection(List data) {\n+            this.data = data;\n+        }\n+\n+        public DataFlavor[] getTransferDataFlavors() {\n+            return flavors.clone();\n+        }\n+\n+        public boolean isDataFlavorSupported(DataFlavor flavor) {\n+            for (DataFlavor dataFlavor : flavors) {\n+                if (flavor.equals(dataFlavor)) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }\n+\n+        public Object getTransferData(DataFlavor flavor)\n+                throws UnsupportedFlavorException, IOException\n+        {\n+            if (flavor.equals(flavors[FL])) {\n+                return data;\n+            } else {\n+                throw new UnsupportedFlavorException(flavor);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/dnd\/WinMoveFileToShellTest.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -362,1 +362,1 @@\n-     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * See {@link #PassFailJFrame(String,String,long,int,int)} for\n@@ -385,1 +385,1 @@\n-     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * See {@link #PassFailJFrame(String,String,long,int,int)} for\n@@ -407,1 +407,0 @@\n-     * The screenshot feature is not enabled, if you use this constructor.\n@@ -409,1 +408,1 @@\n-     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n+     * See {@link #PassFailJFrame(String,String,long,int,int)} for\n@@ -427,29 +426,0 @@\n-    \/**\n-     * Constructs a frame which displays test instructions and\n-     * the <i>Pass<\/i> \/ <i>Fail<\/i> buttons\n-     * with the given title, instructions, timeout, number of rows and columns.\n-     * The screenshot feature is not enabled, if you use this constructor.\n-     * <p>\n-     * See {@link #PassFailJFrame(String,String,long,int,int,boolean)} for\n-     * more details.\n-     *\n-     * @param title        the title of the instruction frame\n-     * @param instructions the instructions for the tester\n-     * @param testTimeOut  the test timeout in minutes\n-     * @param rows         the number of rows for the text component\n-     *                     which displays test instructions\n-     * @param columns      the number of columns for the text component\n-     *                     which displays test instructions\n-     *\n-     * @throws InterruptedException if the current thread is interrupted\n-     *              while waiting for EDT to finish creating UI components\n-     * @throws InvocationTargetException if an exception is thrown while\n-     *              creating UI components on EDT\n-     *\/\n-    public PassFailJFrame(String title, String instructions,\n-                          long testTimeOut,\n-                          int rows, int columns)\n-            throws InterruptedException, InvocationTargetException {\n-        this(title, instructions, testTimeOut, rows, columns, false);\n-    }\n-\n@@ -460,2 +430,1 @@\n-     * timeout, number of rows and columns,\n-     * and screen capture functionality.\n+     * timeout, number of rows and columns.\n@@ -486,6 +455,0 @@\n-     * <p>\n-     * If you enable screenshots by setting the {@code screenCapture}\n-     * parameter to {@code true}, a <i>Screenshot<\/i> button is added.\n-     * Clicking the <i>Screenshot<\/i> button takes screenshots of\n-     * all the monitors or all the windows registered with\n-     * {@code PassFailJFrame}.\n@@ -500,2 +463,0 @@\n-     * @param screenCapture if set to {@code true}, enables screen capture\n-     *                      functionality\n@@ -513,2 +474,1 @@\n-                          int rows, int columns,\n-                          boolean screenCapture)\n+                          int rows, int columns)\n@@ -518,2 +478,1 @@\n-                                   rows, columns,\n-                                   screenCapture));\n+                                   rows, columns));\n@@ -616,2 +575,1 @@\n-                                 long testTimeOut, int rows, int columns,\n-                                 boolean enableScreenCapture) {\n+                                 long testTimeOut, int rows, int columns) {\n@@ -626,1 +584,1 @@\n-                                           enableScreenCapture,\n+                                           false,\n@@ -678,0 +636,2 @@\n+        text.setBorder(createTextBorder());\n+        text.setCaretPosition(0);\n@@ -732,1 +692,0 @@\n-        text.setBorder(createTextBorder());\n@@ -746,4 +705,4 @@\n-        \/\/ Reduce the default margins\n-        styles.addRule(\"ol, ul { margin-left-ltr: 20; margin-left-rtl: 20 }\");\n-        \/\/ Make the size of code blocks the same as other text\n-        styles.addRule(\"code { font-size: inherit }\");\n+        \/\/ Reduce the list default margins\n+        styles.addRule(\"ol, ul { margin-left-ltr: 30; margin-left-rtl: 30 }\");\n+        \/\/ Make the size of code (and other elements) the same as other text\n+        styles.addRule(\"code, kbd, samp, pre { font-size: inherit }\");\n@@ -1832,2 +1791,14 @@\n-            validate();\n-            return new PassFailJFrame(this);\n+            try {\n+                validate();\n+                return new PassFailJFrame(this);\n+            } catch (final Throwable t) {\n+                \/\/ Dispose of all the windows, including those that may not\n+                \/\/ be registered with PassFailJFrame to allow AWT to shut down\n+                try {\n+                    invokeOnEDT(() -> Arrays.stream(Window.getWindows())\n+                                            .forEach(Window::dispose));\n+                } catch (Throwable edt) {\n+                    t.addSuppressed(edt);\n+                }\n+                throw t;\n+            }\n","filename":"test\/jdk\/java\/awt\/regtesthelpers\/PassFailJFrame.java","additions":29,"deletions":58,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,0 +50,2 @@\n+    private static final int MAX_RETRIES = 3;\n+\n@@ -136,8 +138,13 @@\n-    private Socket newUdpSocket() throws IOException {\n-        Socket s = null;\n-\n-        try {\n-            s = new Socket(InetAddress.getLoopbackAddress(), 8000, false);\n-        } catch (BindException unexpected) {\n-            System.out.println(\"BindException caught retry Socket creation\");\n-            s = new Socket(InetAddress.getLoopbackAddress(), 8000, false);\n+    private Socket newUdpSocket() throws IOException, InterruptedException {\n+        BindException unexpected = null;\n+        for (int i=0; i < MAX_RETRIES; i++) {\n+            try {\n+                return new Socket(InetAddress.getLoopbackAddress(), 8000, false);\n+            } catch (BindException be) {\n+                unexpected = be;\n+                if (i != MAX_RETRIES - 1) {\n+                    System.out.printf(\"BindException caught: retry Socket creation [%s\/%s]%n\",\n+                            i + 1, MAX_RETRIES);\n+                    Thread.sleep(10 + 10 * i);\n+                }\n+            }\n@@ -145,1 +152,1 @@\n-        return s;\n+        throw unexpected;\n","filename":"test\/jdk\/java\/net\/Socket\/UdpSocket.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8245462 8229822\n+ * @bug 8245462 8229822 8254786\n","filename":"test\/jdk\/java\/net\/httpclient\/CancelRequestTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+import java.util.concurrent.atomic.AtomicInteger;\n@@ -115,0 +116,1 @@\n+    static final AtomicInteger requestCount = new AtomicInteger();\n@@ -247,1 +249,1 @@\n-    public void testNoStalls(String uri, boolean sameClient)\n+    public void testNoStalls(String rootUri, boolean sameClient)\n@@ -249,0 +251,1 @@\n+        if (!FAILURES.isEmpty()) return;\n@@ -250,1 +253,1 @@\n-        out.printf(\"%ntestNoStalls(%s, %b)%n\", uri, sameClient);\n+        out.printf(\"%ntestNoStalls(%s, %b)%n\", rootUri, sameClient);\n@@ -255,0 +258,2 @@\n+            String uri = rootUri + \"\/\" + requestCount.incrementAndGet();\n+            out.printf(\"\\tsending request %s%n\", uri);\n@@ -334,0 +339,4 @@\n+        if (!FAILURES.isEmpty()) {\n+            out.printf(\"%s: skipping test - previous failure detected%n\", name);\n+            return;\n+        }\n@@ -344,1 +353,1 @@\n-    private <T,U> void testDependent(String uri, boolean sameClient,\n+    private <T,U> void testDependent(String rootUri, boolean sameClient,\n@@ -357,0 +366,2 @@\n+            String uri = rootUri + \"\/\" + requestCount.incrementAndGet();\n+            out.printf(\"\\tsending request %s%n\", uri);\n@@ -366,1 +377,7 @@\n-            assert subscriberType == SubscriberType.LAZZY || !responseCF.isDone();\n+            \/\/ The body of the main response can be received before the body\n+            \/\/ of the push promise handlers are received.\n+            \/\/ The body of the main response doesn't stall, so the cf of\n+            \/\/ the main response may be done here even for EAGER subscribers.\n+            \/\/ We cannot make any assumption on the state of the main response\n+            \/\/ cf here, so the only thing we can do is to call the finisher\n+            \/\/ which will wait for them all.\n","filename":"test\/jdk\/java\/net\/httpclient\/DependentPromiseActionsTest.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.test.lib.OSVersion;\n@@ -191,12 +190,2 @@\n-        \/\/ extensions with content type that differs on Windows 11+ and\n-        \/\/ Windows Server 2025\n-        if (Platform.isWindows() &&\n-            (System.getProperty(\"os.name\").matches(\"^.*[11|2025]$\") ||\n-                new OSVersion(10, 0).compareTo(OSVersion.current()) > 0)) {\n-            System.out.println(\"Windows 11+ detected: using different types\");\n-            exTypes.add(new ExType(\"bz2\", List.of(\"application\/bz2\", \"application\/x-bzip2\", \"application\/x-bzip\", \"application\/x-compressed\")));\n-            exTypes.add(new ExType(\"csv\", List.of(\"text\/csv\", \"application\/vnd.ms-excel\")));\n-            exTypes.add(new ExType(\"rar\", List.of(\"application\/rar\", \"application\/vnd.rar\", \"application\/x-rar\", \"application\/x-rar-compressed\", \"application\/x-compressed\")));\n-            exTypes.add(new ExType(\"rtf\", List.of(\"application\/rtf\", \"text\/rtf\", \"application\/msword\")));\n-            exTypes.add(new ExType(\"7z\", List.of(\"application\/x-7z-compressed\", \"application\/x-compressed\")));\n-        } else {\n+        \/\/ extensions with consistent content type on Unix (but not on Windows)\n+        if (!Platform.isWindows()) {\n","filename":"test\/jdk\/java\/nio\/file\/Files\/probeContentType\/Basic.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JToggleButton;\n+\n+\/*\n+ * @test\n+ * @bug 8348936 8345728\n+ * @summary Verifies that VoiceOver announces the untick state of CheckBox and\n+ *          ToggleButton when space key is pressed. Also verifies that CheckBox\n+ *          and ToggleButton untick state is magnified with Screen Magnifier.\n+ * @requires os.family == \"mac\"\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @run main\/manual TestJCheckBoxToggleAccessibility\n+ *\/\n+\n+public class TestJCheckBoxToggleAccessibility {\n+    public static void main(String[] args) throws Exception {\n+        String INSTRUCTIONS = \"\"\"\n+                <html><body>\n+                <p><b>Testing with VoiceOver<\/b><\/p>\n+\n+                <ol>\n+                  <li>Start the VoiceOver application\n+                      (Press <kbd>Command<\/kbd> + <kbd>F5<\/kbd>)\n+                  <li>Click on the <i>Frame with CheckBox and ToggleButton<\/i>\n+                      window to move focus\n+                  <li>Press <kbd>Spacebar<\/kbd>\n+                  <li>VO should announce the checked state\n+                  <li>Press <kbd>Spacebar<\/kbd> again\n+                  <li>VO should announce the unchecked state\n+                  <li>Press <kbd>Tab<\/kbd> to move focus to <i>ToggleButton<\/i>\n+                  <li>Repeat steps 3 to 6 and listen the announcement\n+                  <li>If announcements are incorrect, press <b>Fail<\/b>\n+                  <li>Stop the VoiceOver application\n+                      (Press <kbd>Command<\/kbd> + <kbd>F5<\/kbd> again)\n+                <\/ol>\n+\n+                <p><b>Testing with Screen Magnifier<\/b><\/p>\n+                <ol style=\"margin-bottom: 0\">\n+                  <li>Enable Screen magnifier on the Mac:\n+                   <b>System Settings<\/b> -> <b>Accessibility<\/b> ->\n+                   <b>Hover Text<\/b> -> Enable <b>Hover Text<\/b><br>\n+                   Default Hover Text Activation Modifier is <kbd>Command<\/kbd> key\n+                  <li>Move focus back to the test application and perform the following tests\n+\n+                  <ul style=\"margin-bottom: 0\">\n+                    <li>Test <i>CheckBox<\/i> states with Screen Magnifier\n+                      <ol style=\"list-style-type: lower-alpha; margin-top: 0; margin-bottom: 0\">\n+                        <li>Click on <i>CheckBox<\/i> to select it\n+                        <li>Press the <kbd>Command<\/kbd> key and\n+                            hover mouse over <i>CheckBox<\/i>\n+                        <li>CheckBox ticked state along with its label should be magnified\n+                        <li>Keep the <kbd>Command<\/kbd> key pressed and\n+                            click <i>CheckBox<\/i> to deselect it\n+                        <li>CheckBox unticked state along with its label should be magnified\n+                        <li>Release the <kbd>Command<\/kbd> key\n+                        <li>If Screen Magnifier behaviour is incorrect, press <b>Fail<\/b>\n+                      <\/ol>\n+                    <li>Test <i>ToggleButton<\/i> states with Screen Magnifier\n+                      <ol style=\"list-style-type: lower-alpha; margin-top: 0; margin-bottom: 0\">\n+                        <li>Click on <i>ToggleButton<\/i> to select it\n+                        <li>Press the <kbd>Command<\/kbd> key and\n+                            hover mouse over <i>ToggleButton<\/i>\n+                        <li>Ticked state along with label should be magnified\n+                        <li>Keep the <kbd>Command<\/kbd> button pressed and\n+                            click <i>ToggleButton<\/i> to deselect it\n+                        <li>Unticked state along with its label should be magnified\n+                        <li>Release the <kbd>Command<\/kbd> key\n+                        <li>If Screen Magnifier behaviour is incorrect, press <b>Fail<\/b>\n+                      <\/ol>\n+                  <\/ul>\n+                  <li>Disable <b>Hover Text<\/b> (optionally) in the Settings\n+                <\/ol>\n+\n+                <p>Press <b>Pass<\/b> if you are able to hear correct VoiceOver announcements and\n+                able to see the correct screen magnifier behaviour.<\/p><\/body><\/html>\"\"\";\n+\n+        PassFailJFrame.builder()\n+                .title(\"TestJCheckBoxToggleAccessibility Instruction\")\n+                .instructions(INSTRUCTIONS)\n+                .columns(40)\n+                .rows(25)\n+                .testUI(TestJCheckBoxToggleAccessibility::createUI)\n+                .testTimeOut(8)\n+                .build()\n+                .awaitAndCheck();\n+    }\n+\n+    private static JFrame createUI() {\n+        JFrame frame = new JFrame(\"A Frame with CheckBox and ToggleButton\");\n+        JCheckBox cb = new JCheckBox(\"CheckBox\", false);\n+        JToggleButton tb = new JToggleButton(\"ToggleButton\");\n+\n+        JPanel p = new JPanel(new GridLayout(2, 1));\n+        p.add(cb);\n+        p.add(tb);\n+        frame.getContentPane().add(p, BorderLayout.CENTER);\n+        frame.setSize(400, 400);\n+        return frame;\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/TestJCheckBoxToggleAccessibility.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,2 @@\n+ * @library \/test\/lib\n+ *\n@@ -43,0 +45,1 @@\n+import jdk.test.lib.Utils;\n@@ -46,0 +49,2 @@\n+    public static final int WAIT_TIME = 1000;\n+\n@@ -242,1 +247,1 @@\n-            my.cdl.await(1000, TimeUnit.MILLISECONDS);\n+            my.cdl.await(Utils.adjustTimeout(WAIT_TIME), TimeUnit.MILLISECONDS);\n","filename":"test\/jdk\/javax\/management\/monitor\/DerivedGaugeMonitorTest.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.print.attribute.standard.PageRanges;\n+\n+\/*\n+ * @test\n+ * @bug 4433126 4433096\n+ * @key printer\n+ * @summary  The line \"ERROR: <message>\" should NOT appear.\n+ * @run main PageRangesException\n+ *\/\n+\n+public class PageRangesException {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ test 4433126\n+        try {\n+            PageRanges pr = new PageRanges(\"0:22\");\n+            throw new RuntimeException(\"ERROR: no exceptions\");\n+        } catch (IllegalArgumentException ie) {\n+            System.out.println(\"OKAY: IllegalArgumentException \" + ie);\n+        }\n+\n+        \/\/ test 4433096\n+        try {\n+            int[][] m = null;\n+            PageRanges pr = new PageRanges(m);\n+            throw new RuntimeException(\"ERROR: NullPointerException expected\");\n+        } catch (IllegalArgumentException ie) {\n+            throw new RuntimeException(\"ERROR: IllegalArgumentException\", ie);\n+        } catch (NullPointerException e) {\n+            System.out.println(\"OKAY: NullPointerException\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/print\/attribute\/PageRangesException.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6298940\n+ * @key headful\n+ * @summary Tests that mnemonic keystroke fires an action\n+ * @library \/javax\/swing\/regtesthelpers\n+ * @build Util\n+ * @run main bug6298940\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.util.concurrent.CountDownLatch;\n+\n+import javax.swing.ButtonModel;\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+\n+public final class bug6298940 {\n+    private static JFrame frame;\n+\n+    private static final CountDownLatch actionEvent = new CountDownLatch(1);\n+\n+    private static void createAndShowGUI() {\n+        ButtonModel model = new DefaultButtonModel();\n+        model.addActionListener(event -> {\n+            System.out.println(\"ActionEvent\");\n+            actionEvent.countDown();\n+        });\n+        model.setMnemonic('T');\n+\n+        JButton button = new JButton(\"Test\");\n+        button.setModel(model);\n+\n+        frame = new JFrame(\"bug6298940\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.add(button);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        frame.toFront();\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+\n+        SwingUtilities.invokeAndWait(bug6298940::createAndShowGUI);\n+\n+        robot.waitForIdle();\n+        robot.delay(500);\n+\n+        Util.hitMnemonics(robot, KeyEvent.VK_T);\n+\n+        try {\n+            if (!actionEvent.await(1, SECONDS)) {\n+                throw new RuntimeException(\"Mnemonic didn't fire an action\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/AbstractButton\/bug6298940.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"},{"patch":"@@ -0,0 +1,151 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8218474\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if combobox components are rendered correctly.\n+ * @run main TestComboBoxComponentRendering\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.image.BufferedImage;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.io.File;\n+import javax.imageio.ImageIO;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.ListCellRenderer;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class TestComboBoxComponentRendering {\n+    private static JFrame frame;\n+    private static JComboBox cb;\n+    private static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+        for (UIManager.LookAndFeelInfo laf :\n+                UIManager.getInstalledLookAndFeels()) {\n+            if (!laf.getClassName().contains(\"MotifLookAndFeel\") &&\n+                !laf.getClassName().contains(\"MetalLookAndFeel\")) {\n+                System.out.println(\"Testing LAF: \" + laf.getClassName());\n+                SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+                doTesting(laf);\n+            }\n+        }\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void doTesting(UIManager.LookAndFeelInfo laf)\n+            throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            boolean passed = false;\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            Point pt = cb.getLocationOnScreen();\n+            BufferedImage img = robot.createScreenCapture(\n+                    new Rectangle(pt.x, pt.y, cb.getWidth(), cb.getHeight()));\n+            for (int x = 20; x < img.getWidth()-20; ++x) {\n+                for (int y = 20; y < img.getHeight()-20; ++y) {\n+                    if (img.getRGB(x,y) == Color.RED.getRGB()) {\n+                        passed = true;\n+                        break;\n+                    }\n+                }\n+                if (passed)\n+                    break;\n+            }\n+\n+            if (passed) {\n+                System.out.println(\"Passed\");\n+            } else {\n+                ImageIO.write(img, \"png\",\n+                        new File(\"ComboBox.png\"));\n+                throw new RuntimeException(\"ComboBox components not rendered\" +\n+                        \" correctly for: \" + laf.getClassName());\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        String[] petStrings = { \"Bird\", \"Cat\", \"Dog\", \"Rabbit\", \"Pig\" };\n+        frame = new JFrame();\n+        cb = new JComboBox(petStrings);\n+        cb.setRenderer(new ComboBoxCustomRenderer());\n+        frame.pack();\n+        frame.add(cb);\n+        frame.setSize(200,250);\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n+\n+class ComboBoxCustomRenderer extends JLabel\n+        implements ListCellRenderer {\n+\n+    public ComboBoxCustomRenderer() {\n+        setOpaque(true);\n+        setHorizontalAlignment(CENTER);\n+        setVerticalAlignment(CENTER);\n+    }\n+\n+    public Component getListCellRendererComponent(JList list, Object value,\n+                        int index, boolean isSelected, boolean cellHasFocus) {\n+        setText(value.toString());\n+        setForeground(Color.RED);\n+        return this;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/TestComboBoxComponentRendering.java","additions":151,"deletions":0,"binary":false,"changes":151,"status":"added"},{"patch":"@@ -27,1 +27,1 @@\n- * @bug 4517214\n+ * @bug 4517214 8218474\n","filename":"test\/jdk\/javax\/swing\/JComboBox\/TestComboBoxHeight.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,43 +0,0 @@\n-<html>\n-<!--\n- Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<!--\n- @test\n- @bug 4150029 8006087\n- @summary BackSpace keyboard button does not lead to parent directory\n- @author Oleg Mokhovikov\n- @library \/test\/lib\n- @build jdk.test.lib.Platform\n- @run applet\/manual=done bug4150029.html\n--->\n-\n-<body>\n-<applet  code=\"bug4150029.class\" width=200 height=200><\/applet>\n-Follow the instructions below.\n-1.Go into 'subDir' folder.\n-2.Press BACKSPACE key.\n-3.Push OPEN button.\n-4.Push DONE button.\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.html","additions":0,"deletions":43,"binary":false,"changes":43,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,10 @@\n-\/*\n-   bug 4150029 8006087\n-   summary BackSpace keyboard button does not lead to parent directory\n-   author Oleg Mokhovikov\n-*\/\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.io.File;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n@@ -32,3 +37,17 @@\n-import javax.swing.*;\n-import java.io.File;\n-import java.io.IOException;\n+\/*\n+ * @test\n+ * @bug 4150029 8006087\n+ * @key headful\n+ * @summary BackSpace keyboard button does not lead to parent directory\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.Platform\n+ * @run main bug4150029\n+ *\/\n+\n+public class bug4150029 {\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static Robot robot;\n+    private static File prevDir;\n+    private static File crntDir;\n+    private static volatile Point p;\n@@ -36,2 +55,3 @@\n-public class bug4150029 extends JApplet {\n-    private boolean res;\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n@@ -39,6 +59,7 @@\n-    public void init() {\n-        if (Platform.isOSX()) {\n-            try {\n-                UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n+        try {\n+            if (Platform.isOSX()) {\n+                try {\n+                    UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n@@ -46,1 +67,0 @@\n-        }\n@@ -48,1 +68,1 @@\n-        String tmpDir = System.getProperty(\"java.io.tmpdir\");\n+            String tmpDir = System.getProperty(\"java.io.tmpdir\");\n@@ -50,2 +70,28 @@\n-        if (tmpDir.length() == 0) {\/\/'java.io.tmpdir' isn't guaranteed to be defined\n-            tmpDir = System.getProperty(\"user.home\");\n+            \/\/'java.io.tmpdir' isn't guaranteed to be defined\n+            if (tmpDir.length() == 0) {\n+                tmpDir = System.getProperty(\"user.home\");\n+            }\n+            System.out.println(\"Temp directory: \" + tmpDir);\n+\n+            File testDir = new File(tmpDir, \"testDir\");\n+            testDir.mkdir();\n+            testDir.deleteOnExit();\n+            System.out.println(\"Created directory: \" + testDir);\n+\n+            File subDir = new File(testDir, \"subDir\");\n+            subDir.mkdir();\n+            subDir.deleteOnExit();\n+            System.out.println(\"Created sub-directory: \" + subDir);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+                fileChooser.setCurrentDirectory(subDir);\n+            });\n+\n+            doTesting();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n@@ -53,0 +99,1 @@\n+    }\n@@ -54,14 +101,11 @@\n-        System.out.println(\"Temp directory: \" + tmpDir);\n-\n-        File testDir = new File(tmpDir, \"testDir\");\n-\n-        testDir.mkdir();\n-\n-        File subDir = new File(testDir, \"subDir\");\n-\n-        subDir.mkdir();\n-\n-        System.out.println(\"Created directory: \" + testDir);\n-        System.out.println(\"Created sub-directory: \" + subDir);\n-\n-        JFileChooser fileChooser = new JFileChooser(testDir);\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Backspace Shortcut for Directory Navigation Test\");\n+        frame.setLayout(new BorderLayout());\n+        fileChooser = new JFileChooser();\n+        fileChooser.setControlButtonsAreShown(false);\n+        frame.add(fileChooser, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n@@ -69,1 +113,7 @@\n-        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+    private static void doTesting() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = frame.getLocationOnScreen();\n+        });\n+        robot.mouseMove(p.x + 200, p.y + 200);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -71,5 +121,1 @@\n-        try {\n-            res = fileChooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION ||\n-                    testDir.getCanonicalPath().equals(fileChooser.getSelectedFile().getCanonicalPath());\n-        } catch (IOException e) {\n-            res = false;\n+        robot.waitForIdle();\n@@ -77,2 +123,2 @@\n-            e.printStackTrace();\n-        }\n+        \/\/ check backspace key at subDir level\n+        clickBackSpace();\n@@ -80,5 +126,2 @@\n-        try {\n-            subDir.delete();\n-            testDir.delete();\n-        } catch (SecurityException e) {\n-            e.printStackTrace();\n+        if (prevDir.equals(crntDir)) {\n+            throw new RuntimeException(\"BackSpace does not lead to parent directory\");\n@@ -88,4 +131,5 @@\n-    public void destroy() {\n-        if (!res) {\n-            throw new RuntimeException(\"BackSpace keyboard button does not lead to parent directory\");\n-        }\n+    private static void clickBackSpace() {\n+        prevDir = fileChooser.getCurrentDirectory();\n+        robot.keyPress(KeyEvent.VK_BACK_SPACE);\n+        robot.keyRelease(KeyEvent.VK_BACK_SPACE);\n+        crntDir = fileChooser.getCurrentDirectory();\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/4150029\/bug4150029.java","additions":96,"deletions":52,"binary":false,"changes":148,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @run main bug8020708\n+ * @run main\/timeout=300 bug8020708\n@@ -71,0 +71,1 @@\n+            System.out.println(\"locale: \" + locale);\n@@ -83,1 +84,1 @@\n-        robot.setAutoDelay(250);\n+        robot.setAutoDelay(100);\n@@ -145,0 +146,1 @@\n+                System.out.println(\"LookAndFeel: \" + info.getClassName());\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/8020708\/bug8020708.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyAdapter;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JComponent;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4199401\n+ * @summary DefaultFocusManager interferes with comps that\n+ *          return true to isManagingFocus().\n+ * @key headful\n+ * @run main Ctrli\n+ *\/\n+\n+public class Ctrli {\n+    private static JFrame frame;\n+    private static JComponent keyecho;\n+    private static volatile boolean iPressed = false;\n+    private static volatile Point compLoc;\n+    private static volatile int compWidth;\n+    private static volatile int compHeight;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(50);\n+        robot.setAutoWaitForIdle(true);\n+        try {\n+            SwingUtilities.invokeAndWait(Ctrli::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                compLoc = keyecho.getLocationOnScreen();\n+                compWidth = keyecho.getWidth();\n+                compHeight = keyecho.getHeight();\n+            });\n+\n+            robot.mouseMove(compLoc.x + compWidth \/ 2, compLoc.y + compHeight \/ 2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            robot.keyPress(KeyEvent.VK_I);\n+            robot.waitForIdle();\n+            robot.keyRelease(KeyEvent.VK_I);\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+            robot.waitForIdle();\n+\n+            if (!iPressed) {\n+                throw new RuntimeException(\"Test failed: CTRL+I not pressed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test Ctrl+I operation\");\n+        keyecho = new JComponent() {\n+            public boolean isManagingFocus() {\n+                return true;\n+            }\n+        };\n+        KeyListener keyListener = new KeyAdapter() {\n+            public void keyPressed(KeyEvent e) {\n+                if (((e.getModifiers() & ActionEvent.CTRL_MASK) == ActionEvent.CTRL_MASK)\n+                        && (e.getKeyCode() == 73))\n+                    iPressed = true;\n+            }\n+\n+            public void keyTyped(KeyEvent e) {\n+                if (!iPressed) {\n+                    throw new RuntimeException(\"Test failed: CTRL+I not pressed.\");\n+                }\n+            }\n+        };\n+\n+        MouseListener mouseListener = new MouseAdapter() {\n+            public void mousePressed(MouseEvent e) {\n+                keyecho.requestFocus();\n+            }\n+        };\n+\n+        keyecho.addKeyListener(keyListener);\n+        keyecho.addMouseListener(mouseListener);\n+        frame.setLayout(new BorderLayout());\n+        frame.add(keyecho);\n+        frame.setSize(200, 200);\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/Ctrli.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"},{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8267374\n+ * @key headful\n+ * @requires (os.family == \"mac\")\n+ * @summary Verifies menu closes when main window is resized\n+ * @run main TestUngrab\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Dimension;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+\n+public class TestUngrab {\n+    \/**\n+     * Menu (JMenuBar and JPopupMenu) not hidden when resizing the window.\n+     * -> UngrabEvent not sent.\n+     *\/\n+    static JMenu menu;\n+    static JFrame frame;\n+    static volatile Point loc;\n+    static volatile Point point;\n+    static volatile Dimension dim;\n+    static volatile int width;\n+    static volatile int height;\n+    static volatile boolean popupVisible;\n+\n+    private static void createAndShowGUI() {\n+        frame = new JFrame();\n+        JMenuBar mb = new JMenuBar();\n+        menu = new JMenu(\"Menu\");\n+        menu.add(new JMenuItem(\"Item 1\"));\n+        menu.add(new JMenuItem(\"Item 2\"));\n+        mb.add(menu);\n+\n+        frame.setJMenuBar(mb);\n+        frame.setSize(300, 300);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            SwingUtilities.invokeAndWait(() -> createAndShowGUI());\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                point = menu.getLocationOnScreen();\n+                dim = menu.getSize();\n+            });\n+            robot.mouseMove(point.x + dim.width \/ 2, point.y + dim.height \/ 2);\n+            robot.waitForIdle();\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = frame.getLocationOnScreen();\n+                width = frame.getWidth();\n+                height = frame.getHeight();\n+            });\n+            robot.mouseMove(loc.x + width, loc.y + height);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                popupVisible = menu.isPopupMenuVisible();\n+            });\n+            System.out.println(\"isPopupMenuVisible \" + popupVisible);\n+            if (popupVisible) {\n+                throw new RuntimeException(\"popup menu not closed on resize\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenu\/TestUngrab.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,159 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.JTextField;\n+import javax.swing.KeyStroke;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4159610\n+ * @key headful\n+ * @summary Verifies that JMenuItem's shortcuts are not inserted in JTextField\n+ * @run main JActionCommandTest\n+ *\/\n+\n+public class JActionCommandTest {\n+\n+    private static Robot robot;\n+    private static JMenu m;\n+    private static JMenuItem mi;\n+    private static JFrame f;\n+    private static JTextField tf;\n+    private static volatile Point menuLoc;\n+    private static volatile Point menuItemLoc;\n+    private static volatile Point textFieldLoc;\n+    private static volatile int menuWidth;\n+    private static volatile int menuHeight;\n+    private static volatile int menuItemWidth;\n+    private static volatile int menuItemHeight;\n+    private static volatile int textFieldWidth;\n+    private static volatile int textFieldHeight;\n+    private static volatile boolean passed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(50);\n+        robot.setAutoWaitForIdle(true);\n+        try {\n+            SwingUtilities.invokeAndWait(JActionCommandTest::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                menuLoc = m.getLocationOnScreen();\n+                menuWidth = m.getWidth();\n+                menuHeight = m.getHeight();\n+\n+                textFieldLoc = tf.getLocationOnScreen();\n+                textFieldWidth = tf.getWidth();\n+                textFieldHeight = tf.getHeight();\n+            });\n+            moveAndPressMouse(menuLoc.x, menuLoc.y, menuWidth, menuHeight);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                menuItemLoc = mi.getLocationOnScreen();\n+                menuItemWidth = mi.getWidth();\n+                menuItemHeight = mi.getHeight();\n+            });\n+            moveAndPressMouse(menuItemLoc.x, menuItemLoc.y, menuItemWidth, menuItemHeight);\n+            System.out.println(\"passed is: \"+passed);\n+            if (!passed) {\n+                throw new RuntimeException(\"Test Failed: JMenuItem label is not\" +\n+                        \" equals to 'Testitem'.\");\n+            }\n+            passed = false;\n+            moveAndPressMouse(textFieldLoc.x, textFieldLoc.y, textFieldWidth, textFieldHeight);\n+            robot.keyPress(KeyEvent.VK_ALT);\n+            robot.keyPress(KeyEvent.VK_T);\n+            robot.keyRelease(KeyEvent.VK_T);\n+            robot.keyRelease(KeyEvent.VK_ALT);\n+            robot.waitForIdle();\n+\n+            System.out.println(\"passed is: \"+passed);\n+            System.out.println(\"tf.getText() is: \"+tf.getText());\n+            if (!passed && tf.getText().equals(\"t\")) {\n+                throw new RuntimeException(\"Test Failed: Either JMenuItem label is not\" +\n+                        \" equal to 'Testitem' or JTextField contains text 't'. \");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        CustomActionListener customListener = new CustomActionListener();\n+        f = new JFrame(\"Test JMenuItem Shortcut\");\n+        f.setLayout(new BorderLayout());\n+        tf = new JTextField(12);\n+        tf.addActionListener(customListener);\n+        JMenuBar mb = new JMenuBar();\n+        m = new JMenu(\"Test\");\n+        mi = new JMenuItem(\"Testitem\");\n+        KeyStroke ks = KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T,\n+                java.awt.Event.ALT_MASK, false);\n+        mi.setAccelerator(ks);\n+        mi.addActionListener(customListener);\n+        m.add(mi);\n+        mb.add(m);\n+        f.setJMenuBar(mb);\n+        f.add(\"South\", tf);\n+        f.setSize(200, 200);\n+        f.setLocationRelativeTo(null);\n+        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        f.setVisible(true);\n+    }\n+\n+    public static void moveAndPressMouse(int x, int y, int width, int height) {\n+        robot.mouseMove(x + width \/ 2, y + height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+    }\n+\n+    static class CustomActionListener implements ActionListener {\n+        @Override\n+        public void actionPerformed(ActionEvent e) {\n+            if (e.getSource() == mi && e.getActionCommand().equals(\"Testitem\")) {\n+                System.out.println(\"MenuItem's label: \" + e.getActionCommand());\n+                passed = true;\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/JActionCommandTest.java","additions":159,"deletions":0,"binary":false,"changes":159,"status":"added"},{"patch":"@@ -0,0 +1,68 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+ * @bug 5074006\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Swing JOptionPane shows <html> tag as a string after newline\n+ * @run main\/manual TestJOptionHTMLTag\n+*\/\n+\n+import javax.swing.JDialog;\n+import javax.swing.JOptionPane;\n+import javax.swing.SwingUtilities;\n+\n+public class TestJOptionHTMLTag {\n+    static String instructions\n+            = \"\"\"\n+            INSTRUCTIONS:\n+                A dialog will be shown.\n+                If it does not contain <\/html> string, press Pass else press Fail.\n+            \"\"\";\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                String message = \"<html>\" + \"This is a test\\n\" + \"<\/html>\";\n+                JOptionPane optionPane = new JOptionPane();\n+                optionPane.setMessage(message);\n+                optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);\n+                JDialog dialog = new JDialog();\n+                dialog.setContentPane(optionPane);\n+                dialog.pack();\n+                dialog.setVisible(true);\n+\n+                passFailJFrame = new PassFailJFrame(instructions);\n+                PassFailJFrame.addTestWindow(dialog);\n+                PassFailJFrame.positionTestWindow(dialog, PassFailJFrame.Position.HORIZONTAL);\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+        });\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/TestJOptionHTMLTag.java","additions":68,"deletions":0,"binary":false,"changes":68,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 8224267 8290162\n+   @key headful\n+   @summary Verifies if StackOverflowError is not thrown for multiple newlines\n+   @run main TestOptionPaneStackOverflow\n+ *\/\n+\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+import javax.swing.SwingUtilities;\n+\n+public class TestOptionPaneStackOverflow\n+{\n+    static JFrame frame;\n+\n+    public static void main(String[] argv) throws Exception\n+    {\n+        try {\n+            String message = java.nio.CharBuffer.allocate(5000).toString().\n+                                  replace('\\0','\\n');\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                JOptionPane optionPane = new JOptionPane();\n+                optionPane.createDialog(frame, null);\n+                optionPane.setMessage(message);\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JOptionPane\/TestOptionPaneStackOverflow.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.Action;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.MenuElement;\n+import javax.swing.SwingUtilities;\n+import java.awt.event.ActionEvent;\n+import java.beans.PropertyChangeListener;\n+\n+\/*\n+ * @test\n+ * @bug 4236750\n+ * @summary Tests presence of JPopupMenu.insert(Action, int)\n+ * @run main bug4236750\n+ *\/\n+\n+public class bug4236750 {\n+    private static MenuElement[] elements;\n+    private static volatile boolean passed = true;\n+\n+    \/**\n+     * Auxilliary class implementing Action\n+     *\/\n+    static class NullAction implements Action {\n+        public void addPropertyChangeListener(\n+                PropertyChangeListener listener) {\n+        }\n+\n+        public void removePropertyChangeListener(\n+                PropertyChangeListener listener) {\n+        }\n+\n+        public void setEnabled(boolean b) {\n+        }\n+\n+        public boolean isEnabled() {\n+            return true;\n+        }\n+\n+        public void actionPerformed(ActionEvent e) {\n+        }\n+\n+        private String name;\n+\n+        public NullAction(String s) {\n+            name = s;\n+        }\n+\n+        public void putValue(String key, Object value) {\n+            if (key.equals(Action.NAME)) {\n+                name = (String) value;\n+            }\n+        }\n+\n+        public Object getValue(String key) {\n+            if (key.equals(Action.NAME)) {\n+                return name;\n+            }\n+            return null;\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JPopupMenu popup;\n+            popup = new JPopupMenu(\"Test Popup\");\n+            JMenuItem item0 = popup.add(new NullAction(\"0\"));\n+            JMenuItem item2 = popup.add(new NullAction(\"2\"));\n+            popup.insert(new NullAction(\"1\"), 1);\n+            elements = popup.getSubElements();\n+            for (int i = 0; i < 3; i++) {\n+                JMenuItem mi = (JMenuItem) elements[i];\n+                if (!mi.getText().equals(\"\" + i)) {\n+                    passed = false;\n+                }\n+            }\n+        });\n+\n+        if (!passed) {\n+            throw new RuntimeException(\"Failed: wrong order of menuitems\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4236750.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenu;\n+import javax.swing.JMenuBar;\n+import javax.swing.JMenuItem;\n+import javax.swing.SwingUtilities;\n+import java.awt.Robot;\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+\n+\n+\/*\n+ * @test\n+ * @bug 4321273\n+ * @summary NotSerializableException during the menu serialization\n+ * @key headful\n+ * @run main bug4321273\n+*\/\n+\n+public class bug4321273 {\n+    public static JFrame frame;\n+    public static JMenu menu;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                JMenuBar menuBar = new JMenuBar();\n+                frame = new JFrame();\n+                frame.setJMenuBar(menuBar);\n+                menu = new JMenu(\"Menu\");\n+                menuBar.add(menu);\n+                menu.add(new JMenuItem(\"item 1\"));\n+                menu.add(new JMenuItem(\"item 2\"));\n+                menu.add(new JMenuItem(\"item 3\"));\n+                frame.pack();\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                menu.doClick();\n+                try {\n+                    ByteArrayOutputStream byteArrayOutputStream =\n+                            new ByteArrayOutputStream();\n+                    ObjectOutputStream oos =\n+                            new ObjectOutputStream(byteArrayOutputStream);\n+                    oos.writeObject(menu);\n+                } catch (Exception se) {\n+                    throw new RuntimeException(\"NotSerializableException \" +\n+                            \"during the menu serialization\", se);\n+                }\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4321273.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.GraphicsConfiguration;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Insets;\n+import java.awt.Robot;\n+import java.awt.Window;\n+import java.awt.Toolkit;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.InputEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4711693\n+ * @summary Pop-up doesn't stay up\n+ * @key headful\n+ * @run main bug4711693\n+ *\/\n+\n+public class bug4711693 {\n+    static JFrame fr;\n+    static Robot robot;\n+    static volatile boolean passed = true;\n+    static volatile Dimension scr;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                fr = new JFrame(\"Test 4711693\");\n+                scr = new Dimension();\n+                fr.setSize(600, 600);\n+                GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+                GraphicsDevice[] gs = ge.getScreenDevices();\n+                GraphicsConfiguration gc = null;\n+\n+                for (int j = 0; j < gs.length; j++) {\n+                    GraphicsDevice gd = gs[j];\n+                    gc = gd.getDefaultConfiguration();\n+                    if (gc.getBounds().contains(100, 100)) break;\n+                }\n+                scr = Toolkit.getDefaultToolkit().getScreenSize();\n+                Insets ins = Toolkit.getDefaultToolkit().getScreenInsets(gc);\n+                scr.width -= ins.right;\n+                scr.height -= ins.bottom;\n+                fr.setLocation(scr.width - 400, scr.height - 400);\n+                fr.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                final JPopupMenu popupMenu = new JPopupMenu();\n+                final Component pane = fr.getContentPane();\n+                for (int i = 1; i < 10; i++) {\n+                    final String itemName = \"Item \" + i;\n+                    JMenuItem it = popupMenu.add(new JMenuItem(itemName));\n+                    it.addActionListener(new ActionListener() {\n+                        public void actionPerformed(ActionEvent a) {\n+                            passed = false;\n+                        }\n+                    });\n+                }\n+\n+                pane.addMouseListener(new MouseAdapter() {\n+                    public void mousePressed(MouseEvent e) {\n+                        if ((e.isAltDown() ||\n+                                ((e.getModifiersEx() &\n+                                        InputEvent.BUTTON3_DOWN_MASK) != 0))) {\n+                            Component parent = e.getComponent();\n+                            while (parent != null && !(parent instanceof Window)) {\n+                                parent = parent.getParent();\n+                            }\n+                            popupMenu.show(pane, e.getX(), e.getY());\n+                        }\n+                    }\n+                });\n+            });\n+\n+            robot.mouseMove(scr.width - 55, scr.height - 55);\n+            robot.mousePress(InputEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON3_DOWN_MASK);\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (fr != null) {\n+                    fr.dispose();\n+                }\n+            });\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(\"Test failed. Popup disposed on mouse release.\");\n+        } else {\n+            System.out.println(\"Test Passed!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4711693.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.PopupMenuUI;\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+\/*\n+ * @test\n+ * @bug 4962731\n+ * @summary The PopupMenu is not repainted if the LAF is changed.\n+ * @key headful\n+ * @run main bug4962731\n+ *\/\n+\n+public class bug4962731 {\n+\n+    public static volatile boolean passed = false;\n+    public static boolean isLafOk = true;\n+    public static JFrame mainFrame;\n+    public static JButton button;\n+    public static MyPopup popup;\n+    public static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+        } catch (Exception ex) {\n+            System.err.println(\"Can not initialize Motif L&F. Testing skipped.\");\n+            isLafOk = false;\n+        }\n+\n+        try {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        } catch (Exception ex) {\n+            System.err.println(\"Can not initialize Metal L&F. Testing skipped.\");\n+            isLafOk = false;\n+        }\n+\n+        if (isLafOk) {\n+            try {\n+                robot = new Robot();\n+                SwingUtilities.invokeAndWait(() -> {\n+                    mainFrame = new JFrame(\"Bug4962731\");\n+                    button = new JButton(\"Popup!\");\n+                    popup = new MyPopup();\n+                    popup.add(\"one\");\n+                    popup.add(\"two\");\n+                    button.setComponentPopupMenu(popup);\n+                    button.addActionListener(new ActionListener() {\n+                        public void actionPerformed(ActionEvent e) {\n+                            popup.show(button, 300, 300);\n+                            popup.engage();\n+                            try {\n+                                Thread.sleep(1000);\n+                            } catch (InterruptedException e1) {\n+                            }\n+                            try {\n+                                UIManager.setLookAndFeel\n+                                        (\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+                            } catch (Exception ex) {\n+                            }\n+                            try {\n+                                Thread.sleep(1000);\n+                            } catch (InterruptedException e1) {\n+                            }\n+                            SwingUtilities.updateComponentTreeUI(mainFrame);\n+                            passed = popup.check();\n+                        }\n+                    });\n+                    mainFrame.setLayout(new BorderLayout());\n+                    mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                    mainFrame.add(button, BorderLayout.CENTER);\n+                    mainFrame.pack();\n+                    mainFrame.setVisible(true);\n+                });\n+\n+                robot.delay(1000);\n+                SwingUtilities.invokeAndWait(() -> {\n+                    button.doClick();\n+                });\n+\n+                if (!passed) {\n+                    throw new RuntimeException(\"The UI of popup was not changed\");\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    if (mainFrame != null) {\n+                        mainFrame.dispose();\n+                    }\n+                });\n+            }\n+        }\n+        System.out.println(\"test Passed!\");\n+    }\n+\n+    public static class MyPopup extends JPopupMenu {\n+        PopupMenuUI thisUI;\n+\n+        public void engage() {\n+            thisUI = getUI();\n+        }\n+\n+        public boolean check() {\n+            return getUI() != thisUI;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4962731.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"},{"patch":"@@ -0,0 +1,144 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JLabel;\n+import javax.swing.JFrame;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 4966109\n+ * @summary Popup is not populated by mouse actions on lightweight components without mouse\n+ * @key headful\n+ * @run main bug4966109\n+ *\/\n+\n+public class bug4966109 {\n+    public static JFrame mainFrame;\n+    public static JPopupMenu popup;\n+    public static JLabel label1;\n+    public static JLabel label2;\n+    public static Robot robot;\n+    public static volatile Point loc;\n+    public static volatile Boolean passed = true;\n+    public static int popupTrigger;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                mainFrame = new JFrame(\"Bug4966109\");\n+                popup = new JPopupMenu();\n+                label1 = new JLabel(\"Label with the listener\");\n+                label2 = new JLabel(\"Label w\/o listener\");\n+                mainFrame.setLayout(new BorderLayout());\n+                mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                mainFrame.add(label1, BorderLayout.NORTH);\n+                mainFrame.add(label2, BorderLayout.SOUTH);\n+                mainFrame.pack();\n+                mainFrame.setVisible(true);\n+                popup.add(\"One\");\n+                popup.add(\"Two\");\n+                popup.add(\"Three\");\n+                label1.setComponentPopupMenu(popup);\n+                label1.addMouseListener(new MouseAdapter() {\n+                });\n+                label2.setComponentPopupMenu(popup);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = label1.getLocationOnScreen();\n+                loc.x = loc.x + (int) (label1.getWidth() \/ 2);\n+                loc.y = loc.y + (int) (label1.getHeight() \/ 2);\n+            });\n+            popupTrigger = MouseEvent.BUTTON2_DOWN_MASK;\n+            robot.mouseMove(loc.x, loc.y);\n+            robot.mousePress(popupTrigger);\n+            robot.mouseRelease(popupTrigger);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (popup.isVisible()) {\n+                    System.out.println(\"ZAV: Good!!! BUTTON2 is the way to go.\");\n+                } else {\n+                    System.out.println(\"ZAV: Bad :( Let's try BUTTON3\");\n+                    popupTrigger = MouseEvent.BUTTON3_DOWN_MASK;\n+                }\n+            });\n+\n+            robot.mousePress(popupTrigger);\n+            robot.mouseRelease(popupTrigger);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (popup.isVisible()) {\n+                    System.out.println(\"ZAV: Good!!! BUTTON3 is working. At last :)\");\n+                    popup.setVisible(false);\n+                } else {\n+                    System.out.println(\"ZAV: Bad :( Very bad. Nothing is working...\");\n+                    passed = false;\n+                }\n+            });\n+            if (!passed) {\n+                throw new RuntimeException(\"No popup trigger mouse events found\");\n+            }\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = label2.getLocationOnScreen();\n+                loc.x = loc.x + (int) (label2.getWidth() \/ 2);\n+                loc.y = loc.y + (int) (label2.getHeight() \/ 2);\n+            });\n+            robot.mouseMove(loc.x, loc.y);\n+            robot.mousePress(popupTrigger);\n+            robot.mouseRelease(popupTrigger);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (!popup.isVisible()) {\n+                    passed = false;\n+                }\n+            });\n+            if (!passed) {\n+                throw new RuntimeException(\"Regression: bug 4966109, popup is not visible\");\n+            }\n+        } finally {\n+            if (mainFrame != null) {\n+                mainFrame.dispose();\n+            }\n+        }\n+        System.out.println(\"test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug4966109.java","additions":144,"deletions":0,"binary":false,"changes":144,"status":"added"},{"patch":"@@ -0,0 +1,150 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.PopupMenuListener;\n+import javax.swing.event.PopupMenuEvent;\n+import java.awt.BorderLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.KeyListener;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @bug 5091257\n+ * @summary Application key does not display a pop-up menu in users view.\n+ * @key headful\n+ * @run main bug5091257\n+ *\/\n+\n+public class bug5091257 {\n+    public static volatile boolean passed = false;\n+    public static volatile boolean isKeyOk = false;\n+    public static JFrame mainFrame;\n+    public static JButton button;\n+    public static Robot robot;\n+    public static JPopupMenu popup;\n+    public static volatile Point loc;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(50);\n+            SwingUtilities.invokeAndWait(() -> {\n+                button = new JButton(\"Popup button\");\n+                button.addKeyListener(new KeyListener() {\n+                    public void keyTyped(KeyEvent e) {\n+                        if (e.getKeyCode() == KeyEvent.VK_CONTEXT_MENU) {\n+                            isKeyOk = true;\n+                        }\n+                    }\n+\n+                    public void keyPressed(KeyEvent e) {\n+                        if (e.getKeyCode() == KeyEvent.VK_CONTEXT_MENU) {\n+                            isKeyOk = true;\n+                        }\n+                    }\n+\n+                    public void keyReleased(KeyEvent e) {\n+                        if (e.getKeyCode() == KeyEvent.VK_CONTEXT_MENU) {\n+                            isKeyOk = true;\n+                        }\n+                    }\n+                });\n+                mainFrame = new JFrame(\"Bug5091257\");\n+                mainFrame.setLayout(new BorderLayout());\n+                mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                mainFrame.add(button, BorderLayout.CENTER);\n+                mainFrame.pack();\n+                mainFrame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = button.getLocationOnScreen();\n+                loc.x = loc.x + (int) (button.getWidth() \/ 2);\n+                loc.y = loc.y + (int) (button.getHeight() \/ 2);\n+            });\n+            robot.mouseMove(loc.x, loc.y);\n+            robot.mousePress(MouseEvent.BUTTON3_DOWN_MASK);\n+            robot.mouseRelease(MouseEvent.BUTTON3_DOWN_MASK);\n+\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            try {\n+                robot.keyPress(KeyEvent.VK_CONTEXT_MENU);\n+                robot.keyRelease(KeyEvent.VK_CONTEXT_MENU);\n+            } catch (IllegalArgumentException ex) {\n+                isKeyOk = false;\n+            }\n+\n+            if (!isKeyOk) {\n+                System.out.println(\"KeyEvent can't create or deliver \" +\n+                        \"VK_CONTEXT_MENU event to component. Testing skipped.\");\n+                passed = true;\n+            } else {\n+                SwingUtilities.invokeAndWait(() -> {\n+                    popup = new JPopupMenu();\n+                    popup.add(\"Item to make popup not empty\");\n+                    popup.addPopupMenuListener(new PopupMenuListener() {\n+                        public void popupMenuWillBecomeVisible(PopupMenuEvent e) {\n+                            System.out.println(\"Popup menu became visible \" +\n+                                    \"on context menu key press. Test passed.\");\n+                            passed = true;\n+                        }\n+\n+                        public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {\n+                        }\n+\n+                        public void popupMenuCanceled(PopupMenuEvent e) {\n+                        }\n+                    });\n+                    button.setComponentPopupMenu(popup);\n+                });\n+                robot.keyPress(KeyEvent.VK_CONTEXT_MENU);\n+                robot.keyRelease(KeyEvent.VK_CONTEXT_MENU);\n+\n+                robot.waitForIdle();\n+                robot.delay(100);\n+\n+                if (!passed) {\n+                    throw new RuntimeException(\"Popup did not open on \" +\n+                            \"VK_CONTEXT_MENU press. Test failed.\");\n+                }\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (mainFrame != null) {\n+                    mainFrame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/bug5091257.java","additions":150,"deletions":0,"binary":false,"changes":150,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n- \/*\n+\/*\n@@ -27,2 +27,0 @@\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n@@ -37,2 +35,1 @@\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n+\n@@ -48,1 +45,0 @@\n-import javax.swing.UnsupportedLookAndFeelException;\n@@ -62,1 +58,1 @@\n-    public static void main(String args[]) throws Throwable {\n+    public static void main(String[] args) throws Throwable {\n@@ -70,0 +66,1 @@\n+        robot.waitForIdle();\n@@ -79,1 +76,1 @@\n-        \/\/ shift tab key test grouped and non grouped radio button\n+        \/\/ shift tab key test grouped and non-grouped radio button\n@@ -155,1 +152,1 @@\n-        mainFrame.setLocation(200, 200);\n+        mainFrame.setLocationRelativeTo(null);\n@@ -162,3 +159,3 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -176,1 +173,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -187,3 +184,3 @@\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n-        hitKey(robot, KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_SHIFT, KeyEvent.VK_TAB);\n@@ -200,2 +197,2 @@\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_RIGHT);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_RIGHT);\n@@ -211,2 +208,2 @@\n-        hitKey(robot, KeyEvent.VK_UP);\n-        hitKey(robot, KeyEvent.VK_LEFT);\n+        hitKey(KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_LEFT);\n@@ -222,2 +219,2 @@\n-        hitKey(robot, KeyEvent.VK_UP);\n-        hitKey(robot, KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_UP);\n+        hitKey(KeyEvent.VK_UP);\n@@ -233,1 +230,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -243,1 +240,1 @@\n-        hitKey(robot, KeyEvent.VK_TAB);\n+        hitKey(KeyEvent.VK_TAB);\n@@ -252,3 +249,3 @@\n-    private static Boolean actRB1 = false;\n-    private static Boolean actRB2 = false;\n-    private static Boolean actRB3 = false;\n+    private static boolean actRB1 = false;\n+    private static boolean actRB2 = false;\n+    private static boolean actRB3 = false;\n@@ -271,3 +268,3 @@\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_DOWN);\n-        hitKey(robot, KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n+        hitKey(KeyEvent.VK_DOWN);\n@@ -291,1 +288,1 @@\n-    private static void hitKey(Robot robot, int keycode) {\n+    private static void hitKey(int keycode) {\n@@ -297,1 +294,1 @@\n-    private static void hitKey(Robot robot, int mode, int keycode) {\n+    private static void hitKey(int mode, int keycode) {\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/8033699\/bug8033699.java","additions":30,"deletions":33,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n- \/*\n+\/*\n@@ -27,2 +27,0 @@\n- * @library ..\/..\/regtesthelpers\n- * @build Util\n@@ -31,1 +29,0 @@\n- * @author Vivi An\n@@ -34,5 +31,12 @@\n-\n-import javax.swing.*;\n-import javax.swing.event.*;\n-import java.awt.event.*;\n-import java.awt.*;\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+\n+import javax.swing.ButtonGroup;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.JTextField;\n+import javax.swing.LayoutFocusTraversalPolicy;\n+import javax.swing.SwingUtilities;\n@@ -45,1 +49,1 @@\n-    public static void main(String args[]) throws Throwable {\n+    public static void main(String[] args) throws Throwable {\n@@ -47,5 +51,1 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                public void run() {\n-                    createAndShowGUI();\n-                }\n-            });\n+            SwingUtilities.invokeAndWait(bug8075609::createAndShowGUI);\n@@ -55,0 +55,1 @@\n+            robot.waitForIdle();\n@@ -61,1 +62,5 @@\n-            if (mainFrame != null) SwingUtilities.invokeAndWait(() -> mainFrame.dispose());\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (mainFrame != null) {\n+                    mainFrame.dispose();\n+                }\n+            });\n@@ -94,0 +99,1 @@\n+        mainFrame.setLocationRelativeTo(null);\n@@ -99,10 +105,8 @@\n-    private static void runTest1() throws Exception{\n-        hitKey(robot, KeyEvent.VK_TAB);\n-\n-        robot.delay(1000 );\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            public void run() {\n-                if (!textField.hasFocus()) {\n-                    System.out.println(\"Radio Button Group Go To Next Component through Tab Key failed\");\n-                    throw new RuntimeException(\"Focus is not on textField as Expected\");\n-                }\n+    private static void runTest1() throws Exception {\n+        hitKey(KeyEvent.VK_TAB);\n+\n+        robot.delay(1000);\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!textField.hasFocus()) {\n+                System.out.println(\"Radio Button Group Go To Next Component through Tab Key failed\");\n+                throw new RuntimeException(\"Focus is not on textField as Expected\");\n@@ -113,1 +117,1 @@\n-    private static void hitKey(Robot robot, int keycode) {\n+    private static void hitKey(int keycode) {\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/8075609\/bug8075609.java","additions":32,"deletions":28,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,9 @@\n-import javax.swing.*;\n-import java.awt.*;\n+import java.awt.AWTEvent;\n+import java.awt.Container;\n+import java.awt.FlowLayout;\n+import java.awt.KeyboardFocusManager;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.FocusAdapter;\n+import java.awt.event.FocusEvent;\n@@ -34,0 +41,3 @@\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.util.concurrent.CountDownLatch;\n@@ -35,1 +45,11 @@\n-public class ButtonGroupFocusTest {\n+import javax.imageio.ImageIO;\n+import javax.swing.ButtonGroup;\n+import javax.swing.JFrame;\n+import javax.swing.JRadioButton;\n+import javax.swing.SwingUtilities;\n+\n+import static java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager;\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static java.util.concurrent.TimeUnit.SECONDS;\n+\n+public final class ButtonGroupFocusTest {\n@@ -42,1 +62,9 @@\n-    private static Robot robot;\n+\n+    private static final CountDownLatch button2FocusLatch = new CountDownLatch(1);\n+    private static final CountDownLatch button3FocusLatch = new CountDownLatch(1);\n+    private static final CountDownLatch button4FocusLatch = new CountDownLatch(1);\n+\n+    private static final CountDownLatch button2FocusLatch2 = new CountDownLatch(2);\n+\n+    private static final long FOCUS_TIMEOUT = 4;\n+\n@@ -46,2 +74,1 @@\n-        robot = new Robot();\n-        robot.setAutoDelay(100);\n+        final Robot robot = new Robot();\n@@ -50,1 +77,1 @@\n-            frame = new JFrame();\n+            frame = new JFrame(\"ButtonGroupFocusTest\");\n@@ -63,0 +90,1 @@\n+\n@@ -72,0 +100,6 @@\n+            button2.addFocusListener(new LatchFocusListener(button2FocusLatch));\n+            button3.addFocusListener(new LatchFocusListener(button3FocusLatch));\n+            button4.addFocusListener(new LatchFocusListener(button4FocusLatch));\n+\n+            button2.addFocusListener(new LatchFocusListener(button2FocusLatch2));\n+\n@@ -74,0 +108,12 @@\n+            \/\/ Debugging aid: log focus owner changes...\n+            KeyboardFocusManager focusManager = getCurrentKeyboardFocusManager();\n+            focusManager.addPropertyChangeListener(\"focusOwner\",\n+                    e -> System.out.println(e.getPropertyName()\n+                                            + \"\\n\\t\" + e.getOldValue()\n+                                            + \"\\n\\t\" + e.getNewValue()));\n+\n+            \/\/ ...and dispatched key events\n+            Toolkit.getDefaultToolkit().addAWTEventListener(\n+                    e -> System.out.println(\"Dispatched \" + e),\n+                    AWTEvent.KEY_EVENT_MASK);\n+\n@@ -75,0 +121,1 @@\n+            frame.setLocationRelativeTo(null);\n@@ -78,8 +125,4 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n-\n-        SwingUtilities.invokeAndWait(() -> {\n-            if( !button2.hasFocus() ) {\n-                frame.dispose();\n-                throw new RuntimeException(\n-                        \"Button 2 should get focus after activation\");\n+        try {\n+            if (!button2FocusLatch.await(FOCUS_TIMEOUT, SECONDS)) {\n+                throw new RuntimeException(\"Button 2 should get focus \"\n+                                           + \"after activation\");\n@@ -87,1 +130,2 @@\n-        });\n+            robot.waitForIdle();\n+            robot.delay(200);\n@@ -89,2 +133,3 @@\n-        robot.keyPress(KeyEvent.VK_TAB);\n-        robot.keyRelease(KeyEvent.VK_TAB);\n+            System.out.println(\"\\n\\n*** Tab 1st\");\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n@@ -92,2 +137,5 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n+            if (!button4FocusLatch.await(FOCUS_TIMEOUT, SECONDS)) {\n+                throw new RuntimeException(\"Button 4 should get focus\");\n+            }\n+            robot.waitForIdle();\n+            robot.delay(200);\n@@ -95,5 +143,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            if( !button4.hasFocus() ) {\n-                frame.dispose();\n-                throw new RuntimeException(\n-                        \"Button 4 should get focus\");\n+            if (button2FocusLatch2.await(1, MILLISECONDS)) {\n+                throw new RuntimeException(\"Focus moved back to Button 2\");\n@@ -101,2 +146,0 @@\n-            button3.setSelected(true);\n-        });\n@@ -104,2 +147,3 @@\n-        robot.keyPress(KeyEvent.VK_TAB);\n-        robot.keyRelease(KeyEvent.VK_TAB);\n+            SwingUtilities.invokeAndWait(() -> button3.setSelected(true));\n+            robot.waitForIdle();\n+            robot.delay(200);\n@@ -107,2 +151,3 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n+            System.out.println(\"\\n\\n*** Tab 2nd\");\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n@@ -110,5 +155,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            if( !button3.hasFocus() ) {\n-                frame.dispose();\n-                throw new RuntimeException(\n-                        \"selected Button 3 should get focus\");\n+            if (!button3FocusLatch.await(FOCUS_TIMEOUT, SECONDS)) {\n+                throw new RuntimeException(\"Selected Button 3 should get focus\");\n@@ -116,1 +158,28 @@\n-        });\n+        } catch (Exception e) {\n+            BufferedImage image = robot.createScreenCapture(getFrameBounds());\n+            ImageIO.write(image, \"png\",\n+                          new File(\"image.png\"));\n+\n+            SwingUtilities.invokeAndWait(() ->\n+                    System.err.println(\"Current focus owner: \"\n+                                       + getCurrentKeyboardFocusManager()\n+                                         .getFocusOwner()));\n+\n+            throw e;\n+        } finally {\n+            SwingUtilities.invokeAndWait(frame::dispose);\n+        }\n+    }\n+\n+    private static Rectangle getFrameBounds() throws Exception {\n+        Rectangle[] bounds = new Rectangle[1];\n+        SwingUtilities.invokeAndWait(() -> bounds[0] = frame.getBounds());\n+        return bounds[0];\n+    }\n+\n+    private static final class LatchFocusListener extends FocusAdapter {\n+        private final CountDownLatch focusGainedLatch;\n+\n+        private LatchFocusListener(CountDownLatch focusGainedLatch) {\n+            this.focusGainedLatch = focusGainedLatch;\n+        }\n@@ -118,1 +187,4 @@\n-        SwingUtilities.invokeLater(frame::dispose);\n+        @Override\n+        public void focusGained(FocusEvent e) {\n+            focusGainedLatch.countDown();\n+        }\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/ButtonGroupFocus\/ButtonGroupFocusTest.java","additions":111,"deletions":39,"binary":false,"changes":150,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JRootPane;\n+import java.lang.reflect.Field;\n+\n+\/*\n+ * @test\n+ * @bug 4207333\n+ * @summary Inadvertant API regression in JRootPane\n+ * @run main bug4207333\n+ *\/\n+\n+public class bug4207333 {\n+    public static void main(String[] argv) {\n+        TestableRootPane rp = new TestableRootPane();\n+        rp.setDefaultButton(new JButton(\"Default, eh?\"));\n+\n+        if (!rp.test(\"defaultPressAction\")) {\n+            throw new RuntimeException(\"Failed test for bug 4207333\");\n+        }\n+        if (!rp.test(\"defaultReleaseAction\")) {\n+            throw new RuntimeException(\"Failed test for bug 4207333\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+\n+    private static class TestableRootPane extends JRootPane {\n+        public boolean test(String fieldName) {\n+            boolean result = false;\n+            try {\n+                Class superClass = getClass().getSuperclass();\n+                Field field = superClass.getDeclaredField(fieldName);\n+                Class fieldClass = field.getType();\n+                Class actionClass = Class.forName(\"javax.swing.Action\");\n+\n+                \/\/ Is the Field an Action?\n+                result = actionClass.isAssignableFrom(fieldClass);\n+            } catch (NoSuchFieldException pe) {\n+                \/\/ Not a bug if the fields are removed since their\n+                \/\/ type was a package private class!\n+                result = true;\n+            } catch (Exception iae) {\n+                System.out.println(\"Exception \" + iae);\n+            }\n+            return result;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/bug4207333.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.plaf.RootPaneUI;\n+\n+\/*\n+ * @test\n+ * @bug 4224113\n+ * @summary Tests the presence of RootPaneUI\n+ * @run main bug4224113\n+ *\/\n+\n+public class bug4224113 {\n+    public static class TestRootPaneUI extends RootPaneUI {\n+    }\n+\n+    public static void main(String[] args) {\n+        TestRootPaneUI r = new TestRootPaneUI();\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/bug4224113.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPanel;\n+import javax.swing.JRootPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+\/*\n+ * @test\n+ * @bug 4627806\n+ * @key headful\n+ * @summary MetalRootPaneUI calls validate() instead of revalidate()\n+ * @run main bug4627806\n+ *\/\n+\n+public class bug4627806 {\n+    private static JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Test\");\n+                JPanel p = new JPanel();\n+                JMenuItem c = new JMenuItem();\n+                p.add(c);\n+                frame.getContentPane().add(p);\n+                frame.pack();\n+                c.getUI().uninstallUI(c);\n+                JRootPane rootPane = frame.getRootPane();\n+                rootPane.getUI().uninstallUI(rootPane);\n+                System.out.println(\"Test Passed!\");\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/bug4627806.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @bug 4495822\n+ * @summary AdjustmentEvent.getValueIsAdjusting() always returns false\n+ * @run main bug4495822\n+ *\/\n+\n+public class bug4495822 {\n+    public static volatile boolean isAdjusted = false;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollBar scrollBar = new JScrollBar(JScrollBar.HORIZONTAL);\n+            scrollBar.addAdjustmentListener(new AdjustmentListener() {\n+                public void adjustmentValueChanged(AdjustmentEvent e) {\n+                    if (e.getValueIsAdjusting() != scrollBar.getValueIsAdjusting()) {\n+                        throw new RuntimeException(\"The AdjustmentEvent has incorrect \\\"valueIsAdjusting\\\" value\");\n+                    }\n+\n+                    isAdjusted = true;\n+                }\n+            });\n+\n+            scrollBar.setValueIsAdjusting(true);\n+        });\n+        Thread.sleep(1000);\n+        if (!isAdjusted) {\n+            throw new RuntimeException(\"adjustmentValueChanged() not invoked!\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4495822.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JComponent;\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.plaf.basic.BasicScrollBarUI;\n+import java.awt.Graphics;\n+import java.awt.Rectangle;\n+import java.awt.image.BufferedImage;\n+\n+\/*\n+ * @test\n+ * @bug 4696826\n+ * @summary BasicScrollBarUI should check if it needs to paint the thumb\n+ * @run main bug4696826\n+ *\/\n+\n+public class bug4696826 {\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollBar sb = new JScrollBar();\n+            sb.setBounds(new Rectangle(0, 0, 20, 20));\n+\n+            TestScrollBarUI ui = new TestScrollBarUI();\n+            sb.setUI(ui);\n+            ui.setThumbBounds(0, 0, 20, 20);\n+\n+            BufferedImage image = new BufferedImage(100, 100,\n+                    BufferedImage.TYPE_3BYTE_BGR);\n+            Graphics g = image.getGraphics();\n+            g.setClip(200, 200, 100, 100);\n+            sb.paint(g);\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+\n+    static class TestScrollBarUI extends BasicScrollBarUI {\n+        protected void paintThumb(Graphics g, JComponent c, Rectangle thumbBounds) {\n+            throw new RuntimeException(\"Thumb shouldn't be painted\");\n+        }\n+        public void setThumbBounds(int x, int y, int width, int height) {\n+            super.setThumbBounds(x, y, width, height);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4696826.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+import java.awt.Dimension;\n+import java.awt.event.MouseEvent;\n+import java.util.Date;\n+\n+\/*\n+ * @test\n+ * @bug 4842792\n+ * @summary JScrollBar behaves incorrectly if \"Block increment\" value is big enough\n+ * @run main bug4842792\n+ *\/\n+\n+public class bug4842792 {\n+    public static TestScrollBar scrollBar;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            scrollBar = new TestScrollBar(JScrollBar.HORIZONTAL, 10, 10, 0, 100);\n+            scrollBar.setPreferredSize(new Dimension(200, 20));\n+            scrollBar.setBlockIncrement(Integer.MAX_VALUE);\n+\n+            if (scrollBar.doTest() == 0) {\n+                throw new RuntimeException(\"The scrollbar new value should not be 0\");\n+            }\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+\n+    static class TestScrollBar extends JScrollBar {\n+        public TestScrollBar(int orientation, int value, int extent,\n+                             int min, int max) {\n+            super(orientation, value, extent, min, max);\n+        }\n+\n+        public int doTest() {\n+            MouseEvent mouseEvent = new MouseEvent(scrollBar,\n+                                           MouseEvent.MOUSE_PRESSED,\n+                                           (new Date()).getTime(),\n+                                           MouseEvent.BUTTON1_DOWN_MASK,\n+                                           150, 10, 1, true);\n+            processMouseEvent(mouseEvent);\n+            return scrollBar.getValue();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollBar\/bug4842792.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JScrollPane;\n+\n+\/*\n+ * @test\n+ * @bug 4247092\n+ * @summary JScrollPane.setCorner(corner,null) causes NPE, but defolt getCorner() rtns null\n+ * @run main bug4247092\n+ *\/\n+\n+public class bug4247092 {\n+    public static void main(String[] args) {\n+        JScrollPane sp = new JScrollPane();\n+        sp.setCorner(JScrollPane.LOWER_RIGHT_CORNER, null);\n+        if (sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER) != null) {\n+            throw new RuntimeException(\"The corner component should be null\");\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4247092.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import java.awt.BorderLayout;\n+import java.awt.Container;\n+import java.awt.Robot;\n+\n+\/*\n+ * @test\n+ * @bug 4264640\n+ * @summary Tests that JScrollPane sets correct position of its column header view\n+ * @key headful\n+ * @run main bug4264640\n+ *\/\n+\n+public class bug4264640 {\n+    public static JFrame frame;\n+    public static JButton b;\n+    public static Robot robot;\n+    public static volatile int yPos;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Scroll Pane test\");\n+                JScrollPane scroller = new JScrollPane();\n+                b = new JButton(\"This is BUG !\");\n+                b.setBounds(12, 12, 169, 133);\n+                scroller.setColumnHeaderView(b);\n+\n+                Container pane = frame.getContentPane();\n+                pane.setLayout(new BorderLayout());\n+                pane.add(scroller);\n+                frame.setSize(200,200);\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+               yPos = b.getY();\n+            });\n+            if (yPos != 0) {\n+                throw new RuntimeException(\"Failed: Y = \" + yPos + \" (should be 0)\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4264640.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import java.awt.ComponentOrientation;\n+\n+\/*\n+ * @test\n+ * @bug 4467063\n+ * @summary JScrollPane.setCorner() causes IllegalArgumentException. (invalid corner key)\n+ * @run main bug4467063\n+ *\/\n+\n+public class bug4467063 {\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            JScrollPane sp = new JScrollPane();\n+\n+            \/\/Test corners for left-to-right orientation\n+            sp.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+            sp.setCorner(JScrollPane.LOWER_LEADING_CORNER, new JButton(\"0\"));\n+            sp.setCorner(JScrollPane.LOWER_TRAILING_CORNER, new JButton(\"1\"));\n+            sp.setCorner(JScrollPane.UPPER_LEADING_CORNER, new JButton(\"2\"));\n+            sp.setCorner(JScrollPane.UPPER_TRAILING_CORNER, new JButton(\"3\"));\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_TRAILING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_TRAILING_CORNER value\");\n+            }\n+\n+            \/\/Test corners for right-to-left orientation\n+            sp.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+            sp.setCorner(JScrollPane.LOWER_LEADING_CORNER, new JButton(\"0\"));\n+            sp.setCorner(JScrollPane.LOWER_TRAILING_CORNER, new JButton(\"1\"));\n+            sp.setCorner(JScrollPane.UPPER_LEADING_CORNER, new JButton(\"2\"));\n+            sp.setCorner(JScrollPane.UPPER_TRAILING_CORNER, new JButton(\"3\"));\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.LOWER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.LOWER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect LOWER_TRAILING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_LEADING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_RIGHT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_LEADING_CORNER value\");\n+            }\n+\n+            if (!sp.getCorner(JScrollPane.UPPER_TRAILING_CORNER).equals(\n+                    sp.getCorner(JScrollPane.UPPER_LEFT_CORNER))) {\n+                throw new RuntimeException(\"Incorrect UPPER_TRAILING_CORNER value\");\n+            }\n+        });\n+        System.out.println(\"Test Passed!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JScrollPane\/bug4467063.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JSlider;\n+\n+\/*\n+ * @test\n+ * @bug 4200901\n+ * @summary Test to check if JSlider.createStandardLabels() throws Exception\n+ * @run main bug4200901\n+ *\/\n+\n+public class bug4200901 {\n+    public static void main(String[] args) {\n+        try {\n+            JSlider slider = new JSlider();\n+            slider.createStandardLabels( -1 );\n+        } catch ( IllegalArgumentException e ) {\n+            System.out.println(\"Test Passed!\");\n+            return;\n+        }\n+        throw new RuntimeException( \"TEST FAILED!\");\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSlider\/bug4200901.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,83 @@\n+\/*\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+import java.awt.FlowLayout;\n+import java.awt.Robot;\n+import java.util.Dictionary;\n+import java.util.Hashtable;\n+\n+\/*\n+ * @test\n+ * @bug 4203754\n+ * @key headful\n+ * @summary Labels in a JSlider don't disable or enable with the slider\n+ * @run main bug4203754\n+ *\/\n+\n+public class bug4203754 {\n+    private static JFrame frame;\n+    private static Robot robot;\n+    private static JLabel label;\n+\n+    public static void main(String[] argv) throws Exception {\n+        try {\n+            robot = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame(\"Test\");\n+                frame.getContentPane().setLayout(new FlowLayout());\n+                JSlider slider = new JSlider(0, 100, 25);\n+                frame.getContentPane().add(slider);\n+\n+                label = new JLabel(\"0\", JLabel.CENTER) {\n+                    public void setEnabled(boolean b) {\n+                        super.setEnabled(b);\n+                    }\n+                };\n+\n+                Dictionary labels = new Hashtable();\n+                labels.put(Integer.valueOf(0), label);\n+                slider.setLabelTable(labels);\n+                slider.setPaintLabels(true);\n+                slider.setEnabled(false);\n+                frame.setSize(250, 150);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            if (label.isEnabled()) {\n+                throw new RuntimeException(\"Label should be disabled\");\n+            }\n+            System.out.println(\"Test Passed!\");\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSlider\/bug4203754.java","additions":83,"deletions":0,"binary":false,"changes":83,"status":"added"},{"patch":"@@ -0,0 +1,295 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+\/* @test\n+ * @bug 8024624\n+ * @key headful\n+ * @requires (os.family != \"mac\")\n+ * @summary Tests some of JTable's key navigation\n+ * @run main JTableOrientationNavTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.ComponentOrientation;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.DefaultTableModel;\n+import javax.swing.table.TableModel;\n+\n+import static java.awt.event.KeyEvent.VK_CONTROL;\n+import static java.awt.event.KeyEvent.VK_LEFT;\n+import static java.awt.event.KeyEvent.VK_PAGE_DOWN;\n+import static java.awt.event.KeyEvent.VK_PAGE_UP;\n+import static java.awt.event.KeyEvent.VK_RIGHT;\n+import static java.awt.event.KeyEvent.VK_SHIFT;\n+\n+public class JTableOrientationNavTest {\n+    private static JFrame frame;\n+    private static JTable table;\n+    private static JScrollPane sp;\n+    private static Robot robot;\n+    private static boolean ltr = true;\n+\n+    public static void main(String[] args) throws InterruptedException, InvocationTargetException {\n+        try {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.setAutoWaitForIdle(true);\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                frame.add(createContentPane());\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+\n+            executeTest();\n+            setupRTL();\n+            executeTest();\n+\n+            System.out.println(\"Passed\");\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+        }\n+    }\n+\n+    private static TableModel getTableModel1() {\n+        String[] columnNames = {\"Column 0\", \"Column 1\", \"Column 2\",\n+                \"Column 3\", \"Column 4\"};\n+        String[][] data = {{\"Table 00, 00\", \"Table 00, 01\", \"Table 00, 02\",\n+                                    \"Table 00, 03\", \"Table 00, 04\"},\n+                           {\"Table 01, 00\", \"Table 01, 01\", \"Table 01, 02\",\n+                                   \"Table 01, 03\", \"Table 01, 04\"},\n+                           {\"Table 02, 00\", \"Table 02, 01\", \"Table 02, 02\",\n+                                   \"Table 02, 03\", \"Table 02, 04\"},\n+                           {\"Table 03, 00\", \"Table 03, 01\", \"Table 03, 02\",\n+                                   \"Table 03, 03\", \"Table 03, 04\"},\n+                           {\"Table 04, 00\", \"Table 04, 01\", \"Table 04, 02\",\n+                                   \"Table 04, 03\", \"Table 04, 04\"},\n+                           {\"Table 05, 00\", \"Table 05, 01\", \"Table 05, 02\",\n+                                   \"Table 05, 03\", \"Table 05, 04\"}};\n+\n+        return new DefaultTableModel(data, columnNames);\n+    }\n+\n+    private static TableModel getTableModel2() {\n+        String[] columnNames = new String[30];\n+        String[][] data = new String[1][30];\n+\n+        for (int i = 0; i < columnNames.length; i++) {\n+            columnNames[i] = \"Column \" + i;\n+            data[0][i] = \"Data \" + 1;\n+        }\n+\n+        return new DefaultTableModel(data, columnNames);\n+    }\n+\n+    private static Component createContentPane() {\n+        table = new JTable(getTableModel1());\n+        table.setCellSelectionEnabled(true);\n+        table.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);\n+        JPanel panel = new JPanel(new BorderLayout());\n+        sp = new JScrollPane(table);\n+        panel.add(sp);\n+        return panel;\n+    }\n+\n+    private static void executeTest() throws InterruptedException, InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            table.setRowSelectionInterval(0, 0);\n+            table.setColumnSelectionInterval(0, 0);\n+            checkSelection(0, 0);\n+        });\n+\n+        robot.keyPress(ltr ? VK_RIGHT : VK_LEFT);\n+        robot.keyRelease(ltr ? VK_RIGHT : VK_LEFT);\n+\n+        SwingUtilities.invokeAndWait(() -> checkSelection(1, 1));\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(ltr ? VK_RIGHT : VK_LEFT);\n+        robot.keyRelease(ltr ? VK_RIGHT : VK_LEFT);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(2, 1);\n+            table.setRowSelectionInterval(0, 0);\n+            table.setColumnSelectionInterval(4, 4);\n+            checkSelection(4, 4);\n+        });\n+\n+        robot.keyPress(ltr ? VK_LEFT : VK_RIGHT);\n+        robot.keyRelease(ltr ? VK_LEFT : VK_RIGHT);\n+\n+        SwingUtilities.invokeAndWait(() -> checkSelection(3, 3));\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(ltr ? VK_LEFT : VK_RIGHT);\n+        robot.keyRelease(ltr ? VK_LEFT : VK_RIGHT);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(2, 3);\n+            table.setColumnSelectionInterval(2, 2);\n+            checkSelection(2, 2);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_PAGE_UP);\n+        robot.keyRelease(VK_PAGE_UP);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(0, 0);\n+            table.setColumnSelectionInterval(2, 2);\n+            checkSelection(2, 2);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(4, 4);\n+            table.setColumnSelectionInterval(2, 2);\n+            checkSelection(2, 2);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_SHIFT);\n+        robot.keyPress(VK_PAGE_UP);\n+        robot.keyRelease(VK_PAGE_UP);\n+        robot.keyRelease(VK_SHIFT);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(0, 0, 1, 2);\n+            table.setColumnSelectionInterval(2, 2);\n+            checkSelection(2, 2);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_SHIFT);\n+        robot.keyPress(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_SHIFT);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(4, 2, 3, 4);\n+            table.setModel(getTableModel2());\n+            table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);\n+            table.setRowSelectionInterval(0, 0);\n+            table.setColumnSelectionInterval(0, 0);\n+            table.scrollRectToVisible(new Rectangle(ltr ? 0 : table.getWidth(), 0, 1, 1));\n+            checkSelection(0, 0);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_PAGE_DOWN);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            checkSelection(6, 6);\n+            table.setColumnSelectionInterval(29, 29);\n+            table.scrollRectToVisible(new Rectangle(ltr ? table.getWidth() : 0, 0, 1, 1));\n+            checkSelection(29, 29);\n+        });\n+\n+        robot.keyPress(VK_CONTROL);\n+        robot.keyPress(VK_PAGE_UP);\n+        robot.keyRelease(VK_PAGE_UP);\n+        robot.keyRelease(VK_CONTROL);\n+\n+        SwingUtilities.invokeAndWait(() -> checkSelection(23, 23));\n+\n+        System.out.println(\"Done with ltr: \" + ltr);\n+    }\n+\n+    private static void setupRTL() throws InterruptedException, InvocationTargetException {\n+        ltr = false;\n+        SwingUtilities.invokeAndWait(() -> {\n+            table.setModel(getTableModel1());\n+            table.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);\n+            sp.applyComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);\n+        });\n+    }\n+\n+    private static void checkSelection(int col, int... allCols) {\n+        int trow = table.getSelectionModel().getLeadSelectionIndex();\n+        int[] trows = table.getSelectedRows();\n+        int tcol = table.getColumnModel().getSelectionModel().getLeadSelectionIndex();\n+        int[] tcols = table.getSelectedColumns();\n+\n+        if (trow != 0) {\n+            throw new RuntimeException(\"Wrong lead row\");\n+        }\n+\n+        if (trows.length != 1 || trows[0] != 0) {\n+            throw new RuntimeException(\"Bad row selection\");\n+        }\n+\n+        if (col != tcol) {\n+            throw new RuntimeException(\"Wrong lead col\");\n+        }\n+\n+        if (allCols == null || allCols.length == 0) {\n+            if (tcols.length != 0) {\n+                throw new RuntimeException(\"Should be no cols selected\");\n+            }\n+        } else {\n+            Arrays.sort(tcols);\n+            Arrays.sort(allCols);\n+\n+            for (int c : allCols) {\n+                if (Arrays.binarySearch(tcols, c) < 0) {\n+                    throw new RuntimeException(\"Wrong column selection\");\n+                }\n+            }\n+\n+            for (int c : tcols) {\n+                if (Arrays.binarySearch(allCols, c) < 0) {\n+                    throw new RuntimeException(\"Wrong column selection\");\n+                }\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/JTableOrientationNavTest\/JTableOrientationNavTest.java","additions":295,"deletions":0,"binary":false,"changes":295,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.Shape;\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.View;\n+\n+\/*\n+ * @test\n+ * @bug 4174871\n+ * @key headful\n+ * @summary Tests if CELLSPACING attribute in HTML table is rendered.\n+ *\/\n+\n+public class bug4174871 {\n+    private static JFrame frame;\n+    private static JTextPane pane;\n+    private static volatile boolean passed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+\n+            SwingUtilities.invokeAndWait(bug4174871::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(bug4174871::testUI);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!!\" +\n+                        \" CELLSPACING attribute in HTML table is NOT rendered\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        pane = new JTextPane();\n+        pane.setContentType(\"text\/html\");\n+        pane.setText(\"<html>\"\n+                + \"<html><head><table border=1 cellspacing=20>\"\n+                + \"<tr><td width=100>one<\/td><td width=100>two<\/td><td width=100>three<\/td><\/tr>\"\n+                + \"<\/table><\/body><\/html>\");\n+\n+        frame = new JFrame(\"Table CellSpacing Test\");\n+        frame.getContentPane().add(pane);\n+        frame.setSize(600, 200);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void testUI() {\n+        int tableWidth = 0;\n+        Shape r = pane.getBounds();\n+        View v = pane.getUI().getRootView(pane);\n+\n+        while (!(v instanceof javax.swing.text.html.ParagraphView)) {\n+            int n = v.getViewCount();\n+            Shape sh = v.getChildAllocation(n - 1, r);\n+            String viewName = v.getClass().getName();\n+            if (viewName.endsWith(\"TableView\")) {\n+                tableWidth = r.getBounds().width;\n+            }\n+            v = v.getView(n - 1);\n+            if (sh != null) {\n+                r = sh;\n+            }\n+        }\n+        \/\/ tableWidth should be the sum of TD's widths (300)\n+        \/\/ and cellspacings (80)\n+        passed = (tableWidth >= 380);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug4174871.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.View;\n+import java.awt.Robot;\n+import java.awt.Shape;\n+\n+\/*\n+ * @test\n+ * @bug 4174874\n+ * @key headful\n+ * @summary  Tests if borders in HTML table are rendered\n+ *\/\n+\n+public class bug4174874 {\n+    private static JFrame frame;\n+    private static JTextPane pane;\n+    private static volatile boolean passed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+\n+            SwingUtilities.invokeAndWait(bug4174874::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(bug4174874::testUI);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!!\" +\n+                        \" Borders of HTML table not rendered correctly\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        pane = new JTextPane();\n+        pane.setContentType(\"text\/html\");\n+        pane.setText(\"<html>\"\n+                + \"<html><head><table border=20>\"\n+                + \"<tr><td width=100>one<\/td><td width=100>two<\/td><td width=100>three<\/td><\/tr>\"\n+                + \"<\/table><\/body><\/html>\");\n+\n+        frame = new JFrame(\"Table Border Test\");\n+        frame.getContentPane().add(pane);\n+        frame.setSize(600, 200);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void testUI() {\n+        Shape r = pane.getBounds();\n+        View v = pane.getUI().getRootView(pane);\n+        int tableWidth = 0;\n+        while (!(v instanceof javax.swing.text.html.ParagraphView)) {\n+            int n = v.getViewCount();\n+            Shape sh = v.getChildAllocation(n - 1,  r);\n+            String viewName = v.getClass().getName();\n+            if (viewName.endsWith(\"TableView\")) {\n+                tableWidth = r.getBounds().width;\n+            }\n+            v = v.getView(n - 1);\n+            if (sh != null) {\n+                r = sh;\n+            }\n+        }\n+        \/\/ tableWidth should be the sum of TD's widths (300)\n+        \/\/ and border width * 2 (40)\n+        passed = tableWidth >= 340;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug4174874.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.View;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+\n+\/*\n+ * @test\n+ * @bug 4284162\n+ * @key headful\n+ * @summary Tests if css text-indent attribute is supported with negative values.\n+ *\/\n+\n+public class bug4284162 {\n+    private static JEditorPane jep;\n+    private static JFrame frame;\n+    private static volatile boolean passed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+\n+            SwingUtilities.invokeAndWait(bug4284162::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(bug4284162::testUI);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!!\" +\n+                        \" CSS Text-indent attribute doesn't support negative values\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        String text =\"<html><head><style>body {text-indent: -24.000000pt;}<\/style><\/head>\"\n+                + \"<body><p>paragraph<\/body><\/html>\";\n+\n+        frame = new JFrame(\"CSS Text-Indent Test\");\n+        jep = new JEditorPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setEditable(false);\n+\n+        jep.setText(text);\n+\n+        frame.getContentPane().add(jep);\n+        frame.setSize(200, 200);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void testUI() {\n+        View v = jep.getUI().getRootView(jep);\n+        while (!(v instanceof javax.swing.text.html.ParagraphView)) {\n+            int n = v.getViewCount();\n+            v = v.getView(n - 1);\n+        }\n+\n+        AttributeSet attrs = v.getAttributes();\n+        Object attr = attrs.getAttribute(StyleConstants.FirstLineIndent);\n+        passed = (attr.toString().startsWith(\"-\"));\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug4284162.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Robot;\n+import java.awt.Shape;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.View;\n+\n+\/*\n+ * @test\n+ * @bug 4764897\n+ * @key headful\n+ * @summary Tests if text and borders in HTML table doesn't run over right edge\n+ *\/\n+\n+public class bug4764897 {\n+    private static JEditorPane pane;\n+    private static JFrame frame;\n+    private static volatile boolean passed = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+\n+            SwingUtilities.invokeAndWait(bug4764897::createAndShowUI);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            SwingUtilities.invokeAndWait(bug4764897::testUI);\n+\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!!\" +\n+                        \" Text and Borders of HTML table run over the right edge\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public static void createAndShowUI() {\n+        pane = new JTextPane();\n+        pane.setContentType(\"text\/html\");\n+        pane.setText(\"<html>\"\n+                + \"<html><head><table border>\"\n+                + \"<tr><td width=20%>one<\/td><td width=20%>&nbsp;<\/td>\"\n+                + \"<td width=20%>ThisIsAnExtraWideWord<\/td><td width=40%>\"\n+                + \"This is text that won't get displayed correctly.<\/td><\/tr>\"\n+                + \"<\/table><\/body><\/html>\");\n+\n+        frame = new JFrame(\"Table Border & Text Test\");\n+        frame.getContentPane().add(pane);\n+        frame.setSize(600, 200);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void testUI() {\n+        Shape r = pane.getBounds();\n+        View v = pane.getUI().getRootView(pane);\n+        int tableWidth = 0;\n+        int cellsWidth = 0;\n+        while (!(v instanceof javax.swing.text.html.ParagraphView)) {\n+            int n = v.getViewCount();\n+            Shape sh = v.getChildAllocation(n - 1, r);\n+            String viewName = v.getClass().getName();\n+            if (viewName.endsWith(\"TableView\")) {\n+                tableWidth = r.getBounds().width;\n+            }\n+\n+            if (viewName.endsWith(\"CellView\")) {\n+                cellsWidth = r.getBounds().x + r.getBounds().width;\n+            }\n+\n+            v = v.getView(n - 1);\n+            if (sh != null) {\n+                r = sh;\n+            }\n+        }\n+        passed = cellsWidth <= tableWidth;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/bug4764897.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JLabel;\n+\n+\/*\n+ * @test\n+ * @bug 4209280\n+ * @summary Tests that no exception is thrown on unknown HTML tag\n+ *\/\n+\n+public class bug4209280 {\n+\n+    public static void main(String[] args) throws Exception {\n+        String html = \"<html><bold>Foo<\/bold><\/html>\";\n+        \/\/ The following line should throw no exceptions\n+        new JLabel(html);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLDocument\/bug4209280.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * This class provide the template for JDK version specific GregorianCalendarAndDurationSerData.java src file.\n+ *\/\n+public class GregorianCalAndDurSerDataTemplate {\n+    public static final String ORACLE_COPY_RIGHT = \"\"\"\n+            \/*\n+             * Copyright (c) %s, Oracle and\/or its affiliates. All rights reserved.\n+             * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+             *\n+             * This code is free software; you can redistribute it and\/or modify it\n+             * under the terms of the GNU General Public License version 2 only, as\n+             * published by the Free Software Foundation.\n+             *\n+             * This code is distributed in the hope that it will be useful, but WITHOUT\n+             * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+             * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+             * version 2 for more details (a copy is included in the LICENSE file that\n+             * accompanied this code).\n+             *\n+             * You should have received a copy of the GNU General Public License version\n+             * 2 along with this work; if not, write to the Free Software Foundation,\n+             * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+             *\n+             * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+             * or visit www.oracle.com if you need additional information or have any\n+             * questions.\n+             *\/\n+             \\s\n+             \/**\n+              * Mechanically generated %s specific serialization bytes for XMLGregorianCalendar and Duration data type.\n+              * Do not edit this file.\n+              *\/\"\"\";\n+    public static final String GREGO_CAL_DUR_SER_CLASS = \"\"\"\n+            public class %sGregorianCalendarAndDurationSerData extends GregorianCalendarAndDurationSerData {\n+                %s\n+                %s\n+                @Override\n+                public byte[] getGregorianCalendarByteArray() {\n+                    return gregorianCalendarBytes;\n+                }\n+                \\s\n+                @Override\n+                public byte[] getDurationBytes() {\n+                    return durationBytes;\n+                }\n+            };\"\"\";\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/GregorianCalAndDurSerDataTemplate.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"},{"patch":"@@ -0,0 +1,141 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary utility to generate Gregorian Calendar and Duration serialized data java classes.\n+ * @run junit\/manual GregorianCalAndDurSerDataUtil\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.time.LocalDate;\n+import java.util.Formatter;\n+\n+import javax.xml.datatype.DatatypeConfigurationException;\n+import javax.xml.datatype.DatatypeFactory;\n+import javax.xml.datatype.Duration;\n+import javax.xml.datatype.XMLGregorianCalendar;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestInstance;\n+\n+\/**\n+ * Utility to generate the java source file for Gregorian Calendar and Duration serialized data\n+ * for specific version of JDK to be added in SerializationTest. Execute this test with desired version\n+ * of JDK to generate the java source file.\n+ *\/\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n+public class GregorianCalAndDurSerDataUtil {\n+    static String JDK = \"JDK\" + System.getProperty(\"java.version\");\n+    static String testsrc = System.getProperty(\"test.src\");\n+    final static String EXPECTED_CAL = \"0001-01-01T00:00:00.0000000-05:00\";\n+    final static String EXPECTED_DURATION = \"P1Y1M1DT1H1M1S\";\n+    String srcFilePrefix = JDK.toUpperCase().replace(\"-\", \"_\");\n+\n+\n+    \/**\n+     * Create the serialized Bytes array and serialized bytes base64 string for GregorianCalender and Duration\n+     * with jdk under test and generate the java source file.\n+     * @throws DatatypeConfigurationException Unexpected.\n+     * @throws IOException Unexpected.\n+     *\/\n+    @BeforeAll\n+    public void setup() throws DatatypeConfigurationException, IOException {\n+        DatatypeFactory dtf = DatatypeFactory.newInstance();\n+        XMLGregorianCalendar xmlGregorianCalendar = dtf.newXMLGregorianCalendar(EXPECTED_CAL);\n+        Duration duration = dtf.newDuration(EXPECTED_DURATION);\n+        String copyRightStr = GregorianCalAndDurSerDataTemplate.ORACLE_COPY_RIGHT;\n+        String classStr = GregorianCalAndDurSerDataTemplate.GREGO_CAL_DUR_SER_CLASS;\n+        try(ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos);\n+            ByteArrayOutputStream baos2 = new ByteArrayOutputStream(); ObjectOutputStream oos2 = new ObjectOutputStream(baos2)) {\n+            \/\/Serialize the given xmlGregorianCalendar\n+            oos.writeObject(xmlGregorianCalendar);\n+            \/\/Serialize the given xml Duration\n+            oos2.writeObject(duration);\n+            Files.deleteIfExists(Path.of(testsrc,srcFilePrefix+\"GregorianCalendarAndDurationSerData.java\"));\n+\n+            copyRightStr = String.format(copyRightStr, LocalDate.now().getYear(), JDK);\n+            classStr = String.format(classStr, srcFilePrefix, generatePseudoCodeForGregCalSerBytes(baos),\n+                    generatePseudoCodeForDurationSerBytes(baos2));\n+            String srcStr = copyRightStr + \"\\n\" + classStr;\n+            Files.writeString(Path.of(testsrc,srcFilePrefix+\"GregorianCalendarAndDurationSerData.java\"), srcStr);\n+        }\n+    }\n+\n+    \/**\n+     * Verify that Java source file is created.\n+     *\/\n+    @Test\n+    void testFileCreated() {\n+        assertTrue(Files.exists(Path.of(testsrc,srcFilePrefix+\"GregorianCalendarAndDurationSerData.java\")));\n+    }\n+\n+    \/**\n+     * Generates the Java Pseudo code for serialized Gregorian Calendar byte array.\n+     * @param baos Serialized GregorianCalendar ByteArrayOutputStream.\n+     * @return pseudocode String for serialized Gregorian Calendar byte array.\n+     *\/\n+    public static String generatePseudoCodeForGregCalSerBytes(ByteArrayOutputStream baos) {\n+        byte [] bytes = baos.toByteArray();\n+        StringBuilder sb = new StringBuilder(bytes.length * 5);\n+        sb.append(\"private final byte[] gregorianCalendarBytes = {\");\n+        return generatePseudoCode(sb, bytes);\n+    }\n+\n+    \/**\n+     * Generates the Java Pseudo code for serialized Duration byte array.\n+     * @param baos Serialized Duration ByteArrayOutputStream.\n+     * @return pseudocode String for serialized Duration byte array.\n+     *\/\n+    public static String generatePseudoCodeForDurationSerBytes(ByteArrayOutputStream baos) {\n+        byte [] bytesdur = baos.toByteArray();\n+        StringBuilder sb = new StringBuilder(bytesdur.length * 5);\n+        sb.append(\"private final byte[] durationBytes = {\");\n+        return generatePseudoCode(sb, bytesdur);\n+    }\n+\n+    private static String generatePseudoCode(StringBuilder sb, byte [] bytes) {\n+        final int linelen = 8;\n+\/\/        HexFormat hex = HexFormat.of().withPrefix(\" (byte) 0x\").withSuffix(\",\");\n+\/\/        for (int i = 0; i < bytes.length; i += linelen) {\n+\/\/            sb.append(\"\\n\");\n+\/\/            sb.append(hex.formatHex(bytes, i, Math.min(i + linelen, bytes.length)));\n+\/\/        }\n+\/\/        sb.append(\"};\");\n+        Formatter fmt = new Formatter(sb);\n+        for (int i = 0; i <bytes.length; i++) {\n+            if (i % linelen == 0) {\n+                fmt.format(\"%n           \");\n+            }\n+            fmt.format(\" (byte) 0x%x,\", bytes[i] & 0xff);\n+        }\n+        fmt.format(\"%n    };%n\");\n+        return sb.toString();\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/GregorianCalAndDurSerDataUtil.java","additions":141,"deletions":0,"binary":false,"changes":141,"status":"added"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Abstract class for serialized bytes of XMLGregorianCalendar and Duration data type for different JDK versions.\n+ *\/\n+public abstract class GregorianCalendarAndDurationSerData {\n+    \/\/Returns byte array of serialized GregorianCalendar.\n+    public abstract byte[] getGregorianCalendarByteArray();\n+\n+    \/\/Returns byte array of serialized Duration.\n+    public abstract byte[] getDurationBytes();\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/GregorianCalendarAndDurationSerData.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -0,0 +1,129 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Mechanically generated JDK 6 specific serialization bytes for XMLGregorianCalendar and Duration data type.\n+ * Do not edit this file.\n+ *\/\n+public class JDK6GregorianCalendarAndDurationSerData extends GregorianCalendarAndDurationSerData {\n+    private final byte[] gregorianCalendarBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x49,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x58, (byte) 0x4d, (byte) 0x4c, (byte) 0x47, (byte) 0x72, (byte) 0x65, (byte) 0x67,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x69, (byte) 0x61, (byte) 0x6e, (byte) 0x43, (byte) 0x61, (byte) 0x6c,\n+            (byte) 0x65, (byte) 0x6e, (byte) 0x64, (byte) 0x61, (byte) 0x72, (byte) 0x49, (byte) 0x6d, (byte) 0x70,\n+            (byte) 0x6c, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x9, (byte) 0x49, (byte) 0x0, (byte) 0x3, (byte) 0x64,\n+            (byte) 0x61, (byte) 0x79, (byte) 0x49, (byte) 0x0, (byte) 0x4, (byte) 0x68, (byte) 0x6f, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x6d, (byte) 0x69, (byte) 0x6e, (byte) 0x75,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x6d, (byte) 0x6f, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73, (byte) 0x65, (byte) 0x63,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x74, (byte) 0x69,\n+            (byte) 0x6d, (byte) 0x65, (byte) 0x7a, (byte) 0x6f, (byte) 0x6e, (byte) 0x65, (byte) 0x49, (byte) 0x0,\n+            (byte) 0x4, (byte) 0x79, (byte) 0x65, (byte) 0x61, (byte) 0x72, (byte) 0x4c, (byte) 0x0, (byte) 0x3,\n+            (byte) 0x65, (byte) 0x6f, (byte) 0x6e, (byte) 0x74, (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a,\n+            (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f, (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68,\n+            (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e, (byte) 0x74, (byte) 0x65,\n+            (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x3b, (byte) 0x4c, (byte) 0x0, (byte) 0x10, (byte) 0x66,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x63, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x53, (byte) 0x65, (byte) 0x63, (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x74,\n+            (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x3b,\n+            (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xfe, (byte) 0xd4, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x70, (byte) 0x73,\n+            (byte) 0x72, (byte) 0x0, (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x54,\n+            (byte) 0xc7, (byte) 0x15, (byte) 0x57, (byte) 0xf9, (byte) 0x81, (byte) 0x28, (byte) 0x4f, (byte) 0x3,\n+            (byte) 0x0, (byte) 0x2, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x65, (byte) 0x4c, (byte) 0x0, (byte) 0x6, (byte) 0x69, (byte) 0x6e, (byte) 0x74,\n+            (byte) 0x56, (byte) 0x61, (byte) 0x6c, (byte) 0x71, (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x1,\n+            (byte) 0x78, (byte) 0x72, (byte) 0x0, (byte) 0x10, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61,\n+            (byte) 0x2e, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2e, (byte) 0x4e, (byte) 0x75,\n+            (byte) 0x6d, (byte) 0x62, (byte) 0x65, (byte) 0x72, (byte) 0x86, (byte) 0xac, (byte) 0x95, (byte) 0x1d,\n+            (byte) 0xb, (byte) 0x94, (byte) 0xe0, (byte) 0x8b, (byte) 0x2, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x7, (byte) 0x73, (byte) 0x72, (byte) 0x0,\n+            (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e, (byte) 0x6d, (byte) 0x61,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x8c, (byte) 0xfc, (byte) 0x9f,\n+            (byte) 0x1f, (byte) 0xa9, (byte) 0x3b, (byte) 0xfb, (byte) 0x1d, (byte) 0x3, (byte) 0x0, (byte) 0x6,\n+            (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x62, (byte) 0x69, (byte) 0x74, (byte) 0x43, (byte) 0x6f,\n+            (byte) 0x75, (byte) 0x6e, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x9, (byte) 0x62, (byte) 0x69,\n+            (byte) 0x74, (byte) 0x4c, (byte) 0x65, (byte) 0x6e, (byte) 0x67, (byte) 0x74, (byte) 0x68, (byte) 0x49,\n+            (byte) 0x0, (byte) 0x13, (byte) 0x66, (byte) 0x69, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x4e,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x7a, (byte) 0x65, (byte) 0x72, (byte) 0x6f, (byte) 0x42, (byte) 0x79,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x4e, (byte) 0x75, (byte) 0x6d, (byte) 0x49, (byte) 0x0, (byte) 0xc,\n+            (byte) 0x6c, (byte) 0x6f, (byte) 0x77, (byte) 0x65, (byte) 0x73, (byte) 0x74, (byte) 0x53, (byte) 0x65,\n+            (byte) 0x74, (byte) 0x42, (byte) 0x69, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73,\n+            (byte) 0x69, (byte) 0x67, (byte) 0x6e, (byte) 0x75, (byte) 0x6d, (byte) 0x5b, (byte) 0x0, (byte) 0x9,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x67, (byte) 0x6e, (byte) 0x69, (byte) 0x74, (byte) 0x75, (byte) 0x64,\n+            (byte) 0x65, (byte) 0x74, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0x78, (byte) 0x71,\n+            (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x5, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x75, (byte) 0x72, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0xac, (byte) 0xf3,\n+            (byte) 0x17, (byte) 0xf8, (byte) 0x6, (byte) 0x8, (byte) 0x54, (byte) 0xe0, (byte) 0x2, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x78,\n+    };\n+    private final byte[] durationBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x4c,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x44, (byte) 0x75, (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f,\n+            (byte) 0x6e, (byte) 0x49, (byte) 0x6d, (byte) 0x70, (byte) 0x6c, (byte) 0x24, (byte) 0x44, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x53, (byte) 0x74,\n+            (byte) 0x72, (byte) 0x65, (byte) 0x61, (byte) 0x6d, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x1, (byte) 0x4c,\n+            (byte) 0x0, (byte) 0x7, (byte) 0x6c, (byte) 0x65, (byte) 0x78, (byte) 0x69, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x74, (byte) 0x0, (byte) 0x12, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76,\n+            (byte) 0x61, (byte) 0x2f, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2f, (byte) 0x53,\n+            (byte) 0x74, (byte) 0x72, (byte) 0x69, (byte) 0x6e, (byte) 0x67, (byte) 0x3b, (byte) 0x78, (byte) 0x70,\n+            (byte) 0x74, (byte) 0x0, (byte) 0xe, (byte) 0x50, (byte) 0x31, (byte) 0x59, (byte) 0x31, (byte) 0x4d,\n+            (byte) 0x31, (byte) 0x44, (byte) 0x54, (byte) 0x31, (byte) 0x48, (byte) 0x31, (byte) 0x4d, (byte) 0x31,\n+            (byte) 0x53,\n+    };\n+\n+\n+    @Override\n+    public byte[] getGregorianCalendarByteArray() {\n+        return gregorianCalendarBytes;\n+    }\n+\n+    @Override\n+    public byte[] getDurationBytes() {\n+        return durationBytes;\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK6GregorianCalendarAndDurationSerData.java","additions":129,"deletions":0,"binary":false,"changes":129,"status":"added"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK6_Duration.ser","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK6_XMLGregorianCalendar.ser","binary":true,"status":"deleted"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Mechanically generated JDK 7 specific serialization bytes for XMLGregorianCalendar and Duration data type.\n+ * Do not edit this file.\n+ *\/\n+public class JDK7GregorianCalendarAndDurationSerData extends GregorianCalendarAndDurationSerData {\n+    private final byte[] gregorianCalendarBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x49,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x58, (byte) 0x4d, (byte) 0x4c, (byte) 0x47, (byte) 0x72, (byte) 0x65, (byte) 0x67,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x69, (byte) 0x61, (byte) 0x6e, (byte) 0x43, (byte) 0x61, (byte) 0x6c,\n+            (byte) 0x65, (byte) 0x6e, (byte) 0x64, (byte) 0x61, (byte) 0x72, (byte) 0x49, (byte) 0x6d, (byte) 0x70,\n+            (byte) 0x6c, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x9, (byte) 0x49, (byte) 0x0, (byte) 0x3, (byte) 0x64,\n+            (byte) 0x61, (byte) 0x79, (byte) 0x49, (byte) 0x0, (byte) 0x4, (byte) 0x68, (byte) 0x6f, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x6d, (byte) 0x69, (byte) 0x6e, (byte) 0x75,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x6d, (byte) 0x6f, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73, (byte) 0x65, (byte) 0x63,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x74, (byte) 0x69,\n+            (byte) 0x6d, (byte) 0x65, (byte) 0x7a, (byte) 0x6f, (byte) 0x6e, (byte) 0x65, (byte) 0x49, (byte) 0x0,\n+            (byte) 0x4, (byte) 0x79, (byte) 0x65, (byte) 0x61, (byte) 0x72, (byte) 0x4c, (byte) 0x0, (byte) 0x3,\n+            (byte) 0x65, (byte) 0x6f, (byte) 0x6e, (byte) 0x74, (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a,\n+            (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f, (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68,\n+            (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e, (byte) 0x74, (byte) 0x65,\n+            (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x3b, (byte) 0x4c, (byte) 0x0, (byte) 0x10, (byte) 0x66,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x63, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x53, (byte) 0x65, (byte) 0x63, (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x74,\n+            (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x3b,\n+            (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xfe, (byte) 0xd4, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x70, (byte) 0x73,\n+            (byte) 0x72, (byte) 0x0, (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x54,\n+            (byte) 0xc7, (byte) 0x15, (byte) 0x57, (byte) 0xf9, (byte) 0x81, (byte) 0x28, (byte) 0x4f, (byte) 0x3,\n+            (byte) 0x0, (byte) 0x2, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x65, (byte) 0x4c, (byte) 0x0, (byte) 0x6, (byte) 0x69, (byte) 0x6e, (byte) 0x74,\n+            (byte) 0x56, (byte) 0x61, (byte) 0x6c, (byte) 0x71, (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x1,\n+            (byte) 0x78, (byte) 0x72, (byte) 0x0, (byte) 0x10, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61,\n+            (byte) 0x2e, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2e, (byte) 0x4e, (byte) 0x75,\n+            (byte) 0x6d, (byte) 0x62, (byte) 0x65, (byte) 0x72, (byte) 0x86, (byte) 0xac, (byte) 0x95, (byte) 0x1d,\n+            (byte) 0xb, (byte) 0x94, (byte) 0xe0, (byte) 0x8b, (byte) 0x2, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x7, (byte) 0x73, (byte) 0x72, (byte) 0x0,\n+            (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e, (byte) 0x6d, (byte) 0x61,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x8c, (byte) 0xfc, (byte) 0x9f,\n+            (byte) 0x1f, (byte) 0xa9, (byte) 0x3b, (byte) 0xfb, (byte) 0x1d, (byte) 0x3, (byte) 0x0, (byte) 0x6,\n+            (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x62, (byte) 0x69, (byte) 0x74, (byte) 0x43, (byte) 0x6f,\n+            (byte) 0x75, (byte) 0x6e, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x9, (byte) 0x62, (byte) 0x69,\n+            (byte) 0x74, (byte) 0x4c, (byte) 0x65, (byte) 0x6e, (byte) 0x67, (byte) 0x74, (byte) 0x68, (byte) 0x49,\n+            (byte) 0x0, (byte) 0x13, (byte) 0x66, (byte) 0x69, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x4e,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x7a, (byte) 0x65, (byte) 0x72, (byte) 0x6f, (byte) 0x42, (byte) 0x79,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x4e, (byte) 0x75, (byte) 0x6d, (byte) 0x49, (byte) 0x0, (byte) 0xc,\n+            (byte) 0x6c, (byte) 0x6f, (byte) 0x77, (byte) 0x65, (byte) 0x73, (byte) 0x74, (byte) 0x53, (byte) 0x65,\n+            (byte) 0x74, (byte) 0x42, (byte) 0x69, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73,\n+            (byte) 0x69, (byte) 0x67, (byte) 0x6e, (byte) 0x75, (byte) 0x6d, (byte) 0x5b, (byte) 0x0, (byte) 0x9,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x67, (byte) 0x6e, (byte) 0x69, (byte) 0x74, (byte) 0x75, (byte) 0x64,\n+            (byte) 0x65, (byte) 0x74, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0x78, (byte) 0x71,\n+            (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x5, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x75, (byte) 0x72, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0xac, (byte) 0xf3,\n+            (byte) 0x17, (byte) 0xf8, (byte) 0x6, (byte) 0x8, (byte) 0x54, (byte) 0xe0, (byte) 0x2, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x78,\n+    };\n+    private final byte[] durationBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x4c,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x44, (byte) 0x75, (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f,\n+            (byte) 0x6e, (byte) 0x49, (byte) 0x6d, (byte) 0x70, (byte) 0x6c, (byte) 0x24, (byte) 0x44, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x53, (byte) 0x74,\n+            (byte) 0x72, (byte) 0x65, (byte) 0x61, (byte) 0x6d, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x1, (byte) 0x4c,\n+            (byte) 0x0, (byte) 0x7, (byte) 0x6c, (byte) 0x65, (byte) 0x78, (byte) 0x69, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x74, (byte) 0x0, (byte) 0x12, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76,\n+            (byte) 0x61, (byte) 0x2f, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2f, (byte) 0x53,\n+            (byte) 0x74, (byte) 0x72, (byte) 0x69, (byte) 0x6e, (byte) 0x67, (byte) 0x3b, (byte) 0x78, (byte) 0x70,\n+            (byte) 0x74, (byte) 0x0, (byte) 0xe, (byte) 0x50, (byte) 0x31, (byte) 0x59, (byte) 0x31, (byte) 0x4d,\n+            (byte) 0x31, (byte) 0x44, (byte) 0x54, (byte) 0x31, (byte) 0x48, (byte) 0x31, (byte) 0x4d, (byte) 0x31,\n+            (byte) 0x53,\n+    };\n+    @Override\n+    public byte[] getGregorianCalendarByteArray() {\n+        return gregorianCalendarBytes;\n+    }\n+\n+    @Override\n+    public byte[] getDurationBytes() {\n+        return durationBytes;\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK7GregorianCalendarAndDurationSerData.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK7_Duration.ser","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK7_XMLGregorianCalendar.ser","binary":true,"status":"deleted"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Mechanically generated JDK 8 specific serialization bytes for XMLGregorianCalendar and Duration data type.\n+ * Do not edit this file.\n+ *\/\n+public class JDK8GregorianCalendarAndDurationSerData extends GregorianCalendarAndDurationSerData {\n+    private final byte[] gregorianCalendarBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x49,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x58, (byte) 0x4d, (byte) 0x4c, (byte) 0x47, (byte) 0x72, (byte) 0x65, (byte) 0x67,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x69, (byte) 0x61, (byte) 0x6e, (byte) 0x43, (byte) 0x61, (byte) 0x6c,\n+            (byte) 0x65, (byte) 0x6e, (byte) 0x64, (byte) 0x61, (byte) 0x72, (byte) 0x49, (byte) 0x6d, (byte) 0x70,\n+            (byte) 0x6c, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x9, (byte) 0x49, (byte) 0x0, (byte) 0x3, (byte) 0x64,\n+            (byte) 0x61, (byte) 0x79, (byte) 0x49, (byte) 0x0, (byte) 0x4, (byte) 0x68, (byte) 0x6f, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x6d, (byte) 0x69, (byte) 0x6e, (byte) 0x75,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x6d, (byte) 0x6f, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73, (byte) 0x65, (byte) 0x63,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x74, (byte) 0x69,\n+            (byte) 0x6d, (byte) 0x65, (byte) 0x7a, (byte) 0x6f, (byte) 0x6e, (byte) 0x65, (byte) 0x49, (byte) 0x0,\n+            (byte) 0x4, (byte) 0x79, (byte) 0x65, (byte) 0x61, (byte) 0x72, (byte) 0x4c, (byte) 0x0, (byte) 0x3,\n+            (byte) 0x65, (byte) 0x6f, (byte) 0x6e, (byte) 0x74, (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a,\n+            (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f, (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68,\n+            (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e, (byte) 0x74, (byte) 0x65,\n+            (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x3b, (byte) 0x4c, (byte) 0x0, (byte) 0x10, (byte) 0x66,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x63, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x53, (byte) 0x65, (byte) 0x63, (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x74,\n+            (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x3b,\n+            (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xfe, (byte) 0xd4, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x70, (byte) 0x73,\n+            (byte) 0x72, (byte) 0x0, (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x54,\n+            (byte) 0xc7, (byte) 0x15, (byte) 0x57, (byte) 0xf9, (byte) 0x81, (byte) 0x28, (byte) 0x4f, (byte) 0x3,\n+            (byte) 0x0, (byte) 0x2, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x65, (byte) 0x4c, (byte) 0x0, (byte) 0x6, (byte) 0x69, (byte) 0x6e, (byte) 0x74,\n+            (byte) 0x56, (byte) 0x61, (byte) 0x6c, (byte) 0x71, (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x1,\n+            (byte) 0x78, (byte) 0x72, (byte) 0x0, (byte) 0x10, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61,\n+            (byte) 0x2e, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2e, (byte) 0x4e, (byte) 0x75,\n+            (byte) 0x6d, (byte) 0x62, (byte) 0x65, (byte) 0x72, (byte) 0x86, (byte) 0xac, (byte) 0x95, (byte) 0x1d,\n+            (byte) 0xb, (byte) 0x94, (byte) 0xe0, (byte) 0x8b, (byte) 0x2, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x7, (byte) 0x73, (byte) 0x72, (byte) 0x0,\n+            (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e, (byte) 0x6d, (byte) 0x61,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x8c, (byte) 0xfc, (byte) 0x9f,\n+            (byte) 0x1f, (byte) 0xa9, (byte) 0x3b, (byte) 0xfb, (byte) 0x1d, (byte) 0x3, (byte) 0x0, (byte) 0x6,\n+            (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x62, (byte) 0x69, (byte) 0x74, (byte) 0x43, (byte) 0x6f,\n+            (byte) 0x75, (byte) 0x6e, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x9, (byte) 0x62, (byte) 0x69,\n+            (byte) 0x74, (byte) 0x4c, (byte) 0x65, (byte) 0x6e, (byte) 0x67, (byte) 0x74, (byte) 0x68, (byte) 0x49,\n+            (byte) 0x0, (byte) 0x13, (byte) 0x66, (byte) 0x69, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x4e,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x7a, (byte) 0x65, (byte) 0x72, (byte) 0x6f, (byte) 0x42, (byte) 0x79,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x4e, (byte) 0x75, (byte) 0x6d, (byte) 0x49, (byte) 0x0, (byte) 0xc,\n+            (byte) 0x6c, (byte) 0x6f, (byte) 0x77, (byte) 0x65, (byte) 0x73, (byte) 0x74, (byte) 0x53, (byte) 0x65,\n+            (byte) 0x74, (byte) 0x42, (byte) 0x69, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73,\n+            (byte) 0x69, (byte) 0x67, (byte) 0x6e, (byte) 0x75, (byte) 0x6d, (byte) 0x5b, (byte) 0x0, (byte) 0x9,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x67, (byte) 0x6e, (byte) 0x69, (byte) 0x74, (byte) 0x75, (byte) 0x64,\n+            (byte) 0x65, (byte) 0x74, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0x78, (byte) 0x71,\n+            (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x5, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x75, (byte) 0x72, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0xac, (byte) 0xf3,\n+            (byte) 0x17, (byte) 0xf8, (byte) 0x6, (byte) 0x8, (byte) 0x54, (byte) 0xe0, (byte) 0x2, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x78,\n+    };\n+    private final byte[] durationBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x4c,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x44, (byte) 0x75, (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f,\n+            (byte) 0x6e, (byte) 0x49, (byte) 0x6d, (byte) 0x70, (byte) 0x6c, (byte) 0x24, (byte) 0x44, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x53, (byte) 0x74,\n+            (byte) 0x72, (byte) 0x65, (byte) 0x61, (byte) 0x6d, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x1, (byte) 0x4c,\n+            (byte) 0x0, (byte) 0x7, (byte) 0x6c, (byte) 0x65, (byte) 0x78, (byte) 0x69, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x74, (byte) 0x0, (byte) 0x12, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76,\n+            (byte) 0x61, (byte) 0x2f, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2f, (byte) 0x53,\n+            (byte) 0x74, (byte) 0x72, (byte) 0x69, (byte) 0x6e, (byte) 0x67, (byte) 0x3b, (byte) 0x78, (byte) 0x70,\n+            (byte) 0x74, (byte) 0x0, (byte) 0xe, (byte) 0x50, (byte) 0x31, (byte) 0x59, (byte) 0x31, (byte) 0x4d,\n+            (byte) 0x31, (byte) 0x44, (byte) 0x54, (byte) 0x31, (byte) 0x48, (byte) 0x31, (byte) 0x4d, (byte) 0x31,\n+            (byte) 0x53,\n+    };\n+\n+    @Override\n+    public byte[] getGregorianCalendarByteArray() {\n+        return gregorianCalendarBytes;\n+    }\n+\n+    @Override\n+    public byte[] getDurationBytes() {\n+        return durationBytes;\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK8GregorianCalendarAndDurationSerData.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK8_Duration.ser","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK8_XMLGregorianCalendar.ser","binary":true,"status":"deleted"},{"patch":"@@ -0,0 +1,127 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Mechanically generated JDK 9 specific serialization bytes for XMLGregorianCalendar and Duration data type.\n+ * Do not edit this file.\n+ *\/\n+public class JDK9GregorianCalendarAndDurationSerData extends GregorianCalendarAndDurationSerData {\n+    private final byte[] gregorianCalendarBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x49,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x58, (byte) 0x4d, (byte) 0x4c, (byte) 0x47, (byte) 0x72, (byte) 0x65, (byte) 0x67,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x69, (byte) 0x61, (byte) 0x6e, (byte) 0x43, (byte) 0x61, (byte) 0x6c,\n+            (byte) 0x65, (byte) 0x6e, (byte) 0x64, (byte) 0x61, (byte) 0x72, (byte) 0x49, (byte) 0x6d, (byte) 0x70,\n+            (byte) 0x6c, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x9, (byte) 0x49, (byte) 0x0, (byte) 0x3, (byte) 0x64,\n+            (byte) 0x61, (byte) 0x79, (byte) 0x49, (byte) 0x0, (byte) 0x4, (byte) 0x68, (byte) 0x6f, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x6d, (byte) 0x69, (byte) 0x6e, (byte) 0x75,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x6d, (byte) 0x6f, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73, (byte) 0x65, (byte) 0x63,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x74, (byte) 0x69,\n+            (byte) 0x6d, (byte) 0x65, (byte) 0x7a, (byte) 0x6f, (byte) 0x6e, (byte) 0x65, (byte) 0x49, (byte) 0x0,\n+            (byte) 0x4, (byte) 0x79, (byte) 0x65, (byte) 0x61, (byte) 0x72, (byte) 0x4c, (byte) 0x0, (byte) 0x3,\n+            (byte) 0x65, (byte) 0x6f, (byte) 0x6e, (byte) 0x74, (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a,\n+            (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f, (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68,\n+            (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e, (byte) 0x74, (byte) 0x65,\n+            (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x3b, (byte) 0x4c, (byte) 0x0, (byte) 0x10, (byte) 0x66,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x63, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x53, (byte) 0x65, (byte) 0x63, (byte) 0x6f, (byte) 0x6e, (byte) 0x64, (byte) 0x74,\n+            (byte) 0x0, (byte) 0x16, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2f,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2f, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x3b,\n+            (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x1, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xfe, (byte) 0xd4, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x70, (byte) 0x73,\n+            (byte) 0x72, (byte) 0x0, (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67,\n+            (byte) 0x44, (byte) 0x65, (byte) 0x63, (byte) 0x69, (byte) 0x6d, (byte) 0x61, (byte) 0x6c, (byte) 0x54,\n+            (byte) 0xc7, (byte) 0x15, (byte) 0x57, (byte) 0xf9, (byte) 0x81, (byte) 0x28, (byte) 0x4f, (byte) 0x3,\n+            (byte) 0x0, (byte) 0x2, (byte) 0x49, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x65, (byte) 0x4c, (byte) 0x0, (byte) 0x6, (byte) 0x69, (byte) 0x6e, (byte) 0x74,\n+            (byte) 0x56, (byte) 0x61, (byte) 0x6c, (byte) 0x71, (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x1,\n+            (byte) 0x78, (byte) 0x72, (byte) 0x0, (byte) 0x10, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61,\n+            (byte) 0x2e, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2e, (byte) 0x4e, (byte) 0x75,\n+            (byte) 0x6d, (byte) 0x62, (byte) 0x65, (byte) 0x72, (byte) 0x86, (byte) 0xac, (byte) 0x95, (byte) 0x1d,\n+            (byte) 0xb, (byte) 0x94, (byte) 0xe0, (byte) 0x8b, (byte) 0x2, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x7, (byte) 0x73, (byte) 0x72, (byte) 0x0,\n+            (byte) 0x14, (byte) 0x6a, (byte) 0x61, (byte) 0x76, (byte) 0x61, (byte) 0x2e, (byte) 0x6d, (byte) 0x61,\n+            (byte) 0x74, (byte) 0x68, (byte) 0x2e, (byte) 0x42, (byte) 0x69, (byte) 0x67, (byte) 0x49, (byte) 0x6e,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x67, (byte) 0x65, (byte) 0x72, (byte) 0x8c, (byte) 0xfc, (byte) 0x9f,\n+            (byte) 0x1f, (byte) 0xa9, (byte) 0x3b, (byte) 0xfb, (byte) 0x1d, (byte) 0x3, (byte) 0x0, (byte) 0x6,\n+            (byte) 0x49, (byte) 0x0, (byte) 0x8, (byte) 0x62, (byte) 0x69, (byte) 0x74, (byte) 0x43, (byte) 0x6f,\n+            (byte) 0x75, (byte) 0x6e, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x9, (byte) 0x62, (byte) 0x69,\n+            (byte) 0x74, (byte) 0x4c, (byte) 0x65, (byte) 0x6e, (byte) 0x67, (byte) 0x74, (byte) 0x68, (byte) 0x49,\n+            (byte) 0x0, (byte) 0x13, (byte) 0x66, (byte) 0x69, (byte) 0x72, (byte) 0x73, (byte) 0x74, (byte) 0x4e,\n+            (byte) 0x6f, (byte) 0x6e, (byte) 0x7a, (byte) 0x65, (byte) 0x72, (byte) 0x6f, (byte) 0x42, (byte) 0x79,\n+            (byte) 0x74, (byte) 0x65, (byte) 0x4e, (byte) 0x75, (byte) 0x6d, (byte) 0x49, (byte) 0x0, (byte) 0xc,\n+            (byte) 0x6c, (byte) 0x6f, (byte) 0x77, (byte) 0x65, (byte) 0x73, (byte) 0x74, (byte) 0x53, (byte) 0x65,\n+            (byte) 0x74, (byte) 0x42, (byte) 0x69, (byte) 0x74, (byte) 0x49, (byte) 0x0, (byte) 0x6, (byte) 0x73,\n+            (byte) 0x69, (byte) 0x67, (byte) 0x6e, (byte) 0x75, (byte) 0x6d, (byte) 0x5b, (byte) 0x0, (byte) 0x9,\n+            (byte) 0x6d, (byte) 0x61, (byte) 0x67, (byte) 0x6e, (byte) 0x69, (byte) 0x74, (byte) 0x75, (byte) 0x64,\n+            (byte) 0x65, (byte) 0x74, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0x78, (byte) 0x71,\n+            (byte) 0x0, (byte) 0x7e, (byte) 0x0, (byte) 0x5, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe,\n+            (byte) 0xff, (byte) 0xff, (byte) 0xff, (byte) 0xfe, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x75, (byte) 0x72, (byte) 0x0, (byte) 0x2, (byte) 0x5b, (byte) 0x42, (byte) 0xac, (byte) 0xf3,\n+            (byte) 0x17, (byte) 0xf8, (byte) 0x6, (byte) 0x8, (byte) 0x54, (byte) 0xe0, (byte) 0x2, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x78, (byte) 0x70, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x78,\n+            (byte) 0x78,\n+    };\n+    private final byte[] durationBytes = {\n+            (byte) 0xac, (byte) 0xed, (byte) 0x0, (byte) 0x5, (byte) 0x73, (byte) 0x72, (byte) 0x0, (byte) 0x4c,\n+            (byte) 0x63, (byte) 0x6f, (byte) 0x6d, (byte) 0x2e, (byte) 0x73, (byte) 0x75, (byte) 0x6e, (byte) 0x2e,\n+            (byte) 0x6f, (byte) 0x72, (byte) 0x67, (byte) 0x2e, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x63,\n+            (byte) 0x68, (byte) 0x65, (byte) 0x2e, (byte) 0x78, (byte) 0x65, (byte) 0x72, (byte) 0x63, (byte) 0x65,\n+            (byte) 0x73, (byte) 0x2e, (byte) 0x69, (byte) 0x6e, (byte) 0x74, (byte) 0x65, (byte) 0x72, (byte) 0x6e,\n+            (byte) 0x61, (byte) 0x6c, (byte) 0x2e, (byte) 0x6a, (byte) 0x61, (byte) 0x78, (byte) 0x70, (byte) 0x2e,\n+            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x74, (byte) 0x79, (byte) 0x70, (byte) 0x65,\n+            (byte) 0x2e, (byte) 0x44, (byte) 0x75, (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f,\n+            (byte) 0x6e, (byte) 0x49, (byte) 0x6d, (byte) 0x70, (byte) 0x6c, (byte) 0x24, (byte) 0x44, (byte) 0x75,\n+            (byte) 0x72, (byte) 0x61, (byte) 0x74, (byte) 0x69, (byte) 0x6f, (byte) 0x6e, (byte) 0x53, (byte) 0x74,\n+            (byte) 0x72, (byte) 0x65, (byte) 0x61, (byte) 0x6d, (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x0,\n+            (byte) 0x0, (byte) 0x0, (byte) 0x0, (byte) 0x1, (byte) 0x2, (byte) 0x0, (byte) 0x1, (byte) 0x4c,\n+            (byte) 0x0, (byte) 0x7, (byte) 0x6c, (byte) 0x65, (byte) 0x78, (byte) 0x69, (byte) 0x63, (byte) 0x61,\n+            (byte) 0x6c, (byte) 0x74, (byte) 0x0, (byte) 0x12, (byte) 0x4c, (byte) 0x6a, (byte) 0x61, (byte) 0x76,\n+            (byte) 0x61, (byte) 0x2f, (byte) 0x6c, (byte) 0x61, (byte) 0x6e, (byte) 0x67, (byte) 0x2f, (byte) 0x53,\n+            (byte) 0x74, (byte) 0x72, (byte) 0x69, (byte) 0x6e, (byte) 0x67, (byte) 0x3b, (byte) 0x78, (byte) 0x70,\n+            (byte) 0x74, (byte) 0x0, (byte) 0xe, (byte) 0x50, (byte) 0x31, (byte) 0x59, (byte) 0x31, (byte) 0x4d,\n+            (byte) 0x31, (byte) 0x44, (byte) 0x54, (byte) 0x31, (byte) 0x48, (byte) 0x31, (byte) 0x4d, (byte) 0x31,\n+            (byte) 0x53,\n+    };\n+    @Override\n+    public byte[] getGregorianCalendarByteArray() {\n+        return gregorianCalendarBytes;\n+    }\n+\n+    @Override\n+    public byte[] getDurationBytes() {\n+        return durationBytes;\n+    }\n+}\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK9GregorianCalendarAndDurationSerData.java","additions":127,"deletions":0,"binary":false,"changes":127,"status":"added"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK9_Duration.ser","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/JDK9_XMLGregorianCalendar.ser","binary":true,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @run main SerializationTest read\n+ * @run junit SerializationTest\n@@ -31,1 +31,7 @@\n-import java.io.*;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.stream.Stream;\n+\n@@ -37,0 +43,7 @@\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+\n@@ -38,7 +51,1 @@\n- * use \"read\" to test compatibility\n- * SerializationTest read\n- *\n- * use \"write\" to create test files\n- * SerializationTest write javaVersion\n- * where javaVersion is 6, 7, 8, or 9\n- *\n+ * Verify serialization compatibility for XMLGregorianCalendar and Duration\n@@ -47,0 +54,1 @@\n+@TestInstance(TestInstance.Lifecycle.PER_CLASS)\n@@ -49,12 +57,0 @@\n-    final String FILENAME_CAL = \"_XMLGregorianCalendar.ser\";\n-    final String FILENAME_DURATION = \"_Duration.ser\";\n-    String filePath;\n-\n-    {\n-        filePath = System.getProperty(\"test.src\");\n-        if (filePath == null) {\n-            \/\/current directory\n-            filePath = System.getProperty(\"user.dir\");\n-        }\n-        filePath += File.separator;\n-    }\n@@ -63,13 +59,1 @@\n-    static String[] JDK = {\"JDK6\", \"JDK7\", \"JDK8\", \"JDK9\"};\n-\n-    public static void main(String[] args) {\n-        SerializationTest test = new SerializationTest();\n-\n-        if (args[0].equalsIgnoreCase(\"read\")) {\n-            test.testReadCal();\n-            test.testReadDuration();\n-            test.report();\n-        } else {\n-            int ver = Integer.valueOf(args[1]).intValue();\n-            test.createTestFile(JDK[ver - 6]);\n-        }\n+    static String[] JDK = {System.getProperty(\"java.version\"), \"JDK6\", \"JDK7\", \"JDK8\", \"JDK9\"};\n@@ -77,1 +61,4 @@\n-    }\n+    \/\/ If needed to add serialized data of more JDK versions, serialized data source file can be generated using\n+    \/\/ GregorianCalAndDurSerDataUtil class.\n+    private GregorianCalendarAndDurationSerData[] gregorianCalendarAndDurationSerData = {null, new JDK6GregorianCalendarAndDurationSerData(),\n+    new JDK7GregorianCalendarAndDurationSerData(), new JDK8GregorianCalendarAndDurationSerData(), new JDK9GregorianCalendarAndDurationSerData()};\n@@ -79,11 +66,22 @@\n-    public void testReadCal() {\n-        try {\n-            for (String javaVersion : JDK) {\n-                XMLGregorianCalendar d1 = (XMLGregorianCalendar) fromFile(\n-                        javaVersion + FILENAME_CAL);\n-                if (!d1.toString().equalsIgnoreCase(EXPECTED_CAL)) {\n-                    fail(\"Java version: \" + javaVersion\n-                            + \"\\nExpected: \" + EXPECTED_CAL\n-                            + \"\\nActual: \" + d1.toString());\n-                } else {\n-                    success(\"testReadCal: read \" + javaVersion + \" serialized file, passed.\");\n+    \/**\n+     * Create the serialized Bytes array and serialized bytes base64 string for GregorianCalender and Duration\n+     * with jdk under test.\n+     * @throws DatatypeConfigurationException Unexpected.\n+     * @throws IOException Unexpected.\n+     *\/\n+    @BeforeAll\n+    public void setup() throws DatatypeConfigurationException, IOException {\n+        DatatypeFactory dtf = DatatypeFactory.newInstance();\n+        XMLGregorianCalendar xmlGregorianCalendar = dtf.newXMLGregorianCalendar(EXPECTED_CAL);\n+        Duration duration = dtf.newDuration(EXPECTED_DURATION);\n+        try(ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos);\n+            ByteArrayOutputStream baos2 = new ByteArrayOutputStream(); ObjectOutputStream oos2 = new ObjectOutputStream(baos2)) {\n+            \/\/Serialize the given xmlGregorianCalendar\n+            oos.writeObject(xmlGregorianCalendar);\n+            \/\/Serialize the given xml Duration\n+            oos2.writeObject(duration);\n+            \/\/ Create the Data for JDK under test.\n+            gregorianCalendarAndDurationSerData[0] = new GregorianCalendarAndDurationSerData() {\n+                @Override\n+                public byte[] getGregorianCalendarByteArray() {\n+                    return baos.toByteArray();\n@@ -91,7 +89,0 @@\n-            }\n-        } catch (ClassNotFoundException ex) {\n-            fail(\"testReadCal: \" + ex.getMessage());\n-        } catch (IOException ex) {\n-            fail(\"testReadCal: \" + ex.getMessage());\n-        }\n-    }\n@@ -99,11 +90,3 @@\n-    public void testReadDuration() {\n-        try {\n-            for (String javaVersion : JDK) {\n-                Duration d1 = (Duration) fromFile(\n-                        javaVersion + FILENAME_DURATION);\n-                if (!d1.toString().equalsIgnoreCase(EXPECTED_DURATION)) {\n-                    fail(\"Java version: \" + javaVersion\n-                            + \"\\nExpected: \" + EXPECTED_DURATION\n-                            + \"\\nActual: \" + d1.toString());\n-                } else {\n-                    success(\"testReadDuration: read \" + javaVersion + \" serialized file, passed.\");\n+                @Override\n+                public byte[] getDurationBytes() {\n+                    return baos2.toByteArray();\n@@ -111,5 +94,1 @@\n-            }\n-        } catch (ClassNotFoundException ex) {\n-            fail(\"testReadDuration: \" + ex.getMessage());\n-        } catch (IOException ex) {\n-            fail(\"testReadDuration: \" + ex.getMessage());\n+            };\n@@ -120,3 +99,4 @@\n-     * Create test files\n-     *\n-     * @param javaVersion JDK version\n+     * Provide data for JDK version and Gregorian Calendar serialized bytes.\n+     * @return A Stream of arguments where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Gregorian Calendar as string.\n@@ -124,10 +104,9 @@\n-    public void createTestFile(String javaVersion) {\n-        try {\n-            DatatypeFactory dtf = DatatypeFactory.newInstance();\n-            XMLGregorianCalendar c = dtf.newXMLGregorianCalendar(EXPECTED_CAL);\n-            Duration d = dtf.newDuration(EXPECTED_DURATION);\n-            toFile((Serializable) c, filePath + javaVersion + FILENAME_CAL);\n-            toFile((Serializable) d, filePath + javaVersion + FILENAME_DURATION);\n-        } catch (Exception e) {\n-            fail(e.getMessage());\n-        }\n+\n+    public Stream<Arguments> gregorianCalendarDataBytes() {\n+        return Stream.of(\n+                Arguments.of(JDK[0], gregorianCalendarAndDurationSerData[0], EXPECTED_CAL),\n+                Arguments.of(JDK[1], gregorianCalendarAndDurationSerData[1], EXPECTED_CAL),\n+                Arguments.of(JDK[2], gregorianCalendarAndDurationSerData[2], EXPECTED_CAL),\n+                Arguments.of(JDK[3], gregorianCalendarAndDurationSerData[3], EXPECTED_CAL),\n+                Arguments.of(JDK[4], gregorianCalendarAndDurationSerData[4], EXPECTED_CAL)\n+        );\n@@ -137,1 +116,4 @@\n-     * Read the object from a file.\n+     * Provide data for JDK version and Duration serialized bytes.\n+     * @return A Stream of arguments where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Duration as string.\n@@ -139,7 +121,7 @@\n-    private static Object fromFile(String filePath) throws IOException,\n-            ClassNotFoundException {\n-        InputStream streamIn = SerializationTest.class.getResourceAsStream(\n-            filePath);\n-        ObjectInputStream objectinputstream = new ObjectInputStream(streamIn);\n-        Object o = objectinputstream.readObject();\n-        return o;\n+\n+    public Stream<Arguments> durationData() {\n+        return Stream.of(Arguments.of(JDK[0], gregorianCalendarAndDurationSerData[0], EXPECTED_DURATION),\n+                Arguments.of(JDK[1], gregorianCalendarAndDurationSerData[1], EXPECTED_DURATION),\n+                Arguments.of(JDK[2], gregorianCalendarAndDurationSerData[2], EXPECTED_DURATION),\n+                Arguments.of(JDK[3], gregorianCalendarAndDurationSerData[3], EXPECTED_DURATION),\n+                Arguments.of(JDK[4], gregorianCalendarAndDurationSerData[4], EXPECTED_DURATION));\n@@ -149,1 +131,7 @@\n-     * Write the object to a file.\n+     * Verify that GregorianCalendar serialized with different old JDK versions can be deserialized correctly with\n+     * JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param gregorianDate String representation of GregorianCalendar Date.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n@@ -151,18 +139,0 @@\n-    private static void toFile(Serializable o, String filePath) throws IOException {\n-        FileOutputStream fout = new FileOutputStream(filePath, true);\n-        ObjectOutputStream oos = new ObjectOutputStream(fout);\n-        oos.writeObject(o);\n-        oos.close();\n-    }\n-\n-    static String errMessage;\n-    int passed = 0, failed = 0;\n-\n-    void fail(String errMsg) {\n-        if (errMessage == null) {\n-            errMessage = errMsg;\n-        } else {\n-            errMessage = errMessage + \"\\n\" + errMsg;\n-        }\n-        failed++;\n-    }\n@@ -170,3 +140,8 @@\n-    void success(String msg) {\n-        passed++;\n-        System.out.println(msg);\n+    @ParameterizedTest\n+    @MethodSource(\"gregorianCalendarDataBytes\")\n+    public void testReadCalBytes(String javaVersion, GregorianCalendarAndDurationSerData gcsd, String gregorianDate) throws IOException,\n+            ClassNotFoundException {\n+        final ByteArrayInputStream bais = new ByteArrayInputStream(gcsd.getGregorianCalendarByteArray());\n+        final ObjectInputStream ois = new ObjectInputStream(bais);\n+        final XMLGregorianCalendar xgc = (XMLGregorianCalendar) ois.readObject();\n+        assertEquals(gregorianDate, xgc.toString());\n@@ -175,4 +150,9 @@\n-    public void report() {\n-\n-        System.out.println(\"\\nNumber of tests passed: \" + passed);\n-        System.out.println(\"Number of tests failed: \" + failed + \"\\n\");\n+    \/**\n+     * Verify that Duration serialized with different old JDK versions can be deserialized correctly with\n+     * JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param duration String representation of Duration.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n+     *\/\n@@ -180,3 +160,8 @@\n-        if (errMessage != null) {\n-            throw new RuntimeException(errMessage);\n-        }\n+    @ParameterizedTest\n+    @MethodSource(\"durationData\")\n+    public void testReadDurationBytes(String javaVersion, GregorianCalendarAndDurationSerData gcsd, String duration) throws IOException,\n+            ClassNotFoundException {\n+        final ByteArrayInputStream bais = new ByteArrayInputStream(gcsd.getDurationBytes());\n+        final ObjectInputStream ois = new ObjectInputStream(bais);\n+        final Duration d1 = (Duration) ois.readObject();\n+        assertEquals(duration, d1.toString().toUpperCase());\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/SerializationTest.java","additions":105,"deletions":120,"binary":false,"changes":225,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            Events.assertField(event1, \"invokedConcurrent\").isEqual(concurrent);\n+            Events.assertField(event2, \"invokedConcurrent\").isEqual(concurrent);\n@@ -76,1 +76,1 @@\n-            Events.assertField(event1, \"invokedConcurrent\").isEqual(concurrent);\n+            Events.assertField(event3, \"invokedConcurrent\").isEqual(concurrent);\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/collection\/TestSystemGC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4286726\n+ * @summary Java2D raster printing: large text may overflow glyph cache.\n+ *          Draw a large glyphvector, the 'A' glyph should appear and not get flushed.\n+*\/\n+\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.RenderingHints;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.geom.Point2D;\n+import java.awt.image.BufferedImage;\n+import java.util.HashMap;\n+\n+\/**\n+ * Draw a very large glyphvector on a surface.\n+ * If the cache was flushed the first glyph is not rendered.\n+ * Note: the implementation no longer uses glyphs for rendering large text,\n+ * but in principle the test is still useful.\n+ *\/\n+public class CacheFlushTest {\n+\n+    static final int WIDTH = 400, HEIGHT = 600;\n+    static final int FONTSIZE = 250;\n+    static final String TEST = \"ABCDEFGHIJKLMNOP\";\n+    static final HashMap<RenderingHints.Key, Object> HINTS = new HashMap<>();\n+\n+    static {\n+      HINTS.put(RenderingHints.KEY_ANTIALIASING,\n+                RenderingHints.VALUE_ANTIALIAS_ON);\n+      HINTS.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+      HINTS.put(RenderingHints.KEY_FRACTIONALMETRICS,\n+                RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+    }\n+\n+    public static void main(String args[]) {\n+        BufferedImage bi = new BufferedImage(WIDTH, HEIGHT, BufferedImage.TYPE_INT_RGB);\n+\n+        Graphics2D g2d = bi.createGraphics();\n+        g2d.addRenderingHints(HINTS);\n+        g2d.setColor(Color.white);\n+        g2d.fillRect(0, 0, WIDTH, HEIGHT);\n+        g2d.setColor(Color.black);\n+\n+        FontRenderContext frc = g2d.getFontRenderContext();\n+        Font font = new Font(Font.DIALOG, Font.PLAIN, 250);\n+        GlyphVector gv = font.createGlyphVector(frc, TEST);\n+\n+        \/* Set the positions of all but the first glyph to be offset vertically but\n+         * FONTSIZE pixels. So if the first glyph \"A\" is not flushed we can tell this\n+         * by checking for non-white pixels in the range for the default y offset of 0\n+         * from the specified y location.\n+         *\/\n+        Point2D.Float pt = new Point2D.Float(20f, FONTSIZE);\n+        for (int i = 1; i < gv.getNumGlyphs(); ++i) {\n+            gv.setGlyphPosition(i, pt);\n+            pt.x += 25f;\n+            pt.y = FONTSIZE;\n+        }\n+        g2d.drawGlyphVector(gv, 20, FONTSIZE);\n+        \/* Now expect to find at least one black pixel in the rect (0,0) -> (WIDTH, FONTSIZE) *\/\n+        boolean found = false;\n+        int blackPixel = Color.black.getRGB();\n+        for (int y = 0; y < FONTSIZE; y++) {\n+            for (int x = 0; x < WIDTH; x++) {\n+                if (bi.getRGB(x, y) == blackPixel) {\n+                    found = true;\n+                    break;\n+                }\n+            }\n+            if (found == true) {\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            throw new RuntimeException(\"NO BLACK PIXELS\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/CacheFlushTest.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,215 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4198081\n+ * @key headful\n+ * @summary Arabic characters should appear instead of boxes and be correctly shaped.\n+ *          Hebrew characters should appear instead of boxes.\n+ *          Test is made headful so there's no excuse for test systems not having the fonts.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.GridLayout;\n+import java.awt.Font;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.geom.Rectangle2D;\n+\n+public class TestArabicHebrew extends Panel {\n+\n+    static volatile Frame frame;\n+    static volatile Font font = new Font(Font.DIALOG, Font.PLAIN, 36);\n+\n+    static void createUI() {\n+        frame = new Frame(\"Test Arabic\/Hebrew\");\n+        frame.setLayout(new BorderLayout());\n+        TestArabicHebrew panel = new TestArabicHebrew();\n+        frame.add(panel, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        EventQueue.invokeAndWait(TestArabicHebrew::createUI);\n+        try {\n+             checkStrings();\n+        } finally {\n+           if (frame != null && args.length == 0) {\n+               EventQueue.invokeAndWait(frame::dispose);\n+           }\n+        }\n+    }\n+\n+    static void checkString(String script, String str) {\n+        int index = font.canDisplayUpTo(str);\n+        if (index != -1) {\n+            throw new RuntimeException(\"Cannot display char \" +  index + \" for \" + script);\n+        }\n+    }\n+\n+    static void checkStrings() {\n+        checkString(\"Arabic\", arabic);\n+        checkString(\"Hebrew\", hebrew);\n+        checkString(\"Latin-1 Supplement\", latin1sup);\n+    }\n+\n+    \/\/ Table of arabic unicode characters - minimal support level\n+    \/\/ Includes arabic chars from basic block up to 0652 and\n+    \/\/ corresponding shaped characters from the arabic\n+    \/\/ extended-B block from fe80 to fefc (does include lam-alef\n+    \/\/ ligatures).\n+    \/\/ Does not include arabic-indic digits nor \"arabic extended\"\n+    \/\/ range.\n+\n+    static final String arabic =\n+    \"\\u060c\\u061b\\u061f\\u0621\\u0622\\u0623\\u0624\\u0625\\u0626\\u0627\"\n+    + \"\\u0628\\u0629\\u062a\\u062b\\u062c\\u062d\\u062e\\u062f\\u0630\\u0631\"\n+    + \"\\u0632\\u0633\\u0634\\u0635\\u0636\\u0637\\u0638\\u0639\\u063a\\u0640\"\n+    + \"\\u0641\\u0642\\u0643\\u0644\\u0645\\u0646\\u0647\\u0648\\u0649\\u064a\"\n+    + \"\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650\\u0651\\u0652\\ufe80\\ufe81\"\n+    + \"\\ufe82\\ufe83\\ufe84\\ufe85\\ufe86\\ufe87\\ufe88\\ufe89\\ufe8a\\ufe8b\"\n+    + \"\\ufe8c\\ufe8d\\ufe8e\\ufe8f\\ufe90\\ufe91\\ufe92\\ufe93\\ufe94\\ufe95\"\n+    + \"\\ufe96\\ufe97\\ufe98\\ufe99\\ufe9a\\ufe9b\\ufe9c\\ufe9d\\ufe9e\\ufe9f\"\n+    + \"\\ufea0\\ufea1\\ufea2\\ufea3\\ufea4\\ufea5\\ufea6\\ufea7\\ufea8\\ufea9\"\n+    + \"\\ufeaa\\ufeab\\ufeac\\ufead\\ufeae\\ufeaf\\ufeb0\\ufeb1\\ufeb2\\ufeb3\"\n+    + \"\\ufeb4\\ufeb5\\ufeb6\\ufeb7\\ufeb8\\ufeb9\\ufeba\\ufebb\\ufebc\\ufebd\"\n+    + \"\\ufebe\\ufebf\\ufec0\\ufec1\\ufec2\\ufec3\\ufec4\\ufec5\\ufec6\\ufec7\"\n+    + \"\\ufec8\\ufec9\\ufeca\\ufecb\\ufecc\\ufecd\\ufece\\ufecf\\ufed0\\ufed1\"\n+    + \"\\ufed2\\ufed3\\ufed4\\ufed5\\ufed6\\ufed7\\ufed8\\ufed9\\ufeda\\ufedb\"\n+    + \"\\ufedc\\ufedd\\ufede\\ufedf\\ufee0\\ufee1\\ufee2\\ufee3\\ufee4\\ufee5\"\n+    + \"\\ufee6\\ufee7\\ufee8\\ufee9\\ufeea\\ufeeb\\ufeec\\ufeed\\ufeee\\ufeef\"\n+    + \"\\ufef0\\ufef1\\ufef2\\ufef3\\ufef4\\ufef5\\ufef6\\ufef7\\ufef8\\ufef9\"\n+    + \"\\ufefa\\ufefb\\ufefc\";\n+\n+    \/\/ hebrew table includes all characters in hebrew block\n+\n+    static final String hebrew =\n+    \"\\u0591\\u0592\\u0593\\u0594\\u0595\\u0596\\u0597\\u0598\\u0599\\u059a\"\n+    + \"\\u059b\\u059c\\u059d\\u059e\\u059f\\u05a0\\u05a1\\u05a3\\u05a4\\u05a5\"\n+    + \"\\u05a6\\u05a7\\u05a8\\u05a9\\u05aa\\u05ab\\u05ac\\u05ad\\u05ae\\u05af\"\n+    + \"\\u05b0\\u05b1\\u05b2\\u05b3\\u05b4\\u05b5\\u05b6\\u05b7\\u05b8\\u05b9\"\n+    + \"\\u05bb\\u05bc\\u05bd\\u05be\\u05bf\\u05c0\\u05c1\\u05c2\\u05c3\\u05c4\"\n+    + \"\\u05d0\\u05d1\\u05d2\\u05d3\\u05d4\\u05d5\\u05d6\\u05d7\\u05d8\\u05d9\"\n+    + \"\\u05da\\u05db\\u05dc\\u05dd\\u05de\\u05df\\u05e0\\u05e1\\u05e2\\u05e3\"\n+    + \"\\u05e4\\u05e5\\u05e6\\u05e7\\u05e8\\u05e9\\u05ea\\u05f0\\u05f1\\u05f2\"\n+    + \"\\u05f3\\u05f4\";\n+\n+    \/\/ latin 1 supplement table includes all non-control characters\n+    \/\/ in this range.  Included because of comment in code that claims\n+    \/\/ some problems displaying this range with some SJIS fonts.\n+\n+    static final String latin1sup =\n+    \"\\u00a0\\u00a1\\u00a2\\u00a3\\u00a4\\u00a5\\u00a6\\u00a7\"\n+    + \"\\u00a8\\u00a9\\u00aa\\u00ab\\u00ac\\u00ad\\u00ae\\u00af\\u00b0\\u00b1\"\n+    + \"\\u00b2\\u00b3\\u00b4\\u00b5\\u00b6\\u00b7\\u00b8\\u00b9\\u00ba\\u00bb\"\n+    + \"\\u00bc\\u00bd\\u00be\\u00bf\\u00c0\\u00c1\\u00c2\\u00c3\\u00c4\\u00c5\"\n+    + \"\\u00c6\\u00c7\\u00c8\\u00c9\\u00ca\\u00cb\\u00cc\\u00cd\\u00ce\\u00cf\"\n+    + \"\\u00d0\\u00d1\\u00d2\\u00d3\\u00d4\\u00d5\\u00d6\\u00d7\\u00d8\\u00d9\"\n+    + \"\\u00da\\u00db\\u00dc\\u00dd\\u00de\\u00df\\u00e0\\u00e1\\u00e2\\u00e3\"\n+    + \"\\u00e4\\u00e5\\u00e6\\u00e7\\u00e8\\u00e9\\u00ea\\u00eb\\u00ec\\u00ed\"\n+    + \"\\u00ee\\u00ef\\u00f0\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f7\"\n+    + \"\\u00f8\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00fe\\u00ff\";\n+\n+    public TestArabicHebrew() {\n+        setLayout(new GridLayout(3, 1));\n+\n+        FontRenderContext frc = new FontRenderContext(null, false, false);\n+        add(new SubGlyphPanel(\"Arabic\", arabic, font, frc));\n+        add(new SubGlyphPanel(\"Hebrew\", hebrew, font, frc));\n+        add(new SubGlyphPanel(\"Latin-1 Supplement\", latin1sup, font, frc));\n+    }\n+\n+  static class SubGlyphPanel extends Panel {\n+      String title;\n+      Dimension extent;\n+      GlyphVector[] vectors;\n+\n+      static final int kGlyphsPerLine = 20;\n+\n+      SubGlyphPanel(String title, String chars, Font font, FontRenderContext frc) {\n+\n+          this.title = title;\n+          setBackground(Color.white);\n+\n+          double width = 0;\n+          double height = 0;\n+\n+          int max = chars.length();\n+          vectors = new GlyphVector[(max + kGlyphsPerLine - 1) \/ kGlyphsPerLine];\n+          for (int i = 0; i < vectors.length; i++) {\n+              int start = i * 20;\n+              int limit = Math.min(max, (i + 1) * kGlyphsPerLine);\n+              String substr = \"\";\n+              for (int j = start; j < limit; ++j) {\n+                  substr = substr.concat(chars.charAt(j) + \" \");\n+              }\n+              GlyphVector gv = font.createGlyphVector(frc, substr);\n+              vectors[i] = gv;\n+              Rectangle2D bounds = gv.getLogicalBounds();\n+\n+              width = Math.max(width, bounds.getWidth());\n+              height += bounds.getHeight();\n+          }\n+\n+          extent = new Dimension((int)(width + 1), (int)(height + 1 + 30)); \/\/ room for title\n+\n+          setSize(getPreferredSize());\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(extent);\n+    }\n+\n+    public Dimension getMinimumSize() {\n+        return getPreferredSize();\n+    }\n+\n+    public Dimension getMaximumSize() {\n+        return getPreferredSize();\n+    }\n+\n+    public void paint(Graphics g) {\n+        Graphics2D g2d = (Graphics2D)g;\n+\n+        g.drawString(title, 10, 20);\n+\n+        float x = 10;\n+        float y = 30;\n+        for (int i = 0; i < vectors.length; ++i) {\n+            GlyphVector gv = vectors[i];\n+            Rectangle2D bounds = gv.getLogicalBounds();\n+            g2d.drawGlyphVector(gv, x, (float)(y - bounds.getY()));\n+            y += bounds.getHeight();\n+        }\n+    }\n+  }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/TestArabicHebrew.java","additions":215,"deletions":0,"binary":false,"changes":215,"status":"added"},{"patch":"@@ -0,0 +1,174 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4269775 8341535\n+ * @summary Check that different text rendering APIs agree\n+ *\/\n+\n+\/**\n+ * Draw into an image rendering the same text string nine different\n+ * ways: as a TextLayout, a simple String, and a GlyphVector, each\n+ * with three different x scale factors. The expectation is that each\n+ * set of three strings would appear the same although offset in y to\n+ * avoid overlap. The bug was that the y positions of the individual characters\n+ * of the TextLayout and GlyphVector were wrong, so the strings appeared\n+ * to be rendered at different angles.\n+ *\/\n+\n+import java.awt.Color;\n+import java.awt.Font;\n+import java.awt.Graphics2D;\n+import java.awt.RenderingHints;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.TextLayout;\n+import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n+import javax.imageio.ImageIO;\n+import java.io.File;\n+import java.util.HashMap;\n+\n+public class TestDevTransform {\n+\n+    static HashMap<RenderingHints.Key, Object> hints = new HashMap<>();\n+\n+    static {\n+      hints.put(RenderingHints.KEY_ANTIALIASING,\n+                RenderingHints.VALUE_ANTIALIAS_ON);\n+      hints.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+      hints.put(RenderingHints.KEY_FRACTIONALMETRICS,\n+                RenderingHints.VALUE_FRACTIONALMETRICS_ON);\n+    }\n+\n+    static String test = \"This is only a test\";\n+    static double angle = Math.PI \/ 6.0;  \/\/ Rotate 30 degrees\n+    static final int W = 400, H = 400;\n+\n+    static void draw(Graphics2D g2d, TextLayout layout,\n+                      float x, float y, float scalex) {\n+        AffineTransform saveTransform = g2d.getTransform();\n+        g2d.translate(x, y);\n+        g2d.rotate(angle);\n+        g2d.scale(scalex, 1f);\n+        layout.draw(g2d, 0f, 0f);\n+        g2d.setTransform(saveTransform);\n+      }\n+\n+    static void draw(Graphics2D g2d, String string,\n+                      float x, float y, float scalex) {\n+      AffineTransform saveTransform = g2d.getTransform();\n+      g2d.translate(x, y);\n+      g2d.rotate(angle);\n+      g2d.scale(scalex, 1f);\n+      g2d.drawString(string, 0f, 0f);\n+      g2d.setTransform(saveTransform);\n+    }\n+\n+    static void draw(Graphics2D g2d, GlyphVector gv,\n+                      float x, float y, float scalex) {\n+        AffineTransform saveTransform = g2d.getTransform();\n+        g2d.translate(x, y);\n+        g2d.rotate(angle);\n+        g2d.scale(scalex, 1f);\n+        g2d.drawGlyphVector(gv, 0f, 0f);\n+        g2d.setTransform(saveTransform);\n+      }\n+\n+    static void init(Graphics2D g2d) {\n+         g2d.setColor(Color.white);\n+         g2d.fillRect(0, 0, W, H);\n+         g2d.setColor(Color.black);\n+         g2d.scale(1.481f, 1.481);   \/\/ Convert to 108 dpi\n+         g2d.addRenderingHints(hints);\n+         Font font = new Font(Font.DIALOG, Font.PLAIN, 12);\n+         g2d.setFont(font);\n+    }\n+\n+    static void compare(BufferedImage bi1, String name1, BufferedImage bi2, String name2) throws Exception {\n+        int nonWhite1 = 0;\n+        int nonWhite2 = 0;\n+        int differences = 0;\n+        int whitePixel = Color.white.getRGB();\n+        for (int x = 0; x < bi1.getWidth(); x++) {\n+            for (int y = 0; y < bi1.getHeight(); y++) {\n+                int pix1 = bi1.getRGB(x, y);\n+                int pix2 = bi2.getRGB(x, y);\n+                if (pix1 != whitePixel) { nonWhite1++; }\n+                if (pix2 != whitePixel) { nonWhite2++; }\n+                if (bi1.getRGB(x, y) != bi2.getRGB(x, y)) {\n+                    differences++;\n+                }\n+            }\n+        }\n+        int nonWhite = (nonWhite1 < nonWhite2) ? nonWhite1 : nonWhite2;\n+        if (differences > 0 && ((nonWhite \/ differences) < 20)) {\n+             ImageIO.write(bi1, \"png\", new File(name1 + \".png\"));\n+             ImageIO.write(bi2, \"png\", new File(name2 + \".png\"));\n+             System.err.println(\"nonWhite image 1 = \" + nonWhite1);\n+             System.err.println(\"nonWhite image 2 = \" + nonWhite2);\n+             System.err.println(\"Number of non-white differing pixels=\" + differences);\n+             throw new RuntimeException(\"Different rendering: \" + differences + \" pixels differ.\");\n+        }\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+\n+      BufferedImage tl_Image = new BufferedImage(W, H, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D tl_g2d = tl_Image.createGraphics();\n+          init(tl_g2d);\n+          FontRenderContext frc = tl_g2d.getFontRenderContext();\n+          \/\/ Specify font from graphics to be sure it is the same as the other cases.\n+          TextLayout tl = new TextLayout(test, tl_g2d.getFont(), frc);\n+          draw(tl_g2d, tl, 10f, 12f, 3.0f);\n+          draw(tl_g2d, tl, 10f, 24f, 1.0f);\n+          draw(tl_g2d, tl, 10f, 36f, 0.33f);\n+      }\n+\n+      BufferedImage st_Image = new BufferedImage(400, 400, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D st_g2d = st_Image.createGraphics();\n+          init(st_g2d);\n+          draw(st_g2d, test, 10f, 12f, 3.0f);\n+          draw(st_g2d, test, 10f, 24f, 1.0f);\n+          draw(st_g2d, test, 10f, 36f, .33f);\n+      }\n+\n+      BufferedImage gv_Image = new BufferedImage(400, 400, BufferedImage.TYPE_INT_RGB);\n+      {\n+          Graphics2D gv_g2d = gv_Image.createGraphics();\n+          init(gv_g2d);\n+          FontRenderContext frc = gv_g2d.getFontRenderContext();\n+          GlyphVector gv = gv_g2d.getFont().createGlyphVector(frc, test);\n+          draw(gv_g2d, gv, 10f, 12f, 3.0f);\n+          draw(gv_g2d, gv, 10f, 24f, 1.0f);\n+          draw(gv_g2d, gv, 10f, 36f, .33f);\n+      }\n+\n+      compare(tl_Image, \"textlayout\", st_Image, \"string\");\n+      compare(gv_Image, \"glyphvector\", st_Image, \"string\");\n+  }\n+}\n","filename":"test\/jdk\/sun\/awt\/font\/TestDevTransform.java","additions":174,"deletions":0,"binary":false,"changes":174,"status":"added"},{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4277201\n+ * @summary verifies that invoking a fill on a brand new Graphics object\n+ *          does not stroke the shape in addition to filling it\n+ * @key headful\n+ *\/\n+\n+\/*\n+ * This test case tests for a problem with initializing GDI graphics\n+ * contexts (HDCs) where a pen is left installed in the graphics object\n+ * even though the AWT believes that there is no Pen installed.  The\n+ * result is that when you try to fill a shape, GDI will both fill and\n+ * stroke it.\n+*\/\n+\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Graphics;\n+import java.awt.Panel;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.image.BufferedImage;\n+\n+public class TestPen extends Panel {\n+\n+    static volatile TestPen pen;\n+    static volatile Frame frame;\n+\n+    public TestPen() {\n+        setForeground(Color.black);\n+        setBackground(Color.white);\n+    }\n+\n+    public Dimension getPreferredSize() {\n+        return new Dimension(200, 200);\n+    }\n+\n+    public void paint(Graphics g) {\n+        g.setColor(Color.green);\n+        g.fillOval(50, 50, 100, 100);\n+    }\n+\n+   static void createUI() {\n+        frame = new Frame();\n+        pen = new TestPen();\n+        frame.add(pen);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String argv[]) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(TestPen::createUI);\n+            Robot robot = new Robot();\n+            robot.waitForIdle();\n+            robot.delay(2000);\n+            Point p = pen.getLocationOnScreen();\n+            Dimension d = pen.getSize();\n+            Rectangle r = new Rectangle(p.x + 1, p.y + 1, d.width - 2, d.height - 2);\n+            BufferedImage bi = robot.createScreenCapture(r);\n+            int blackPixel = Color.black.getRGB();\n+            for (int y = 0; y < bi.getHeight(); y++ ) {\n+                for (int x = 0; x < bi.getWidth(); x++ ) {\n+                    if (bi.getRGB(x, y) == blackPixel) {\n+                        throw new RuntimeException(\"Black pixel !\");\n+                    }\n+                }\n+            }\n+        } finally {\n+            if (frame != null) {\n+                EventQueue.invokeAndWait(frame::dispose);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/awt\/windows\/TestPen.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- *      8321408 8316138 8341057\n+ *      8321408 8316138 8341057 8303770\n@@ -50,1 +50,1 @@\n-    private static final int COUNT = 112;\n+    private static final int COUNT = 111;\n@@ -55,1 +55,1 @@\n-            = \"8F:E0:6F:7F:21:59:33:A6:43:F3:48:FD:A3:4A:8E:28:35:AA:DD:6E:A5:43:56:F1:28:34:48:DF:5C:D2:7C:72\";\n+            = \"B7:60:5A:7A:01:0A:9F:47:E3:46:B9:30:E1:FC:A2:71:69:58:76:CB:8C:85:2B:FF:1A:D5:92:71:AF:F5:60:8F\";\n@@ -98,2 +98,0 @@\n-            put(\"baltimorecybertrustca [jdk]\",\n-                    \"16:AF:57:A9:F6:76:B0:AB:12:60:95:AA:5E:BA:DE:F2:2A:B3:11:19:D6:44:AC:95:CD:4B:93:DB:F3:F2:6A:EB\");\n","filename":"test\/jdk\/sun\/security\/lib\/cacerts\/VerifyCACerts.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -120,1 +119,1 @@\n-        ByteArrayOutputStream strm = new ByteArrayOutputStream();\n+        DerOutputStream strm = new DerOutputStream();\n@@ -130,1 +129,1 @@\n-        ByteArrayOutputStream strm = new ByteArrayOutputStream();\n+        DerOutputStream strm = new DerOutputStream();\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs7\/SignerOrder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.io.*;\n@@ -37,0 +36,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -60,4 +60,4 @@\n-        ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-        p2.derEncode(bout);\n-        HexPrinter.simple().dest(System.err).format(bout.toByteArray());\n-        if (!Arrays.equals(data, bout.toByteArray())) {\n+        DerOutputStream dout = new DerOutputStream();\n+        p2.derEncode(dout);\n+        HexPrinter.simple().dest(System.err).format(dout.toByteArray());\n+        if (!Arrays.equals(data, dout.toByteArray())) {\n@@ -78,3 +78,3 @@\n-        bout = new ByteArrayOutputStream();\n-        p3.derEncode(bout);\n-        if (!Arrays.equals(data, bout.toByteArray())) {\n+        dout = new DerOutputStream();\n+        p3.derEncode(dout);\n+        if (!Arrays.equals(data, dout.toByteArray())) {\n","filename":"test\/jdk\/sun\/security\/pkcs\/pkcs9\/UnknownAttribute.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    private static final String NSS_BUNDLE_VERSION = \"3.101\";\n+    private static final String NSS_BUNDLE_VERSION = \"3.107\";\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,94 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8309841\n+ * @summary Jarsigner should print a warning if an entry is removed\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.jar.Attributes;\n+import java.util.jar.Manifest;\n+\n+public class RemovedFiles {\n+\n+    private static final String NONEXISTENT_ENTRIES_FOUND\n+            = \"This jar contains signed entries for files that do not exist. See the -verbose output for more details.\";\n+\n+    public static void main(String[] args) throws Exception {\n+        JarUtils.createJarFile(\n+                Path.of(\"a.jar\"),\n+                Path.of(\".\"),\n+                Files.writeString(Path.of(\"a\"), \"a\"),\n+                Files.writeString(Path.of(\"b\"), \"b\"));\n+        SecurityTools.keytool(\"-genkeypair -storepass changeit -keystore ks -alias x -dname CN=x -keyalg ed25519\");\n+        SecurityTools.jarsigner(\"-storepass changeit -keystore ks a.jar x\");\n+\n+        \/\/ All is fine at the beginning.\n+        SecurityTools.jarsigner(\"-verify a.jar\")\n+                .shouldNotContain(NONEXISTENT_ENTRIES_FOUND);\n+\n+        \/\/ Remove an entry after signing. There will be a warning.\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"a\");\n+        SecurityTools.jarsigner(\"-verify a.jar\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND);\n+        SecurityTools.jarsigner(\"-verify -verbose a.jar\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND)\n+                .shouldContain(\"Warning: nonexistent signed entries: [a]\");\n+\n+        \/\/ Remove one more entry.\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"b\");\n+        SecurityTools.jarsigner(\"-verify a.jar\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND);\n+        SecurityTools.jarsigner(\"-verify -verbose a.jar\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND)\n+                .shouldContain(\"Warning: nonexistent signed entries: [a, b]\");\n+\n+        \/\/ Re-sign will not clear the warning.\n+        SecurityTools.jarsigner(\"-storepass changeit -keystore ks a.jar x\");\n+        SecurityTools.jarsigner(\"-verify a.jar\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND);\n+\n+        \/\/ Unfortunately, if there is a non-file entry in manifest, there will be\n+        \/\/ a false alarm. See https:\/\/bugs.openjdk.org\/browse\/JDK-8334261.\n+        var man = new Manifest();\n+        man.getMainAttributes().putValue(\"Manifest-Version\", \"1.0\");\n+        man.getEntries().computeIfAbsent(\"Hello\", key -> new Attributes())\n+                .putValue(\"Foo\", \"Bar\");\n+        JarUtils.createJarFile(Path.of(\"b.jar\"),\n+                man,\n+                Path.of(\".\"),\n+                Path.of(\"a\"));\n+        SecurityTools.jarsigner(\"-storepass changeit -keystore ks b.jar x\");\n+        SecurityTools.jarsigner(\"-verbose -verify b.jar\")\n+                .shouldContain(\"Warning: nonexistent signed entries: [Hello]\")\n+                .shouldContain(NONEXISTENT_ENTRIES_FOUND);\n+\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/RemovedFiles.java","additions":94,"deletions":0,"binary":false,"changes":94,"status":"added"},{"patch":"@@ -891,1 +891,1 @@\n-        gencert(\"tsbefore2019\", \"-ext eku:critical=ts -startdate 2018\/01\/01 -validity 3000\");\n+        gencert(\"tsbefore2019\", \"-ext eku:critical=ts -startdate 2018\/01\/01 -validity 5000\");\n","filename":"test\/jdk\/sun\/security\/tools\/jarsigner\/TimestampCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -44,1 +45,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -206,3 +206,3 @@\n-            ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-            exts.encode(bout);\n-            exts = new CertificateExtensions(new DerValue(bout.toByteArray()).data);\n+            DerOutputStream dout = new DerOutputStream();\n+            exts.encode(dout);\n+            exts = new CertificateExtensions(new DerValue(dout.toByteArray()).data);\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ExtOptionCamelCase.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2001, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        derOut.derEncode(fout);\n+        fout.write(derOut.toByteArray());\n","filename":"test\/jdk\/sun\/security\/util\/asn1StringTypes\/StringTypes.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    Logger logger;\n@@ -98,1 +99,1 @@\n-        Logger logger = Logger.getLogger(\"jdk.jshell.execution\");\n+        logger = Logger.getLogger(\"jdk.jshell.execution\");\n@@ -140,1 +141,0 @@\n-        Logger logger = Logger.getLogger(\"jdk.jshell.execution\");\n@@ -142,0 +142,1 @@\n+        logger = null;\n","filename":"test\/langtools\/jdk\/jshell\/FailOverDirectExecutionControlTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.OutputStream;\n@@ -29,0 +28,1 @@\n+import sun.security.util.DerOutputStream;\n@@ -31,1 +31,1 @@\n-    public void derEncode(OutputStream out) throws IOException {\n+    public void derEncode(DerOutputStream out) throws IOException {\n","filename":"test\/langtools\/tools\/jdeps\/jdkinternals\/src\/q\/NoRepl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8309841\n+ * @summary Unit Test for a common Test API in jdk.test.lib.util.JarUtils\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.util.JarUtils;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Set;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarFile;\n+import java.util.stream.Collectors;\n+\n+public class JarUtilsTest {\n+    public static void main(String[] args) throws Exception {\n+        Files.createDirectory(Path.of(\"bx\"));\n+        JarUtils.createJarFile(Path.of(\"a.jar\"),\n+                Path.of(\".\"),\n+                Files.writeString(Path.of(\"a\"), \"\"),\n+                Files.writeString(Path.of(\"b1\"), \"\"),\n+                Files.writeString(Path.of(\"b2\"), \"\"),\n+                Files.writeString(Path.of(\"bx\/x\"), \"\"),\n+                Files.writeString(Path.of(\"c\"), \"\"),\n+                Files.writeString(Path.of(\"e1\"), \"\"),\n+                Files.writeString(Path.of(\"e2\"), \"\"));\n+        checkContent(\"a\", \"b1\", \"b2\", \"bx\/x\", \"c\", \"e1\", \"e2\");\n+\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"a\");\n+        checkContent(\"b1\", \"b2\", \"bx\/x\", \"c\", \"e1\", \"e2\");\n+\n+        \/\/ Note: b* covers everything starting with b, even bx\/x\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"b*\");\n+        checkContent(\"c\", \"e1\", \"e2\");\n+\n+        \/\/ d* does not match\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"d*\");\n+        checkContent(\"c\", \"e1\", \"e2\");\n+\n+        \/\/ multiple patterns\n+        JarUtils.deleteEntries(Path.of(\"a.jar\"), \"d*\", \"e*\");\n+        checkContent(\"c\");\n+    }\n+\n+    static void checkContent(String... expected) throws IOException {\n+        try (var jf = new JarFile(\"a.jar\")) {\n+            Asserts.assertEquals(Set.of(expected),\n+                    jf.stream().map(JarEntry::getName).collect(Collectors.toSet()));\n+        }\n+    }\n+}\n","filename":"test\/lib-test\/jdk\/test\/lib\/util\/JarUtilsTest.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"},{"patch":"@@ -210,0 +210,7 @@\n+    \/**\n+     * Returns true if stdout contains the given string\n+     *\/\n+    public boolean stdoutContains(String expectedString) {\n+        return getStdout().contains(expectedString);\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/process\/OutputAnalyzer.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -323,0 +323,51 @@\n+    \/**\n+     * Remove entries from a ZIP file.\n+     *\n+     * Each entry can be a name or a name ending with \"*\".\n+     *\n+     * @return number of removed entries\n+     * @throws IOException if there is any I\/O error\n+     *\/\n+    public static int deleteEntries(Path jarfile, String... patterns)\n+            throws IOException {\n+        Path tmpfile = Files.createTempFile(\"jar\", \"jar\");\n+        int count = 0;\n+\n+        try (OutputStream out = Files.newOutputStream(tmpfile);\n+             JarOutputStream jos = new JarOutputStream(out)) {\n+            try (JarFile jf = new JarFile(jarfile.toString())) {\n+                Enumeration<JarEntry> jentries = jf.entries();\n+                top: while (jentries.hasMoreElements()) {\n+                    JarEntry jentry = jentries.nextElement();\n+                    String name = jentry.getName();\n+                    for (String pattern : patterns) {\n+                        if (pattern.endsWith(\"*\")) {\n+                            if (name.startsWith(pattern.substring(\n+                                    0, pattern.length() - 1))) {\n+                                \/\/ Go directly to next entry. This\n+                                \/\/ one is not written into `jos` and\n+                                \/\/ therefore removed.\n+                                count++;\n+                                continue top;\n+                            }\n+                        } else {\n+                            if (name.equals(pattern)) {\n+                                \/\/ Same as above\n+                                count++;\n+                                continue top;\n+                            }\n+                        }\n+                    }\n+                    \/\/ No pattern matched, file retained\n+                    jos.putNextEntry(copyEntry(jentry));\n+                    jf.getInputStream(jentry).transferTo(jos);\n+                }\n+            }\n+        }\n+\n+        \/\/ replace the original JAR file\n+        Files.move(tmpfile, jarfile, StandardCopyOption.REPLACE_EXISTING);\n+\n+        return count;\n+    }\n+\n","filename":"test\/lib\/jdk\/test\/lib\/util\/JarUtils.java","additions":52,"deletions":1,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    private static final String TEXT = \"2015:03:10:12:13:ECT\";\n+    private static final String TEXT = \"2015:03:10:12:13:PST\";\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/time\/format\/ZonedDateTimeFormatterBenchmark.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}