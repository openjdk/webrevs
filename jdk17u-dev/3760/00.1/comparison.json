{"files":[{"patch":"@@ -424,0 +424,4 @@\n+    \/* Remembered Exception, we will throw it again if somebody\n+       calls getOutputStream after disconnect  or error *\/\n+    private Exception rememberedExceptionOut = null;\n+\n@@ -1453,0 +1457,8 @@\n+            if (rememberedExceptionOut != null) {\n+                if (rememberedExceptionOut instanceof RuntimeException) {\n+                    throw new RuntimeException(rememberedExceptionOut);\n+                } else {\n+                    throw getChainedException((IOException) rememberedExceptionOut);\n+                }\n+            }\n+\n@@ -1515,0 +1527,1 @@\n+            rememberedExceptionOut = e;\n@@ -1518,0 +1531,1 @@\n+            rememberedExceptionOut = e;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n-import jdk.internal.net.http.websocket.OpeningHandshake;\n@@ -227,1 +226,1 @@\n-                              + Integer.toString(authority.getPort()) + \"\/\");\n+                              + authority.getPort() + \"\/\");\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpRequestImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -936,1 +936,1 @@\n-            return host + \":\" + Integer.toString(port);\n+            return host + \":\" + port;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n@@ -35,1 +37,0 @@\n-import java.net.http.HttpResponse.BodyHandler;\n@@ -58,0 +59,1 @@\n+\n@@ -390,0 +392,2 @@\n+        ReferenceQueue<HttpClient> queue = new ReferenceQueue<>();\n+        WeakReference<HttpClient> ref = new WeakReference<>(client, queue);\n@@ -501,0 +505,8 @@\n+            client = null;\n+            System.gc();\n+            while (!ref.refersTo(null)) {\n+                System.gc();\n+                if (queue.remove(100) == ref) break;\n+            }\n+            var error = TRACKER.checkShutdown(500);\n+            if (error != null) throw error;\n","filename":"test\/jdk\/java\/net\/httpclient\/DigestEchoClient.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}