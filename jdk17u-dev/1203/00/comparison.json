{"files":[{"patch":"@@ -531,0 +531,9 @@\n+\n+    \/**\n+     * Releases any system or cryptographic resources.\n+     * It is up to implementors to override disposeContext()\n+     * to take necessary action.\n+     *\/\n+    public void disposeContext() {\n+        \/\/ do nothing\n+    }\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/AuthenticationInfo.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2032,0 +2032,6 @@\n+            if (proxyAuthentication != null) {\n+                proxyAuthentication.disposeContext();\n+            }\n+            if (serverAuthentication != null) {\n+                serverAuthentication.disposeContext();\n+            }\n@@ -2277,0 +2283,3 @@\n+            if (proxyAuthentication != null) {\n+                proxyAuthentication.disposeContext();\n+            }\n@@ -2526,0 +2535,1 @@\n+                    ret.disposeContext();\n@@ -2698,0 +2708,1 @@\n+                    ret.disposeContext();\n@@ -2724,0 +2735,1 @@\n+                    currentProxyCredentials.disposeContext();\n@@ -2734,0 +2746,1 @@\n+                    currentServerCredentials.disposeContext();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -248,0 +248,16 @@\n+    \/**\n+     * Releases any system resources and cryptographic information stored in\n+     * the context object and invalidates the context.\n+     *\/\n+    @Override\n+    public void disposeContext() {\n+        if (negotiator != null) {\n+            try {\n+                negotiator.disposeContext();\n+            } catch (IOException ioEx) {\n+                \/\/do not rethrow IOException\n+            }\n+            negotiator = null;\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/NegotiateAuthentication.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -85,0 +85,2 @@\n+\n+    public void disposeContext() throws IOException { };\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/Negotiator.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,0 +130,5 @@\n+            try {\n+                disposeContext();\n+            } catch (Exception ex) {\n+                \/\/dispose context silently\n+            }\n@@ -154,0 +159,3 @@\n+            if (context == null) {\n+                throw new IOException(\"Negotiate support cannot continue. Context is invalidated\");\n+            }\n@@ -165,0 +173,22 @@\n+\n+    \/**\n+     * Releases any system resources and cryptographic information stored in\n+     * the context object and invalidates the context.\n+     *\n+     * @throws IOException containing a reason of failure in the cause\n+     *\/\n+    @Override\n+    public void disposeContext() throws IOException {\n+        try {\n+            if (context != null) {\n+                context.dispose();\n+            }\n+        } catch (GSSException e) {\n+            if (DEBUG) {\n+                System.out.println(\"Cannot release resources. Reason:\");\n+                e.printStackTrace();\n+            }\n+            throw new IOException(\"Cannot release resources\", e);\n+        };\n+        context = null;\n+    }\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/net\/www\/protocol\/http\/spnego\/NegotiatorImpl.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"modified"}]}