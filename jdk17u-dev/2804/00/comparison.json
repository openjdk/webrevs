{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+\n@@ -45,2 +46,4 @@\n-            test(dc);\n-            test(dc);\n+            InetAddress lo = InetAddress.getLoopbackAddress();\n+            System.out.println(\"Testing with default family and \" + lo);\n+            test(dc, lo);\n+            test(dc, lo);\n@@ -52,2 +55,4 @@\n-                test(dc);\n-                test(dc);\n+                InetAddress lo4 = InetAddress.ofLiteral(\"127.0.0.1\");\n+                System.out.println(\"Testing with INET family and \" + lo4);\n+                test(dc, lo4);\n+                test(dc, lo4);\n@@ -60,2 +65,4 @@\n-                test(dc);\n-                test(dc);\n+                InetAddress lo6 = InetAddress.ofLiteral(\"::1\");\n+                System.out.println(\"Testing with INET6 family and \" + lo6);\n+                test(dc, lo6);\n+                test(dc, lo6);\n@@ -66,0 +73,4 @@\n+    static int getLocalPort(DatagramChannel ch) throws IOException {\n+        return ((InetSocketAddress) ch.getLocalAddress()).getPort();\n+    }\n+\n@@ -71,1 +82,1 @@\n-    static void test(DatagramChannel dc) throws IOException {\n+    static void test(DatagramChannel dc, InetAddress lo) throws IOException {\n@@ -73,1 +84,1 @@\n-            server.bind(new InetSocketAddress(0));\n+            server.bind(new InetSocketAddress(lo, 0));\n@@ -75,2 +86,4 @@\n-            InetAddress lh = InetAddress.getLocalHost();\n-            dc.connect(new InetSocketAddress(lh, server.socket().getLocalPort()));\n+            SocketAddress dcbound = dc.getLocalAddress();\n+            dc.connect(new InetSocketAddress(lo, server.socket().getLocalPort()));\n+            System.out.println(\"dc bound to \" + dcbound + \" and connected from \" +\n+                    dc.getLocalAddress() + \" to \" + dc.getRemoteAddress());\n@@ -80,2 +93,8 @@\n-            ByteBuffer bb = ByteBuffer.allocate(100);\n-            server.receive(bb);\n+            if (getLocalPort(dc) != getLocalPort(server)) {\n+                ByteBuffer bb = ByteBuffer.allocate(100);\n+                server.receive(bb);\n+            } else {\n+                \/\/ some systems may allow dc and server to bind to the same port.\n+                \/\/ when that happen the datagram may never be received\n+                System.out.println(\"Server and clients are bound to the same port: skipping receive\");\n+            }\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/Disconnect.java","additions":32,"deletions":13,"binary":false,"changes":45,"status":"modified"}]}