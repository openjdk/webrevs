{"files":[{"patch":"@@ -202,1 +202,1 @@\n-MAX_PARAMS := 36\n+MAX_PARAMS := 96\n","filename":"make\/common\/MakeBase.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -366,1 +366,1 @@\n-        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_WARNINGS_FLAGS)\n+        $$($$($1_BASE)_SYSROOT_CFLAGS)\n@@ -368,1 +368,1 @@\n-        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS) $$($1_WARNINGS_FLAGS)\n+        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS)\n@@ -373,0 +373,1 @@\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n@@ -378,0 +379,1 @@\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n@@ -401,0 +403,1 @@\n+      $1_CXXFLAGS += $$($1_WARNINGS_FLAGS)\n","filename":"make\/common\/NativeCompilation.gmk","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -106,0 +106,2 @@\n+    DISABLED_WARNINGS_gcc_test_signals.cpp := cast-function-type, \\\n+    DISABLED_WARNINGS_gcc_test_threadCpuLoad.cpp := address, \\\n@@ -109,0 +111,2 @@\n+    DISABLED_WARNINGS_clang_test_g1ServiceThread.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_test_logDecorations.cpp := missing-field-initializers, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,8 +80,11 @@\n-DISABLED_WARNINGS_gcc := parentheses comment unknown-pragmas address \\\n-    delete-non-virtual-dtor char-subscripts array-bounds int-in-bool-context \\\n-    ignored-qualifiers  missing-field-initializers implicit-fallthrough \\\n-    empty-body strict-overflow sequence-point maybe-uninitialized \\\n-    misleading-indentation cast-function-type shift-negative-value\n-\n-ifeq ($(call check-jvm-feature, zero), true)\n-  DISABLED_WARNINGS_gcc += return-type switch clobbered\n+DISABLED_WARNINGS_gcc := array-bounds comment delete-non-virtual-dtor \\\n+    empty-body ignored-qualifiers implicit-fallthrough int-in-bool-context \\\n+    maybe-uninitialized missing-field-initializers parentheses \\\n+    shift-negative-value unknown-pragmas strict-overflow\n+\n+DISABLED_WARNINGS_clang := ignored-qualifiers sometimes-uninitialized \\\n+    missing-braces delete-non-abstract-non-virtual-dtor unknown-pragmas\n+\n+ifneq ($(DEBUG_LEVEL), release)\n+  # Assert macro gives warning\n+  DISABLED_WARNINGS_clang += tautological-constant-out-of-range-compare\n@@ -97,6 +100,0 @@\n-DISABLED_WARNINGS_clang := tautological-compare \\\n-    undefined-var-template sometimes-uninitialized unknown-pragmas \\\n-    delete-non-virtual-dtor missing-braces char-subscripts \\\n-    ignored-qualifiers missing-field-initializers mismatched-tags \\\n-    shift-negative-value misleading-indentation\n-\n@@ -105,2 +102,1 @@\n-DISABLED_WARNINGS_microsoft := 4100 4127 4146 4201 4244 4291 4351 \\\n-    4511 4512 4514 4624 4996\n+DISABLED_WARNINGS_microsoft := 4624 4244 4291 4146 4127 4996\n@@ -160,0 +156,23 @@\n+    DISABLED_WARNINGS_gcc_ad_$(HOTSPOT_TARGET_CPU_ARCH).cpp := nonnull, \\\n+    DISABLED_WARNINGS_gcc_assembler_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_c1_LIR.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_cgroupV1Subsystem_linux.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_cgroupV2Subsystem_linux.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_dict.cpp := char-subscripts, \\\n+    DISABLED_WARNINGS_gcc_interp_masm_x86.cpp := uninitialized, \\\n+    DISABLED_WARNINGS_gcc_javaClasses.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_loopnode.cpp := sequence-point, \\\n+    DISABLED_WARNINGS_gcc_postaloc.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_sharedRuntimeTrig.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSet.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_ppc.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_riscv.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_x86.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_ppc.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_riscv.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_x86.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_signals_posix.cpp := cast-function-type, \\\n+    DISABLED_WARNINGS_gcc_templateTable.cpp := cast-function-type, \\\n@@ -161,0 +180,8 @@\n+    DISABLED_WARNINGS_clang_arguments.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_codeBuffer.cpp := tautological-undefined-compare, \\\n+    DISABLED_WARNINGS_clang_dict.cpp := char-subscripts, \\\n+    DISABLED_WARNINGS_clang_directivesParser.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_g1ParScanThreadState.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_g1YoungGCPostEvacuateTasks.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_heapShared.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_management.cpp := missing-field-initializers, \\\n@@ -162,0 +189,2 @@\n+    DISABLED_WARNINGS_clang_os_posix.cpp := mismatched-tags missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_postaloc.cpp := tautological-undefined-compare, \\\n@@ -163,0 +192,2 @@\n+    DISABLED_WARNINGS_clang_vm_version_x86.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_zTracer.cpp := undefined-var-template, \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":47,"deletions":16,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -36,4 +36,0 @@\n-  BUILD_LIBJVM_assembler_x86.cpp_CXXFLAGS := -Wno-maybe-uninitialized\n-  BUILD_LIBJVM_cardTableBarrierSetAssembler_x86.cpp_CXXFLAGS := -Wno-maybe-uninitialized\n-  BUILD_LIBJVM_interp_masm_x86.cpp_CXXFLAGS := -Wno-uninitialized\n-  BUILD_LIBJVM_ad_$(HOTSPOT_TARGET_CPU_ARCH).cpp_CXXFLAGS := -Wno-nonnull\n","filename":"make\/hotspot\/lib\/JvmOverrideFiles.gmk","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}