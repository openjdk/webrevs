{"files":[{"patch":"@@ -231,3 +231,3 @@\n-    $ java -jar jol-cli.jar heapdump-stats sample-clion.hprof.gz\n-    Heap Dump: sample-clion.hprof.gz\n-    Read progress: 269M... 538M... 808M... 1077M... 1346M... 1616M... DONE\n+    $ java -jar jol-cli.jar heapdump-stats java_pid92614.hprof\n+    Heap Dump: java_pid92614.hprof\n+    Read progress: DONE\n@@ -244,30 +244,30 @@\n-               2.091          65.560     137.085.960    java.lang.Object[16385]\n-           1.533.042              40      61.321.680    java.util.WeakHashMap$Entry\n-           1.595.624              24      38.294.976    java.lang.String\n-               4.627           8.216      38.015.432    java.lang.Object[2049]\n-           1.074.313              32      34.378.016    java.util.HashMap$Node\n-             758.446              40      30.337.840    com.jetbrains.cidr.lang.symbols.cpp.OCMacroSymbol\n-             816.693              32      26.134.176    java.util.concurrent.ConcurrentHashMap$Node\n-             591.407              40      23.656.280    com.intellij.util.containers.ConcurrentWeakKeySoftValueHashMap$WeakKey\n-             828.635              24      19.887.240    java.util.ArrayList\n-             612.098              32      19.587.136    com.jetbrains.cidr.lang.types.OCReferenceTypeSimple\n-             598.784              32      19.161.088    com.jetbrains.cidr.lang.symbols.OCSymbolReference$GlobalReference\n-             591.328              32      18.922.496    com.intellij.util.containers.ConcurrentWeakKeyWeakValueHashMap$WeakValue\n-             203.545              80      16.283.600    com.jetbrains.cidr.lang.symbols.cpp.OCDeclaratorSymbolImpl\n-             223.655              72      16.103.160    com.jetbrains.cidr.lang.symbols.cpp.OCFunctionSymbol\n-                   1      12.217.040      12.217.040    byte[12217024]\n-             234.724              40       9.388.960    com.jetbrains.cidr.lang.types.OCFunctionType\n-               1.132           8.208       9.291.456    java.util.WeakHashMap$Entry[2048]\n-             229.218              40       9.168.720    com.jetbrains.cidr.lang.types.OCPointerType\n-              53.663             152       8.156.776    java.lang.Object[33]\n-             143.195              56       8.018.920    java.lang.Object[10]\n-               1.612           4.120       6.641.440    java.lang.Object[1025]\n-             249.059              24       5.977.416    com.jetbrains.cidr.lang.symbols.OCQualifiedName\n-                 160          32.784       5.245.440    byte[32768]\n-                 817           6.160       5.032.720    int[1536]\n-             194.279              24       4.662.696    java.lang.Object[1]\n-               1.081           4.112       4.445.072    java.util.HashMap$Node[1024]\n-                   2       2.097.168       4.194.336    java.util.concurrent.ConcurrentHashMap$Node[524288]\n-                   1       4.194.320       4.194.320    byte[4194304]\n-              65.486              56       3.667.216    com.intellij.psi.impl.source.tree.CompositeElement\n-              33.534             104       3.487.536    com.jetbrains.cidr.lang.symbols.cpp.OCStructSymbol\n+              17.092              24         410.208    java.lang.String\n+               2.189              80         175.120    long[8]\n+               4.690              32         150.080    java.util.HashMap$Node\n+               4.662              32         149.184    com.sun.tools.javac.util.SharedNameTable$NameImpl\n+                   1         131.088         131.088    com.sun.tools.javac.util.SharedNameTable$NameImpl[32768]\n+                   1         131.088         131.088    byte[131072]\n+               3.457              32         110.624    java.util.concurrent.ConcurrentHashMap$Node\n+               2.189              32          70.048    jdk.internal.jimage.ImageReader$Resource\n+               2.189              24          52.536    jdk.internal.jimage.ImageLocation\n+                   4           8.208          32.832    byte[8192]\n+                   2          16.400          32.800    char[8192]\n+                 828              32          26.496    java.lang.invoke.MethodType$ConcurrentWeakInternSet$WeakEntry\n+                 659              40          26.360    java.lang.invoke.MemberName\n+                 651              40          26.040    java.lang.invoke.MethodType\n+                 319              80          25.520    java.util.HashMap$Node[16]\n+                   3           8.208          24.624    java.util.concurrent.ConcurrentHashMap$Node[2048]\n+               1.515              16          24.240    java.lang.Object\n+               1.262              16          20.192    java.lang.Integer\n+                 420              48          20.160    byte[32]\n+                 335              56          18.760    byte[34]\n+                 732              24          17.568    java.lang.module.ModuleDescriptor$Exports\n+                 413              40          16.520    byte[19]\n+                   1          16.400          16.400    java.util.HashMap$Node[4096]\n+                 338              48          16.224    java.util.HashMap\n+                 285              56          15.960    byte[33]\n+                 270              56          15.120    byte[39]\n+                 591              24          14.184    byte[3]\n+                 215              64          13.760    byte[43]\n+                 156              88          13.728    java.lang.reflect.Method\n+                 243              56          13.608    byte[35]\n@@ -275,1 +275,1 @@\n-           6.783.781      42.772.496     339.519.840    <other>\n+              29.038         181.048       1.403.288    <other>\n@@ -277,2 +277,1 @@\n-          17.426.033      61.411.160     942.478.984    <total>\n-\n+              74.750         493.480       3.214.360    <total>\n@@ -362,3 +361,3 @@\n-    $ java -jar jol-cli.jar heapdump-duplicates sample-clion.hprof.gz\n-    Heap Dump: sample-clion.hprof.gz\n-    Read progress: 269M... 538M... 808M... 1077M... 1346M... 1616M... DONE\n+    $ java -jar jol-cli.jar heapdump-duplicates java_pid92614.hprof\n+    Heap Dump: java_pid92614.hprof\n+    Read progress: DONE\n@@ -368,1 +367,1 @@\n-    Heap dump contains 17.426.033 objects, 942.478.984 bytes in total.\n+    Heap dump contains 74.750 objects, 3.214.360 bytes in total.\n@@ -377,30 +376,30 @@\n-             449.993     124.302.944    Object[]\n-             656.318      31.629.792    byte[]\n-             661.645      26.465.800    com.jetbrains.cidr.lang.symbols.cpp.OCMacroSymbol\n-             610.393      19.532.576    java.util.HashMap$Node\n-             177.670       6.566.216    int[]\n-             273.211       6.557.064    java.util.ArrayList\n-              93.361       2.987.552    java.util.concurrent.ConcurrentHashMap$Node\n-              59.492       1.903.744    com.jetbrains.cidr.lang.types.OCReferenceTypeSimple\n-              39.348       1.573.920    com.jetbrains.cidr.lang.types.OCPointerType\n-              62.699       1.504.776    java.lang.String\n-              32.250       1.290.000    org.languagetool.rules.patterns.PatternToken\n-              50.661       1.215.864    com.intellij.openapi.util.Pair\n-               7.536       1.033.872    long[]\n-              25.407       1.016.280    com.jetbrains.cidr.lang.types.OCIntType\n-              63.268       1.012.288    java.util.concurrent.atomic.AtomicReference\n-              29.521         944.672    com.intellij.openapi.vfs.newvfs.impl.VirtualFileImpl\n-              56.675         906.800    java.lang.Integer\n-              21.845         699.040    com.jetbrains.cidr.lang.symbols.OCSymbolReference$GlobalReference\n-              42.183         674.928    java.lang.Object\n-              27.481         659.544    com.intellij.util.keyFMap.OneElementFMap\n-              19.553         625.696    com.jetbrains.cidr.lang.symbols.ComplexTextRange\n-              14.071         562.840    com.intellij.reference.SoftReference\n-               7.288         524.736    java.lang.reflect.Field\n-              21.370         512.880    com.jetbrains.cidr.lang.symbols.OCQualifiedName\n-              12.625         505.000    java.lang.ref.SoftReference\n-              10.224         490.752    java.util.HashMap\n-               2.362         481.664    boolean[]\n-               9.355         449.040    com.jetbrains.cidr.lang.preprocessor.OCMacroForeignLeafType\n-              17.707         424.968    com.jetbrains.cidr.lang.symbols.cpp.OCIncludeSymbol$IncludePath\n-              10.533         421.320    com.jetbrains.cidr.lang.preprocessor.OCMacroReferenceTokenType\n+               1.657         107.144    byte[]\n+               1.489          49.176    Object[]\n+               1.514          24.224    java.lang.Object\n+                   2          16.448    char[]\n+               1.004          16.064    java.lang.Integer\n+                 409          13.088    java.util.HashMap$Node\n+                 580          10.224    int[]\n+                 516           8.256    java.lang.invoke.ResolvedMethodName\n+                 234           7.488    java.lang.module.ModuleDescriptor$Requires\n+                 226           5.424    java.lang.module.ModuleDescriptor$Exports\n+                 155           3.720    java.lang.String\n+                 199           3.184    java.lang.invoke.MethodHandleNatives$CallSiteContext\n+                 127           3.048    java.util.ImmutableCollections$Set12\n+                 115           2.760    java.util.ArrayList\n+                  63           2.016    jdk.internal.jimage.ImageReader$Resource\n+                  70           1.680    jdk.internal.jimage.ImageLocation\n+                  64           1.536    jdk.internal.module.ServicesCatalog$ServiceProvider\n+                  51           1.224    java.util.ImmutableCollections$List12\n+                  36           1.152    java.util.concurrent.ConcurrentHashMap$Node\n+                  16           1.024    java.util.concurrent.ConcurrentHashMap\n+                  55             880    com.sun.tools.javac.util.Context$Key\n+                  27             864    com.sun.tools.javac.util.SharedNameTable$NameImpl\n+                   4             832    long[]\n+                  10             400    java.security.AccessControlContext\n+                   6             240    java.lang.invoke.MemberName\n+                   3             240    short[]\n+                  13             208    java.lang.ref.ReferenceQueue$Lock\n+                   6             192    java.util.ResourceBundle$KeyElementReference\n+                   4             192    java.util.HashMap\n+                   5             160    java.lang.invoke.LambdaForm$Name\n@@ -408,1 +407,1 @@\n-             307.252       9.288.760    <other>\n+                  38           1.008    <other>\n@@ -410,1 +409,1 @@\n-           3.873.297     246.765.328    <total>\n+               8.698         284.096    <total>\n@@ -412,3 +411,1 @@\n-    ...\n-\n-    === com.jetbrains.cidr.lang.symbols.cpp.OCMacroSymbol Potential Duplicates\n+    === byte[] Potential Duplicates\n@@ -423,8 +420,16 @@\n-               1.044          41.760    (hash: b3d7653a1b45cdc7)\n-               1.044          41.760    (hash: dba02bbacfe63eb7)\n-               1.044          41.760    (hash: 31921ef6e494ca97)\n-               1.044          41.760    (hash: c2b4fb34818eb9ed)\n-               1.044          41.760    (hash: 31f79d3ace1161ca)\n-               1.044          41.760    (hash: 13f841d0438614c5)\n-               1.044          41.760    (hash: d45cdf077af876ad)\n-               1.044          41.760    (hash: 1b27a7c37cafc70e)\n+                   2          16.416    byte[8192] { 0, ..., 0 }\n+                  10             320    byte[13] (hash: f6ca3f5a7125e6c0)\n+                   3             312    byte[82] (hash: 7d82d9f161dd916f)\n+                   7             224    byte[13] (hash: f6ca3f5b04a5c512)\n+                   1             208    byte[190] (hash: 71b141781c48b4c0)\n+                   1             168    byte[148] (hash: d951002a3b1499bb)\n+                   1             160    byte[140] (hash: 8236c4418b62023d)\n+                   1             152    byte[136] (hash: a354c5ca3e461646)\n+                   1             144    byte[124] (hash: ed563ca054ab3627)\n+                   1             144    byte[122] (hash: 5011087831e30920)\n+                   1             136    byte[120] (hash: 1f3c75b7ebcceac6)\n+                   2             128    byte[43] (hash: e07d31ada1c0122)\n+                   4             128    byte[16] (hash: e5c5a7766de82562)\n+                   2             128    byte[43] (hash: f8e8a02b5ad3decd)\n+                   2             128    byte[48] (hash: 905ece899b79bfd)\n+\n@@ -463,10 +468,10 @@\n-                   0            -512    Integer[256]\n-                   0          -1.536    Integer[512]\n-                 999          12.400    Integer[1024]\n-               1.004           8.384    Integer[2048]\n-               1.004             192    Integer[4096]\n-               1.004         -16.192    Integer[8192]\n-               1.004         -48.960    Integer[16384]\n-               1.004        -114.496    Integer[32768]\n-               1.004        -245.568    Integer[65536]\n-               1.004        -507.712    Integer[131072]\n+                   0            -512    Integer[-128; 256)\n+                   0          -1.536    Integer[-128; 512)\n+                 999          12.400    Integer[-128; 1024)\n+               1.004           8.384    Integer[-128; 2048)\n+               1.004             192    Integer[-128; 4096)\n+               1.004         -16.192    Integer[-128; 8192)\n+               1.004         -48.960    Integer[-128; 16384)\n+               1.004        -114.496    Integer[-128; 32768)\n+               1.004        -245.568    Integer[-128; 65536)\n+               1.004        -507.712    Integer[-128; 131072)\n","filename":"README.md","additions":98,"deletions":93,"binary":false,"changes":191,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-                arrayTable.addLine(cl.getSimpleName() + \"[\" + limit + \"]\", autoBoxCountWins.count(limit), sizes);\n+                arrayTable.addLine(cl.getSimpleName() + \"[-128; \" + limit + \")\", autoBoxCountWins.count(limit), sizes);\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpBoxes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}