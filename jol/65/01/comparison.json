{"files":[{"patch":"@@ -83,0 +83,1 @@\n+    private final boolean isZGC;\n@@ -95,0 +96,2 @@\n+        generationalZGCEnabled = VMOptions.isGenerationalZGCEnabled();\n+\n@@ -122,0 +125,2 @@\n+        generationalZGCEnabled = VMOptions.isGenerationalZGCEnabled();\n+\n@@ -648,1 +653,1 @@\n-            return address;\n+            return generationalZGCEnabled ? ZGCAddress.uncolorize(address) : address;\n@@ -664,1 +669,1 @@\n-            return address;\n+            return generationalZGCEnabled ? ZGCAddress.uncolorize(address) : address;\n@@ -680,1 +685,1 @@\n-            return address;\n+            return generationalZGCEnabled ? ZGCAddress.uncolorize(address) : address;\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/HotspotUnsafe.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -70,0 +70,5 @@\n+    public static boolean isGenerationalZGCEnabled() {\n+        return ManagementFactory.getGarbageCollectorMXBeans().stream()\n+                .anyMatch(bean -> \"ZGC Minor Cycles\".equals(bean.getName()));\n+    }\n+\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/VMOptions.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,28 @@\n+package org.openjdk.jol.vm;\n+\n+\/**\n+ * Utility class for normalizing ZGC addresses by removing color bits\n+ *\n+ * @see <a href=\"https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/gc\/z\/zAddress.hpp\">Layout description<\/a>\n+ *\/\n+class ZGCAddress {\n+    private static final long REMAPPED_BITS_MASK = 0b1111L << 12;\n+    private static final long CLEAR_UNUSED_BITS_MASK = (1L << 46) - 1;\n+    private static final long COLOR_BITS_COUNT = 16;\n+    private static final boolean IS_ARM64 = \"aarch64\".equals(System.getProperty(\"os.arch\"));\n+\n+    static long uncolorize(long address) {\n+        return isAarch ? uncolorizeAarch(address) : uncolorizeNonAarch(address);\n+    }\n+\n+    private static long uncolorizeNonAarch(long address) {\n+        int shift = Long.numberOfTrailingZeros(address & REMAPPED_BITS_MASK) + 1;\n+        return (address >> shift) & CLEAR_UNUSED_BITS_MASK;\n+    }\n+\n+    private static long uncolorizeAarch(long address) {\n+        return (address >> COLOR_BITS_COUNT) & CLEAR_UNUSED_BITS_MASK;\n+    }\n+\n+    private ZGCAddress() {}\n+}\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/vm\/ZGCAddress.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+package org.openjdk.jol.vm;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ZGCAddressTest {\n+    @Test\n+    public void testGenerationalZGCAddressUncolorize() {\n+        final long[] coloredAddresses;\n+        if (\"aarch64\".equals(System.getProperty(\"os.arch\"))) {\n+            coloredAddresses = new long[] {\n+                \/\/ remapped bits inverted, no address and color overlap\n+                0b00100100_00000000_00000000_00111011_10100110_10111000_11100101_00010000L,\n+                0b00100100_00000000_00000000_00111011_10100110_10111000_11010101_00010000L,\n+                0b00100100_00000000_00000000_00111011_10100110_10111000_10110101_00010000L,\n+                0b00100100_00000000_00000000_00111011_10100110_10111000_01110101_00010000L\n+            };\n+        } else {\n+            coloredAddresses = new long[] {\n+                0b00100100_00000000_00000000_00111011_10100110_10111000_10000101_00010000L,\n+                0b00010010_00000000_00000000_00011101_11010011_01011100_01000101_00010000L,\n+                0b00001001_00000000_00000000_00001110_11101001_10101110_00100101_00010000L,\n+                0b00000100_10000000_00000000_00000111_01110100_11010111_00010101_00010000L,\n+            };\n+        }\n+\n+        for (long address : coloredAddresses) {\n+            assertEquals(\n+                    0b100100_00000000_00000000_00111011_10100110_10111000L,\n+                    ZGCAddress.uncolorize(address)\n+            );\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/vm\/ZGCAddressTest.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"}]}