{"files":[{"patch":"@@ -203,0 +203,1 @@\n+                ClassData cd = classDatas.get(klassId);\n@@ -204,2 +205,4 @@\n-                ClassData thisCd = classDatas.get(klassId);\n-                thisCd.addSuperClassData(superCd);\n+                if (superCd == null) {\n+                    throw new IllegalStateException(\"Parser error: no super class data for \" + cd.name() + \" (\" + key + \")\");\n+                }\n+                cd.addSuperClassData(superCd);\n@@ -375,0 +378,3 @@\n+        if (cpInstance == 0) {\n+            classFields.putEmpty(klassID);\n+        }\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/heap\/HeapDumpReader.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        return name + \": \" + type;\n+        return klass + \".\" + name + \": \" + type;\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/info\/FieldData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,8 @@\n+    public void putEmpty(K k) {\n+        List<V> vs = map.get(k);\n+        if (vs == null) {\n+            vs = new ArrayList<>();\n+            map.put(k, vs);\n+        }\n+    }\n+\n","filename":"jol-core\/src\/main\/java\/org\/openjdk\/jol\/util\/Multimap.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -14,0 +14,2 @@\n+  private static final String PREFIX = \"org.openjdk.jol.info.ClassDataTest.Class\";\n+\n@@ -15,3 +17,3 @@\n-    int c1f1;\n-    int c1f2;\n-    int c1f3;\n+    int f1;\n+    int f2;\n+    int f3;\n@@ -21,3 +23,3 @@\n-    int c2f1;\n-    int c2f2;\n-    int c2f3;\n+    int f1;\n+    int f2;\n+    int f3;\n@@ -27,4 +29,4 @@\n-    int c3f1;\n-    int c3f2;\n-    int c3f3;\n-    Object c3f4;\n+    int f1;\n+    int f2;\n+    int f3;\n+    Object f4;\n@@ -45,1 +47,1 @@\n-    assertEquals(\"[c3f1: int, c3f2: int, c3f3: int, c3f4: java.lang.Object]\", ownFields.toString());\n+    assertEquals(\"[\" + PREFIX + \"3.f1: int, \" +  PREFIX + \"3.f2: int, \" + PREFIX + \"3.f3: int, \" + PREFIX + \"3.f4: java.lang.Object]\", ownFields.toString());\n@@ -62,1 +64,1 @@\n-    assertEquals(\"[c1f1: int, c1f2: int, c1f3: int]\", classFields.toString());\n+    assertEquals(\"[\" + PREFIX + \"1.f1: int, \" + PREFIX + \"1.f2: int, \" + PREFIX + \"1.f3: int]\", classFields.toString());\n@@ -73,1 +75,1 @@\n-    assertEquals(\"[c2f1: int, c2f2: int, c2f3: int]\", classFields.toString());\n+    assertEquals(\"[\" + PREFIX + \"2.f1: int, \" + PREFIX + \"2.f2: int, \" + PREFIX + \"2.f3: int]\", classFields.toString());\n@@ -85,1 +87,1 @@\n-    assertEquals(\"[c3f1: int, c3f2: int, c3f3: int, c3f4: java.lang.Object]\", classFields.toString());\n+    assertEquals(\"[\" + PREFIX + \"3.f1: int, \" +  PREFIX + \"3.f2: int, \" + PREFIX + \"3.f3: int, \" + PREFIX + \"3.f4: java.lang.Object]\", classFields.toString());\n","filename":"jol-core\/src\/test\/java\/org\/openjdk\/jol\/info\/ClassDataTest.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}