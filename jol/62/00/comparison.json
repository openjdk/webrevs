{"files":[{"patch":"@@ -84,0 +84,1 @@\n+        out.println();\n@@ -92,1 +93,1 @@\n-        final String msg_noCoops_ccp =      \"64-bit, no comp refs, but comp classes (>32 GB heap, default align)\";\n+        final String msg_noCoops_ccp =      \"64-bit, no comp refs, but comp class ptrs (>32 GB heap, default align)\";\n@@ -94,5 +95,4 @@\n-        final String msg_coops_align16 =    \"64-bit, comp refs with large align (   32..64GB heap,  16-byte align)\";\n-        final String msg_coops_align32 =    \"64-bit, comp refs with large align (  64..128GB heap,  32-byte align)\";\n-        final String msg_coops_align64 =    \"64-bit, comp refs with large align ( 128..256GB heap,  64-byte align)\";\n-        final String msg_coops_align128 =   \"64-bit, comp refs with large align ( 256..512GB heap, 128-byte align)\";\n-        final String msg_coops_align256 =   \"64-bit, comp refs with large align (512..1024GB heap, 256-byte align)\";\n+        final String msg_coops_align16 =    \"64-bit, comp refs with large align (  32..64GB heap,  16-byte align)\";\n+        final String msg_coops_align32 =    \"64-bit, comp refs with large align ( 64..128GB heap,  32-byte align)\";\n+        final String msg_coops_align64 =    \"64-bit, comp refs with large align (128..256GB heap,  64-byte align)\";\n+        final String msg_coops_align128 =   \"64-bit, comp refs with large align (256..512GB heap, 128-byte align)\";\n@@ -122,1 +122,0 @@\n-        long jdk8_coops_align256 =  computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 256), 8));\n@@ -135,1 +134,0 @@\n-            printLine(msg_coops_align256,       rawSize,    jdk8_coops_align256,    jdk8_coops);\n@@ -145,1 +143,0 @@\n-        long jdk15_coops_align256 = computeWithLayouter(data, new HotSpotLayouter(new Model64(true, true, 256), 15));\n@@ -147,1 +144,1 @@\n-        out.println(\"=== Stock 64-bit OpenJDK (JDK >= 15): Field Layout Improvements\");\n+        out.println(\"=== Stock 64-bit OpenJDK (JDK >= 15): Better Compressed Class Pointers, New Field Layouter\");\n@@ -162,1 +159,0 @@\n-            printLine(msg_coops_align256,   rawSize,    jdk15_coops_align256,   jdk15_coops,    jdk8_coops_align256);\n@@ -175,1 +171,0 @@\n-        long jdkLilliput_coops_align256 =   computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256,   1), 99));\n@@ -189,1 +184,0 @@\n-            printLine(msg_coops_align256,   rawSize, jdkLilliput_coops_align256,   jdkLilliput_coops, jdk8_coops_align256,    jdk15_coops_align256);\n@@ -202,1 +196,0 @@\n-        long jdkLilliput32_coops_align256 = computeWithLayouter(data, new HotSpotLayouter(new Model64_Lilliput(true, 256,   2), 99));\n@@ -216,1 +209,0 @@\n-            printLine(msg_coops_align256, rawSize,  jdkLilliput32_coops_align256, jdkLilliput32_coops, jdk8_coops_align256,   jdk15_coops_align256,   jdkLilliput_coops_align256);\n","filename":"jol-cli\/src\/main\/java\/org\/openjdk\/jol\/operations\/HeapDumpEstimates.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"}]}