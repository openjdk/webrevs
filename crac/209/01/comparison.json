{"files":[{"patch":"@@ -644,0 +644,1 @@\n+  postcond(os::javaTimeNanos() >= checkpoint_nanos);\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-            long before = System.currentTimeMillis();\n+            long before = System.nanoTime();\n@@ -121,2 +121,5 @@\n-            long after = System.currentTimeMillis();\n-            if (after - before < WAIT_TIME_MILLIS) {\n+            long after = System.nanoTime();\n+            if (after - before < TimeUnit.MILLISECONDS.toNanos(WAIT_TIME_MILLIS)) {\n+                long actualWaitTimeMillis = TimeUnit.NANOSECONDS.toMillis(after - before); \/\/ Rounds down\n+                long nanosRemainder = (after - before) - TimeUnit.MILLISECONDS.toNanos(actualWaitTimeMillis);\n+                String actualWaitTimeStr = actualWaitTimeMillis + \" ms + \" + nanosRemainder + \" ns\";\n@@ -125,1 +128,1 @@\n-                    System.err.println(Thread.currentThread().getName() + \" took: \" + (after - before) + \" ms\");\n+                    System.err.println(Thread.currentThread().getName() + \" took: \" + actualWaitTimeStr);\n@@ -128,1 +131,1 @@\n-                            Thread.currentThread().getName() + \" was too short: \" + (after - before) + \" ms\"));\n+                            Thread.currentThread().getName() + \" was too short: \" + actualWaitTimeStr));\n","filename":"test\/jdk\/jdk\/crac\/java\/lang\/System\/TimedWaitingTest.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}