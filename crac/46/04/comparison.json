{"files":[{"patch":"@@ -96,0 +96,63 @@\n+\n+#include <sys\/wait.h>\n+\n+static int is_checkpoint = 0;\n+\n+static void parse_checkpoint(const char *arg) {\n+    if (!is_checkpoint) {\n+        const char *checkpoint_arg = \"-XX:CRaCCheckpointTo\";\n+        const int len = strlen(checkpoint_arg);\n+        if (0 == strncmp(arg, checkpoint_arg, len)) {\n+            is_checkpoint = 1;\n+        }\n+    }\n+}\n+\n+static pid_t g_child_pid = -1;\n+\n+static int wait_for_children() {\n+    int status = -1;\n+    pid_t pid;\n+    do {\n+        int st = 0;\n+        pid = wait(&st);\n+        if (pid == g_child_pid) {\n+            status = st;\n+        }\n+    } while (-1 != pid || ECHILD != errno);\n+\n+    if (WIFEXITED(status)) {\n+        return WEXITSTATUS(status);\n+    }\n+\n+    return 1;\n+}\n+\n+static void sighandler(int sig, siginfo_t *info, void *param) {\n+    if (0 < g_child_pid) {\n+        kill(g_child_pid, sig);\n+    }\n+}\n+\n+static void setup_sighandler() {\n+    struct sigaction sigact;\n+    sigfillset(&sigact.sa_mask);\n+    sigact.sa_flags = SA_SIGINFO;\n+    sigact.sa_sigaction = sighandler;\n+\n+    for (int sig = 1; sig < __SIGRTMIN; ++sig) {\n+        if (sig == SIGKILL || sig == SIGSTOP) {\n+            continue;\n+        }\n+        if (-1 == sigaction(sig, &sigact, NULL)) {\n+            perror(\"sigaction\");\n+        }\n+    }\n+\n+    sigset_t allset;\n+    sigfillset(&allset);\n+    if (-1 == sigprocmask(SIG_UNBLOCK, &allset, NULL)) {\n+        perror(\"sigprocmask\");\n+    }\n+}\n+\n@@ -186,0 +249,1 @@\n+            parse_checkpoint(argv[i]);\n@@ -205,0 +269,12 @@\n+\n+    \/\/ Avoid unexpected process completion when checkpointing under docker container run\n+    \/\/ by creating the main process waiting for children before exit.\n+    if (is_checkpoint && 1 == getpid()) {\n+        g_child_pid = fork();\n+        if (0 < g_child_pid) {\n+            \/\/ The main process should forward signals to the child.\n+            setup_sighandler();\n+            const int status = wait_for_children();\n+            exit(status);\n+        }\n+    }\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":76,"deletions":0,"binary":false,"changes":76,"status":"modified"}]}