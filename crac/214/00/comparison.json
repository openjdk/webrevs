{"files":[{"patch":"@@ -54,1 +54,1 @@\n-  crlib_conf_t *(*create_conf)();\n+  crlib_conf_t *(*create_conf)(void);\n","filename":"src\/hotspot\/share\/include\/crlib\/crlib.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,3 +40,4 @@\n-  \/\/ Called by the restoring application to pass data to the restored application.\n-  \/\/ 'data' must not be null, size must be greater than 0.\n-  \/\/ The engine may impose limits on the data size and return false if it is not accepted.\n+  \/\/ Called by the restoring application to pass data to the restored application, returns true on\n+  \/\/ success.\n+  \/\/ If 'size' is positive 'data' must reference 'size' bytes of data. If 'size' is 0 any previously\n+  \/\/ recorded restore data is cleared.\n@@ -46,1 +47,1 @@\n-  \/\/ Copies up to 'size' > 0 bytes of the data into 'buf' != null.\n+  \/\/ Copies up to 'size' bytes of the data into 'buf' of appropriate size.\n","filename":"src\/hotspot\/share\/include\/crlib\/crlib_restore_data.h","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -234,3 +234,5 @@\n-    if (size != sizeof(_restore_data)) {\n-      fprintf(stderr, CREXEC \"unsupported size of restore data: %zu - only %zu is supported\\n\",\n-              size, sizeof(_restore_data));\n+    constexpr const size_t supported_size = sizeof(_restore_data);\n+    if (size > 0 && size != supported_size) {\n+      fprintf(stderr,\n+              CREXEC \"unsupported size of restore data: %zu was requested but only %zu is supported\\n\",\n+              size, supported_size);\n@@ -239,1 +241,5 @@\n-    _restore_data = *static_cast<const int *>(data);\n+    if (size > 0) {\n+      memcpy(&_restore_data, data, size);\n+    } else {\n+      _restore_data = 0;\n+    }\n@@ -244,4 +250,3 @@\n-    if (size < sizeof(_restore_data)) {\n-      fprintf(stderr, CREXEC \"can only provide >= %zu bytes of restore data but %zu was requested\\n\",\n-              sizeof(_restore_data), size);\n-      return 0;\n+    constexpr const size_t available_size = sizeof(_restore_data);\n+    if (size > 0) {\n+      memcpy(buf, &_restore_data, size < available_size ? size : available_size);\n@@ -249,2 +254,1 @@\n-    *static_cast<int *>(buf) = _restore_data;\n-    return sizeof(_restore_data);\n+    return available_size;\n","filename":"src\/java.base\/share\/native\/libcrexec\/crexec.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"}]}