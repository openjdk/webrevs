{"files":[{"patch":"@@ -42,15 +42,15 @@\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  true   false  INF     true   128\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  true   true   1       false  1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  true   true   100     true   100\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  false  INF     false  1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1       false  1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1       true   1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   200     true   200\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   1000    false  1000\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   2000    true   2000   1000\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   0       true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   -10     true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   blabla  true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1     4194200\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest  false  true   4194303 true   -1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  true   false  INF     true   128\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  true   true   1       false  1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  true   true   100     true   100\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  false  INF     false  1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   1       false  1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   1       true   1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   200     true   200\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   1000    false  1000\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   2000    true   2000   1000\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   0       true   -1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   -10     true   -1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   blabla  true   -1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   5000000 true   -1     4194200\n+ * @run driver\/timeout=120 jdk.test.lib.crac.CracTest  false  true   4194303 true   -1\n","filename":"test\/jdk\/jdk\/crac\/ContainerPidAdjustmentTest.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n- * @run driver\/timeout=60 jdk.test.lib.crac.CracTest NativePRNGBlocking 100\n@@ -40,0 +39,4 @@\n+\n+\/* NativePRNGBlocking is exluded as on some machines \/dev\/random is exhausted\n+ * too soon, making the test running too long. *\/\n+\n","filename":"test\/jdk\/jdk\/crac\/SecureRandom\/InterlockTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -56,2 +56,1 @@\n-        \"test.jdk.jdk.crac.java.lang.Thread.crac.JoinSleepWaitOnCRPauseTest.eps\",\n-        \"100000000\")); \/\/ default: 0.1s\n+        \"test.jdk.jdk.crac.java.lang.Thread.crac.JoinSleepWaitOnCRPauseTest.eps\", getEnv(\"crac_JoinSleepWaitOnCRPauseTest_eps\", \"500000000\"))); \/\/ default: 500ms\n@@ -59,1 +58,1 @@\n-    private static final long CRPAUSE_MS = 4000;\n+    private static final long CRPAUSE_MS = 40 * EPS_NS \/ 1_000_000;\n@@ -68,0 +67,7 @@\n+    private static String getEnv(String name, String defaultValue) {\n+        String val = System.getenv(name);\n+        return val == null ?\n+                defaultValue :\n+                val;\n+    }\n+\n@@ -120,0 +126,1 @@\n+        long tStart = System.nanoTime();\n@@ -127,4 +134,3 @@\n-        \/\/ it is expected that EPS_NS is enough to complete the join\/sleep\n-        \/\/ on restore => expecting that 5 * EPS_NS is enough to enter them\n-        long dt = 5 * EPS_NS;\n-        Thread.sleep(dt \/ 1_000_000);\n+        \/\/ it is expected that EPS_NS is enough to complete the join\/sleep on restore\n+        \/\/ so we are expecting that it should be enough to enter them\n+        Thread.sleep(EPS_NS \/ 1_000_000);\n@@ -133,2 +139,1 @@\n-            throw new AssertionError(\"was not able to enter \" + op\n-                + \" in \" + dt + \" ns\");\n+            throw new AssertionError(String.format(\"The created thread was not able to enter %s in %s ns\", op, EPS_NS));\n@@ -145,4 +150,5 @@\n-        long pause = tAfterRestore - tBeforeCheckpoint;\n-        if (pause < 1_000_000 * CRPAUSE_MS - EPS_NS) {\n-            throw new AssertionError(\n-                \"the CR pause was less than \" + CRPAUSE_MS + \" ms\");\n+        System.out.println(String.format(\"The test started at %s\", tStart));\n+\n+        long pause = (tAfterRestore - tBeforeCheckpoint)\/1_000_000;\n+        if (pause < CRPAUSE_MS) {\n+            throw new AssertionError(String.format(\"the CR pause %s ms was less than the expected pause %s ms\", pause, CRPAUSE_MS));\n@@ -151,3 +157,2 @@\n-        if (tDone < tBeforeCheckpoint + EPS_NS) {\n-            throw new AssertionError(\n-                op + \" has finished before the checkpoint\");\n+        if (tDone < tBeforeCheckpoint) {\n+            throw new AssertionError(String.format(\"%s has finished before the checkpoint at %s ms\", op, tDone\/1_000_000));\n@@ -159,3 +164,3 @@\n-            throw new RuntimeException(\n-                \"the \" + op + \"ing thread has finished in \" + eps + \" ns \"\n-                + \"after the restore (expected: \" + EPS_NS + \" ns)\");\n+            throw new RuntimeException(String.format(\n+                \"The %sing thread has finished at %s in %s ns \"\n+                + \"before\/after the restore (expected was: %s ns)\", op, tDone, eps, EPS_NS));\n","filename":"test\/jdk\/jdk\/crac\/java\/lang\/Thread\/JoinSleepWaitOnCRPauseTest.java","additions":24,"deletions":19,"binary":false,"changes":43,"status":"modified"}]}