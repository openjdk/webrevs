{"files":[{"patch":"@@ -28,3 +28,8 @@\n-            \/\/ On Windows, path with forward slashes starting with '\/' is an accepted classpath\n-            \/\/ element, even though it might seem as invalid and parsing in Path.of(...) would fail.\n-            CLASSPATH_ENTRIES[i] = new File(items[i]).toPath();\n+            try {\n+                \/\/ On Windows, path with forward slashes starting with '\/' is an accepted classpath\n+                \/\/ element, even though it might seem as invalid and parsing in Path.of(...) would fail.\n+                CLASSPATH_ENTRIES[i] = new File(items[i]).toPath();\n+            } catch (Exception e) {\n+                \/\/ Ignore any exception parsing the path: URLClassPath.toFileURL() ignores IOExceptions\n+                \/\/ as well, here we might get InvalidPathException\n+            }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKFileResource.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.io.File;\n@@ -41,0 +42,1 @@\n+            classpath += File.pathSeparator + \"file:\/C:\\\\some\\\\invalid\/path\";\n","filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/ClasspathParseTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}