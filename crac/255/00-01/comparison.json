{"files":[{"patch":"@@ -26,1 +26,0 @@\n-import java.nio.file.Files;\n@@ -29,0 +28,1 @@\n+import jdk.crac.Core;\n@@ -30,0 +30,1 @@\n+import jdk.test.lib.crac.CracEngine;\n@@ -48,1 +49,7 @@\n-        final var builder = new CracBuilder()\n+        \/\/ Create an empty image which will pass VM's own checks. It may contain\n+        \/\/ CPU features, for example.\n+        new CracBuilder().engine(CracEngine.SIMULATE)\n+            .main(Main.class).args(\"true\")\n+            .startCheckpoint().waitForSuccess();\n+\n+        new CracBuilder()\n@@ -52,6 +59,3 @@\n-            .captureOutput(true);\n-\n-        \/\/ Make VM's internal image checks pass\n-        Files.createDirectory(builder.imageDir());\n-\n-        builder.startRestoreWithArgs(null, List.of(Main.class.getName())).outputAnalyzer()\n+            .captureOutput(true)\n+            .startRestoreWithArgs(null, List.of(Main.class.getName(), \"false\"))\n+            .outputAnalyzer()\n@@ -63,2 +67,6 @@\n-        public static void main(String[] args) {\n-            System.out.println(MAIN_MSG);\n+        public static void main(String[] args) throws Exception {\n+            if (Boolean.parseBoolean(args[0])) {\n+                Core.checkpointRestore();\n+            } else {\n+                System.out.println(MAIN_MSG);\n+            }\n","filename":"test\/jdk\/jdk\/crac\/ignoreRestore\/EngineFailureTest.java","additions":18,"deletions":10,"binary":false,"changes":28,"status":"modified"}]}