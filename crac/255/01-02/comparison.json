{"files":[{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.util.List;\n+\n+import jdk.test.lib.crac.CracBuilder;\n+\n+\/**\n+ * @test\n+ * @summary If CRaCIgnoreRestoreIfUnavailable is specified and there are no CPU\n+ *          features recorded in the image VM should proceed without restoring.\n+ * @requires (os.arch == \"amd64\" | os.arch == \"x86_64\")\n+ * @library \/test\/lib\n+ *\/\n+public class NoCPUFeaturesTest {\n+    private static final String MAIN_MSG = \"Hello, world!\";\n+\n+    public static void main(String[] args) throws Exception {\n+        final var builder = new CracBuilder()\n+            .vmOption(\"-XX:+CRaCIgnoreRestoreIfUnavailable\")\n+            .forwardClasspathOnRestore(true)\n+            .captureOutput(true);\n+\n+        \/\/ Create an empty image without CPU features data\n+        Files.createDirectory(builder.imageDir());\n+\n+        builder.startRestoreWithArgs(null, List.of(Main.class.getName(), \"false\"))\n+            .outputAnalyzer().shouldContain(\"incompatible CPU features\").shouldContain(MAIN_MSG);\n+    }\n+\n+    public static class Main {\n+        public static void main(String[] args) throws Exception {\n+            System.out.println(MAIN_MSG);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/ignoreRestore\/NoCPUFeaturesTest.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}