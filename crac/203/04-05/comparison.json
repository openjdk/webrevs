{"files":[{"patch":"@@ -179,1 +179,3 @@\n-    JfrUpcalls::request_start_after_restore(JavaThread::current());\n+    JavaThread *const THREAD = JavaThread::current();\n+    JfrUpcalls::request_start_after_restore(THREAD);\n+    assert(!HAS_PENDING_EXCEPTION, \"pending exception\");\n","filename":"src\/hotspot\/share\/jfr\/jfr.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -230,2 +230,1 @@\n-    log_error(jfr, system)(\"JfrUpcall failed for %s\", unhide_internal_types_sym->as_C_string());\n-    return;\n+    log_error(jfr, system)(\"JfrUpcall failed for %s\", request_start_after_restore_sym->as_C_string());\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -468,3 +468,4 @@\n-  JavaThread* const thread = JavaThread::current();\n-  validate_recording_options(thread);\n-  launch_command_line_recordings(thread);\n+  JavaThread* const THREAD = JavaThread::current();\n+  validate_recording_options(THREAD);\n+  launch_command_line_recordings(THREAD);\n+  assert(!HAS_PENDING_EXCEPTION, \"pending exception\");\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrRecorder.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    private static JfrResource jfrResource = new JfrResource();\n+    private static final JfrResource jfrResource = new JfrResource();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/Core.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,24 @@\n+\/*\n+ * Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n@@ -25,1 +49,1 @@\n-        this.startRecording = runnable;\n+        startRecording = runnable;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JfrResource.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"}]}