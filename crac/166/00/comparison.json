{"files":[{"patch":"@@ -53,0 +53,1 @@\n+define_pd_global(ccstr, CREngine, \"simengine\");\n","filename":"src\/hotspot\/os\/bsd\/globals_bsd.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-\n+define_pd_global(ccstr, CREngine, \"criuengine\");\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+define_pd_global(ccstr, CREngine, \"simengine\");\n","filename":"src\/hotspot\/os\/windows\/globals_windows.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+    WINDOWS_ONLY(strcat(path + pathlen, \".exe\"));\n@@ -152,1 +153,1 @@\n-      warning(\"Could not find %s: %s\", path, os::strerror(errno));\n+      warning(\"Could not find CREngine %s: %s\", path, os::strerror(errno));\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1964,1 +1964,1 @@\n-  product(ccstr, CREngine, \"criuengine\", RESTORE_SETTABLE,                  \\\n+  product_pd(ccstr, CREngine, RESTORE_SETTABLE,                             \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ import org.junit.Test;\n+\n+ import jdk.test.lib.process.OutputAnalyzer;\n+ import jdk.test.lib.process.ProcessTools;\n+ \/*\n+  * @test CracVersionTest\n+  * @library \/test\/lib\n+  * @build CracVersionTest\n+  * @run junit\/othervm CracVersionTest\n+  *\/\n+ public class CracVersionTest {\n+     @Test\n+     public void test_default() throws Exception {\n+         ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                 \"-XX:CRaCCheckpointTo=cr\",\n+                 \"-version\");\n+         OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+         out.shouldHaveExitValue(0);\n+     }\n+\n+     private final String UNKNOWN_ENGINE = \"unknown\";\n+\n+     @Test\n+     public void test_fail() throws Exception {\n+         ProcessBuilder pb = ProcessTools.createTestJavaProcessBuilder(\n+                 \"-XX:CRaCCheckpointTo=cr\",\n+                 \"-XX:CREngine=\" + UNKNOWN_ENGINE,\n+                 \"-version\");\n+         OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+         out.shouldHaveExitValue(1);\n+         if (System.getProperty(\"os.name\").contains(\"Windows\")) {\n+            out.shouldContain(UNKNOWN_ENGINE + \".exe:\");\n+         } else {\n+            out.shouldContain(UNKNOWN_ENGINE + \":\");\n+         }\n+     }\n+ }\n","filename":"test\/jdk\/jdk\/crac\/CracVersionTest.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -5,2 +5,2 @@\n-    PAUSE(System.getProperty(\"os.name\").contains(\"Windows\") ? \"pauseengine.exe\" : \"pauseengine\"),\n-    SIMULATE(System.getProperty(\"os.name\").contains(\"Windows\") ? \"simengine.exe\" : \"simengine\");\n+    PAUSE(\"pauseengine\"),\n+    SIMULATE(\"simengine\");\n","filename":"test\/lib\/jdk\/test\/lib\/crac\/CracEngine.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}