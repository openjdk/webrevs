{"files":[{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Azul Systems, 385 Moffett Park Drive, Suite 115, Sunnyvale\n+ * CA 94089 USA or visit www.azul.com if you need additional information or\n+ * have any questions.\n+ *\/\n+\n+import java.util.List;\n+\n+import jdk.crac.Core;\n+import jdk.test.lib.crac.CracBuilder;\n+import jdk.test.lib.crac.CracTest;\n+import jdk.test.lib.crac.CracTestArg;\n+\n+\/**\n+ * @test\n+ * @summary Tests System.exit() being called in the new main.\n+ * @requires (os.family == \"linux\")\n+ * @library \/test\/lib\n+ * @build ExitFromNewMainTest\n+ * @run driver jdk.test.lib.crac.CracTest true\n+ * @run driver jdk.test.lib.crac.CracTest false\n+ *\/\n+public class ExitFromNewMainTest implements CracTest {\n+    private static final String NEW_MAIN_CLASS = \"ExitFromNewMainTest$InternalMain\";\n+    private static final String RESTORE_OLD_MSG = \"RESTORED IN OLD MAIN\";\n+    private static final String RESTORE_NEW_MSG = \"RESTORED IN NEW MAIN\";\n+\n+    @CracTestArg(0)\n+    boolean useExit;\n+\n+    @Override\n+    public void test() throws Exception {\n+        final var builder = new CracBuilder().captureOutput(true);\n+        builder.doCheckpoint();\n+\n+        final var out = builder\n+            .startRestoreWithArgs(null, List.of(NEW_MAIN_CLASS, Boolean.toString(useExit)))\n+            .waitForSuccess().outputAnalyzer();\n+\n+        out.stdoutShouldContain(RESTORE_NEW_MSG);\n+        if (useExit) {\n+            out.stdoutShouldNotContain(RESTORE_OLD_MSG);\n+        } else {\n+            out.stdoutShouldContain(RESTORE_OLD_MSG);\n+        }\n+    }\n+\n+    @Override\n+    public void exec() throws Exception {\n+        Core.checkpointRestore();\n+        System.out.println(RESTORE_OLD_MSG);\n+    }\n+\n+    public static class InternalMain {\n+        public static void main(String[] args) {\n+            System.out.println(RESTORE_NEW_MSG);\n+            if (Boolean.parseBoolean(args[0])) {\n+                System.exit(0);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/newArgs\/ExitFromNewMainTest.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -42,2 +42,0 @@\n- * @run driver jdk.test.lib.crac.CracTest SUCCESS_CONTINUE\n- * @run driver jdk.test.lib.crac.CracTest SUCCESS_EXIT\n@@ -53,2 +51,0 @@\n-        SUCCESS_CONTINUE,\n-        SUCCESS_EXIT,\n@@ -70,1 +66,1 @@\n-            out = builder.startRestoreWithArgs(null, List.of(NEW_MAIN_CLASS, variant.toString()))\n+            out = builder.startRestoreWithArgs(null, List.of(NEW_MAIN_CLASS))\n@@ -73,8 +69,1 @@\n-        switch (variant) {\n-            case SUCCESS_CONTINUE ->\n-                out.stdoutShouldContain(RESTORE_NEW_MSG).stdoutShouldContain(RESTORE_OLD_MSG);\n-            case SUCCESS_EXIT ->\n-                out.stdoutShouldContain(RESTORE_NEW_MSG).stdoutShouldNotContain(RESTORE_OLD_MSG);\n-            case CHECKPOINT_EXCEPTION, RESTORE_EXCEPTION ->\n-                out.stdoutShouldNotContain(RESTORE_NEW_MSG).stdoutShouldNotContain(RESTORE_OLD_MSG);\n-        }\n+        out.stdoutShouldNotContain(RESTORE_NEW_MSG).stdoutShouldNotContain(RESTORE_OLD_MSG);\n@@ -134,3 +123,0 @@\n-            if (Variant.valueOf(args[0]) == Variant.SUCCESS_EXIT) {\n-                System.exit(0);\n-            }\n","filename":"test\/jdk\/jdk\/crac\/newArgs\/FailedCheckpointRestoreTest.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"}]}