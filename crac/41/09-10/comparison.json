{"files":[{"patch":"@@ -6032,0 +6032,1 @@\n+  GrowableArray<pid_t> all_threads_done;\n@@ -6033,1 +6034,1 @@\n-  template<class Callback> bool all_threads(Callback callback) const {\n+  template<class Callback> bool all_threads(Callback callback) {\n@@ -6035,38 +6036,19 @@\n-    GrowableArray<pid_t> done;\n-    bool retry;\n-    do {\n-      retry = false;\n-      DIR *dir = opendir(dirname);\n-      if (dir == NULL) {\n-        tty->print_cr(\"JVM: Error opening %s: %m\", dirname);\n-        return false;\n-      }\n-      pid_t tid = gettid();\n-      struct dirent *ent;\n-      while (errno = 0, ent = readdir(dir)) {\n-        const char *name = ent->d_name;\n-        if (strcmp(name, \".\") == 0)\n-          continue;\n-        if (strcmp(name, \"..\") == 0)\n-          continue;\n-        char *endptr;\n-        unsigned long ul = strtoul(name, &endptr, 10);\n-        pid_t ent_tid = ul;\n-        if (ul >= LONG_MAX || ent_tid != (long) ul) {\n-          tty->print_cr(\"JVM: Error parsing %s entry \\\"%s\\\"\", dirname, name);\n-          return false;\n-        }\n-        if (ent_tid == tid)\n-          continue;\n-        if (!done.append_if_missing(ent_tid))\n-          continue;\n-        retry = true;\n-        callback(ent_tid);\n-      }\n-      if (errno) {\n-        tty->print_cr(\"JVM: Error reading %s: %m\", dirname);\n-        return false;\n-      }\n-      if (closedir(dir)) {\n-        tty->print_cr(\"JVM: Error closing %s: %m\", dirname);\n-        return false;\n+    DIR *dir = opendir(dirname);\n+    if (dir == NULL) {\n+      tty->print_cr(\"JVM: Error opening %s: %m\", dirname);\n+      return false;\n+    }\n+    pid_t tid = gettid();\n+    struct dirent *ent;\n+    while (errno = 0, ent = readdir(dir)) {\n+      const char *name = ent->d_name;\n+      if (strcmp(name, \".\") == 0)\n+\tcontinue;\n+      if (strcmp(name, \"..\") == 0)\n+\tcontinue;\n+      char *endptr;\n+      unsigned long ul = strtoul(name, &endptr, 10);\n+      pid_t ent_tid = ul;\n+      if (ul >= LONG_MAX || ent_tid != (long) ul) {\n+\ttty->print_cr(\"JVM: Error parsing %s entry \\\"%s\\\"\", dirname, name);\n+\treturn false;\n@@ -6074,1 +6056,14 @@\n-    } while (retry);\n+      if (ent_tid == tid)\n+\tcontinue;\n+      if (!all_threads_done.append_if_missing(ent_tid))\n+\tcontinue;\n+      callback(ent_tid);\n+    }\n+    if (errno) {\n+      tty->print_cr(\"JVM: Error reading %s: %m\", dirname);\n+      return false;\n+    }\n+    if (closedir(dir)) {\n+      tty->print_cr(\"JVM: Error closing %s: %m\", dirname);\n+      return false;\n+    }\n@@ -6167,5 +6162,19 @@\n-    all_threads([&](pid_t ent_tid) {\n-      if (!tgkill(getpid(), ent_tid, signo)) {\n-        ++count;\n-      } else {\n-        tty->print_cr(\"JVM: Error sending signal %d to TID %ld\", signo, (long)ent_tid);\n+    bool retry;\n+    all_threads_done.clear();\n+    do {\n+      retry = false;\n+      all_threads([&](pid_t ent_tid) {\n+\tif (!tgkill(getpid(), ent_tid, signo)) {\n+\t  ++count;\n+\t  retry = true;\n+\t} else {\n+\t  tty->print_cr(\"JVM: Error sending signal %d to TID %ld\", signo, (long)ent_tid);\n+\t  frozen = false;\n+\t}\n+      });\n+      int err;\n+      err = pthread_mutex_lock(&signaled_and_in_handler_mutex);\n+      assert(!err, \"pthread error\");\n+      while (signaled < count) {\n+\terr = pthread_cond_wait(&signaled_cond, &signaled_and_in_handler_mutex);\n+\tassert(!err, \"pthread error\");\n@@ -6173,6 +6182,2 @@\n-    });\n-    int err;\n-    err = pthread_mutex_lock(&signaled_and_in_handler_mutex);\n-    assert(!err, \"pthread error\");\n-    while (signaled < count) {\n-      err = pthread_cond_wait(&signaled_cond, &signaled_and_in_handler_mutex);\n+      assert(signaled == count, \"JVM: Freeze: signaled == count\");\n+      err = pthread_mutex_unlock(&signaled_and_in_handler_mutex);\n@@ -6180,4 +6185,1 @@\n-    }\n-    assert(signaled == count, \"JVM: Freeze: signaled == count\");\n-    err = pthread_mutex_unlock(&signaled_and_in_handler_mutex);\n-    assert(!err, \"pthread error\");\n+    } while (retry && frozen);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":57,"deletions":55,"binary":false,"changes":112,"status":"modified"}]}