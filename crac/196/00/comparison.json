{"files":[{"patch":"@@ -467,1 +467,1 @@\n-static bool read_all(int fd, char *dest, size_t n) {\n+static bool read_all(int fd, const char *filename, char *dest, size_t n) {\n@@ -472,0 +472,1 @@\n+      log_error(crac)(\"Unexpected end of file %s (read %zu\/%zu bytes)\", filename, rd, n);\n@@ -477,0 +478,1 @@\n+      log_error(crac)(\"I\/O error reading %s: %s\", filename, os::strerror(errno));\n@@ -484,0 +486,14 @@\n+\/\/ RAII object to close file descriptor\n+class FDGuard {\n+private:\n+  const char *_what;\n+  int _fd;\n+public:\n+  FDGuard(const char *what, int fd): _what(what), _fd(fd) {}\n+  ~FDGuard() {\n+    if (_fd >= 0 && ::close(_fd) != 0) {\n+      log_error(crac)(\"Cannot close %s: %s\", _what, os::strerror(errno));\n+    }\n+  }\n+};\n+\n@@ -485,3 +501,5 @@\n-  int fd = ::open(\"\/proc\/sys\/kernel\/random\/boot_id\", O_RDONLY);\n-  if (fd < 0 || !read_all(fd, dest, UUID_LENGTH)) {\n-    perror(\"CRaC: Cannot read system boot ID\");\n+  const char *boot_id_file = \"\/proc\/sys\/kernel\/random\/boot_id\";\n+  int fd = ::open(boot_id_file, O_RDONLY);\n+  FDGuard guard(\"system boot ID file\", fd);\n+  if (fd < 0 || !read_all(fd, boot_id_file, dest, UUID_LENGTH)) {\n+    log_error(crac)(\"Cannot read system boot ID\");\n@@ -491,2 +509,6 @@\n-  if (!read_all(fd, &c, 1) || c != '\\n') {\n-    perror(\"CRaC: system boot ID does not end with newline\");\n+  ssize_t r = ::read(fd, &c, 1);\n+  if (r == 0) {\n+    \/\/ Some systems don't end boot-id with a newline\n+    return true;\n+  } else if (r < 0) {\n+    log_error(crac)(\"Failure reading system boot ID: %s\", os::strerror(errno));\n@@ -494,3 +516,2 @@\n-  }\n-  if (::read(fd, &c, 1) != 0) {\n-    perror(\"CRaC: Unexpected data\/error reading system boot ID\");\n+  } else if (c != '\\n') {\n+    log_error(crac)(\"System boot ID does not end with a newline\");\n@@ -499,2 +520,7 @@\n-  if (::close(fd) != 0) {\n-    perror(\"CRaC: Cannot close system boot ID file\");\n+  r = ::read(fd, &c, 1);\n+  if (r == 0) {\n+    return true;\n+  } else if (r < 0) {\n+    log_error(crac)(\"Error reading system boot ID: %s\", os::strerror(errno));\n+  } else { \/\/ r > 0\n+    log_error(crac)(\"Unexpected data in system boot ID\");\n@@ -502,1 +528,1 @@\n-  return true;\n+  return false;\n","filename":"src\/hotspot\/os\/linux\/crac_linux.cpp","additions":38,"deletions":12,"binary":false,"changes":50,"status":"modified"}]}