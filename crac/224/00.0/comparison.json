{"files":[{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2012, 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2012, 2024 SAP SE. All rights reserved.\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,4 +48,0 @@\n-#ifndef UNIX_PATH_MAX\n-#define UNIX_PATH_MAX   sizeof(((struct sockaddr_un *)0)->sun_path)\n-#endif\n-\n@@ -75,29 +71,0 @@\n-\/\/ Supporting class to help split a buffer into individual components\n-class ArgumentIterator : public StackObj {\n- private:\n-  char* _pos;\n-  char* _end;\n- public:\n-  ArgumentIterator(char* arg_buffer, size_t arg_size) {\n-    _pos = arg_buffer;\n-    _end = _pos + arg_size - 1;\n-  }\n-  char* next() {\n-    if (*_pos == '\\0') {\n-      \/\/ advance the iterator if possible (null arguments)\n-      if (_pos < _end) {\n-        _pos += 1;\n-      }\n-      return nullptr;\n-    }\n-    char* res = _pos;\n-    char* next_pos = strchr(_pos, '\\0');\n-    if (next_pos < _end)  {\n-      next_pos++;\n-    }\n-    _pos = next_pos;\n-    return res;\n-  }\n-};\n-\n-\n@@ -189,97 +156,0 @@\n-\/\/ Given a socket that is connected to a peer we read the request and\n-\/\/ create an AttachOperation. As the socket is blocking there is potential\n-\/\/ for a denial-of-service if the peer does not response. However this happens\n-\/\/ after the peer credentials have been checked and in the worst case it just\n-\/\/ means that the attach listener thread is blocked.\n-\/\/\n-PosixAttachOperation* PosixAttachListener::read_request(int s) {\n-  char ver_str[8];\n-  os::snprintf_checked(ver_str, sizeof(ver_str), \"%d\", ATTACH_PROTOCOL_VER);\n-\n-  \/\/ The request is a sequence of strings so we first figure out the\n-  \/\/ expected count and the maximum possible length of the request.\n-  \/\/ The request is:\n-  \/\/   <ver>0<cmd>0<arg>0<arg>0<arg>0\n-  \/\/ where <ver> is the protocol version (1), <cmd> is the command\n-  \/\/ name (\"load\", \"datadump\", ...), and <arg> is an argument\n-  int expected_str_count = 2 + AttachOperation::arg_count_max;\n-  const size_t max_len = (sizeof(ver_str) + 1) + (AttachOperation::name_length_max + 1) +\n-    AttachOperation::arg_count_max*(AttachOperation::arg_length_max + 1);\n-\n-  char buf[max_len];\n-  int str_count = 0;\n-\n-  \/\/ Read until all (expected) strings have been read, the buffer is\n-  \/\/ full, or EOF.\n-\n-  size_t off = 0;\n-  size_t left = max_len;\n-\n-  do {\n-    ssize_t n;\n-    RESTARTABLE(read(s, buf+off, left), n);\n-    assert(n <= checked_cast<ssize_t>(left), \"buffer was too small, impossible!\");\n-    buf[max_len - 1] = '\\0';\n-    if (n == -1) {\n-      return nullptr;      \/\/ reset by peer or other error\n-    }\n-    if (n == 0) {\n-      break;\n-    }\n-    for (ssize_t i=0; i<n; i++) {\n-      if (buf[off+i] == 0) {\n-        \/\/ EOS found\n-        str_count++;\n-\n-        \/\/ The first string is <ver> so check it now to\n-        \/\/ check for protocol mismatch\n-        if (str_count == 1) {\n-          if ((strlen(buf) != strlen(ver_str)) ||\n-              (atoi(buf) != ATTACH_PROTOCOL_VER)) {\n-            char msg[32];\n-            os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", ATTACH_ERROR_BADVERSION);\n-            write_fully(s, msg, strlen(msg));\n-            return nullptr;\n-          }\n-        }\n-      }\n-    }\n-    off += n;\n-    left -= n;\n-  } while (left > 0 && str_count < expected_str_count);\n-\n-  if (str_count != expected_str_count) {\n-    return nullptr;        \/\/ incomplete request\n-  }\n-\n-  \/\/ parse request\n-\n-  ArgumentIterator args(buf, (max_len)-left);\n-\n-  \/\/ version already checked\n-  char* v = args.next();\n-\n-  char* name = args.next();\n-  if (name == nullptr || strlen(name) > AttachOperation::name_length_max) {\n-    return nullptr;\n-  }\n-\n-  PosixAttachOperation* op = new PosixAttachOperation(name);\n-\n-  for (int i=0; i<AttachOperation::arg_count_max; i++) {\n-    char* arg = args.next();\n-    if (arg == nullptr) {\n-      op->set_arg(i, nullptr);\n-    } else {\n-      if (strlen(arg) > AttachOperation::arg_length_max) {\n-        delete op;\n-        return nullptr;\n-      }\n-      op->set_arg(i, arg);\n-    }\n-  }\n-\n-  op->set_socket(s);\n-  return op;\n-}\n-\n@@ -340,3 +210,3 @@\n-    PosixAttachOperation* op = read_request(s);\n-    if (op == nullptr) {\n-      ::close(s);\n+    PosixAttachOperation* op = new PosixAttachOperation(s);\n+    if (!op->read_request()) {\n+      delete op;\n@@ -351,15 +221,0 @@\n-\/\/ write the given buffer to the socket\n-int PosixAttachListener::write_fully(int s, char* buf, size_t len) {\n-  do {\n-    ssize_t n = ::write(s, buf, len);\n-    if (n == -1) {\n-      if (errno != EINTR) return -1;\n-    } else {\n-      buf += n;\n-      len -= n;\n-    }\n-  }\n-  while (len > 0);\n-  return 0;\n-}\n-\n@@ -405,9 +260,1 @@\n-  char msg[32];\n-  os::snprintf_checked(msg, sizeof(msg), \"%d\\n\", result);\n-  int rc = PosixAttachListener::write_fully(this->socket(), msg, strlen(msg));\n-\n-  \/\/ write any result data\n-  if (rc == 0) {\n-    PosixAttachListener::write_fully(this->socket(), (char*) st->base(), st->size());\n-    ::shutdown(this->socket(), SHUT_RDWR);\n-  }\n+  write_reply(&_socket_channel, result, st);\n@@ -415,2 +262,1 @@\n-  \/\/ done\n-  ::close(this->socket());\n+  _socket_channel.close();\n@@ -472,0 +318,2 @@\n+  AttachListener::set_supported_version(ATTACH_API_V2);\n+\n","filename":"src\/hotspot\/os\/posix\/attachListener_posix.cpp","additions":7,"deletions":159,"binary":false,"changes":166,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-#define UNIX_PATH_MAX   sizeof(((struct sockaddr_un *)0)->sun_path)\n+#define UNIX_PATH_MAX   sizeof(sockaddr_un::sun_path)\n@@ -56,3 +56,0 @@\n-  \/\/ reads a request from the given connected socket\n-  static PosixAttachOperation* read_request(int s);\n-\n@@ -60,7 +57,0 @@\n-  enum {\n-    ATTACH_PROTOCOL_VER = 1                     \/\/ protocol version\n-  };\n-  enum {\n-    ATTACH_ERROR_BADVERSION     = 101           \/\/ error codes\n-  };\n-\n@@ -87,3 +77,0 @@\n-  \/\/ write the given buffer to a socket\n-  static int write_fully(int s, char* buf, size_t len);\n-\n","filename":"src\/hotspot\/os\/posix\/attachListener_posix.hpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1062,1 +1062,1 @@\n-  mapAddress = (char*)::mmap((char*)0, size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);\n+  mapAddress = (char*)::mmap(nullptr, size, PROT_READ|PROT_WRITE, MAP_SHARED, fd, 0);\n@@ -1217,1 +1217,1 @@\n-  char* mapAddress = (char*)::mmap((char*)0, size, mmap_prot, MAP_SHARED, fd, 0);\n+  char* mapAddress = (char*)::mmap(nullptr, size, mmap_prot, MAP_SHARED, fd, 0);\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"os_posix.hpp\"\n@@ -35,0 +36,43 @@\n+class SocketChannel : public AttachOperation::RequestReader, public AttachOperation::ReplyWriter {\n+private:\n+  int _socket;\n+public:\n+  SocketChannel(int socket) : _socket(socket) {}\n+  ~SocketChannel() {\n+    close();\n+  }\n+\n+  int socket() const {\n+    return _socket;\n+  }\n+\n+  bool opened() const {\n+    return _socket != -1;\n+  }\n+\n+  void close() {\n+    if (opened()) {\n+      ::close(_socket);\n+      _socket = -1;\n+    }\n+  }\n+\n+  \/\/ RequestReader\n+  int read(void* buffer, int size) override {\n+    ssize_t n;\n+    RESTARTABLE(::read(_socket, buffer, (size_t)size), n);\n+    return checked_cast<int>(n);\n+  }\n+\n+  \/\/ ReplyWriter\n+  int write(const void* buffer, int size) override {\n+    ssize_t n;\n+    RESTARTABLE(::write(_socket, buffer, size), n);\n+    return checked_cast<int>(n);\n+  }\n+  \/\/ called after writing all data\n+  void flush() override {\n+    ::shutdown(_socket, SHUT_RDWR);\n+  }\n+};\n+\n@@ -38,1 +82,1 @@\n-  int _socket;\n+  SocketChannel _socket_channel;\n@@ -43,1 +87,1 @@\n-  void complete(jint res, bufferedStream* st);\n+  void complete(jint res, bufferedStream* st) override;\n@@ -47,2 +91,3 @@\n-  void set_socket(int s)                                { _socket = s; }\n-  int socket() const                                    { return _socket; }\n+  int socket() {\n+    return _socket_channel.socket();;\n+  }\n@@ -50,2 +95,1 @@\n-  PosixAttachOperation(char* name) : AttachOperation(name) {\n-    set_socket(-1);\n+  PosixAttachOperation(int socket) : AttachOperation(), _socket_channel(socket) {\n@@ -54,0 +98,4 @@\n+\n+  bool read_request() {\n+    return AttachOperation::read_request(&_socket_channel, &_socket_channel);\n+  }\n","filename":"src\/hotspot\/os\/posix\/posixAttachOperation.hpp","additions":54,"deletions":6,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-                                     bool is_boot_append, bool from_class_path_attr) : ClassPathEntry() {\n+                                     bool is_boot_append, bool from_class_path_attr, bool multi_release) : ClassPathEntry() {\n@@ -310,0 +310,1 @@\n+  _multi_release = multi_release;\n@@ -753,1 +754,2 @@\n-                                                     bool from_class_path_attr) {\n+                                                     bool from_class_path_attr,\n+                                                     bool is_multi_release) {\n@@ -766,1 +768,1 @@\n-      new_entry = new ClassPathZipEntry(zip, path, is_boot_append, from_class_path_attr);\n+      new_entry = new ClassPathZipEntry(zip, path, is_boot_append, from_class_path_attr, is_multi_release);\n@@ -799,1 +801,1 @@\n-          return new ClassPathZipEntry(zip, canonical_path, is_boot_append, false);\n+          return new ClassPathZipEntry(zip, canonical_path, is_boot_append, false, false);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+  virtual bool is_multi_release_jar() const { return false; }\n+  virtual void set_multi_release_jar() {}\n@@ -94,0 +96,1 @@\n+  bool _multi_release;       \/\/ multi-release jar\n@@ -96,0 +99,2 @@\n+  bool is_multi_release_jar() const { return _multi_release; }\n+  void set_multi_release_jar() { _multi_release = true; }\n@@ -98,1 +103,1 @@\n-  ClassPathZipEntry(jzfile* zip, const char* zip_name, bool is_boot_append, bool from_class_path_attr);\n+  ClassPathZipEntry(jzfile* zip, const char* zip_name, bool is_boot_append, bool from_class_path_attr, bool multi_release);\n@@ -264,1 +269,2 @@\n-                                                 bool from_class_path_attr);\n+                                                 bool from_class_path_attr,\n+                                                 bool is_multi_release = false);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -102,0 +102,1 @@\n+#include \"memory\/memoryReserver.hpp\"\n@@ -1216,0 +1217,10 @@\n+\n+  \/\/ When a page size is given we don't want to mix large\n+  \/\/ and normal pages. If the size is not a multiple of the\n+  \/\/ page size it will be aligned up to achieve this.\n+  size_t alignment = os::vm_allocation_granularity();\n+  if (preferred_page_size != os::vm_page_size()) {\n+    alignment = MAX2(preferred_page_size, alignment);\n+    size = align_up(size, alignment);\n+  }\n+\n@@ -1217,1 +1228,4 @@\n-  ReservedSpace rs(size, preferred_page_size);\n+  ReservedSpace rs = MemoryReserver::reserve(size,\n+                                             alignment,\n+                                             preferred_page_size);\n+\n@@ -1292,1 +1306,1 @@\n-  G1CardTable* ct = new G1CardTable(heap_rs.region());\n+  G1CardTable* ct = new G1CardTable(_reserved);\n@@ -1444,1 +1458,1 @@\n-  FullGCForwarding::initialize(heap_rs.region());\n+  FullGCForwarding::initialize(_reserved);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -74,0 +74,1 @@\n+#include \"memory\/memoryReserver.hpp\"\n@@ -244,1 +245,7 @@\n-  _reserved_byte_size = align_up(raw_bytes, MAX2(page_sz, granularity));\n+  const size_t rs_align = MAX2(page_sz, granularity);\n+\n+  _reserved_byte_size = align_up(raw_bytes, rs_align);\n+\n+  ReservedSpace rs = MemoryReserver::reserve(_reserved_byte_size,\n+                                             rs_align,\n+                                             page_sz);\n@@ -246,3 +253,0 @@\n-  const size_t rs_align = page_sz == os::vm_page_size() ? 0 :\n-    MAX2(page_sz, granularity);\n-  ReservedSpace rs(_reserved_byte_size, rs_align, page_sz);\n@@ -261,1 +265,4 @@\n-    rs.release();\n+    if (rs.is_reserved()) {\n+      MemoryReserver::release(rs);\n+      rs = {};\n+    }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+#include \"memory\/reservedSpace.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"memory\/reservedSpace.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3323,2 +3323,3 @@\n-\/\/ in the safepoint protocol, thread suspension, thread interruption, or anything of that\n-\/\/ nature. JavaThreads will be \"in native\" when using this API from JDK code.\n+\/\/ in the safepoint protocol, thread suspension, thread interruption, or most things of that\n+\/\/ nature, except JavaThreads will be blocked by VM_Exit::block_if_vm_exited if the VM has\n+\/\/ shutdown. JavaThreads will be \"in native\" when using this API from JDK code.\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include \"prims\/jvmtiAgentList.hpp\"\n@@ -1124,0 +1125,25 @@\n+void os::print_jvmti_agent_info(outputStream* st) {\n+#if INCLUDE_JVMTI\n+  const JvmtiAgentList::Iterator it = JvmtiAgentList::all();\n+  if (it.has_next()) {\n+    st->print_cr(\"JVMTI agents:\");\n+  } else {\n+    st->print_cr(\"JVMTI agents: none\");\n+  }\n+  while (it.has_next()) {\n+    const JvmtiAgent* agent = it.next();\n+    if (agent != nullptr) {\n+      const char* dyninfo = agent->is_dynamic() ? \"dynamic \" : \"\";\n+      const char* instrumentinfo = agent->is_instrument_lib() ? \"instrumentlib \" : \"\";\n+      const char* loadinfo = agent->is_loaded() ? \"loaded\" : \"not loaded\";\n+      const char* initinfo = agent->is_initialized() ? \"initialized\" : \"not initialized\";\n+      const char* optionsinfo = agent->options();\n+      const char* pathinfo = agent->os_lib_path();\n+      if (optionsinfo == nullptr) optionsinfo = \"none\";\n+      if (pathinfo == nullptr) pathinfo = \"none\";\n+      st->print_cr(\"%s path:%s, %s, %s, %s%soptions:%s\", agent->name(), pathinfo, loadinfo, initinfo, dyninfo, instrumentinfo, optionsinfo);\n+    }\n+  }\n+#endif\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -827,0 +827,1 @@\n+  static void print_jvmti_agent_info(outputStream* st);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2032,2 +2032,0 @@\n-  declare_constant(JVM_ACC_WRITTEN_FLAGS)                                 \\\n-                                                                          \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-#if defined(LINUX) || defined(_WIN64)\n+#if defined(LINUX) || defined(_WIN64) || defined(__APPLE__)\n@@ -150,1 +150,1 @@\n-#endif \/\/ LINUX or WINDOWS\n+#endif \/\/ LINUX or WINDOWS or MacOS\n@@ -1193,1 +1193,1 @@\n-#if defined(LINUX) || defined(_WIN64)\n+#if defined(LINUX) || defined(_WIN64) || defined(__APPLE__)\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -825,1 +825,1 @@\n-#if defined(LINUX) || defined(_WIN64)\n+#if defined(LINUX) || defined(_WIN64) || defined(__APPLE__)\n@@ -832,1 +832,1 @@\n-    return \"Prints an annotated process memory map of the VM process (linux and Windows only).\";\n+    return \"Prints an annotated process memory map of the VM process (linux, Windows and MacOS only).\";\n@@ -845,1 +845,1 @@\n-    return \"Dumps an annotated process memory map to an output file (linux and Windows only).\";\n+    return \"Dumps an annotated process memory map to an output file (linux, Windows and MacOS only).\";\n@@ -851,1 +851,1 @@\n-#endif \/\/ LINUX or WINDOWS\n+#endif \/\/ LINUX, WINDOWS or MACOS\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -573,3 +573,2 @@\n-     * <p> If the endpoint is an unresolved {@link InetSocketAddress}, or the\n-     * connection cannot be established, then the socket is closed, and an\n-     * {@link IOException} is thrown.\n+     * <p> If the connection cannot be established, then the socket is closed,\n+     * and an {@link IOException} is thrown.\n@@ -595,2 +594,2 @@\n-     * @throws  UnknownHostException if the endpoint is an unresolved\n-     *          {@link InetSocketAddress}\n+     * @throws  UnknownHostException if the connection could not be established\n+     *          because the endpoint is an unresolved {@link InetSocketAddress}\n@@ -613,3 +612,2 @@\n-     * <p> If the endpoint is an unresolved {@link InetSocketAddress}, the\n-     * connection cannot be established, or the timeout expires before the\n-     * connection is established, then the socket is closed, and an\n+     * <p> If the connection cannot be established, or the timeout expires\n+     * before the connection is established, then the socket is closed, and an\n@@ -638,2 +636,2 @@\n-     * @throws  UnknownHostException if the endpoint is an unresolved\n-     *          {@link InetSocketAddress}\n+     * @throws  UnknownHostException if the connection could not be established\n+     *          because the endpoint is an unresolved {@link InetSocketAddress}\n@@ -664,6 +662,0 @@\n-        if (epoint.isUnresolved()) {\n-            var uhe = new UnknownHostException(epoint.getHostName());\n-            closeSuppressingExceptions(uhe);\n-            throw uhe;\n-        }\n-\n","filename":"src\/java.base\/share\/classes\/java\/net\/Socket.java","additions":8,"deletions":16,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -157,1 +157,0 @@\n-        java.se, \/\/ for ParticipatesInPreview\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -140,2 +140,0 @@\n-serviceability\/dcmd\/vm\/SystemDumpMapTest.java 8340401 windows-all\n-serviceability\/dcmd\/vm\/SystemMapTest.java 8340401 windows-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -549,2 +549,0 @@\n-com\/sun\/management\/DiagnosticCommandMBean\/DcmdMBeanPermissionsTest.java 8340401 windows-all\n-\n@@ -556,3 +554,3 @@\n-sun\/management\/jdp\/JdpDefaultsTest.java                         8308807 aix-ppc64\n-sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8308807 aix-ppc64\n-sun\/management\/jdp\/JdpSpecificAddressTest.java                  8308807 aix-ppc64\n+sun\/management\/jdp\/JdpDefaultsTest.java                         8308807,8241865 aix-ppc64,macosx-aarch64\n+sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8308807,8241865 aix-ppc64,macosx-aarch64\n+sun\/management\/jdp\/JdpSpecificAddressTest.java                  8308807,8241865 aix-ppc64,macosx-aarch64\n","filename":"test\/jdk\/ProblemList.txt","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    public DockerRunOptions addDockerOpts(String... opts) {\n+    public final DockerRunOptions addDockerOpts(String... opts) {\n@@ -74,1 +74,1 @@\n-    public DockerRunOptions addJavaOpts(String... opts) {\n+    public final DockerRunOptions addJavaOpts(String... opts) {\n@@ -79,1 +79,1 @@\n-    public DockerRunOptions addJavaOptsAppended(String... opts) {\n+    public final DockerRunOptions addJavaOptsAppended(String... opts) {\n@@ -84,1 +84,1 @@\n-    public DockerRunOptions addClassOptions(String... opts) {\n+    public final DockerRunOptions addClassOptions(String... opts) {\n","filename":"test\/lib\/jdk\/test\/lib\/containers\/docker\/DockerRunOptions.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}