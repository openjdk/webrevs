{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import java.security.PrivilegedAction;\n@@ -46,2 +45,0 @@\n-import java.util.function.Consumer;\n-import java.util.function.Function;\n@@ -197,20 +194,5 @@\n-        if (newProperties != null && newProperties.length > 0) {\n-            \/\/ Do not use lambda here since lambda will introduce registration\n-            \/\/ during checkpoint, which may cause dead loop.\n-            Arrays.stream(newProperties).map(new Function<String, String[]>() {\n-                @Override\n-                public String[] apply(String propStr) {\n-                    return propStr.split(\"=\", 2);\n-                }\n-            }).forEach(new Consumer<String[]>() {\n-                @Override\n-                public void accept(String[] pair) {\n-                    AccessController.doPrivileged(\n-                            new PrivilegedAction<String>() {\n-                                @Override\n-                                public String run() {\n-                                    return System.setProperty(pair[0], pair.length == 2 ? pair[1] : \"\");\n-                                }\n-                            });\n-                }\n-            });\n+        if (newProperties != null) {\n+            for (var prop : newProperties) {\n+                String[] pair = prop.split(\"=\", 2); \/\/ There should always be a \"=\"\n+                System.setProperty(pair[0], pair[1]);\n+            }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/mirror\/Core.java","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Azul Systems, 385 Moffett Park Drive, Suite 115, Sunnyvale\n+ * CA 94089 USA or visit www.azul.com if you need additional information or\n+ * have any questions.\n+ *\/\n+\n+import jdk.crac.Core;\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.crac.CracBuilder;\n+import jdk.test.lib.crac.CracTest;\n+\n+\/**\n+ * @test\n+ * @requires (os.family == \"linux\")\n+ * @library \/test\/lib\n+ * @build NewPropertiesTest\n+ * @run driver jdk.test.lib.crac.CracTest\n+ *\/\n+public class NewPropertiesTest implements CracTest {\n+    @Override\n+    public void test() throws Exception {\n+        final var builder = new CracBuilder();\n+\n+        builder.javaOption(\"old\", \"old val\");\n+\n+        builder.doCheckpoint();\n+\n+        builder.javaOption(\"old\", \"new val\");\n+        builder.javaOption(\"new1\", \"foo=bar\");\n+        builder.vmOption(\"-Dnew2=\");\n+        builder.vmOption(\"-Dnew3\");\n+\n+        builder.doRestore();\n+    }\n+\n+    @Override\n+    public void exec() throws Exception {\n+        Asserts.assertEquals(System.getProperty(\"old\"), \"old val\");\n+        Asserts.assertNull(System.getProperty(\"new1\"));\n+        Asserts.assertNull(System.getProperty(\"new2\"));\n+        Asserts.assertNull(System.getProperty(\"new3\"));\n+\n+        Core.checkpointRestore();\n+\n+        Asserts.assertEquals(System.getProperty(\"old\"), \"new val\");\n+        Asserts.assertEquals(System.getProperty(\"new1\"), \"foo=bar\");\n+        Asserts.assertEquals(System.getProperty(\"new2\"), \"\");\n+        Asserts.assertEquals(System.getProperty(\"new3\"), \"\");\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/NewPropertiesTest.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}