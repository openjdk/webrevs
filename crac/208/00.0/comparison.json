{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":".github\/workflows\/build-cross-compile.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,0 @@\n-          - 'hs\/tier1 compiler not-xcomp'\n@@ -108,4 +107,0 @@\n-          - test-name: 'hs\/tier1 compiler not-xcomp'\n-            test-suite: 'test\/hotspot\/jtreg\/:tier1_compiler_not_xcomp'\n-            debug-suffix: -debug\n-\n","filename":".github\/workflows\/test.yml","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"make\/autoconf\/lib-bundled.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -432,2 +432,0 @@\n-STATIC_LIBS_CFLAGS := @STATIC_LIBS_CFLAGS@\n-\n","filename":"make\/autoconf\/spec.gmk.template","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"make\/test\/BuildTestLib.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -167,0 +167,1 @@\n+  decl(ext_Zvbc        , \"Zvbc\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvbc))        \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,4 +39,1 @@\n-        \"enable support for Oprofile profiler\")                         \\\n-                                                                        \\\n-  product(bool, UseLinuxPosixThreadCPUClocks, true,                     \\\n-          \"(Deprecated) enable fast Linux Posix clocks where available\") \\\n+        \"(Deprecated) enable support for Oprofile profiler\")            \\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1495,3 +1495,0 @@\n-  if (!UseLinuxPosixThreadCPUClocks) {\n-    return;\n-  }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -995,1 +995,1 @@\n-  size_t aligned_expand_bytes = ReservedSpace::page_align_size_up(expand_bytes);\n+  size_t aligned_expand_bytes = os::align_up_vm_page_size(expand_bytes);\n@@ -1038,2 +1038,1 @@\n-  size_t aligned_shrink_bytes =\n-    ReservedSpace::page_align_size_down(shrink_bytes);\n+  size_t aligned_shrink_bytes = os::align_down_vm_page_size(shrink_bytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2155,2 +2155,1 @@\n-    \/\/ The next source region is in the current space.  Update src_region_idx\n-    \/\/ and the source address to match src_region_ptr.\n+    \/\/ Found the first non-empty region in the same space.\n@@ -2158,4 +2157,1 @@\n-    HeapWord* const src_region_addr = sd.region_to_addr(src_region_idx);\n-    if (src_region_addr > closure.source()) {\n-      closure.set_source(src_region_addr);\n-    }\n+    closure.set_source(sd.region_to_addr(src_region_idx));\n@@ -2185,3 +2181,0 @@\n-        HeapWord* region_end_addr = region_start_addr + ParallelCompactData::RegionSize;\n-        HeapWord* first_live_word = mark_bitmap()->find_obj_beg(region_start_addr, region_end_addr);\n-        assert(first_live_word < region_end_addr, \"inv\");\n@@ -2191,1 +2184,1 @@\n-        closure.set_source(first_live_word);\n+        closure.set_source(region_start_addr);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/gc\/shared\/gcArguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrRecorder.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3303,1 +3303,1 @@\n-JVM_ENTRY_NO_ENV(jboolean, JVM_IsStaticallyLinked(void))\n+JVM_LEAF(jboolean, JVM_IsStaticallyLinked(void))\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -529,1 +529,0 @@\n-  { \"DontYieldALot\",                JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n@@ -532,0 +531,1 @@\n+  { \"UseOprofile\",                  JDK_Version::jdk(25), JDK_Version::jdk(26), JDK_Version::jdk(27) },\n@@ -541,14 +541,1 @@\n-  { \"UseNotificationThread\",        JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"PreserveAllAnnotations\",       JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"UseEmptySlotsInSupers\",        JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"OldSize\",                      JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-#if defined(X86)\n-  { \"UseRTMLocking\",                JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"UseRTMDeopt\",                  JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"RTMRetryCount\",                JDK_Version::jdk(23), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-#endif \/\/ X86\n-\n-\n-  { \"BaseFootPrintEstimate\",           JDK_Version::undefined(), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"HeapFirstMaximumCompactionCount\", JDK_Version::undefined(), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n-  { \"UseVtableBasedCHA\",               JDK_Version::undefined(), JDK_Version::jdk(24), JDK_Version::jdk(25) },\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"utilities\/align.hpp\"\n@@ -31,1 +32,1 @@\n-#include \"utilities\/ostream.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -33,0 +34,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -409,0 +411,3 @@\n+  static size_t align_up_vm_page_size(size_t size)   { return align_up  (size, os::vm_page_size()); }\n+  static size_t align_down_vm_page_size(size_t size) { return align_down(size, os::vm_page_size()); }\n+\n@@ -449,0 +454,2 @@\n+  static size_t align_up_vm_allocation_granularity(size_t size) { return align_up(size, os::vm_allocation_granularity()); }\n+\n@@ -1041,8 +1048,0 @@\n-  \/\/ FIXME - some random stuff that was in os_windows.hpp\n-#ifdef _WINDOWS\n-  \/\/ strtok_s is the Windows thread-safe equivalent of POSIX strtok_r\n-# define strtok_r strtok_s\n-# define S_ISCHR(mode)   (((mode) & _S_IFCHR) == _S_IFCHR)\n-# define S_ISFIFO(mode)  (((mode) & _S_IFIFO) == _S_IFIFO)\n-#endif\n-\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/util\/Timer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/CleanerImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -322,2 +322,1 @@\n-        java.management,\n-        java.sql.rowset;\n+        java.management;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2924,0 +2924,6 @@\n+## Removed Java Options\n+\n+These `java` options have been removed in JDK @@VERSION_SPECIFICATION@@ and using them results in an error of:\n+\n+>   `Unrecognized VM option` *option-name*\n+\n@@ -2983,50 +2989,0 @@\n-## Removed Java Options\n-\n-These `java` options have been removed in JDK @@VERSION_SPECIFICATION@@ and using them results in an error of:\n-\n->   `Unrecognized VM option` *option-name*\n-\n-`-XX:InitialRAMFraction=`*ratio*\n-:   Sets the initial amount of memory that the JVM may use for the Java heap\n-    before applying ergonomics heuristics as a ratio of the maximum amount\n-    determined as described in the `-XX:MaxRAM` option. The default value is\n-    64.\n-\n-    Use the option `-XX:InitialRAMPercentage` instead.\n-\n-`-XX:MaxRAMFraction=`*ratio*\n-:   Sets the maximum amount of memory that the JVM may use for the Java heap\n-    before applying ergonomics heuristics as a fraction of the maximum amount\n-    determined as described in the `-XX:MaxRAM` option. The default value is 4.\n-\n-    Specifying this option disables automatic use of compressed oops if\n-    the combined result of this and other options influencing the maximum amount\n-    of memory is larger than the range of memory addressable by compressed oops.\n-    See `-XX:UseCompressedOops` for further information about compressed oops.\n-\n-    Use the option `-XX:MaxRAMPercentage` instead.\n-\n-`-XX:MinRAMFraction=`*ratio*\n-:   Sets the maximum amount of memory that the JVM may use for the Java heap\n-    before applying ergonomics heuristics as a fraction of the maximum amount\n-    determined as described in the `-XX:MaxRAM` option for small heaps. A small\n-    heap is a heap of approximately 125 MB. The default value is 2.\n-\n-    Use the option `-XX:MinRAMPercentage` instead.\n-\n-`-XX:+ScavengeBeforeFullGC`\n-:   Enables GC of the young generation before each full GC. This option is\n-    enabled by default. It is recommended that you *don't* disable it, because\n-    scavenging the young generation before a full GC can reduce the number of\n-    objects reachable from the old generation space into the young generation\n-    space. To disable GC of the young generation before each full GC, specify\n-    the option `-XX:-ScavengeBeforeFullGC`.\n-\n-`-Xfuture`\n-:   Enables strict class-file format checks that enforce close conformance to\n-    the class-file format specification. Developers should use this flag when\n-    developing new code. Stricter checks may become the default in future\n-    releases.\n-\n-    Use the option `-Xverify:all` instead.\n-\n@@ -3035,0 +2991,2 @@\n+-   [The `java` Command, Release 24](https:\/\/docs.oracle.com\/en\/java\/javase\/24\/docs\/specs\/man\/java.html)\n+\n","filename":"src\/java.base\/share\/man\/java.md","additions":8,"deletions":50,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -121,4 +121,0 @@\n-# Fails with +UseCompactObjectHeaders on aarch64\n-runtime\/cds\/appcds\/SharedBaseAddress.java 8340212 linux-aarch64,macosx-aarch64\n-runtime\/cds\/SharedBaseAddress.java 8340212 linux-aarch64,macosx-aarch64\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/gc\/TestSmallHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}