{"files":[{"patch":"@@ -169,1 +169,1 @@\n-    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24;\n+    Label detect_486, cpu486, detect_586, std_cpuid1, std_cpuid4, std_cpuid24, check_cpuidb;\n@@ -242,0 +242,13 @@\n+    __ cmpl(rax, 0xc);                  \/\/ Is cpuid(0xD) supported?\n+    __ jccb(Assembler::belowEqual, check_cpuidb);\n+    __ push(rax);\n+\n+    __ movl(rax, 0xd);\n+    __ movl(rcx, 1);     \/\/ Packages level\n+    __ cpuid();\n+\n+    __ lea(rsi, Address(rbp, in_bytes(VM_Version::xfs_cpuidD1_offset())));\n+    __ movl(Address(rsi, 0), rax);\n+\n+    __ pop(rax);\n+    __ bind(check_cpuidb);\n@@ -1213,0 +1226,1 @@\n+  EXCESSIVE(XSAVEC  );\n@@ -3635,0 +3649,3 @@\n+  if (xfs_cpuidD1_eax.bits.xsavec != 0) {\n+    vm_features.set_feature(CPU_XSAVEC);\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -151,0 +151,12 @@\n+  union XfsCpuidDEax {\n+    uint32_t value;\n+    struct {\n+      uint32_t xsaveopt     : 1,\n+               xsavec       : 1,\n+               xgetbv_ecx1  : 1,\n+               xss          : 1,\n+               xfd          : 1,\n+                            : 27;\n+    } bits;\n+  };\n+\n@@ -460,1 +472,2 @@\n-    decl(HTT,               \"htt\",               73) \/* hotspot calls it 'ht' but that is affected by threads_per_core() *\/\n+    decl(HTT,               \"htt\",               73) \/* hotspot calls it 'ht' but that is affected by threads_per_core() *\/ \\\n+    decl(XSAVEC,            \"xsavec\",            74)\n@@ -744,0 +757,4 @@\n+    \/\/ cpuid function 0xD (xsave features and state components)\n+    \/\/ ecx = 1\n+    XfsCpuidDEax xfs_cpuidD1_eax;\n+\n@@ -872,0 +889,1 @@\n+  static ByteSize xfs_cpuidD1_offset() { return byte_offset_of(CpuidInfo, xfs_cpuidD1_eax); }\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}