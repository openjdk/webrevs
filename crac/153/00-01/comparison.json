{"files":[{"patch":"@@ -28,0 +28,2 @@\n+import jdk.test.lib.crac.CracTestArg;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -41,1 +43,2 @@\n- * @run driver\/timeout=30 jdk.test.lib.crac.CracTest\n+ * @run driver\/timeout=30 jdk.test.lib.crac.CracTest false\n+ * @run driver\/timeout=30 jdk.test.lib.crac.CracTest true\n@@ -45,0 +48,4 @@\n+\n+    @CracTestArg(0)\n+    boolean perfDisableSharedMem;\n+\n@@ -48,0 +55,6 @@\n+        builder.captureOutput(true);\n+        if (perfDisableSharedMem) {\n+            builder.vmOption(\"-XX:+PerfDisableSharedMem\");\n+        } else {\n+            builder.vmOption(\"-XX:-PerfDisableSharedMem\");\n+        }\n@@ -56,1 +69,5 @@\n-                throw new IllegalStateException(\"Perf data file did not appear within time limit in the checkpointed process: \" + perfdata);\n+                if (perfDisableSharedMem) {\n+                    break;\n+                } else {\n+                    throw new IllegalStateException(\"Perf data file did not appear within time limit in the checkpointed process: \" + perfdata);\n+                }\n@@ -61,1 +78,7 @@\n-        checkMapped(pid, perfdata.toString());\n+        if (perfDisableSharedMem) {\n+            if (perfdata.toFile().exists()) {\n+                throw new IllegalStateException(\"Perf data file exists altough we run with -XX:+PerfDisableSharedMem\");\n+            }\n+        } else {\n+            checkMapped(pid, perfdata.toString());\n+        }\n@@ -68,0 +91,1 @@\n+        builder.clearVmOptions();\n@@ -72,1 +96,5 @@\n-                throw new IllegalStateException(\"Perf data file did not appear within time limit in the restored process: \" + perfdata);\n+                if (perfDisableSharedMem) {\n+                    break;\n+                } else {\n+                    throw new IllegalStateException(\"Perf data file did not appear within time limit in the restored process: \" + perfdata);\n+                }\n@@ -80,4 +108,10 @@\n-        checkMapped(pidString, perfdata.toString());\n-        builder.runJcmd(pidString, \"PerfCounter.print\")\n-                .shouldHaveExitValue(0)\n-                .shouldContain(\"sun.perfdata.size=\");\n+        if (perfDisableSharedMem) {\n+            if (perfdata.toFile().exists()) {\n+                throw new IllegalStateException(\"Perf data file exists altough we run with -XX:+PerfDisableSharedMem\");\n+            }\n+        } else {\n+            checkMapped(pidString, perfdata.toString());\n+            builder.runJcmd(pidString, \"PerfCounter.print\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldContain(\"sun.perfdata.size=\");\n+        }\n@@ -87,0 +121,3 @@\n+        OutputAnalyzer out = restored.outputAnalyzer();\n+        out.stderrShouldBeEmpty();\n+        out.stdoutShouldBeEmpty();\n","filename":"test\/jdk\/jdk\/crac\/PerfMemoryRestoreTest.java","additions":45,"deletions":8,"binary":false,"changes":53,"status":"modified"}]}