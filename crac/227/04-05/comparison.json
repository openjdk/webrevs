{"files":[{"patch":"@@ -951,1 +951,2 @@\n-    char *env_buf = NEW_RESOURCE_ARRAY(char, strlen(disable_str) + (!env ? 0 : strlen(env) + 100));\n+    size_t env_buf_size = strlen(disable_str) + (!env ? 0 : strlen(env) + 100);\n+    char *env_buf = NEW_RESOURCE_ARRAY(char, env_buf_size);\n@@ -966,2 +967,2 @@\n-          int err = jio_snprintf(env_buf, sizeof(env_buf), \"%.*s%s%s\", (int)(colon - env), env, disable_str + glibc_prefix_len, colon);\n-          assert(err >= 0 && (unsigned)err < sizeof(env_buf), \"internal error: \" TUNABLES_NAME \" buffer overflow\");\n+          int err = jio_snprintf(env_buf, env_buf_size, \"%.*s%s%s\", (int)(colon - env), env, disable_str + glibc_prefix_len, colon);\n+          assert(err >= 0 && (unsigned) err < env_buf_size, \"internal error: \" TUNABLES_NAME \" buffer overflow\");\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n+# Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n","filename":"test\/jdk\/jdk\/crac\/CPUFeatures\/CPUFeatures.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n+# Copyright (c) 2023, 2025, Azul Systems, Inc. All rights reserved.\n@@ -41,0 +41,8 @@\n+for GLIBC_TUNABLES in \\\n+                       glibc.cpu.hwcaps=-AVX                      \\\n+  glibc.pthread.rseq=0:glibc.cpu.hwcaps=-AVX                      \\\n+                       glibc.cpu.hwcaps=-AVX:glibc.pthread.rseq=0 \\\n+  ; do\n+  $JAVA_HOME\/bin\/java -XX:CPUFeatures=generic -XX:+ShowCPUFeatures -version 2>&1 | tee \/proc\/self\/fd\/2 | grep -q 'openjdk version'\n+done\n+\n","filename":"test\/jdk\/jdk\/crac\/CPUFeatures\/SimpleCPUFeatures.sh","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}