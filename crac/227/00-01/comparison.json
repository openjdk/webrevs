{"files":[{"patch":"@@ -78,3 +78,0 @@\n-\n-  static bool cpufeatures_store();\n-  static bool cpufeatures_restore();\n","filename":"src\/hotspot\/share\/runtime\/crac.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-const char CracEngine::userdata_name[] = \"cpufeatures\";\n+static constexpr char cpufeatures_userdata_name[] = \"cpufeatures\";\n@@ -416,4 +416,15 @@\n-crlib_user_data_t *CracEngine::user_data_api_get() {\n-  crlib_user_data_t *api = CRLIB_EXTENSION_USER_DATA(_api);\n-  if (!api) {\n-    log_error(crac)(\"Installed CRaC engine does not support user_data\");\n+CracEngine::ApiStatus CracEngine::prepare_user_data_api() {\n+  precond(is_initialized());\n+  if (_user_data_api != nullptr) {\n+    return ApiStatus::OK;\n+  }\n+\n+  crlib_user_data_t * const user_data_api = CRLIB_EXTENSION_USER_DATA(_api);\n+  if (user_data_api == nullptr) {\n+    log_debug(crac)(\"CRaC engine does not support extension: \" CRLIB_EXTENSION_USER_DATA_NAME);\n+    return ApiStatus::UNSUPPORTED;\n+  }\n+  if (user_data_api->set_user_data == nullptr || user_data_api->load_user_data == nullptr\n+      || user_data_api->lookup_user_data == nullptr || user_data_api->destroy_user_data == nullptr) {\n+    log_error(crac)(\"CRaC engine provided invalid API for extension: \" CRLIB_EXTENSION_USER_DATA_NAME);\n+    return ApiStatus::ERR;\n@@ -421,1 +432,2 @@\n-  return api;\n+  _user_data_api = user_data_api;\n+  return ApiStatus::OK;\n@@ -431,3 +443,9 @@\n-  crlib_user_data_t *user_data_api = user_data_api_get();\n-  if (!user_data_api) {\n-    return false;\n+  switch (prepare_user_data_api()) {\n+    case CracEngine::ApiStatus::OK:\n+      break;\n+    case CracEngine::ApiStatus::ERR:\n+      return false;\n+    case CracEngine::ApiStatus::UNSUPPORTED:\n+      log_warning(crac)(\"Cannot store CPUFeatures for checkpoint \"\n+        \"with the selected CRaC engine\");\n+      return false;\n@@ -435,1 +453,1 @@\n-  return user_data_api->set_user_data(_conf, userdata_name, &data, sizeof(data));\n+  return _user_data_api->set_user_data(_conf, cpufeatures_userdata_name, &data, sizeof(data));\n@@ -445,3 +463,9 @@\n-  crlib_user_data_t *user_data_api = user_data_api_get();\n-  if (!user_data_api) {\n-    return false;\n+  switch (prepare_user_data_api()) {\n+    case CracEngine::ApiStatus::OK:\n+      break;\n+    case CracEngine::ApiStatus::ERR:\n+      return false;\n+    case CracEngine::ApiStatus::UNSUPPORTED:\n+      log_warning(crac)(\"Cannot verify CPUFeatures for restore \"\n+        \"with the selected CRaC engine\");\n+      return false;\n@@ -450,1 +474,2 @@\n-  if (!(user_data = user_data_api->load_user_data(_conf))) {\n+  if (!(user_data = _user_data_api->load_user_data(_conf))) {\n+    log_error(crac)(\"CRaC engine failed to load user data %s\", cpufeatures_userdata_name);\n@@ -455,1 +480,1 @@\n-  if (user_data_api->lookup_user_data(user_data, userdata_name, (const void **) &datap, &size)) {\n+  if (_user_data_api->lookup_user_data(user_data, cpufeatures_userdata_name, (const void **) &datap, &size)) {\n@@ -457,2 +482,2 @@\n-      user_data_api->destroy_user_data(user_data);\n-      log_error(crac)(\"User data %s in %s has unexpected size %zu (expected %zu)\", userdata_name, CRaCRestoreFrom, size, sizeof(VM_Version::CPUFeaturesBinary));\n+      _user_data_api->destroy_user_data(user_data);\n+      log_error(crac)(\"User data %s in %s has unexpected size %zu (expected %zu)\", cpufeatures_userdata_name, CRaCRestoreFrom, size, sizeof(VM_Version::CPUFeaturesBinary));\n@@ -466,2 +491,2 @@\n-    user_data_api->destroy_user_data(user_data);\n-    log_error(crac)(\"Image %s has incompatible CPU features in its user data %s\", CRaCRestoreFrom, userdata_name);\n+    _user_data_api->destroy_user_data(user_data);\n+    log_error(crac)(\"Image %s has incompatible CPU features in its user data %s\", CRaCRestoreFrom, cpufeatures_userdata_name);\n@@ -470,1 +495,1 @@\n-  user_data_api->destroy_user_data(user_data);\n+  _user_data_api->destroy_user_data(user_data);\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":45,"deletions":20,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -73,0 +73,2 @@\n+  ApiStatus prepare_user_data_api();\n+\n@@ -79,4 +81,1 @@\n-\n-  static const char userdata_name[];\n-\n-  crlib_user_data_t *user_data_api_get();\n+  crlib_user_data_t *_user_data_api = nullptr;\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}