{"files":[{"patch":"@@ -119,2 +119,5 @@\n-    case CracEngine::ApiStatus::OK:\n-      if (!_engine->cpufeatures_store()) {\n+    case CracEngine::ApiStatus::OK: {\n+      VM_Version::CPUFeaturesBinary data;\n+      if (!VM_Version::cpu_features_binary(&data)) {\n+\t\/\/ This backend does not use CPUFeatures. That is OK.\n+      } else if (!_engine->cpufeatures_store(&data)) {\n@@ -123,1 +126,1 @@\n-      break;\n+      } break;\n@@ -522,2 +525,4 @@\n-      case CracEngine::ApiStatus::OK:\n-        if (!engine.cpufeatures_check()) {\n+      case CracEngine::ApiStatus::OK: {\n+        VM_Version::CPUFeaturesBinary data;\n+        bool present;\n+        if (!engine.cpufeatures_load(&data, &present)) {\n@@ -526,1 +531,5 @@\n-        break;\n+        if (!VM_Version::cpu_features_binary_check(present ? &data : nullptr)) {\n+          log_error(crac)(\"Image %s has incompatible CPU features in its user data %s\", CRaCRestoreFrom, engine.cpufeatures_userdata_name);\n+          return;\n+        }\n+        } break;\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -414,1 +414,1 @@\n-static constexpr char cpufeatures_userdata_name[] = \"cpufeatures\";\n+constexpr char CracEngine::cpufeatures_userdata_name[];\n@@ -437,7 +437,2 @@\n-bool CracEngine::cpufeatures_store() const {\n-  VM_Version::CPUFeaturesBinary data;\n-  if (!VM_Version::cpu_features_binary(&data)) {\n-    \/\/ This backend does not use CPUFeatures. That is OK.\n-    return true;\n-  }\n-  return _user_data_api->set_user_data(_conf, cpufeatures_userdata_name, &data, sizeof(data));\n+bool CracEngine::cpufeatures_store(const VM_Version::CPUFeaturesBinary *datap) const {\n+  return _user_data_api->set_user_data(_conf, cpufeatures_userdata_name, datap, sizeof(*datap));\n@@ -447,1 +442,1 @@\n-bool CracEngine::cpufeatures_check() const {\n+bool CracEngine::cpufeatures_load(VM_Version::CPUFeaturesBinary *datap, bool *presentp) const {\n@@ -458,1 +453,1 @@\n-  const VM_Version::CPUFeaturesBinary *datap;\n+  const VM_Version::CPUFeaturesBinary *cdatap;\n@@ -460,1 +455,1 @@\n-  if (_user_data_api->lookup_user_data(user_data, cpufeatures_userdata_name, (const void **) &datap, &size)) {\n+  if (_user_data_api->lookup_user_data(user_data, cpufeatures_userdata_name, (const void **) &cdatap, &size)) {\n@@ -466,1 +461,2 @@\n-    if (datap == nullptr) {\n+    if (cdatap == nullptr) {\n+      _user_data_api->destroy_user_data(user_data);\n@@ -470,0 +466,2 @@\n+    *datap = *cdatap;\n+    *presentp = true;\n@@ -471,6 +469,1 @@\n-    datap = nullptr;\n-  }\n-  if (!VM_Version::cpu_features_binary_check(datap)) {\n-    _user_data_api->destroy_user_data(user_data);\n-    log_error(crac)(\"Image %s has incompatible CPU features in its user data %s\", CRaCRestoreFrom, cpufeatures_userdata_name);\n-    return false;\n+    *presentp = false;\n@@ -481,1 +474,0 @@\n-\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":11,"deletions":19,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"runtime\/vm_version.hpp\"\n@@ -70,2 +71,3 @@\n-  bool cpufeatures_store() const;\n-  bool cpufeatures_check() const;\n+  bool cpufeatures_store(const VM_Version::CPUFeaturesBinary *datap) const;\n+  bool cpufeatures_load(VM_Version::CPUFeaturesBinary *datap, bool *presentp) const;\n+  static constexpr char cpufeatures_userdata_name[] = \"cpufeatures\";\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}