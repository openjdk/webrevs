{"files":[{"patch":"@@ -118,6 +118,11 @@\n-  switch (_engine->prepare_user_data_api()) {\n-    case CracEngine::ApiStatus::OK: {\n-      VM_Version::CPUFeaturesBinary data;\n-      if (!VM_Version::cpu_features_binary(&data)) {\n-        \/\/ This backend does not use CPUFeatures. That is OK.\n-      } else if (!_engine->cpufeatures_store(&data)) {\n+  if (!VM_Version::ignore_cpu_features()) {\n+    switch (_engine->prepare_user_data_api()) {\n+      case CracEngine::ApiStatus::OK: {\n+        VM_Version::CPUFeaturesBinary data;\n+        if (!VM_Version::cpu_features_binary(&data)) {\n+          \/\/ This backend does not use CPUFeatures. That is OK.\n+        } else if (!_engine->cpufeatures_store(&data)) {\n+          return JVM_CHECKPOINT_ERROR;\n+        }\n+        } break;\n+      case CracEngine::ApiStatus::ERR:\n@@ -125,8 +130,5 @@\n-      }\n-      } break;\n-    case CracEngine::ApiStatus::ERR:\n-      return JVM_CHECKPOINT_ERROR;\n-    case CracEngine::ApiStatus::UNSUPPORTED:\n-      log_warning(crac)(\"Cannot store CPUFeatures for checkpoint \"\n-        \"with the selected CRaC engine\");\n-      break;\n+      case CracEngine::ApiStatus::UNSUPPORTED:\n+        log_warning(crac)(\"Cannot store CPUFeatures for checkpoint \"\n+          \"with the selected CRaC engine\");\n+        break;\n+    }\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}