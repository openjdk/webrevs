{"files":[{"patch":"@@ -339,1 +339,1 @@\n-  const char * const *controlled_opts = CracEngine::vm_controlled_options();\n+  const GrowableArrayCHeap<const char *, MemTag::mtInternal> *controlled_opts = engine.vm_controlled_options();\n@@ -342,3 +342,4 @@\n-  for (const auto *opt = controlled_opts; *opt != nullptr; opt++) {\n-    tty->print_raw(*opt);\n-    if (*(opt + 1) != nullptr) {\n+  for (int i = 0; i < controlled_opts->length(); i++) {\n+    const char *opt = controlled_opts->at(i);\n+    tty->print_raw(opt);\n+    if (i < controlled_opts->length() - 1) {\n@@ -349,0 +350,1 @@\n+  delete controlled_opts;\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"utilities\/growableArray.hpp\"\n@@ -47,1 +48,1 @@\n-  VM_CONTROLLED_ENGINE_OPTS(ARRAY_ELEM) nullptr\n+  VM_CONTROLLED_ENGINE_OPTS(ARRAY_ELEM)\n@@ -72,4 +73,0 @@\n-const char * const *CracEngine::vm_controlled_options() {\n-  return vm_controlled_engine_opts;\n-}\n-\n@@ -351,0 +348,11 @@\n+GrowableArrayCHeap<const char *, MemTag::mtInternal> *CracEngine::vm_controlled_options() const {\n+  auto * const opts = new GrowableArrayCHeap<const char *, MemTag::mtInternal>();\n+  \/\/ Only list those options which the current engine actually supports\n+  for (const char *opt : vm_controlled_engine_opts) {\n+    if (_api->can_configure(_conf, opt)) {\n+      opts->append(opt);\n+    }\n+  }\n+  return opts;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"utilities\/growableArray.hpp\"\n@@ -41,2 +42,0 @@\n-  static const char * const *vm_controlled_options();\n-\n@@ -57,0 +56,1 @@\n+  GrowableArrayCHeap<const char *, MemTag::mtInternal> *vm_controlled_options() const;\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}