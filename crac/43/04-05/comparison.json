{"files":[{"patch":"@@ -70,1 +70,1 @@\n-            if (JDKContext.COLLECT_FD_STACKTRACES) {\n+            if (JDKContext.Properties.COLLECT_FD_STACKTRACES) {\n@@ -371,1 +371,1 @@\n-                if (!JDKContext.COLLECT_FD_STACKTRACES) {\n+                if (!JDKContext.Properties.COLLECT_FD_STACKTRACES) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileDescriptor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-                if (!JDKContext.COLLECT_FD_STACKTRACES) {\n+                if (!JDKContext.Properties.COLLECT_FD_STACKTRACES) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,6 @@\n-    public static final boolean COLLECT_FD_STACKTRACES =\n-            GetBooleanAction.privilegedGetProperty(JDKContext.COLLECT_FD_STACKTRACES_PROPERTY);\n+\n+    \/\/ JDKContext by itself is initialized too early when system properties are not set yet\n+    public static class Properties {\n+        public static final boolean COLLECT_FD_STACKTRACES =\n+                GetBooleanAction.privilegedGetProperty(JDKContext.COLLECT_FD_STACKTRACES_PROPERTY);\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/crac\/JDKContext.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.crac.Core;\n+import jdk.test.lib.crac.CracBuilder;\n+import jdk.test.lib.crac.CracProcess;\n+import jdk.test.lib.crac.CracTest;\n+\n+import java.io.FileReader;\n+\n+\/**\n+ * @test\n+ * @library \/test\/lib\n+ * @build OpenFileDetectionTest\n+ * @run driver jdk.test.lib.crac.CracTest\n+ *\/\n+public class OpenFileDetectionTest implements CracTest {\n+    @Override\n+    public void test() throws Exception {\n+        CracBuilder builder = new CracBuilder();\n+        CracProcess cp = builder.captureOutput(true)\n+                .javaOption(\"jdk.crac.collect-fd-stacktraces\", \"true\")\n+                .startCheckpoint();\n+        cp.outputAnalyzer()\n+                .shouldHaveExitValue(1)\n+                .shouldContain(\"This file descriptor was created here\");\n+    }\n+\n+    @Override\n+    public void exec() throws Exception {\n+        try (var reader = new FileReader(\"\/etc\/passwd\")) {\n+            Core.checkpointRestore();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/fileDescriptors\/OpenFileDetectionTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -34,0 +34,1 @@\n+    final Map<String, String> javaOptions = new HashMap<>();\n@@ -102,0 +103,5 @@\n+    public CracBuilder javaOption(String name, String value) {\n+        javaOptions.put(name, value);\n+        return this;\n+    }\n+\n@@ -308,0 +314,1 @@\n+            cmd.add(\"-XX:+UnlockExperimentalVMOptions\");\n@@ -310,0 +317,3 @@\n+        for (var entry : javaOptions.entrySet()) {\n+            cmd.add(\"-D\" + entry.getKey() + \"=\" + entry.getValue());\n+        }\n","filename":"test\/lib\/jdk\/test\/lib\/crac\/CracBuilder.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}