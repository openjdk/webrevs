{"files":[{"patch":"@@ -96,4 +96,0 @@\n-# Allow overriding on the command line\n-# (intentionally sharing name with the javac option)\n-JAVA_WARNINGS_ARE_ERRORS ?= -Werror\n-\n@@ -268,1 +264,1 @@\n-\t$$(PRINTF) > $$@ '$$($1_OVERVIEW_TEXT)'\n+\t$$(ECHO) -n '$$($1_OVERVIEW_TEXT)' > $$@\n@@ -326,1 +322,3 @@\n-  $1_OPTIONS += $$(JAVA_WARNINGS_ARE_ERRORS)\n+  ifeq ($$(JAVA_WARNINGS_AS_ERRORS), true)\n+    $1_OPTIONS += -Werror\n+  endif\n","filename":"make\/Docs.gmk","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,2 @@\n-m4_define(jvm_features_deprecated, m4_normalize(\n-    cmsgc trace \\\n-))\n+# This list is empty at the moment.\n+m4_define(jvm_features_deprecated, m4_normalize( ))\n","filename":"make\/autoconf\/jvm-features.m4","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+    LIBJPEG_CFLAGS=\"\"\n+    LIBJPEG_LIBS=\"\"\n@@ -67,4 +69,9 @@\n-    AC_CHECK_HEADER(jpeglib.h, [],\n-        [ AC_MSG_ERROR([--with-libjpeg=system specified, but jpeglib.h not found!])])\n-    AC_CHECK_LIB(jpeg, jpeg_CreateDecompress, [],\n-        [ AC_MSG_ERROR([--with-libjpeg=system specified, but no libjpeg found])])\n+    PKG_CHECK_MODULES(LIBJPEG, libjpeg, [LIBJPEG_FOUND=yes], [LIBJPEG_FOUND=no])\n+    if test \"x${LIBJPEG_FOUND}\" = \"xyes\"; then\n+      # PKG_CHECK_MODULES will set LIBJPEG_CFLAGS and LIBJPEG_LIBS\n+      USE_EXTERNAL_LIBJPEG=true\n+    else\n+      AC_CHECK_HEADER(jpeglib.h, [],\n+          [ AC_MSG_ERROR([--with-libjpeg=system specified, but jpeglib.h not found!])])\n+      AC_CHECK_LIB(jpeg, jpeg_CreateDecompress, [],\n+          [ AC_MSG_ERROR([--with-libjpeg=system specified, but no libjpeg found])])\n@@ -72,2 +79,4 @@\n-    USE_EXTERNAL_LIBJPEG=true\n-    LIBJPEG_LIBS=\"-ljpeg\"\n+      USE_EXTERNAL_LIBJPEG=true\n+      LIBJPEG_CFLAGS=\"\"\n+      LIBJPEG_LIBS=\"-ljpeg\"\n+    fi\n@@ -79,0 +88,1 @@\n+  AC_SUBST(LIBJPEG_CFLAGS)\n@@ -89,0 +99,4 @@\n+  AC_ARG_WITH(giflib-include, [AS_HELP_STRING([--with-giflib-include],\n+      [specify directory for the system giflib include files])])\n+  AC_ARG_WITH(giflib-lib, [AS_HELP_STRING([--with-giflib-lib],\n+      [specify directory for the system giflib library])])\n@@ -101,0 +115,2 @@\n+    GIFLIB_CFLAGS=\"\"\n+    GIFLIB_LIBS=\"\"\n@@ -102,4 +118,31 @@\n-    AC_CHECK_HEADER(gif_lib.h, [],\n-        [ AC_MSG_ERROR([--with-giflib=system specified, but gif_lib.h not found!])])\n-    AC_CHECK_LIB(gif, DGifGetCode, [],\n-        [ AC_MSG_ERROR([--with-giflib=system specified, but no giflib found!])])\n+    GIFLIB_H_FOUND=no\n+    if test \"x${with_giflib_include}\" != x; then\n+      GIFLIB_CFLAGS=\"-I${with_giflib_include}\"\n+      GIFLIB_H_FOUND=yes\n+    fi\n+    if test \"x$GIFLIB_H_FOUND\" = xno; then\n+      AC_CHECK_HEADER(gif_lib.h,\n+          [\n+            GIFLIB_CFLAGS=\"\"\n+            GIFLIB_H_FOUND=yes\n+          ])\n+    fi\n+    if test \"x$GIFLIB_H_FOUND\" = xno; then\n+      AC_MSG_ERROR([--with-giflib=system specified, but gif_lib.h not found!])\n+    fi\n+\n+    GIFLIB_LIB_FOUND=no\n+    if test \"x${with_giflib_lib}\" != x; then\n+      GIFLIB_LIBS=\"-L${with_giflib_lib} -lgif\"\n+      GIFLIB_LIB_FOUND=yes\n+    fi\n+    if test \"x$GIFLIB_LIB_FOUND\" = xno; then\n+      AC_CHECK_LIB(gif, DGifGetCode,\n+          [\n+            GIFLIB_LIBS=\"-lgif\"\n+            GIFLIB_LIB_FOUND=yes\n+          ])\n+    fi\n+    if test \"x$GIFLIB_LIB_FOUND\" = xno; then\n+      AC_MSG_ERROR([--with-giflib=system specified, but no giflib found!])\n+    fi\n@@ -114,0 +157,1 @@\n+  AC_SUBST(GIFLIB_CFLAGS)\n","filename":"make\/autoconf\/lib-bundled.m4","additions":54,"deletions":10,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -430,0 +430,3 @@\n+ICONV_CFLAGS := @ICONV_CFLAGS@\n+ICONV_LDFLAGS := @ICONV_LDFLAGS@\n+ICONV_LIBS := @ICONV_LIBS@\n@@ -479,0 +482,3 @@\n+# The code signing hook configuration\n+SIGNING_HOOK := @SIGNING_HOOK@\n+\n@@ -514,0 +520,1 @@\n+JAVA_WARNINGS_AS_ERRORS := @JAVA_WARNINGS_AS_ERRORS@\n@@ -712,0 +719,1 @@\n+JLINK_USER_EXTRA_FLAGS := @JLINK_USER_EXTRA_FLAGS@\n@@ -796,0 +804,1 @@\n+LIBJPEG_CFLAGS := @LIBJPEG_CFLAGS@\n@@ -798,0 +807,1 @@\n+GIFLIB_CFLAGS := @GIFLIB_CFLAGS@\n","filename":"make\/autoconf\/spec.gmk.template","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk23\/3c5b90190c68498b986a97f276efd28a\/37\/GPL\/openjdk-23_linux-x64_bin.tar.gz\n-LINUX_X64_BOOT_JDK_SHA256=08fea92724127c6fa0f2e5ea0b07ff4951ccb1e2f22db3c21eebbd7347152a67\n+LINUX_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk24\/1f9ff9062db4449d8ca828c504ffae90\/36\/GPL\/openjdk-24_linux-x64_bin.tar.gz\n+LINUX_X64_BOOT_JDK_SHA256=88b090fa80c6c1d084ec9a755233967458788e2c0777ae2e172230c5c692d7ef\n@@ -36,2 +36,2 @@\n-ALPINE_LINUX_X64_BOOT_JDK_URL=https:\/\/github.com\/adoptium\/temurin23-binaries\/releases\/download\/jdk-23%2B37\/OpenJDK23U-jdk_x64_alpine-linux_hotspot_23_37.tar.gz\n-ALPINE_LINUX_X64_BOOT_JDK_SHA256=bff4c78f30d8d173e622bf2f40c36113df47337fc6d1ee5105ed2459841165aa\n+ALPINE_LINUX_X64_BOOT_JDK_URL=https:\/\/github.com\/adoptium\/temurin24-binaries\/releases\/download\/jdk-24%2B36\/OpenJDK24U-jdk_aarch64_alpine-linux_hotspot_24_36.tar.gz\n+ALPINE_LINUX_X64_BOOT_JDK_SHA256=4a673456aa6e726b86108a095a21868b7ebcdde050a92b3073d50105ff92f07f\n@@ -40,2 +40,2 @@\n-MACOS_AARCH64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk23\/3c5b90190c68498b986a97f276efd28a\/37\/GPL\/openjdk-23_macos-aarch64_bin.tar.gz\n-MACOS_AARCH64_BOOT_JDK_SHA256=9527bf080a74ae6dca51df413aa826f0c011c6048885e4c8ad112172be8815f3\n+MACOS_AARCH64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk24\/1f9ff9062db4449d8ca828c504ffae90\/36\/GPL\/openjdk-24_macos-aarch64_bin.tar.gz\n+MACOS_AARCH64_BOOT_JDK_SHA256=f7133238a12714a62c5ad2bd4da6741130be1a82512065da9ca23dee26b2d3d3\n@@ -48,2 +48,2 @@\n-MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk23\/3c5b90190c68498b986a97f276efd28a\/37\/GPL\/openjdk-23_macos-x64_bin.tar.gz\n-MACOS_X64_BOOT_JDK_SHA256=5c3a909fd2079d0e376dd43c85c4f7d02d08914866f196480bd47784b2a0121e\n+MACOS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk24\/1f9ff9062db4449d8ca828c504ffae90\/36\/GPL\/openjdk-24_macos-x64_bin.tar.gz\n+MACOS_X64_BOOT_JDK_SHA256=6bbfb1d01741cbe55ab90299cb91464b695de9a3ace85c15131aa2f50292f321\n@@ -52,2 +52,2 @@\n-WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk23\/3c5b90190c68498b986a97f276efd28a\/37\/GPL\/openjdk-23_windows-x64_bin.zip\n-WINDOWS_X64_BOOT_JDK_SHA256=cba5013874ba50cae543c86fe6423453816c77281e2751a8a9a633d966f1dc04\n+WINDOWS_X64_BOOT_JDK_URL=https:\/\/download.java.net\/java\/GA\/jdk24\/1f9ff9062db4449d8ca828c504ffae90\/36\/GPL\/openjdk-24_windows-x64_bin.zip\n+WINDOWS_X64_BOOT_JDK_SHA256=11d1d9f6ac272d5361c8a0bef01894364081c7fb1a6914c2ad2fc312ae83d63b\n","filename":"make\/conf\/github-actions.conf","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -76,1 +76,14 @@\n-  #define UPDATE_DEFAULT(flag)             \\\n+  #define UPDATE_DEFAULT(flag)           \\\n+  void update_flag() {                   \\\n+    assert(enabled(), \"Must be.\");       \\\n+    if (FLAG_IS_DEFAULT(flag)) {         \\\n+      FLAG_SET_DEFAULT(flag, true);      \\\n+    } else {                             \\\n+      \/* Sync CPU features with flags *\/ \\\n+      if (!flag) {                       \\\n+        disable_feature();               \\\n+      }                                  \\\n+    }                                    \\\n+  }                                      \\\n+\n+  #define UPDATE_DEFAULT_DEP(flag, dep)    \\\n@@ -79,0 +92,3 @@\n+      \/* dep must be declared before *\/    \\\n+      assert((uintptr_t)(this) >           \\\n+             (uintptr_t)(&dep), \"Invalid\");\\\n@@ -80,1 +96,5 @@\n-        FLAG_SET_DEFAULT(flag, true);      \\\n+        if (dep.enabled()) {               \\\n+          FLAG_SET_DEFAULT(flag, true);    \\\n+        } else {                           \\\n+          FLAG_SET_DEFAULT(flag, false);   \\\n+        }                                  \\\n@@ -141,39 +161,41 @@\n-  \/\/ declaration name  , extension name,    bit pos ,in str, mapped flag)\n-  #define RV_FEATURE_FLAGS(decl)                                                                \\\n-  decl(ext_I           , \"i\"           ,    ('I' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_M           , \"m\"           ,    ('M' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_A           , \"a\"           ,    ('A' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_F           , \"f\"           ,    ('F' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_D           , \"d\"           ,    ('D' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_C           , \"c\"           ,    ('C' - 'A'), true , UPDATE_DEFAULT(UseRVC))         \\\n-  decl(ext_Q           , \"q\"           ,    ('Q' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_H           , \"h\"           ,    ('H' - 'A'), true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_V           , \"v\"           ,    ('V' - 'A'), true , UPDATE_DEFAULT(UseRVV))         \\\n-  decl(ext_Zicbom      , \"Zicbom\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbom))      \\\n-  decl(ext_Zicboz      , \"Zicboz\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicboz))      \\\n-  decl(ext_Zicbop      , \"Zicbop\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbop))      \\\n-  decl(ext_Zba         , \"Zba\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZba))         \\\n-  decl(ext_Zbb         , \"Zbb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbb))         \\\n-  decl(ext_Zbc         , \"Zbc\"         , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_Zbs         , \"Zbs\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbs))         \\\n-  decl(ext_Zcb         , \"Zcb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZcb))         \\\n-  decl(ext_Zfa         , \"Zfa\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfa))         \\\n-  decl(ext_Zfh         , \"Zfh\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfh))         \\\n-  decl(ext_Zfhmin      , \"Zfhmin\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfhmin))      \\\n-  decl(ext_Zicsr       , \"Zicsr\"       , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_Zicntr      , \"Zicntr\"      , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_Zifencei    , \"Zifencei\"    , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n-  decl(ext_Zic64b      , \"Zic64b\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZic64b))      \\\n-  decl(ext_Ztso        , \"Ztso\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZtso))        \\\n-  decl(ext_Zihintpause , \"Zihintpause\" , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZihintpause)) \\\n-  decl(ext_Zacas       , \"Zacas\"       , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZacas))       \\\n-  decl(ext_Zvbb        , \"Zvbb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvbb))        \\\n-  decl(ext_Zvbc        , \"Zvbc\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvbc))        \\\n-  decl(ext_Zvfh        , \"Zvfh\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvfh))        \\\n-  decl(ext_Zvkn        , \"Zvkn\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZvkn))        \\\n-  decl(ext_Zicond      , \"Zicond\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicond))      \\\n-  decl(mvendorid       , \"VendorId\"    , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)              \\\n-  decl(marchid         , \"ArchId\"      , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)              \\\n-  decl(mimpid          , \"ImpId\"       , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)              \\\n-  decl(unaligned_access, \"Unaligned\"   , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)              \\\n-  decl(satp_mode       , \"SATP\"        , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)              \\\n+  \/\/ Note: the order matters, depender should be after their dependee. E.g. ext_V before ext_Zvbb.\n+  \/\/ declaration name  , extension name, bit pos       ,in str, mapped flag)\n+  #define RV_FEATURE_FLAGS(decl)                                                                    \\\n+  decl(ext_I           , \"i\"           ,    ('I' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_M           , \"m\"           ,    ('M' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_A           , \"a\"           ,    ('A' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_F           , \"f\"           ,    ('F' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_D           , \"d\"           ,    ('D' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_C           , \"c\"           ,    ('C' - 'A'), true , UPDATE_DEFAULT(UseRVC))             \\\n+  decl(ext_Q           , \"q\"           ,    ('Q' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_H           , \"h\"           ,    ('H' - 'A'), true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_V           , \"v\"           ,    ('V' - 'A'), true , UPDATE_DEFAULT(UseRVV))             \\\n+  decl(ext_Zicbom      , \"Zicbom\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbom))          \\\n+  decl(ext_Zicboz      , \"Zicboz\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicboz))          \\\n+  decl(ext_Zicbop      , \"Zicbop\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicbop))          \\\n+  decl(ext_Zba         , \"Zba\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZba))             \\\n+  decl(ext_Zbb         , \"Zbb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbb))             \\\n+  decl(ext_Zbc         , \"Zbc\"         , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zbs         , \"Zbs\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbs))             \\\n+  decl(ext_Zbkb        , \"Zbkb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZbkb))            \\\n+  decl(ext_Zcb         , \"Zcb\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZcb))             \\\n+  decl(ext_Zfa         , \"Zfa\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfa))             \\\n+  decl(ext_Zfh         , \"Zfh\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfh))             \\\n+  decl(ext_Zfhmin      , \"Zfhmin\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfhmin))          \\\n+  decl(ext_Zicsr       , \"Zicsr\"       , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zicntr      , \"Zicntr\"      , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zifencei    , \"Zifencei\"    , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)                  \\\n+  decl(ext_Zic64b      , \"Zic64b\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZic64b))          \\\n+  decl(ext_Ztso        , \"Ztso\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZtso))            \\\n+  decl(ext_Zihintpause , \"Zihintpause\" , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZihintpause))     \\\n+  decl(ext_Zacas       , \"Zacas\"       , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZacas))           \\\n+  decl(ext_Zvbb        , \"Zvbb\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbb, ext_V)) \\\n+  decl(ext_Zvbc        , \"Zvbc\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvbc, ext_V)) \\\n+  decl(ext_Zvfh        , \"Zvfh\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvfh, ext_V)) \\\n+  decl(ext_Zvkn        , \"Zvkn\"        , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT_DEP(UseZvkn, ext_V)) \\\n+  decl(ext_Zicond      , \"Zicond\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZicond))          \\\n+  decl(mvendorid       , \"VendorId\"    , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(marchid         , \"ArchId\"      , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(mimpid          , \"ImpId\"       , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(unaligned_access, \"Unaligned\"   , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n+  decl(satp_mode       , \"SATP\"        , RV_NO_FLAG_BIT, false, NO_UPDATE_DEFAULT)                  \\\n@@ -304,0 +326,7 @@\n+\n+  static bool supports_float16_float_conversion() {\n+    return UseZfh || UseZfhmin;\n+  }\n+\n+  \/\/ Check intrinsic support\n+  static bool is_intrinsic_supported(vmIntrinsicID id);\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":70,"deletions":41,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -1689,0 +1689,14 @@\n+  \/\/ Dilithium Intrinsics\n+  \/\/ Currently we only have them for AVX512\n+#ifdef _LP64\n+  if (supports_evex() && supports_avx512bw()) {\n+      if (FLAG_IS_DEFAULT(UseDilithiumIntrinsics)) {\n+          UseDilithiumIntrinsics = true;\n+      }\n+  } else\n+#endif\n+   if (UseDilithiumIntrinsics) {\n+      warning(\"Intrinsics for ML-DSA are not available on this CPU.\");\n+      FLAG_SET_DEFAULT(UseDilithiumIntrinsics, false);\n+  }\n+\n@@ -1849,1 +1863,1 @@\n-  if (supports_avx512ifma() && supports_avx512vlbw()) {\n+  if ((supports_avx512ifma() && supports_avx512vlbw()) || supports_avxifma()) {\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -466,0 +466,2 @@\n+    CPU_FAMILY_AMD_17H       = 0x17, \/* Zen1 & Zen2 *\/\n+    CPU_FAMILY_AMD_19H       = 0x19, \/* Zen3 & Zen4 *\/\n@@ -859,0 +861,11 @@\n+  static bool supports_avx512_simd_sort() {\n+    if (supports_avx512dq()) {\n+      \/\/ Disable AVX512 version of SIMD Sort on AMD Zen4 Processors.\n+      if (is_amd() && cpu_family() == CPU_FAMILY_AMD_19H) {\n+        return false;\n+      }\n+      return true;\n+    }\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -3796,1 +3796,1 @@\n-      log_info(pagesize)(\"Large page size (%zu%s) failed sanity check, \"\n+      log_info(pagesize)(\"Large page size (\" EXACTFMT \") failed sanity check, \"\n@@ -3798,2 +3798,1 @@\n-                         byte_size_in_exact_unit(page_size),\n-                         exact_unit_for_byte_size(page_size));\n+                         EXACTFMTARGS(page_size));\n@@ -3808,3 +3807,2 @@\n-          log_info(pagesize)(\"Large page size (%zu%s) passed sanity check\",\n-                             byte_size_in_exact_unit(page_size_),\n-                             exact_unit_for_byte_size(page_size_));\n+          log_info(pagesize)(\"Large page size (\" EXACTFMT \") passed sanity check\",\n+                             EXACTFMTARGS(page_size_));\n@@ -4007,3 +4005,2 @@\n-     log_info(pagesize)(\"Using the default large page size: %zu%s\",\n-                        byte_size_in_exact_unit(large_page_size),\n-                        exact_unit_for_byte_size(large_page_size));\n+     log_info(pagesize)(\"Using the default large page size: \" EXACTFMT,\n+                        EXACTFMTARGS(large_page_size));\n@@ -4013,6 +4010,4 @@\n-        log_info(pagesize)(\"Overriding default large page size (%zu%s) \"\n-                           \"using LargePageSizeInBytes: %zu%s\",\n-                           byte_size_in_exact_unit(default_large_page_size),\n-                           exact_unit_for_byte_size(default_large_page_size),\n-                           byte_size_in_exact_unit(large_page_size),\n-                           exact_unit_for_byte_size(large_page_size));\n+        log_info(pagesize)(\"Overriding default large page size (\" EXACTFMT \") \"\n+                           \"using LargePageSizeInBytes: \" EXACTFMT,\n+                           EXACTFMTARGS(default_large_page_size),\n+                           EXACTFMTARGS(large_page_size));\n@@ -4021,6 +4016,4 @@\n-        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (%zu%s) \"\n-                           \"using the default large page size: %zu%s\",\n-                           byte_size_in_exact_unit(LargePageSizeInBytes),\n-                           exact_unit_for_byte_size(LargePageSizeInBytes),\n-                           byte_size_in_exact_unit(large_page_size),\n-                           exact_unit_for_byte_size(large_page_size));\n+        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (\" EXACTFMT \") \"\n+                           \"using the default large page size: \" EXACTFMT,\n+                           EXACTFMTARGS(LargePageSizeInBytes),\n+                           EXACTFMTARGS(large_page_size));\n@@ -4067,3 +4060,2 @@\n-                     \" size: %zu%s, page size: %zu%s, (errno = %d)\",\n-                     p2i(req_addr), byte_size_in_exact_unit(bytes), exact_unit_for_byte_size(bytes),\n-                     byte_size_in_exact_unit(page_size), exact_unit_for_byte_size(page_size), error);\n+                     \" size: \" EXACTFMT \", page size: \" EXACTFMT \", (errno = %d)\",\n+                     p2i(req_addr), EXACTFMTARGS(bytes), EXACTFMTARGS(page_size), error);\n@@ -4096,5 +4088,2 @@\n-  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=%zu%s, page size=%zu%s\",\n-                      p2i(addr), byte_size_in_exact_unit(bytes),\n-                      exact_unit_for_byte_size(bytes),\n-                      byte_size_in_exact_unit(page_size),\n-                      exact_unit_for_byte_size(page_size));\n+  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=\" EXACTFMT \", page size=\" EXACTFMT,\n+                      p2i(addr), EXACTFMTARGS(bytes), EXACTFMTARGS(page_size));\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":18,"deletions":29,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -226,1 +226,2 @@\n-  PosixAttachOperation::effectively_complete_raw(result, st);\n+  \/\/ the operation is completed by attachStream::complete\n+  _effectively_completed = true;\n@@ -259,1 +260,1 @@\n-  write_reply(&_socket_channel, result, st);\n+  _socket_channel.write_reply(result, st);\n","filename":"src\/hotspot\/os\/posix\/attachListener_posix.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -556,1 +556,1 @@\n-      bootsec = ent->ut_tv.tv_sec;\n+      bootsec = (int)ent->ut_tv.tv_sec;\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,0 +54,1 @@\n+      ::shutdown(_socket, SHUT_RDWR);\n@@ -72,1 +73,1 @@\n-  \/\/ called after writing all data\n+\n@@ -74,1 +75,0 @@\n-    ::shutdown(_socket, SHUT_RDWR);\n@@ -86,0 +86,4 @@\n+  PosixAttachOperation(int socket) : AttachOperation(), _socket_channel(socket) {\n+    _effectively_completed = false;\n+  }\n+\n@@ -94,2 +98,2 @@\n-  PosixAttachOperation(int socket) : AttachOperation(), _socket_channel(socket) {\n-    _effectively_completed = false;\n+  ReplyWriter* get_reply_writer() override {\n+    return &_socket_channel;\n@@ -99,1 +103,1 @@\n-    return AttachOperation::read_request(&_socket_channel, &_socket_channel);\n+    return _socket_channel.read_request(this, &_socket_channel);\n","filename":"src\/hotspot\/os\/posix\/posixAttachOperation.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -52,0 +52,7 @@\n+#define SEGV_BNDERR_value 3\n+\n+#if defined(SEGV_BNDERR)\n+STATIC_ASSERT(SEGV_BNDERR == SEGV_BNDERR_value);\n+#else\n+#define SEGV_BNDERR SEGV_BNDERR_value\n+#endif\n@@ -972,0 +979,3 @@\n+#if defined(LINUX)\n+    { SIGSEGV, SEGV_BNDERR,  \"SEGV_BNDERR\",  \"Failed address bound checks.\" },\n+#endif\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2646,0 +2646,1 @@\n+  PreserveLastError ple;\n@@ -3455,2 +3456,2 @@\n-  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=%zu%s\",\n-                      byte_size_in_exact_unit(alignment), exact_unit_for_byte_size(alignment));\n+  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=\" EXACTFMT,\n+                      EXACTFMTARGS(alignment));\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -406,1 +406,1 @@\n-HeapWord* G1CollectedHeap::attempt_allocation_slow(size_t word_size) {\n+HeapWord* G1CollectedHeap::attempt_allocation_slow(uint node_index, size_t word_size) {\n@@ -430,1 +430,1 @@\n-      result = _allocator->attempt_allocation_locked(word_size);\n+      result = _allocator->attempt_allocation_locked(node_index, word_size);\n@@ -457,1 +457,1 @@\n-    result = _allocator->attempt_allocation(word_size, word_size, &dummy);\n+    result = _allocator->attempt_allocation(node_index, word_size, word_size, &dummy);\n@@ -591,1 +591,4 @@\n-  HeapWord* result = _allocator->attempt_allocation(min_word_size, desired_word_size, actual_word_size);\n+  \/\/ Fix NUMA node association for the duration of this allocation\n+  const uint node_index = _allocator->current_node_index();\n+\n+  HeapWord* result = _allocator->attempt_allocation(node_index, min_word_size, desired_word_size, actual_word_size);\n@@ -595,1 +598,1 @@\n-    result = attempt_allocation_slow(desired_word_size);\n+    result = attempt_allocation_slow(node_index, desired_word_size);\n@@ -702,0 +705,3 @@\n+  \/\/ Fix NUMA node association for the duration of this allocation\n+  const uint node_index = _allocator->current_node_index();\n+\n@@ -703,1 +709,1 @@\n-    return _allocator->attempt_allocation_locked(word_size);\n+    return _allocator->attempt_allocation_locked(node_index, word_size);\n@@ -2159,1 +2165,7 @@\n-  this->CollectedHeap::print_on_error(st);\n+  print_extended_on(st);\n+  st->cr();\n+\n+  BarrierSet* bs = BarrierSet::barrier_set();\n+  if (bs != nullptr) {\n+    bs->print_on(st);\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -454,1 +454,1 @@\n-  HeapWord* attempt_allocation_slow(size_t word_size);\n+  HeapWord* attempt_allocation_slow(uint node_index, size_t word_size);\n@@ -1321,1 +1321,1 @@\n-  void print_extended_on(outputStream* st) const override;\n+  void print_extended_on(outputStream* st) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-  MemTracker::record_virtual_memory_tag((address)rs.base(), mtGC);\n+  MemTracker::record_virtual_memory_tag(rs, mtGC);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -191,11 +191,0 @@\n-void CollectedHeap::print_on_error(outputStream* st) const {\n-  st->print_cr(\"Heap:\");\n-  print_extended_on(st);\n-  st->cr();\n-\n-  BarrierSet* bs = BarrierSet::barrier_set();\n-  if (bs != nullptr) {\n-    bs->print_on(st);\n-  }\n-}\n-\n@@ -564,1 +553,0 @@\n-    ResourceMark rm;\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -451,9 +451,1 @@\n-  \/\/ Print more detailed heap information on the given\n-  \/\/ outputStream. The default behavior is to call print_on(). It is\n-  \/\/ up to each subclass to override it and add any additional output\n-  \/\/ it needs.\n-  virtual void print_extended_on(outputStream* st) const {\n-    print_on(st);\n-  }\n-\n-  virtual void print_on_error(outputStream* st) const;\n+  virtual void print_on_error(outputStream* st) const = 0;\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-void ZGeneration::select_relocation_set(ZGenerationId generation, bool promote_all) {\n+void ZGeneration::select_relocation_set(bool promote_all) {\n@@ -187,1 +187,1 @@\n-  ZRelocationSetSelector selector(fragmentation_limit(generation));\n+  ZRelocationSetSelector selector(fragmentation_limit(_id));\n@@ -241,1 +241,1 @@\n-  if (generation == ZGenerationId::young) {\n+  if (is_young()) {\n@@ -814,1 +814,1 @@\n-  select_relocation_set(_id, promote_all);\n+  select_relocation_set(promote_all);\n@@ -1160,1 +1160,1 @@\n-  select_relocation_set(_id, false \/* promote_all *\/);\n+  select_relocation_set(false \/* promote_all *\/);\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-#include \"gc\/z\/zNUMA.hpp\"\n+#include \"gc\/z\/zNUMA.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zPageCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,0 +221,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_NeedsClassInitBarrierForCDS(JNIEnv* env, jclass cls);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -303,3 +303,3 @@\n-NO_TRANSITION(void, jfr_event_writer_flush(JNIEnv* env, jclass jvm, jobject writer, jint used_size, jint requested_size))\n-  JfrJavaEventWriter::flush(writer, used_size, requested_size, JavaThread::current());\n-NO_TRANSITION_END\n+JVM_ENTRY_NO_ENV(void, jfr_event_writer_flush(JNIEnv* env, jclass jvm, jobject writer, jint used_size, jint requested_size))\n+  JfrJavaEventWriter::flush(writer, used_size, requested_size, thread);\n+JVM_END\n@@ -307,3 +307,3 @@\n-NO_TRANSITION(jlong, jfr_commit(JNIEnv* env, jclass jvm, jlong next_position))\n-  return JfrJavaEventWriter::commit(next_position);\n-NO_TRANSITION_END\n+JVM_ENTRY_NO_ENV(jlong, jfr_commit(JNIEnv* env, jclass jvm, jlong next_position))\n+  return JfrJavaEventWriter::commit(next_position, thread);\n+JVM_END\n@@ -436,0 +436,8 @@\n+\n+NO_TRANSITION(jboolean, jfr_is_product(JNIEnv* env, jclass jvm))\n+#ifdef PRODUCT\n+  return true;\n+#else\n+  return false;\n+#endif\n+NO_TRANSITION_END\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -172,0 +172,2 @@\n+jboolean JNICALL jfr_is_product(JNIEnv* env, jclass jvm);\n+\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -105,0 +105,1 @@\n+      (char*)\"isProduct\", (char*)\"()Z\", (void*)jfr_is_product\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -316,0 +316,17 @@\n+\/\/ This serializer is used when the vthread name cannot\n+\/\/ be determined because we cannot access any oops.\n+void JfrSimplifiedVirtualThreadConstant::serialize(JfrCheckpointWriter & writer) {\n+  writer.write_key(_vtid);\n+  \/\/ Write the null string categorically as the os name for virtual threads.\n+  writer.write((const char*)nullptr); \/\/ os name\n+  writer.write(0); \/\/ os id\n+  \/\/ vthread name cannot be determined for this simplified version.\n+  \/\/ This is because we cannot access any oops.\n+  writer.write_empty_string();\n+  writer.write(_vtid); \/\/ java tid\n+  \/\/ java thread group - VirtualThread threadgroup reserved id 1\n+  writer.write(1);\n+  writer.write<bool>(true); \/\/ isVirtual\n+  \/\/ VirtualThread threadgroup already serialized invariant.\n+}\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrType.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -343,1 +343,1 @@\n-void LogConfiguration::configure_stdout(LogLevelType level, int exact_match, ...) {\n+LogSelectionList LogConfiguration::create_selection_list(LogLevelType level, int exact_match, va_list ap) {\n@@ -345,2 +345,0 @@\n-  va_list ap;\n-  va_start(ap, exact_match);\n@@ -358,1 +356,0 @@\n-  va_end(ap);\n@@ -362,2 +359,23 @@\n-         \"configure_stdout() called with invalid\/non-existing log selection\");\n-  LogSelectionList list(selection);\n+         \"create_selection_list() called with invalid\/non-existing log selection\");\n+  return LogSelectionList(selection);\n+}\n+\n+void LogConfiguration::disable_tags(int exact_match, ...) {\n+  va_list ap;\n+  va_start(ap, exact_match);\n+  LogSelectionList list = create_selection_list(LogLevel::Off, exact_match, ap);\n+  va_end(ap);\n+\n+  \/\/ Apply configuration to all outputs, with the same decorators as before.\n+  ConfigurationLock cl;\n+  for (size_t i = 0; i < _n_outputs; i++) {\n+    configure_output(i, list, _outputs[i]->decorators());\n+  }\n+  notify_update_listeners();\n+}\n+\n+void LogConfiguration::configure_stdout(LogLevelType level, int exact_match, ...) {\n+  va_list ap;\n+  va_start(ap, exact_match);\n+  LogSelectionList list = create_selection_list(level, exact_match, ap);\n+  va_end(ap);\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -100,0 +100,2 @@\n+  \/\/ Create a LogSelectionList given a level and a set of tags\n+  static LogSelectionList create_selection_list(LogLevelType level, int exact_match, va_list ap);\n@@ -112,0 +114,7 @@\n+  \/\/ Disables logging on all outputs for the given tags.\n+  \/\/ If exact_match is true, only tagsets with precisely the specified tags will be disabled\n+  \/\/ (exact_match=false is the same as \"-Xlog:<tags>*=off\", and exact_match=true is \"-Xlog:<tags>=off\").\n+  \/\/ Tags should be specified using the LOG_TAGS macro, e.g.\n+  \/\/ LogConfiguration::disable_tags(<true\/false>, LOG_TAGS(<tags>));\n+  static void disable_tags(int exact_match, ...);\n+\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"cds\/aotClassInitializer.hpp\"\n@@ -31,0 +32,1 @@\n+#include \"cds\/lambdaProxyClassDictionary.hpp\"\n@@ -3353,1 +3355,0 @@\n-  assert(k->is_klass(), \"just checking\");\n@@ -3366,1 +3367,1 @@\n-  if (!CDSConfig::is_dumping_archive()) {\n+  if (!CDSConfig::is_dumping_archive() || !CDSConfig::is_dumping_lambdas_in_legacy_mode()) {\n@@ -3400,2 +3401,2 @@\n-  SystemDictionaryShared::add_lambda_proxy_class(caller_ik, lambda_ik, interface_method_name, factory_type,\n-                                                 interface_method_type, m, dynamic_method_type, THREAD);\n+  LambdaProxyClassDictionary::add_lambda_proxy_class(caller_ik, lambda_ik, interface_method_name, factory_type,\n+                                                     interface_method_type, m, dynamic_method_type, THREAD);\n@@ -3440,8 +3441,5 @@\n-  InstanceKlass* lambda_ik = SystemDictionaryShared::get_shared_lambda_proxy_class(caller_ik, interface_method_name, factory_type,\n-                                                                                   interface_method_type, m, dynamic_method_type);\n-  jclass jcls = nullptr;\n-  if (lambda_ik != nullptr) {\n-    InstanceKlass* loaded_lambda = SystemDictionaryShared::prepare_shared_lambda_proxy_class(lambda_ik, caller_ik, THREAD);\n-    jcls = loaded_lambda == nullptr ? nullptr : (jclass) JNIHandles::make_local(THREAD, loaded_lambda->java_mirror());\n-  }\n-  return jcls;\n+  InstanceKlass* loaded_lambda =\n+    LambdaProxyClassDictionary::load_shared_lambda_proxy_class(caller_ik, interface_method_name, factory_type,\n+                                                               interface_method_type, m, dynamic_method_type,\n+                                                               CHECK_(nullptr));\n+  return loaded_lambda == nullptr ? nullptr : (jclass) JNIHandles::make_local(THREAD, loaded_lambda->java_mirror());\n@@ -3518,0 +3516,23 @@\n+JVM_ENTRY(jboolean, JVM_NeedsClassInitBarrierForCDS(JNIEnv* env, jclass cls))\n+#if INCLUDE_CDS\n+  Klass* k = java_lang_Class::as_Klass(JNIHandles::resolve(cls));\n+  if (!k->is_instance_klass()) {\n+    return false;\n+  } else {\n+    if (InstanceKlass::cast(k)->is_enum_subclass() ||\n+        AOTClassInitializer::can_archive_initialized_mirror(InstanceKlass::cast(k))) {\n+      \/\/ This class will be cached in AOT-initialized state. No need for init barriers.\n+      return false;\n+    } else {\n+      \/\/ If we cannot cache the class in AOT-initialized state, java.lang.invoke handles\n+      \/\/ must emit barriers to ensure class initialization during production run.\n+      ResourceMark rm(THREAD);\n+      log_debug(cds)(\"NeedsClassInitBarrierForCDS: %s\", k->external_name());\n+      return true;\n+    }\n+  }\n+#else\n+  return false;\n+#endif \/\/ INCLUDE_CDS\n+JVM_END\n+\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -141,0 +141,1 @@\n+  const char* mode;\n@@ -143,1 +144,2 @@\n-      return CDSConfig::is_using_archive() ? \"interpreted mode, sharing\" : \"interpreted mode\";\n+      mode = \"interpreted mode\";\n+      break;\n@@ -145,6 +147,2 @@\n-      if (CDSConfig::is_using_archive()) {\n-        if (CompilationModeFlag::quick_only()) {\n-          return \"mixed mode, emulated-client, sharing\";\n-        } else {\n-          return \"mixed mode, sharing\";\n-         }\n+      if (CompilationModeFlag::quick_only()) {\n+        mode = \"mixed mode, emulated-client\";\n@@ -152,5 +150,1 @@\n-        if (CompilationModeFlag::quick_only()) {\n-          return \"mixed mode, emulated-client\";\n-        } else {\n-          return \"mixed mode\";\n-        }\n+        mode = \"mixed mode\";\n@@ -158,0 +152,1 @@\n+      break;\n@@ -160,1 +155,3 @@\n-         return CDSConfig::is_using_archive() ? \"compiled mode, emulated-client, sharing\" : \"compiled mode, emulated-client\";\n+        mode = \"compiled mode, emulated-client\";\n+      } else {\n+        mode = \"compiled mode\";\n@@ -162,1 +159,3 @@\n-      return CDSConfig::is_using_archive() ? \"compiled mode, sharing\" : \"compiled mode\";\n+      break;\n+    default:\n+      ShouldNotReachHere();\n@@ -164,2 +163,13 @@\n-  ShouldNotReachHere();\n-  return \"\";\n+\n+  const char* static_info = \", static\";\n+  const char* sharing_info = \", sharing\";\n+  size_t len = strlen(mode) +\n+               (is_vm_statically_linked() ? strlen(static_info) : 0) +\n+               (CDSConfig::is_using_archive() ? strlen(sharing_info) : 0) +\n+               1;\n+  char* vm_info = NEW_C_HEAP_ARRAY(char, len, mtInternal);\n+  \/\/ jio_snprintf places null character in the last character.\n+  jio_snprintf(vm_info, len, \"%s%s%s\", mode,\n+               is_vm_statically_linked() ? static_info : \"\",\n+               CDSConfig::is_using_archive() ? sharing_info : \"\");\n+  return vm_info;\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -338,2 +338,1 @@\n-    if (matches_property_suffix(property_suffix, ADDEXPORTS, ADDEXPORTS_LEN) ||\n-        matches_property_suffix(property_suffix, ADDREADS, ADDREADS_LEN) ||\n+    if (matches_property_suffix(property_suffix, ADDREADS, ADDREADS_LEN) ||\n@@ -350,1 +349,2 @@\n-      if (matches_property_suffix(property_suffix, PATH, PATH_LEN) ||\n+      if (matches_property_suffix(property_suffix, ADDEXPORTS, ADDEXPORTS_LEN) ||\n+          matches_property_suffix(property_suffix, PATH, PATH_LEN) ||\n@@ -3839,1 +3839,1 @@\n-  CDSConfig::initialize();\n+  CDSConfig::ergo_initialize();\n@@ -3928,0 +3928,7 @@\n+#ifdef COMPILER2\n+  if (!FLAG_IS_DEFAULT(UseLoopPredicate) && !UseLoopPredicate && UseProfiledLoopPredicate) {\n+    warning(\"Disabling UseProfiledLoopPredicate since UseLoopPredicate is turned off.\");\n+    FLAG_SET_ERGO(UseProfiledLoopPredicate, false);\n+  }\n+#endif \/\/ COMPILER2\n+\n@@ -3931,1 +3938,2 @@\n-      LogConfiguration::configure_stdout(LogLevel::Off, false, LOG_TAGS(perf, class, link));\n+      LogConfiguration::disable_tags(false, LOG_TAGS(perf, class, link));\n+      assert(!log_is_enabled(Info, perf, class, link), \"sanity\");\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1438,1 +1438,1 @@\n-          range(0, max_uintx)                                               \\\n+          range(0, max_uintx \/ 2 + 1)                                       \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-    assert(id >= ThreadIdentifier::initial() && id < ThreadIdentifier::current(), \"\");\n+    ThreadIdentifier::verify_id(id);\n@@ -176,1 +176,5 @@\n-  int64_t monitor_owner_id() const { return _monitor_owner_id; }\n+  int64_t monitor_owner_id() const {\n+    int64_t id = _monitor_owner_id;\n+    ThreadIdentifier::verify_id(id);\n+    return id;\n+  }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1294,0 +1294,6 @@\n+  \/\/ Check if addr points into the narrow Klass protection zone\n+  if (UseCompressedClassPointers && CompressedKlassPointers::is_in_protection_zone(addr)) {\n+    st->print_cr(PTR_FORMAT \" points into nKlass protection zone\", p2i(addr));\n+    return;\n+  }\n+\n@@ -1813,2 +1819,0 @@\n-#define trace_page_size_params(size) byte_size_in_exact_unit(size), exact_unit_for_byte_size(size)\n-\n@@ -1823,2 +1827,2 @@\n-                     \" min=%zu%s\"\n-                     \" max=%zu%s\"\n+                     \" min=\" EXACTFMT\n+                     \" max=\" EXACTFMT\n@@ -1826,2 +1830,2 @@\n-                     \" size=%zu%s\"\n-                     \" page_size=%zu%s\",\n+                     \" size=\" EXACTFMT\n+                     \" page_size=\" EXACTFMT,\n@@ -1829,2 +1833,2 @@\n-                     trace_page_size_params(region_min_size),\n-                     trace_page_size_params(region_max_size),\n+                     EXACTFMTARGS(region_min_size),\n+                     EXACTFMTARGS(region_max_size),\n@@ -1832,2 +1836,2 @@\n-                     trace_page_size_params(size),\n-                     trace_page_size_params(page_size));\n+                     EXACTFMTARGS(size),\n+                     EXACTFMTARGS(page_size));\n@@ -1844,2 +1848,2 @@\n-                     \" req_size=%zu%s\"\n-                     \" req_page_size=%zu%s\"\n+                     \" req_size=\" EXACTFMT\n+                     \" req_page_size=\" EXACTFMT\n@@ -1847,2 +1851,2 @@\n-                     \" size=%zu%s\"\n-                     \" page_size=%zu%s\",\n+                     \" size=\" EXACTFMT\n+                     \" page_size=\" EXACTFMT,\n@@ -1850,2 +1854,2 @@\n-                     trace_page_size_params(requested_size),\n-                     trace_page_size_params(requested_page_size),\n+                     EXACTFMTARGS(requested_size),\n+                     EXACTFMTARGS(requested_page_size),\n@@ -1853,2 +1857,2 @@\n-                     trace_page_size_params(size),\n-                     trace_page_size_params(page_size));\n+                     EXACTFMTARGS(size),\n+                     EXACTFMTARGS(page_size));\n@@ -2014,2 +2018,1 @@\n-  char* const lo_att = align_up(MAX2(absolute_min, min), alignment_adjusted);\n-  if (lo_att == nullptr) {\n+  if (!can_align_up(MAX2(absolute_min, min), alignment_adjusted)) {\n@@ -2018,0 +2021,1 @@\n+  char* const lo_att = align_up(MAX2(absolute_min, min), alignment_adjusted);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":24,"deletions":20,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -1067,0 +1067,1 @@\n+  assert(p->monitor_owner_id() != 0, \"should be set\");\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -440,0 +440,7 @@\n+char* stringStream::as_string(Arena* arena) const {\n+  char* copy = NEW_ARENA_ARRAY(arena, char, _written + 1);\n+  ::memcpy(copy, _buffer, _written);\n+  copy[_written] = '\\0';  \/\/ terminating null\n+  return copy;\n+}\n+\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -273,0 +273,1 @@\n+  char* as_string(Arena* arena) const;\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2231,5 +2231,0 @@\n-            @Override\n-            public void exit(int statusCode) {\n-                Shutdown.exit(statusCode);\n-            }\n-\n@@ -2330,4 +2325,0 @@\n-            public Stream<ScheduledExecutorService> virtualThreadDelayedTaskSchedulers() {\n-                return VirtualThread.delayedTaskSchedulers();\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,2 +170,8 @@\n-                \/\/ Wait for a Ref, with a timeout to avoid getting hung\n-                \/\/ due to a race with clear\/clean\n+                \/\/ Wait for a Ref, with a timeout to avoid a potential hang.\n+                \/\/ The Cleaner may become unreachable and its cleanable run,\n+                \/\/ while there are registered cleanables for other objects.\n+                \/\/ If the application explicitly calls clean() on all remaining\n+                \/\/ Cleanables, there won't be any references enqueued to unblock\n+                \/\/ this.  Using a timeout is simpler than unblocking this by\n+                \/\/ having cleaning of the last registered cleanable enqueue a\n+                \/\/ dummy reference.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/ref\/CleanerImpl.java","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import sun.net.www.ParseUtil;\n@@ -102,1 +103,1 @@\n-        if (!URLJarFile.isFileURL(patched)) {\n+        if (!ParseUtil.isLocalFileURL(patched)) {\n@@ -168,3 +169,4 @@\n-            if (host != null && !host.isEmpty() &&\n-                    !host.equalsIgnoreCase(\"localhost\")) {\n-\n+            \/\/ Subtly different from ParseUtil.isLocalFileURL, for historical reasons\n+            boolean isLocalFile = ParseUtil.isLocalFileURL(url) && !\"~\".equals(host);\n+            \/\/ For remote hosts, change 'file:\/\/host\/folder\/data.xml' to 'file:\/\/\/\/host\/folder\/data.xml'\n+            if (!isLocalFile) {\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/JarFileFactory.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1465,0 +1465,6 @@\n+    `report-on-exit=`*identifier*\n+    :   Specifies the name of the view to display when the Java Virtual Machine\n+        (JVM) shuts down. This option is not available if the disk option is set\n+        to false. For a list of available views, see `jfr help view`. By default,\n+        no report is generated.\n+\n","filename":"src\/java.base\/share\/man\/java.md","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -670,0 +670,4 @@\n+#if defined(__GNUC__)\n+#pragma GCC diagnostic push\n+#pragma GCC diagnostic ignored \"-Wreturn-type\"\n+#endif\n@@ -671,0 +675,3 @@\n+#if defined(__GNUC__)\n+#pragma GCC diagnostic pop\n+#endif\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -351,1 +351,0 @@\n-         *     o          $JDK\/..\/lib\n@@ -380,2 +379,1 @@\n-                        \"%s\/lib:\"\n-                        \"%s\/..\/lib\",\n+                        \"%s\/lib\",\n@@ -383,1 +381,0 @@\n-                        jdkroot,\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md.c","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-\n@@ -44,3 +43,0 @@\n-    \/\/ for internal use\n-    unsigned int micro = (unsigned int) jmm_version & 0xFF;\n-\n@@ -67,1 +63,1 @@\n-    jint ret = jmm_interface->GetOptionalSupport(env, &mos);\n+    jmm_interface->GetOptionalSupport(env, &mos);\n","filename":"src\/java.management\/share\/native\/libmanagement\/VMManagementImpl.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,2 @@\n+import java.util.HashMap;\n+import java.util.Map;\n@@ -58,0 +60,1 @@\n+    private static final boolean ALLOW_STREAMING_OUTPUT;\n@@ -61,0 +64,3 @@\n+        \/\/ For now the default is false.\n+        String s2 = VM.getSavedProperty(\"jdk.attach.allowStreamingOutput\");\n+        ALLOW_STREAMING_OUTPUT = \"\".equals(s2) || Boolean.parseBoolean(s2);\n@@ -63,0 +69,2 @@\n+    private final boolean selfAttach;\n+\n@@ -75,0 +83,1 @@\n+        selfAttach = pid == 0 || pid == pid();\n@@ -77,1 +86,1 @@\n-        if (!ALLOW_ATTACH_SELF && (pid == 0 || pid == pid())) {\n+        if (!ALLOW_ATTACH_SELF && selfAttach) {\n@@ -332,0 +341,26 @@\n+    \/\/ Attach operation properties.\n+    protected static class OperationProperties {\n+        public final static String STREAMING = \"streaming\";\n+\n+        private int ver;\n+        private Map<String, String> options = new HashMap<>();\n+\n+        OperationProperties(int ver) {\n+            this.ver = ver;\n+        }\n+\n+        int version() {\n+            return ver;\n+        }\n+\n+        void setOption(String name, String value) {\n+            options.put(name, value);\n+        }\n+\n+        String options() {\n+            return options.entrySet().stream()\n+                          .map(e -> e.getKey() + \"=\" + e.getValue())\n+                          .collect(Collectors.joining(\",\"));\n+        }\n+    }\n+\n@@ -333,1 +368,1 @@\n-     * Detects Attach API version supported by target VM.\n+     * Detects Attach API properties supported by target VM.\n@@ -335,1 +370,1 @@\n-    protected int detectVersion() throws IOException {\n+    protected OperationProperties getDefaultProps() throws IOException {\n@@ -337,1 +372,1 @@\n-            InputStream reply = execute(\"getversion\");\n+            InputStream reply = execute(\"getversion\", \"options\");\n@@ -340,5 +375,18 @@\n-            try {\n-                int supportedVersion = Integer.parseUnsignedInt(message);\n-                \/\/ we expect only VERSION_2\n-                if (supportedVersion == VERSION_2) {\n-                    return VERSION_2;\n+\n+            \/\/ Reply is \"<ver> option1,option2...\".\n+            int delimPos = message.indexOf(' ');\n+            String ver = delimPos < 0 ? message : message.substring(0, delimPos);\n+\n+            int supportedVersion = Integer.parseUnsignedInt(ver);\n+\n+            \/\/ VERSION_2 supports options.\n+            if (supportedVersion == VERSION_2) {\n+                OperationProperties result = new OperationProperties(supportedVersion);\n+                \/\/ Parse known options, ignore unknown.\n+                String options = delimPos < 0 ? \"\" : message.substring(delimPos + 1);\n+                String[] parts = options.split(\",\");\n+                for (String s: parts) {\n+                    if (OperationProperties.STREAMING.equals(s)) {\n+                        result.setOption(OperationProperties.STREAMING,\n+                                         (isStreamingEnabled() ? \"1\" : \"0\"));\n+                    }\n@@ -346,2 +394,1 @@\n-            } catch (NumberFormatException nfe) {\n-                \/\/ bad reply - fallback to VERSION_1\n+                return result;\n@@ -351,0 +398,2 @@\n+        } catch (NumberFormatException nfe) {\n+            \/\/ bad version number - fallback to VERSION_1\n@@ -352,1 +401,1 @@\n-        return VERSION_1;\n+        return new OperationProperties(VERSION_1);\n@@ -363,0 +412,11 @@\n+    \/*\n+     * Streaming output.\n+     *\/\n+    protected boolean isStreamingEnabled() {\n+        \/\/ Disable streaming for self-attach.\n+        if (selfAttach) {\n+            return false;\n+        }\n+        return ALLOW_STREAMING_OUTPUT;\n+    }\n+\n@@ -479,3 +539,9 @@\n-    protected void writeCommand(AttachOutputStream writer, int ver, String cmd, Object ... args) throws IOException {\n-        writeString(writer, ver);\n-        if (ver == VERSION_2) {\n+    protected void writeCommand(AttachOutputStream writer, OperationProperties props,\n+                                String cmd, Object ... args) throws IOException {\n+        writeString(writer, props.version());\n+        if (props.version() == VERSION_2) {\n+            \/\/ add options to the command name (if specified)\n+            String options = props.options();\n+            if (!options.isEmpty()) {\n+                cmd += \" \" + options;\n+            }\n@@ -491,1 +557,1 @@\n-        int argNumber = ver == VERSION_1 ? 3 : args.length;\n+        int argNumber = props.version() == VERSION_1 ? 3 : args.length;\n","filename":"src\/jdk.attach\/share\/classes\/sun\/tools\/attach\/HotSpotVirtualMachine.java","additions":83,"deletions":17,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -683,0 +683,7 @@\n+\n+    \/**\n+     * Returns whether the current build is a product build.\n+     *\n+     * @return {@code true} if this is a product build, {@code false} otherwise.\n+     *\/\n+    public static native boolean isProduct();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVM.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-            Logger.log(LogTag.JFR_SYSTEM, LogLevel.WARN, \"Unexpected error when adding instrumentation for event type \" + eventName);\n+            Logger.log(LogTag.JFR_SYSTEM, LogLevel.WARN, \"Unexpected error when adding instrumentation for event type \" + eventName + \". \" + t.getMessage());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVMUpcalls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+import jdk.jfr.internal.query.Report;\n@@ -73,1 +74,0 @@\n-\n@@ -254,0 +254,4 @@\n+    synchronized boolean isInShutDown() {\n+        return this.inShutdown;\n+    }\n+\n@@ -274,0 +278,1 @@\n+        writeReports();\n@@ -285,0 +290,10 @@\n+    private void writeReports() {\n+        for (PlatformRecording recording : getRecordings()) {\n+            if (recording.isToDisk() && recording.getState() == RecordingState.STOPPED) {\n+                for (Report report : recording.getReports()) {\n+                    report.print(recording.getStartTime(), recording.getStopTime());\n+                }\n+            }\n+        }\n+    }\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+import jdk.jfr.internal.query.Report;\n@@ -86,0 +87,1 @@\n+    private final List<Report> reports = new ArrayList<>();\n@@ -94,1 +96,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -174,1 +175,4 @@\n-                close(); \/\/ remove if copied out\n+                boolean reportOnExit = recorder.isInShutDown() && !reports.isEmpty();\n+                if (!reportOnExit) {\n+                    close(); \/\/ remove if copied out, unless we are in shutdown and there are reports to report.\n+                }\n@@ -929,0 +933,8 @@\n+\n+    public void addReport(Report report) {\n+       reports.add(report);\n+    }\n+\n+    public List<Report> getReports() {\n+        return reports;\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecording.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-compiler\/vectorapi\/VectorLogicalOpIdentityTest.java 8302459 linux-x64,windows-x64\n@@ -73,2 +72,0 @@\n-compiler\/startup\/StartupOutput.java 8347406 generic-x64\n-\n@@ -79,0 +76,3 @@\n+compiler\/ciReplay\/TestInliningProtectionDomain.java 8349191 generic-all\n+compiler\/ciReplay\/TestIncrementalInlining.java 8349191 generic-all\n+\n@@ -100,1 +100,0 @@\n-gc\/TestAllocHumongousFragment.java#generational 8351464 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -545,3 +545,2 @@\n-# First bug for AIX, second for Windows\n-com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957,8351002 aix-all,windows-all\n-com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957,8351002 aix-all,windows-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetProcessCpuLoad.java 8030957 aix-all\n+com\/sun\/management\/OperatingSystemMXBean\/GetSystemCpuLoad.java  8030957 aix-all\n@@ -757,1 +756,0 @@\n-jdk\/incubator\/vector\/Long256VectorTests.java                    8350840 generic-x64\n@@ -785,0 +783,1 @@\n+javax\/swing\/JTabbedPane\/bug4499556.java 8267500 macosx-all\n@@ -788,0 +787,1 @@\n+javax\/swing\/JInternalFrame\/bug4134077.java 8184985 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}