{"files":[{"patch":"@@ -227,0 +227,4 @@\n+  struct timespec timeout;\n+  timeout.tv_sec = CRaCCheckpointTimeout;\n+  timeout.tv_nsec = 0;\n+\n@@ -230,1 +234,10 @@\n-    sig = sigwaitinfo(&waitmask, &info);\n+    if (timeout.tv_sec == 0) {\n+      sig = sigwaitinfo(&waitmask, &info);\n+    } else {\n+      sig = sigtimedwait(&waitmask, &info, &timeout);\n+      if (sig == -1 && errno == EAGAIN) {\n+        tty->print_cr(\"The checkpoint was not generated within %d seconds.\", CRaCCheckpointTimeout);\n+        tty->print_cr(\"You can change the time-out period by -XX:CRaCCheckpointTimeout=.\");\n+        return JVM_CHECKPOINT_ERROR;\n+      }\n+    }\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2047,0 +2047,5 @@\n+  product(uint, CRaCCheckpointTimeout, 0,                                 \\\n+      \"Timeout, in seconds, to limit the time spent on checkpoint.\"         \\\n+      \"A value of zero means no timeout.\")                                  \\\n+      range(0, UINT_MAX)                                                    \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (c) 2023, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+import jdk.crac.*;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.crac.CracBuilder;\n+import jdk.test.lib.crac.CracTest;\n+\n+import java.util.Arrays;\n+\n+import static jdk.test.lib.Asserts.*;\n+\n+\/**\n+ * @test CracTimeoutTest\n+ * @library \/test\/lib\n+ * @build CracTimeoutTest\n+ * @run driver jdk.test.lib.crac.CracTest\n+ * @requires (os.family == \"linux\")\n+ *\/\n+\n+public class CracTimeoutTest implements CracTest {\n+    public static final String EXCEPTION_MESSAGE = \"Native checkpoint failed.\";\n+    public static final String TIMEOUT_MESSAGE = \"The checkpoint was not generated within 10 seconds.\\n\" +\n+                                   \"You can change the time-out period by -XX:CRaCCheckpointTimeout=.\";\n+\n+    @Override\n+    public void test() throws Exception {\n+        CracBuilder builder = new CracBuilder().env(\"CRAC_CRIU_OPTS\", \"-V\")\n+                .vmOption(\"-XX:CRaCCheckpointTimeout=10\").captureOutput(true);\n+        builder.startCheckpoint().waitForSuccess().outputAnalyzer().shouldContain(TIMEOUT_MESSAGE);\n+    }\n+\n+    @Override\n+    public void exec() throws Exception {\n+        long startTime = 0;\n+        try {\n+            startTime = System.currentTimeMillis();\n+            Core.checkpointRestore();\n+            fail(\"Was supposed to throw\");\n+        } catch (CheckpointException e) {\n+            long endTime = System.currentTimeMillis();\n+            assertEquals(1, e.getSuppressed().length, Arrays.toString(e.getSuppressed()));\n+            assertEquals(EXCEPTION_MESSAGE, e.getSuppressed()[0].getMessage());\n+            long elapsedTime = endTime - startTime;\n+            assertTrue(elapsedTime >= 10000 && elapsedTime <= 11000, \"Elapsed time is not between 10 and 11 seconds.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/crac\/CracTimeoutTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}