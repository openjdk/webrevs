{"files":[{"patch":"@@ -53,3 +53,0 @@\n-  \/\/ Some keys can be excluded if they are not supposed to be set by a user but rather by the\n-  \/\/ application the engine is linked to.\n-  \/\/\n@@ -59,1 +56,1 @@\n-  \/\/ * args=<string> (default: \\\"\\\") — other arguments.\n+  \/\/ * args=<string> (default: \\\"\\\") — other arguments.\\n\n","filename":"src\/hotspot\/share\/include\/crlib\/crlib_description.h","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"nmt\/memTag.hpp\"\n@@ -53,0 +54,1 @@\n+#include \"utilities\/growableArray.hpp\"\n@@ -326,0 +328,11 @@\n+  const char * const *controlled_opts = CracEngine::vm_controlled_options();\n+  tty->cr();\n+  tty->print_raw(\"Configuration options controlled by the JVM: \");\n+  for (const auto *opt = controlled_opts; *opt != nullptr; opt++) {\n+    tty->print_raw(*opt);\n+    if (*(opt + 1) != nullptr) {\n+      tty->print_raw(\", \");\n+    }\n+  }\n+  tty->cr();\n+\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,23 @@\n+\/*\n+ * Copyright (c) 2025, Azul Systems, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n@@ -7,0 +30,1 @@\n+#include \"nmt\/memTag.hpp\"\n@@ -18,2 +42,13 @@\n-#define ENGINE_OPT_IMAGE_LOCATION \"image_location\"\n-#define ENGINE_OPT_EXEC_LOCATION \"exec_location\"\n+#define VM_CONTROLLED_ENGINE_OPTS(OPT) \\\n+  OPT(image_location) \\\n+  OPT(exec_location) \\\n+\n+#define ARRAY_ELEM(opt) #opt,\n+static constexpr const char * const vm_controlled_engine_opts[] = {\n+  VM_CONTROLLED_ENGINE_OPTS(ARRAY_ELEM) nullptr\n+};\n+#undef ARRAY_ELEM\n+\n+#define DEFINE_OPT_VAR(opt) static constexpr const char engine_opt_##opt[] = #opt;\n+VM_CONTROLLED_ENGINE_OPTS(DEFINE_OPT_VAR)\n+#undef DEFINE_OPT_VAR\n@@ -38,0 +73,4 @@\n+const char * const *CracEngine::vm_controlled_options() {\n+  return vm_controlled_engine_opts;\n+}\n+\n@@ -114,2 +153,2 @@\n-  if (!api.configure(conf, ENGINE_OPT_IMAGE_LOCATION, image_location)) {\n-    log_error(crac)(\"CRaC engine failed to configure: '\" ENGINE_OPT_IMAGE_LOCATION \"' = '%s'\", image_location);\n+  if (!api.configure(conf, engine_opt_image_location, image_location)) {\n+    log_error(crac)(\"CRaC engine failed to configure: '%s' = '%s'\", engine_opt_image_location, image_location);\n@@ -159,4 +198,4 @@\n-    guarantee(api.can_configure(conf, ENGINE_OPT_EXEC_LOCATION),\n-              \"crexec does not support an internal option: \" ENGINE_OPT_EXEC_LOCATION);\n-    if (!api.configure(conf, ENGINE_OPT_EXEC_LOCATION, exec_location)) {\n-      log_error(crac)(\"crexec failed to configure: '\" ENGINE_OPT_EXEC_LOCATION \"' = '%s'\", exec_location);\n+    guarantee(api.can_configure(conf, engine_opt_exec_location),\n+              \"crexec does not support expected option: %s\", engine_opt_exec_location);\n+    if (!api.configure(conf, engine_opt_exec_location, exec_location)) {\n+      log_error(crac)(\"crexec failed to configure: '%s' = '%s'\", engine_opt_exec_location, exec_location);\n@@ -172,0 +211,5 @@\n+  CStringSet vm_controlled_keys;\n+#define PUT_CONTROLLED_KEY(opt) vm_controlled_keys.put_when_absent(engine_opt_##opt, false);\n+  VM_CONTROLLED_ENGINE_OPTS(PUT_CONTROLLED_KEY)\n+#undef PUT_CONTROLLED_KEY\n+\n@@ -180,3 +224,2 @@\n-    if (strcmp(key, ENGINE_OPT_IMAGE_LOCATION) == 0 ||\n-        (exec_location != nullptr && strcmp(key, ENGINE_OPT_EXEC_LOCATION) == 0)) {\n-      log_warning(crac)(\"Internal CRaC engine option provided, skipping: %s\", key);\n+    if (vm_controlled_keys.contains(key)) {\n+      log_warning(crac)(\"VM-controlled CRaC engine option provided, skipping: %s\", key);\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":54,"deletions":11,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -39,0 +39,2 @@\n+  static const char * const *vm_controlled_options();\n+\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -365,4 +365,0 @@\n-  \/\/ Internal options which are expected to be set by the program crexec is linked to are omitted\n-  \/\/ since users are not supposed to pass them directly:\n-  \/\/ * image_location=<path> (no default) - path to a directory with checkpoint\/restore files.\n-  \/\/ * exec_location=<path> (no default) - path to the engine executable.\n@@ -370,0 +366,2 @@\n+    \"* image_location=<path> (no default) - path to a directory with checkpoint\/restore files.\\n\"\n+    \"* exec_location=<path> (no default) - path to the engine executable.\\n\"\n@@ -376,1 +374,1 @@\n-    \"engine executable, e.g. \\\"--arg1 --arg2 --arg3\\\".\";\n+    \"engine executable, e.g. \\\"--arg1 --arg2 --arg3\\\".\\n\";\n","filename":"src\/java.base\/share\/native\/libcrexec\/crexec.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -85,1 +85,1 @@\n-                \"Internal CRaC engine option provided, skipping: image_location\");\n+                \"VM-controlled CRaC engine option provided, skipping: image_location\");\n","filename":"test\/jdk\/jdk\/crac\/CracEngineOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}