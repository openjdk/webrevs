{"files":[{"patch":"@@ -330,1 +330,1 @@\n-  if (!controlled_opts->is_empty()) {\n+  if (controlled_opts->is_nonempty()) {\n@@ -332,4 +332,6 @@\n-    tty->print_raw(\"Configuration options controlled by the JVM:\");\n-    for (const char *opt : *controlled_opts) {\n-      tty->print_raw(\" \");\n-      tty->print_raw(opt);\n+    tty->print_raw(\"Configuration options controlled by the JVM: \");\n+    for (int i = 0; i < controlled_opts->length(); i++) {\n+      tty->print_raw(controlled_opts->at(i));\n+      if (i != controlled_opts->length() - 1) {\n+        tty->print_raw(\", \");\n+      }\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -403,0 +403,1 @@\n+  \/\/ We expect all engines to support this but the error is to be shown when configuring checkpoint\n@@ -405,2 +406,0 @@\n-  } else {\n-    log_debug(crac)(\"CRaC engine does not support expected option: \" ENGINE_OPT_IMAGE_LOCATION);\n@@ -409,0 +408,3 @@\n+  \/\/ ID-based checks are not fully robust as engines are free to use any ID (e.g. external engines\n+  \/\/ can try to \"impersonate\" themselves as crexec) but in reality engines are expected to use\n+  \/\/ destinct IDs so this shouldn't cause problems\n@@ -415,6 +417,2 @@\n-  if (strcmp(id, \"crexec\") == 0) {\n-    if (_api->can_configure(_conf, ENGINE_OPT_EXEC_LOCATION)) {\n-      opts->append(ENGINE_OPT_EXEC_LOCATION);\n-    } else {\n-      log_debug(crac)(\"CRaC engine does not support expected option: \" ENGINE_OPT_EXEC_LOCATION);\n-    }\n+  if (strcmp(id, \"crexec\") == 0 && _api->can_configure(_conf, ENGINE_OPT_EXEC_LOCATION)) {\n+    opts->append(ENGINE_OPT_EXEC_LOCATION);\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}