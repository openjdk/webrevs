{"files":[{"patch":"@@ -364,11 +364,11 @@\n-#  test-linux-x64-static:\n-#    name: linux-x64-static\n-#    needs:\n-#      - build-linux-x64\n-#      - build-linux-x64-static\n-#    uses: .\/.github\/workflows\/test.yml\n-#    with:\n-#      platform: linux-x64\n-#      bootjdk-platform: linux-x64\n-#      runs-on: ubuntu-22.04\n-#      static-suffix: \"-static\"\n+  test-linux-x64-static:\n+    name: linux-x64-static\n+    needs:\n+      - build-linux-x64\n+      - build-linux-x64-static\n+    uses: .\/.github\/workflows\/test.yml\n+    with:\n+      platform: linux-x64\n+      bootjdk-platform: linux-x64\n+      runs-on: ubuntu-22.04\n+      static-suffix: \"-static\"\n","filename":".github\/workflows\/main.yml","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-            echo \"test-jdk=JDK_UNDER_TEST=${{ steps.bundles.outputs.static-jdk-path }}\" >> $GITHUB_OUTPUT\n+            echo \"test-jdk=${{ steps.bundles.outputs.static-jdk-path }}\" >> $GITHUB_OUTPUT\n@@ -192,0 +192,2 @@\n+          else\n+            echo \"test-jdk=${{ steps.bundles.outputs.jdk-path }}\" >> $GITHUB_OUTPUT\n@@ -197,1 +199,1 @@\n-          jdk-path: ${{ steps.bundles.outputs.jdk-path }}\n+          jdk-path: ${{ steps.extra-options.outputs.test-jdk }}\n@@ -210,1 +212,1 @@\n-          ${{ steps.extra-options.outputs.test-jdk }}\n+          JDK_UNDER_TEST=${{ steps.extra-options.outputs.test-jdk }}\n","filename":".github\/workflows\/test.yml","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"runtime\/java.hpp\"\n@@ -254,0 +255,1 @@\n+  \/\/ for static JDK, the path or \"...\/bin\/java\", or \"...\\bin\\java.exe\"\n@@ -259,0 +261,8 @@\n+  if (is_vm_statically_linked()) {\n+    strcat(dll_dir, os::file_separator());\n+#ifdef _WINDOWS\n+    strcat(dll_dir, \"bin\");\n+#else\n+    strcat(dll_dir, \"lib\");\n+#endif\n+  }\n@@ -268,0 +278,2 @@\n+  bool is_static_crexec = false; \/\/ true when using statically linked crexec\n+\n@@ -271,1 +283,4 @@\n-    if (!os::dll_locate_lib(path, sizeof(path), dll_dir, \"crexec\")) {\n+    if (is_vm_statically_linked()) {\n+      is_static_crexec = true;\n+      os::jvm_path(path, sizeof(path)); \/\/ points to bin\/java for static JDK\n+    } else if (!os::dll_locate_lib(path, sizeof(path), dll_dir, \"crexec\")) {\n@@ -278,1 +293,1 @@\n-  void * const lib = os::dll_load(path, error_buf, sizeof(error_buf));\n+  void * const lib = is_static_crexec ? os::get_default_process_handle() : os::dll_load(path, error_buf, sizeof(error_buf));\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -15,0 +15,13 @@\n+\n+# Require jcmd\n+jdk\/crac\/DaemonAfterRestore.java                                                 8346719 generic-all\n+jdk\/crac\/fileDescriptors\/SharedLibraryTest.java                                  8346719 generic-all\n+jdk\/crac\/jfr\/FlightRecorderJcmdTest.java                                         8346719 generic-all\n+jdk\/crac\/PerfMemoryRestoreTest.java                                              8346719 generic-all\n+\n+# Require container with libX11\n+jdk\/crac\/ContainerOOMETest.java                                                  8364624 generic-all\n+jdk\/crac\/ContainerPidAdjustmentTest.java                                         8364624 generic-all\n+jdk\/crac\/java\/lang\/System\/NanoTimeTest.java                                      8364624 generic-all\n+jdk\/crac\/java\/net\/InetAddress\/ResolveTest.java                                   8364624 generic-all\n+jdk\/crac\/java\/lang\/System\/TimedWaitingTest.java                                  8364624 generic-all\n","filename":"test\/jdk\/ProblemList-StaticJdk.txt","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}