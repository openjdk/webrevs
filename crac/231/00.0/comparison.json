{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+include MakeFileStart.gmk\n+\n@@ -30,5 +32,0 @@\n-default: all\n-\n-include $(SPEC)\n-include MakeBase.gmk\n-\n@@ -40,3 +37,0 @@\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, CompileDemos-pre.gmk))\n-\n@@ -135,1 +129,0 @@\n-        SRCZIP := $(SUPPORT_OUTPUTDIR)\/demos\/image\/$$($1_DEMO_SUBDIR)\/$1\/src.zip, \\\n@@ -141,0 +134,8 @@\n+\n+    $$(eval $$(call SetupZipArchive, ZIP_SRC_DEMO_$1, \\\n+        SRC := $$($1_MAIN_SRC) $$($1_EXTRA_SRC_DIR), \\\n+        ZIP := $(SUPPORT_OUTPUTDIR)\/demos\/image\/$$($1_DEMO_SUBDIR)\/$1\/src.zip, \\\n+        EXCLUDE_FILES := $$($1_EXCLUDE_FILES), \\\n+    ))\n+\n+    $1 += $$(ZIP_SRC_DEMO_$1)\n@@ -264,5 +265,0 @@\n-################################################################################\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, CompileDemos-post.gmk))\n-\n-all: $(TARGETS)\n@@ -271,1 +267,3 @@\n-.PHONY: all\n+################################################################################\n+\n+include MakeFileEnd.gmk\n","filename":"make\/CompileDemos.gmk","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-# Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,20 +25,1 @@\n-default: all\n-\n-include $(SPEC)\n-include MakeBase.gmk\n-\n-include CopyFiles.gmk\n-include Execute.gmk\n-include Modules.gmk\n-include ModuleTools.gmk\n-include ProcessMarkdown.gmk\n-include ToolsJdk.gmk\n-include ZipArchive.gmk\n-include TextFileProcessing.gmk\n-\n-# This is needed to properly setup DOCS_MODULES.\n-$(eval $(call ReadImportMetaData))\n-\n-################################################################################\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, Docs.gmk))\n+include MakeFileStart.gmk\n@@ -57,1 +38,13 @@\n-#\n+################################################################################\n+\n+include CopyFiles.gmk\n+include Execute.gmk\n+include Modules.gmk\n+include ProcessMarkdown.gmk\n+include TextFileProcessing.gmk\n+include ZipArchive.gmk\n+include $(TOPDIR)\/make\/ModuleTools.gmk\n+include $(TOPDIR)\/make\/ToolsJdk.gmk\n+\n+# This is needed to properly setup DOCS_MODULES.\n+$(eval $(call ReadImportMetaData))\n@@ -765,4 +758,0 @@\n-################################################################################\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, Docs-post.gmk))\n-\n@@ -810,1 +799,1 @@\n-.PHONY: default all docs-jdk-api-javadoc docs-jdk-api-graphs \\\n+.PHONY: docs-jdk-api-javadoc docs-jdk-api-graphs \\\n@@ -814,0 +803,4 @@\n+\n+################################################################################\n+\n+include MakeFileEnd.gmk\n","filename":"make\/Docs.gmk","additions":20,"deletions":27,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,1 @@\n+    jdk.compiler \\\n","filename":"make\/conf\/module-loader-map.conf","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2013, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2013, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,4 @@\n-$(eval $(call IncludeCustomExtension, hotspot\/lib\/JvmFeatures.gmk))\n+################################################################################\n+\n+include MakeIncludeStart.gmk\n+ifeq ($(INCLUDE), true)\n@@ -31,0 +34,1 @@\n+################################################################################\n@@ -287,0 +291,5 @@\n+\n+################################################################################\n+\n+endif # include guard\n+include MakeIncludeEnd.gmk\n","filename":"make\/hotspot\/lib\/JvmFeatures.gmk","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-include LauncherCommon.gmk\n+################################################################################\n@@ -28,2 +28,1 @@\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, modules\/java.base\/Launcher.gmk))\n+include LauncherCommon.gmk\n@@ -41,1 +40,2 @@\n-    CFLAGS := -DEXPAND_CLASSPATH_WILDCARDS -DENABLE_ARG_FILES, \\\n+    ENABLE_ARG_FILES := true, \\\n+    EXPAND_CLASSPATH_WILDCARDS := true, \\\n@@ -53,1 +53,3 @@\n-      CFLAGS := -DJAVAW -DEXPAND_CLASSPATH_WILDCARDS -DENABLE_ARG_FILES, \\\n+      ENABLE_ARG_FILES := true, \\\n+      EXPAND_CLASSPATH_WILDCARDS := true, \\\n+      WINDOWS_JAVAW := true, \\\n","filename":"make\/modules\/java.base\/Launcher.gmk","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+################################################################################\n+\n@@ -29,3 +31,0 @@\n-# Hook to include the corresponding custom file, if present.\n-$(eval $(call IncludeCustomExtension, modules\/java.base\/Lib.gmk))\n-\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,2 @@\n+include MakeFileStart.gmk\n+\n@@ -32,5 +34,0 @@\n-default: all\n-\n-include $(SPEC)\n-include MakeBase.gmk\n-\n@@ -44,2 +41,0 @@\n-TARGETS :=\n-\n@@ -67,1 +62,0 @@\n-    DISABLED_WARNINGS := try deprecation rawtypes unchecked serial cast removal preview restricted dangling-doc-comments, \\\n@@ -89,1 +83,0 @@\n-#\n@@ -95,1 +88,5 @@\n-.PHONY: default all build-test-lib test-image-lib\n+.PHONY: build-test-lib test-image-lib\n+\n+################################################################################\n+\n+include MakeFileEnd.gmk\n","filename":"make\/test\/BuildTestLib.gmk","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -118,0 +118,1 @@\n+  \/\/ Zfhmin Minimal Half-Precision Floating-Point instructions\n@@ -159,0 +160,1 @@\n+  decl(ext_Zfa         , \"Zfa\"         , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfa))         \\\n@@ -160,0 +162,1 @@\n+  decl(ext_Zfhmin      , \"Zfhmin\"      , RV_NO_FLAG_BIT, true , UPDATE_DEFAULT(UseZfhmin))      \\\n@@ -161,0 +164,1 @@\n+  decl(ext_Zicntr      , \"Zicntr\"      , RV_NO_FLAG_BIT, true , NO_UPDATE_DEFAULT)              \\\n@@ -226,0 +230,2 @@\n+    RV_ENABLE_EXTENSION(UseZfa)                     \\\n+    RV_ENABLE_EXTENSION(UseZfhmin)                  \\\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -1472,0 +1471,1 @@\n+    _features &= ~CPU_AVX512_FP16;\n@@ -1522,0 +1522,1 @@\n+      _features &= ~CPU_AVX512_FP16;\n@@ -2166,1 +2167,1 @@\n-          warning(\"Setting ArrayOperationPartialInlineSize as MaxVectorSize\" INTX_FORMAT \")\", MaxVectorSize);\n+          warning(\"Setting ArrayOperationPartialInlineSize as MaxVectorSize=%zd\", MaxVectorSize);\n@@ -2168,1 +2169,1 @@\n-          warning(\"Setting ArrayOperationPartialInlineSize as \" INTX_FORMAT, ArrayOperationPartialInlineSize);\n+          warning(\"Setting ArrayOperationPartialInlineSize as %zd\", ArrayOperationPartialInlineSize);\n@@ -3672,0 +3673,3 @@\n+\n+    if (_cpuid_info.sef_cpuid7_edx.bits.avx512_fp16 != 0)\n+      result |= CPU_AVX512_FP16;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -283,1 +283,3 @@\n-                           : 11;\n+                           : 2,\n+              avx512_fp16  : 1,\n+                           : 8;\n@@ -423,2 +425,3 @@\n-    decl(APX_F,             \"apx_f\",             60) \/* Intel Advanced Performance Extensions*\/\\\n-    decl(SHA512,            \"sha512\",            61) \/* SHA512 instructions*\/\n+    decl(APX_F,             \"apx_f\",             60) \/* Intel Advanced Performance Extensions*\/ \\\n+    decl(SHA512,            \"sha512\",            61) \/* SHA512 instructions*\/ \\\n+    decl(AVX512_FP16,       \"avx512_fp16\",       62) \/* AVX512 FP16 ISA support*\/\n@@ -837,0 +840,1 @@\n+  static bool supports_avx512_fp16()  { return (_features & CPU_AVX512_FP16) != 0; }\n@@ -924,1 +928,1 @@\n-    return supports_f16c() || supports_avx512vl();\n+    return supports_f16c() || supports_avx512vl() || supports_avx512_fp16();\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-\/\/ no precompiled headers\n@@ -386,3 +385,4 @@\n-void os::Linux::kernel_version(long* major, long* minor) {\n-  *major = -1;\n-  *minor = -1;\n+void os::Linux::kernel_version(long* major, long* minor, long* patch) {\n+  *major = 0;\n+  *minor = 0;\n+  *patch = 0;\n@@ -396,3 +396,3 @@\n-  int nr_matched = sscanf(buffer.release, \"%ld.%ld\", major, minor);\n-  if (nr_matched != 2) {\n-    log_warning(os)(\"Parsing kernel version failed, expected 2 version numbers, only matched %d\", nr_matched);\n+  int nr_matched = sscanf(buffer.release, \"%ld.%ld.%ld\", major, minor, patch);\n+  if (nr_matched != 3) {\n+    log_warning(os)(\"Parsing kernel version failed, expected 3 version numbers, only matched %d\", nr_matched);\n@@ -402,0 +402,17 @@\n+int os::Linux::kernel_version_compare(long major1, long minor1, long patch1,\n+                                      long major2, long minor2, long patch2) {\n+  \/\/ Compare major versions\n+  if (major1 > major2) return 1;\n+  if (major1 < major2) return -1;\n+\n+  \/\/ Compare minor versions\n+  if (minor1 > minor2) return 1;\n+  if (minor1 < minor2) return -1;\n+\n+  \/\/ Compare patchlevel versions\n+  if (patch1 > patch2) return 1;\n+  if (patch1 < patch2) return -1;\n+\n+  return 0;\n+}\n+\n@@ -858,1 +875,1 @@\n-  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \", pthread id: \" UINTX_FORMAT \").\",\n+  log_info(os, thread)(\"Thread is alive (tid: %zu, pthread id: %zu).\",\n@@ -874,1 +891,1 @@\n-  log_info(os, thread)(\"Thread finished (tid: \" UINTX_FORMAT \", pthread id: \" UINTX_FORMAT \").\",\n+  log_info(os, thread)(\"Thread finished (tid: %zu, pthread id: %zu).\",\n@@ -936,1 +953,1 @@\n-  log_info(os, thread)(\"Stack size adjustment for TLS is \" SIZE_FORMAT,\n+  log_info(os, thread)(\"Stack size adjustment for TLS is %zu\",\n@@ -1043,1 +1060,1 @@\n-    log_warning(os, thread)(\"The %sthread stack size specified is invalid: \" SIZE_FORMAT \"k\",\n+    log_warning(os, thread)(\"The %sthread stack size specified is invalid: %zuk\",\n@@ -1065,1 +1082,1 @@\n-      log_info(os, thread)(\"Thread \\\"%s\\\" started (pthread id: \" UINTX_FORMAT \", attributes: %s). \",\n+      log_info(os, thread)(\"Thread \\\"%s\\\" started (pthread id: %zu, attributes: %s). \",\n@@ -1073,1 +1090,1 @@\n-          log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n+          log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: %zu) timer slack: %dns\",\n@@ -1181,2 +1198,2 @@\n-  log_info(os, thread)(\"Thread attached (tid: \" UINTX_FORMAT \", pthread id: \" UINTX_FORMAT\n-                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+  log_info(os, thread)(\"Thread attached (tid: %zu, pthread id: %zu\"\n+                       \", stack: \" PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -1377,6 +1394,3 @@\n-#define _UFM UINTX_FORMAT\n-#define _DFM INTX_FORMAT\n-\n-        \/\/                                     1   1   1   1   1   1   1   1   1   1   2   2    2    2    2    2    2    2    2\n-        \/\/              3  4  5  6  7  8   9   0   1   2   3   4   5   6   7   8   9   0   1    2    3    4    5    6    7    8\n-        i = sscanf(s, \"%c %d %d %d %d %d %lu %lu %lu %lu %lu %lu %lu %ld %ld %ld %ld %ld %ld \" _UFM _UFM _DFM _UFM _UFM _UFM _UFM,\n+        \/\/                                     1   1   1   1   1   1   1   1   1   1   2   2  2    2   2   2   2   2   2\n+        \/\/              3  4  5  6  7  8   9   0   1   2   3   4   5   6   7   8   9   0   1  2    3   4   5   6   7   8\n+        i = sscanf(s, \"%c %d %d %d %d %d %lu %lu %lu %lu %lu %lu %lu %ld %ld %ld %ld %ld %ld %zu %zu %zd %zu %zu %zu %zu\",\n@@ -1402,7 +1416,7 @@\n-                   &start,          \/\/ 22 UINTX_FORMAT\n-                   &vsize,          \/\/ 23 UINTX_FORMAT\n-                   &rss,            \/\/ 24 INTX_FORMAT\n-                   &rsslim,         \/\/ 25 UINTX_FORMAT\n-                   &scodes,         \/\/ 26 UINTX_FORMAT\n-                   &ecode,          \/\/ 27 UINTX_FORMAT\n-                   &stack_start);   \/\/ 28 UINTX_FORMAT\n+                   &start,          \/\/ 22 %zu\n+                   &vsize,          \/\/ 23 %zu\n+                   &rss,            \/\/ 24 %zd\n+                   &rsslim,         \/\/ 25 %zu\n+                   &scodes,         \/\/ 26 %zu\n+                   &ecode,          \/\/ 27 %zu\n+                   &stack_start);   \/\/ 28 %zu\n@@ -1411,3 +1425,0 @@\n-#undef _UFM\n-#undef _DFM\n-\n@@ -1474,2 +1485,2 @@\n-    log_info(os, thread)(\"Capturing initial stack in %s thread: req. size: \" SIZE_FORMAT \"K, actual size: \"\n-                         SIZE_FORMAT \"K, top=\" INTPTR_FORMAT \", bottom=\" INTPTR_FORMAT,\n+    log_info(os, thread)(\"Capturing initial stack in %s thread: req. size: %zuK, actual size: \"\n+                         \"%zuK, top=\" INTPTR_FORMAT \", bottom=\" INTPTR_FORMAT,\n@@ -2323,8 +2334,8 @@\n-      if ( (info->vmsize == -1    && sscanf(buf, \"VmSize: \" SSIZE_FORMAT \" kB\", &info->vmsize) == 1) ||\n-           (info->vmpeak == -1    && sscanf(buf, \"VmPeak: \" SSIZE_FORMAT \" kB\", &info->vmpeak) == 1) ||\n-           (info->vmswap == -1    && sscanf(buf, \"VmSwap: \" SSIZE_FORMAT \" kB\", &info->vmswap) == 1) ||\n-           (info->vmhwm == -1     && sscanf(buf, \"VmHWM: \" SSIZE_FORMAT \" kB\", &info->vmhwm) == 1) ||\n-           (info->vmrss == -1     && sscanf(buf, \"VmRSS: \" SSIZE_FORMAT \" kB\", &info->vmrss) == 1) ||\n-           (info->rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n-           (info->rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n-           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n+      if ( (info->vmsize == -1    && sscanf(buf, \"VmSize: %zd kB\", &info->vmsize) == 1) ||\n+           (info->vmpeak == -1    && sscanf(buf, \"VmPeak: %zd kB\", &info->vmpeak) == 1) ||\n+           (info->vmswap == -1    && sscanf(buf, \"VmSwap: %zd kB\", &info->vmswap) == 1) ||\n+           (info->vmhwm == -1     && sscanf(buf, \"VmHWM: %zd kB\", &info->vmhwm) == 1) ||\n+           (info->vmrss == -1     && sscanf(buf, \"VmRSS: %zd kB\", &info->vmrss) == 1) ||\n+           (info->rssanon == -1   && sscanf(buf, \"RssAnon: %zd kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssfile == -1   && sscanf(buf, \"RssFile: %zd kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: %zd kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n@@ -2378,2 +2389,2 @@\n-    st->print_cr(\"Virtual Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmsize, info.vmpeak);\n-    st->print(\"Resident Set Size: \" SSIZE_FORMAT \"K (peak: \" SSIZE_FORMAT \"K)\", info.vmrss, info.vmhwm);\n+    st->print_cr(\"Virtual Size: %zdK (peak: %zdK)\", info.vmsize, info.vmpeak);\n+    st->print(\"Resident Set Size: %zdK (peak: %zdK)\", info.vmrss, info.vmhwm);\n@@ -2381,1 +2392,1 @@\n-      st->print(\" (anon: \" SSIZE_FORMAT \"K, file: \" SSIZE_FORMAT \"K, shmem: \" SSIZE_FORMAT \"K)\",\n+      st->print(\" (anon: %zdK, file: %zdK, shmem: %zdK)\",\n@@ -2386,1 +2397,1 @@\n-      st->print_cr(\"Swapped out: \" SSIZE_FORMAT \"K\", info.vmswap);\n+      st->print_cr(\"Swapped out: %zdK\", info.vmswap);\n@@ -2407,1 +2418,1 @@\n-  st->print_cr(\"C-Heap outstanding allocations: \" SIZE_FORMAT \"K, retained: \" SIZE_FORMAT \"K%s\",\n+  st->print_cr(\"C-Heap outstanding allocations: %zuK, retained: %zuK%s\",\n@@ -2535,1 +2546,1 @@\n-  st->print(\" \" SIZE_FORMAT \"k page\", os::vm_page_size()>>10);\n+  st->print(\" %zuk page\", os::vm_page_size()>>10);\n@@ -2900,3 +2911,2 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n-          \", %d) failed; error='%s' (errno=%d)\", p2i(addr), size, exec,\n-          os::strerror(err), err);\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu, %d) failed; error='%s' (errno=%d)\",\n+          p2i(addr), size, exec, os::strerror(err), err);\n@@ -2908,3 +2918,2 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n-          \", \" SIZE_FORMAT \", %d) failed; error='%s' (errno=%d)\", p2i(addr), size,\n-          alignment_hint, exec, os::strerror(err), err);\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu, %zu, %d) failed; error='%s' (errno=%d)\",\n+          p2i(addr), size, alignment_hint, exec, os::strerror(err), err);\n@@ -3060,1 +3069,1 @@\n-      log_info(gc, os)(\"::madvise(\" PTR_FORMAT \", \" SIZE_FORMAT \", %d) failed; \"\n+      log_info(gc, os)(\"::madvise(\" PTR_FORMAT \", %zu, %d) failed; \"\n@@ -3777,1 +3786,1 @@\n-      log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) failed sanity check, \"\n+      log_info(pagesize)(\"Large page size (%zu%s) failed sanity check, \"\n@@ -3789,1 +3798,1 @@\n-          log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) passed sanity check\",\n+          log_info(pagesize)(\"Large page size (%zu%s) passed sanity check\",\n@@ -3988,1 +3997,1 @@\n-     log_info(pagesize)(\"Using the default large page size: \" SIZE_FORMAT \"%s\",\n+     log_info(pagesize)(\"Using the default large page size: %zu%s\",\n@@ -3994,2 +4003,2 @@\n-        log_info(pagesize)(\"Overriding default large page size (\" SIZE_FORMAT \"%s) \"\n-                           \"using LargePageSizeInBytes: \" SIZE_FORMAT \"%s\",\n+        log_info(pagesize)(\"Overriding default large page size (%zu%s) \"\n+                           \"using LargePageSizeInBytes: %zu%s\",\n@@ -4002,2 +4011,2 @@\n-        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (\" SIZE_FORMAT \"%s) \"\n-                           \"using the default large page size: \" SIZE_FORMAT \"%s\",\n+        log_info(pagesize)(\"LargePageSizeInBytes is not a valid large page size (%zu%s) \"\n+                           \"using the default large page size: %zu%s\",\n@@ -4048,1 +4057,1 @@\n-                     \" size: \" SIZE_FORMAT \"%s, page size: \" SIZE_FORMAT \"%s, (errno = %d)\",\n+                     \" size: %zu%s, page size: %zu%s, (errno = %d)\",\n@@ -4077,2 +4086,1 @@\n-  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=\" SIZE_FORMAT \"%s, page size=\"\n-                      SIZE_FORMAT \"%s\",\n+  log_debug(pagesize)(\"Commit special mapping: \" PTR_FORMAT \", size=%zu%s, page size=%zu%s\",\n@@ -4494,1 +4502,1 @@\n-    disable_numa(\"Failed to initialize libnuma\");\n+    disable_numa(\"Failed to initialize libnuma\", true);\n@@ -4498,1 +4506,1 @@\n-      disable_numa(\"Only a single NUMA node is available\");\n+      disable_numa(\"Only a single NUMA node is available\", false);\n@@ -4500,1 +4508,1 @@\n-      disable_numa(\"The process is bound to a single NUMA node\");\n+      disable_numa(\"The process is bound to a single NUMA node\", true);\n@@ -4502,1 +4510,1 @@\n-      disable_numa(\"The process memory and cpu node configuration does not match\");\n+      disable_numa(\"The process memory and cpu node configuration does not match\", true);\n@@ -4544,1 +4552,1 @@\n-void os::Linux::disable_numa(const char* reason) {\n+void os::Linux::disable_numa(const char* reason, bool warning) {\n@@ -4547,2 +4555,6 @@\n-    \/\/ Only issue a warning if the user explicitly asked for NUMA support\n-    log_warning(os)(\"NUMA support disabled: %s\", reason);\n+    \/\/ Only issue a message if the user explicitly asked for NUMA support\n+    if (warning) {\n+      log_warning(os)(\"NUMA support disabled: %s\", reason);\n+    } else {\n+      log_info(os)(\"NUMA support disabled: %s\", reason);\n+    }\n@@ -5290,1 +5302,1 @@\n-               \"To debug, run 'gdb \/proc\/%d\/exe %d'; then switch to thread \" UINTX_FORMAT \" (\" INTPTR_FORMAT \")\\n\"\n+               \"To debug, run 'gdb \/proc\/%d\/exe %d'; then switch to thread %zu (\" INTPTR_FORMAT \")\\n\"\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":85,"deletions":73,"binary":false,"changes":158,"status":"modified"},{"patch":"@@ -96,1 +96,7 @@\n-  static void kernel_version(long* major, long* minor);\n+  static void kernel_version(long* major, long* minor, long* patch);\n+\n+  \/\/ If kernel1 > kernel2 return  1\n+  \/\/ If kernel1 < kernel2 return -1\n+  \/\/ If kernel1 = kernel2 return  0\n+  static int kernel_version_compare(long major1, long minor1, long patch1,\n+                                    long major2, long minor2, long patch2);\n@@ -198,1 +204,1 @@\n-  static void disable_numa(const char* reason);\n+  static void disable_numa(const char* reason, bool warning);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/os\/posix\/attachListener_posix.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -989,1 +989,1 @@\n-  jio_snprintf(buf, buflen, \"stacksize: \" SIZE_FORMAT \"k, guardsize: \" SIZE_FORMAT \"k, %s\",\n+  jio_snprintf(buf, buflen, \"stacksize: %zuk, guardsize: %zuk, %s\",\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-#include \"precompiled.hpp\"\n@@ -1095,1 +1094,1 @@\n-    ThreadCritical tc;\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -1098,1 +1097,1 @@\n-      MemTracker::record_virtual_memory_release((address)addr, bytes);\n+      MemTracker::record_virtual_memory_release(addr, bytes);\n@@ -1104,1 +1103,1 @@\n-    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), bytes);\n+    log_info(os)(\"os::release_memory failed (\" PTR_FORMAT \", %zu)\", p2i(addr), bytes);\n@@ -1236,1 +1235,1 @@\n-  log_debug(perf, memops)(\"mapped \" SIZE_FORMAT \" bytes for vmid %d at \"\n+  log_debug(perf, memops)(\"mapped %zu bytes for vmid %d at \"\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,2 +24,0 @@\n-#include \"precompiled.hpp\"\n-\n","filename":"src\/hotspot\/os\/windows\/crac_windows.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-\/\/ no precompiled headers\n@@ -150,0 +149,21 @@\n+static void windows_preinit(HINSTANCE hinst) {\n+  vm_lib_handle = hinst;\n+  if (ForceTimeHighResolution) {\n+    timeBeginPeriod(1L);\n+  }\n+  WindowsDbgHelp::pre_initialize();\n+  SymbolEngine::pre_initialize();\n+}\n+\n+static void windows_atexit() {\n+  if (ForceTimeHighResolution) {\n+    timeEndPeriod(1L);\n+  }\n+#if defined(USE_VECTORED_EXCEPTION_HANDLING)\n+  if (topLevelVectoredExceptionHandler != nullptr) {\n+    RemoveVectoredExceptionHandler(topLevelVectoredExceptionHandler);\n+    topLevelVectoredExceptionHandler = nullptr;\n+  }\n+#endif\n+}\n+\n@@ -153,6 +173,1 @@\n-    vm_lib_handle = hinst;\n-    if (ForceTimeHighResolution) {\n-      timeBeginPeriod(1L);\n-    }\n-    WindowsDbgHelp::pre_initialize();\n-    SymbolEngine::pre_initialize();\n+    windows_preinit(hinst);\n@@ -161,9 +176,1 @@\n-    if (ForceTimeHighResolution) {\n-      timeEndPeriod(1L);\n-    }\n-#if defined(USE_VECTORED_EXCEPTION_HANDLING)\n-    if (topLevelVectoredExceptionHandler != nullptr) {\n-      RemoveVectoredExceptionHandler(topLevelVectoredExceptionHandler);\n-      topLevelVectoredExceptionHandler = nullptr;\n-    }\n-#endif\n+    windows_atexit();\n@@ -202,1 +209,1 @@\n-    log_trace(os)(\"VirtualAlloc(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x) returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"VirtualAlloc(\" PTR_FORMAT \", %zu, %x, %x) returned \" PTR_FORMAT \"%s.\",\n@@ -207,1 +214,1 @@\n-    log_info(os)(\"VirtualAlloc(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x) failed (%u).\",\n+    log_info(os)(\"VirtualAlloc(\" PTR_FORMAT \", %zu, %x, %x) failed (%u).\",\n@@ -217,1 +224,1 @@\n-    log_trace(os)(\"VirtualFree(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x) succeeded\",\n+    log_trace(os)(\"VirtualFree(\" PTR_FORMAT \", %zu, %x) succeeded\",\n@@ -221,1 +228,1 @@\n-    log_info(os)(\"VirtualFree(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x) failed (%u).\",\n+    log_info(os)(\"VirtualFree(\" PTR_FORMAT \", %zu, %x) failed (%u).\",\n@@ -232,1 +239,1 @@\n-    log_trace(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x, %x) returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", %zu, %x, %x, %x) returned \" PTR_FORMAT \"%s.\",\n@@ -237,1 +244,1 @@\n-    log_info(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", \" SIZE_FORMAT \", %x, %x, %x) failed (%u).\",\n+    log_info(os)(\"VirtualAllocExNuma(\" PTR_FORMAT \", %zu, %x, %x, %x) failed (%u).\",\n@@ -249,1 +256,1 @@\n-    log_trace(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", \" SIZE_FORMAT \") returned \" PTR_FORMAT \"%s.\",\n+    log_trace(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", %zu) returned \" PTR_FORMAT \"%s.\",\n@@ -254,1 +261,1 @@\n-    log_info(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", \" SIZE_FORMAT \") failed (%u).\",\n+    log_info(os)(\"MapViewOfFileEx(\" PTR_FORMAT \", %zu) failed (%u).\",\n@@ -289,0 +296,2 @@\n+#define JVM_LIB_NAME \"jvm.dll\"\n+\n@@ -304,3 +313,4 @@\n-      \/\/ Found the full path to jvm.dll.\n-      \/\/ Now cut the path to <java_home>\/jre if we can.\n-      *(strrchr(home_dir, '\\\\')) = '\\0';  \/\/ get rid of \\jvm.dll\n+      \/\/ Found the full path to the binary. It is normally of this structure:\n+      \/\/   <jdk_path>\/bin\/<hotspot_variant>\/jvm.dll\n+      \/\/ but can also be like this for a statically linked binary:\n+      \/\/   <jdk_path>\/bin\/<executable>.exe\n@@ -309,1 +319,7 @@\n-        *pslash = '\\0';                   \/\/ get rid of \\{client|server}\n+        if (strncmp(pslash + 1, JVM_LIB_NAME, strlen(JVM_LIB_NAME)) == 0) {\n+          \/\/ Binary name is jvm.dll. Get rid of \\jvm.dll.\n+          *pslash = '\\0';\n+        }\n+\n+        \/\/ Get rid of \\hotspot_variant>, if binary is jvm.dll,\n+        \/\/ or cut off \\<executable>, if it is a statically linked binary.\n@@ -312,1 +328,6 @@\n-          *pslash = '\\0';                 \/\/ get rid of \\bin\n+          *pslash = '\\0';\n+          \/\/ Get rid of \\bin\n+          pslash = strrchr(home_dir, '\\\\');\n+          if (pslash != nullptr) {\n+            *pslash = '\\0';\n+          }\n@@ -534,1 +555,1 @@\n-  log_info(os, thread)(\"Thread is alive (tid: \" UINTX_FORMAT \", stacksize: \" SIZE_FORMAT \"k).\", os::current_thread_id(), thread->stack_size() \/ K);\n+  log_info(os, thread)(\"Thread is alive (tid: %zu, stacksize: %zuk).\", os::current_thread_id(), thread->stack_size() \/ K);\n@@ -556,1 +577,1 @@\n-  log_info(os, thread)(\"Thread finished (tid: \" UINTX_FORMAT \").\", os::current_thread_id());\n+  log_info(os, thread)(\"Thread finished (tid: %zu).\", os::current_thread_id());\n@@ -619,2 +640,2 @@\n-  log_info(os, thread)(\"Thread attached (tid: \" UINTX_FORMAT \", stack: \"\n-                       PTR_FORMAT \" - \" PTR_FORMAT \" (\" SIZE_FORMAT \"K) ).\",\n+  log_info(os, thread)(\"Thread attached (tid: %zu, stack: \"\n+                       PTR_FORMAT \" - \" PTR_FORMAT \" (%zuK) ).\",\n@@ -653,1 +674,1 @@\n-    ss.print(\"stacksize: \" SIZE_FORMAT \"k, \", stacksize \/ K);\n+    ss.print(\"stacksize: %zuk, \", stacksize \/ K);\n@@ -1421,3 +1442,1 @@\n-  \/\/ This is needed only for static builds which are not supported on Windows\n-  ShouldNotReachHere();\n-  return nullptr; \/\/ Satisfy compiler\n+  return ::GetProcAddress(nullptr, name);\n@@ -2117,1 +2136,1 @@\n-  st->print(\" \" SIZE_FORMAT \"k page\", os::vm_page_size()>>10);\n+  st->print(\" %zuk page\", os::vm_page_size()>>10);\n@@ -2616,32 +2635,0 @@\n-#if defined(_M_AMD64)\n-\/\/-----------------------------------------------------------------------------\n-static bool handle_FLT_exception(struct _EXCEPTION_POINTERS* exceptionInfo) {\n-  \/\/ handle exception caused by native method modifying control word\n-  DWORD exception_code = exceptionInfo->ExceptionRecord->ExceptionCode;\n-\n-  switch (exception_code) {\n-  case EXCEPTION_FLT_DENORMAL_OPERAND:\n-  case EXCEPTION_FLT_DIVIDE_BY_ZERO:\n-  case EXCEPTION_FLT_INEXACT_RESULT:\n-  case EXCEPTION_FLT_INVALID_OPERATION:\n-  case EXCEPTION_FLT_OVERFLOW:\n-  case EXCEPTION_FLT_STACK_CHECK:\n-  case EXCEPTION_FLT_UNDERFLOW: {\n-    PCONTEXT ctx = exceptionInfo->ContextRecord;\n-    \/\/ On Windows, the mxcsr control bits are non-volatile across calls\n-    \/\/ See also CR 6192333\n-    \/\/\n-    jint MxCsr = INITIAL_MXCSR;\n-    \/\/ we can't use StubRoutines::x86::addr_mxcsr_std()\n-    \/\/ because in Win64 mxcsr is not saved there\n-    if (MxCsr != ctx->MxCsr) {\n-      ctx->MxCsr = MxCsr;\n-      return true;\n-    }\n-  }\n-  }\n-\n-  return false;\n-}\n-#endif\n-\n@@ -2832,0 +2819,1 @@\n+    extern bool handle_FLT_exception(struct _EXCEPTION_POINTERS* exceptionInfo);\n@@ -3383,1 +3371,1 @@\n-      tty->print_cr(\"reserve_memory of %Ix bytes took \" JLONG_FORMAT \" ms (\" JLONG_FORMAT \" ticks)\", bytes,\n+      tty->print_cr(\"reserve_memory of %zx bytes took \" JLONG_FORMAT \" ms (\" JLONG_FORMAT \" ticks)\", bytes,\n@@ -3467,1 +3455,1 @@\n-  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=\" SIZE_FORMAT \"%s\",\n+  log_debug(pagesize)(\"Reserving large pages at an aligned address, alignment=%zu%s\",\n@@ -3529,1 +3517,1 @@\n-  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n+  warning(\"INFO: os::commit_memory(\" PTR_FORMAT \", %zu\"\n@@ -3665,3 +3653,0 @@\n-#ifdef ASSERT\n-      os::print_memory_mappings((char*)start, bytes, tty);\n-#endif\n@@ -3759,1 +3744,1 @@\n-    warning(\"INFO: os::protect_memory(\" PTR_FORMAT \", \" SIZE_FORMAT\n+    warning(\"INFO: os::protect_memory(\" PTR_FORMAT \", %zu\"\n@@ -4461,0 +4446,8 @@\n+  if (is_vm_statically_linked()) {\n+    \/\/ Mimick what is done in DllMain for non-static builds\n+    HMODULE hModule = nullptr;\n+    GetModuleHandleEx(GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT, nullptr, &hModule);\n+    windows_preinit(hModule);\n+    atexit(windows_atexit);\n+  }\n+\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":71,"deletions":78,"binary":false,"changes":149,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-\/\/ no precompiled headers\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-\/\/ no precompiled headers\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,2 @@\n-  template(jdk_internal_vm_vector_VectorSupport,      \"jdk\/internal\/vm\/vector\/VectorSupport\")               \\\n+  template(jdk_internal_vm_vector_VectorSupport,      \"jdk\/internal\/vm\/vector\/VectorSupport\")     \\\n+  template(jdk_internal_vm_vector_Float16Math,        \"jdk\/internal\/vm\/vector\/Float16Math\")       \\\n@@ -127,1 +128,0 @@\n-  template(java_net_URLClassLoader,                   \"java\/net\/URLClassLoader\")                  \\\n@@ -310,0 +310,1 @@\n+  template(java_security_ProtectionDomain_signature,      \"Ljava\/security\/ProtectionDomain;\")     \\\n@@ -329,1 +330,0 @@\n-  template(java_lang_invoke_MethodHandleNatives_CallSiteContext, \"java\/lang\/invoke\/MethodHandleNatives$CallSiteContext\") \\\n@@ -333,1 +333,0 @@\n-  template(java_lang_invoke_MethodHandleNatives_CallSiteContext_signature, \"Ljava\/lang\/invoke\/MethodHandleNatives$CallSiteContext;\") \\\n@@ -359,0 +358,2 @@\n+  template(jdk_internal_foreign_NativeMemorySegmentImpl,             \"jdk\/internal\/foreign\/NativeMemorySegmentImpl\") \\\n+                                                                                                  \\\n@@ -740,1 +741,0 @@\n-  template(url_array_classloader_void_signature,            \"([Ljava\/net\/URL;Ljava\/lang\/ClassLoader;)V\")          \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -236,1 +235,1 @@\n-      jio_snprintf(buf, buflen, UINTX_FORMAT, log->thread_id());\n+      jio_snprintf(buf, buflen, \"%zu\", log->thread_id());\n@@ -343,1 +342,1 @@\n-      jio_snprintf(buf, buflen, UINTX_FORMAT, log->thread_id());\n+      jio_snprintf(buf, buflen, \"%zu\", log->thread_id());\n","filename":"src\/hotspot\/share\/compiler\/compileLog.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n@@ -183,1 +182,1 @@\n-    log_debug(gc, ergo, heap)(\"Attempt heap expansion (region allocation request failed). Allocation request: \" SIZE_FORMAT \"B\",\n+    log_debug(gc, ergo, heap)(\"Attempt heap expansion (region allocation request failed). Allocation request: %zuB\",\n@@ -187,1 +186,1 @@\n-           \"This kind of expansion should never be more than one region. Size: \" SIZE_FORMAT,\n+           \"This kind of expansion should never be more than one region. Size: %zu\",\n@@ -339,1 +338,1 @@\n-  assert(is_humongous(word_size), \"Object of size \" SIZE_FORMAT \" must be humongous here\", word_size);\n+  assert(is_humongous(word_size), \"Object of size %zu must be humongous here\", word_size);\n@@ -362,1 +361,1 @@\n-      log_debug(gc, ergo, heap)(\"Heap expansion (humongous allocation request). Allocation request: \" SIZE_FORMAT \"B\",\n+      log_debug(gc, ergo, heap)(\"Heap expansion (humongous allocation request). Allocation request: %zuB\",\n@@ -448,1 +447,1 @@\n-    log_trace(gc, alloc)(\"%s: Unsuccessfully scheduled collection allocating \" SIZE_FORMAT \" words\",\n+    log_trace(gc, alloc)(\"%s: Unsuccessfully scheduled collection allocating %zu words\",\n@@ -466,1 +465,1 @@\n-      log_warning(gc, alloc)(\"%s:  Retried allocation %u times for \" SIZE_FORMAT \" words\",\n+      log_warning(gc, alloc)(\"%s:  Retried allocation %u times for %zu words\",\n@@ -499,2 +498,2 @@\n-    log_info(gc, heap)(\"Unable to allocate regions as archive heap is too large; size requested = \" SIZE_FORMAT\n-                       \" bytes, heap = \" SIZE_FORMAT \" bytes\", word_size, reserved.word_size());\n+    log_info(gc, heap)(\"Unable to allocate regions as archive heap is too large; size requested = %zu\"\n+                       \" bytes, heap = %zu bytes\", word_size, reserved.word_size());\n@@ -518,1 +517,1 @@\n-    log_debug(gc, ergo, heap)(\"Attempt heap expansion (allocate archive regions). Total size: \" SIZE_FORMAT \"B\",\n+    log_debug(gc, ergo, heap)(\"Attempt heap expansion (allocate archive regions). Total size: %zuB\",\n@@ -577,1 +576,1 @@\n-    log_debug(gc, ergo, heap)(\"Attempt heap shrinking (CDS archive regions). Total size: \" SIZE_FORMAT \"B\",\n+    log_debug(gc, ergo, heap)(\"Attempt heap shrinking (CDS archive regions). Total size: %zuB\",\n@@ -677,1 +676,1 @@\n-    log_trace(gc, alloc)(\"%s: Unsuccessfully scheduled collection allocating \" SIZE_FORMAT \"\",\n+    log_trace(gc, alloc)(\"%s: Unsuccessfully scheduled collection allocating %zu\",\n@@ -982,1 +981,1 @@\n-  log_debug(gc, ergo, heap)(\"Attempt heap expansion (allocation request failed). Allocation request: \" SIZE_FORMAT \"B\",\n+  log_debug(gc, ergo, heap)(\"Attempt heap expansion (allocation request failed). Allocation request: %zuB\",\n@@ -999,1 +998,1 @@\n-  log_debug(gc, ergo, heap)(\"Expand the heap. requested expansion amount: \" SIZE_FORMAT \"B expansion amount: \" SIZE_FORMAT \"B\",\n+  log_debug(gc, ergo, heap)(\"Expand the heap. requested expansion amount: %zuB expansion amount: %zuB\",\n@@ -1046,1 +1045,1 @@\n-  log_debug(gc, ergo, heap)(\"Shrink the heap. requested shrinking amount: \" SIZE_FORMAT \"B aligned shrinking amount: \" SIZE_FORMAT \"B actual amount shrunk: \" SIZE_FORMAT \"B\",\n+  log_debug(gc, ergo, heap)(\"Shrink the heap. requested shrinking amount: %zuB aligned shrinking amount: %zuB actual amount shrunk: %zuB\",\n@@ -1164,2 +1163,1 @@\n-  _young_regions_cardset_mm(card_set_config(), card_set_freelist_pool()),\n-  _young_regions_cardset(card_set_config(), &_young_regions_cardset_mm),\n+  _young_regions_cset_group(card_set_config(), &_card_set_freelist_pool, 1u \/* group_id *\/),\n@@ -2121,1 +2119,1 @@\n-  st->print(\"  region size \" SIZE_FORMAT \"K, \", G1HeapRegion::GrainBytes \/ K);\n+  st->print(\"  region size %zuK, \", G1HeapRegion::GrainBytes \/ K);\n@@ -2123,1 +2121,1 @@\n-  st->print(\"%u young (\" SIZE_FORMAT \"K), \", young_regions,\n+  st->print(\"%u young (%zuK), \", young_regions,\n@@ -2126,1 +2124,1 @@\n-  st->print(\"%u survivors (\" SIZE_FORMAT \"K)\", survivor_regions,\n+  st->print(\"%u survivors (%zuK)\", survivor_regions,\n@@ -2721,1 +2719,1 @@\n-  hr->install_group_cardset(young_regions_cardset());\n+  young_regions_cset_group()->add(hr);\n@@ -2778,1 +2776,1 @@\n-         \"invariant: _summary_bytes_used: \" SIZE_FORMAT \" should be >= bytes: \" SIZE_FORMAT,\n+         \"invariant: _summary_bytes_used: %zu should be >= bytes: %zu\",\n@@ -2932,1 +2930,1 @@\n-      new_alloc_region->install_group_cardset(young_regions_cardset());\n+      young_regions_cset_group()->add(new_alloc_region);\n@@ -3075,2 +3073,4 @@\n-void G1CollectedHeap::prepare_group_cardsets_for_scan () {\n-  _young_regions_cardset.reset_table_scanner_for_groups();\n+void G1CollectedHeap::prepare_group_cardsets_for_scan() {\n+  young_regions_cardset()->reset_table_scanner_for_groups();\n+\n+  collection_set()->prepare_groups_for_scan();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,2 +365,2 @@\n-    assert(cur_used_bytes == recal_used_bytes, \"Used(\" SIZE_FORMAT \") is not\" \\\n-           \" same as recalculated used(\" SIZE_FORMAT \").\",                    \\\n+    assert(cur_used_bytes == recal_used_bytes, \"Used(%zu) is not\" \\\n+           \" same as recalculated used(%zu).\",                    \\\n@@ -785,2 +785,1 @@\n-  G1CardSetMemoryManager _young_regions_cardset_mm;\n-  G1CardSet _young_regions_cardset;\n+  G1CSetCandidateGroup _young_regions_cset_group;\n@@ -791,1 +790,2 @@\n-  G1CardSet* young_regions_cardset() { return &_young_regions_cardset; };\n+  G1CSetCandidateGroup* young_regions_cset_group() { return &_young_regions_cset_group; }\n+  G1CardSet* young_regions_cardset() { return _young_regions_cset_group.card_set(); };\n@@ -793,1 +793,1 @@\n-  G1CardSetMemoryManager* young_regions_card_set_mm() { return &_young_regions_cardset_mm; }\n+  G1MonotonicArenaMemoryStats young_regions_card_set_memory_stats() { return _young_regions_cset_group.card_set_memory_stats(); }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapRegionManager.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -77,1 +76,1 @@\n-                            \"resize by \" SIZE_FORMAT \"B\",\n+                            \"resize by %zuB\",\n@@ -243,2 +242,2 @@\n-         \"minimum_desired_capacity = \" SIZE_FORMAT \", \"\n-         \"maximum_desired_capacity = \" SIZE_FORMAT,\n+         \"minimum_desired_capacity = %zu, \"\n+         \"maximum_desired_capacity = %zu\",\n@@ -268,2 +267,2 @@\n-                              \"Capacity: \" SIZE_FORMAT \"B occupancy: \" SIZE_FORMAT \"B live: \" SIZE_FORMAT \"B \"\n-                              \"min_desired_capacity: \" SIZE_FORMAT \"B (\" UINTX_FORMAT \" %%)\",\n+                              \"Capacity: %zuB occupancy: %zuB live: %zuB \"\n+                              \"min_desired_capacity: %zuB (%zu %%)\",\n@@ -280,2 +279,2 @@\n-                              \"Capacity: \" SIZE_FORMAT \"B occupancy: \" SIZE_FORMAT \"B live: \" SIZE_FORMAT \"B \"\n-                              \"maximum_desired_capacity: \" SIZE_FORMAT \"B (\" UINTX_FORMAT \" %%)\",\n+                              \"Capacity: %zuB occupancy: %zuB live: %zuB \"\n+                              \"maximum_desired_capacity: %zuB (%zu %%)\",\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapSizingPolicy.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -85,1 +84,1 @@\n-  log_trace(gc, heap)(\"Concurrent Uncommit: \" SIZE_FORMAT \"%s, %u regions, %1.3fms\",\n+  log_trace(gc, heap)(\"Concurrent Uncommit: %zu%s, %u regions, %1.3fms\",\n@@ -93,1 +92,1 @@\n-  log_debug(gc, heap)(\"Concurrent Uncommit Summary: \" SIZE_FORMAT \"%s, %u regions, %1.3fms\",\n+  log_debug(gc, heap)(\"Concurrent Uncommit Summary: %zu%s, %u regions, %1.3fms\",\n","filename":"src\/hotspot\/share\/gc\/g1\/g1UncommitRegionTask.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n@@ -253,0 +252,5 @@\n+  if (!rs.is_reserved()) {\n+    \/\/ Failed to reserve memory.\n+    return nullptr;\n+  }\n+\n@@ -259,4 +263,4 @@\n-  if (vspace != nullptr) {\n-    if (vspace->expand_by(_reserved_byte_size)) {\n-      return vspace;\n-    }\n+\n+  if (!vspace->expand_by(_reserved_byte_size)) {\n+    \/\/ Failed to commit memory.\n+\n@@ -264,0 +268,1 @@\n+\n@@ -265,4 +270,3 @@\n-    if (rs.is_reserved()) {\n-      MemoryReserver::release(rs);\n-      rs = {};\n-    }\n+    MemoryReserver::release(rs);\n+\n+    return nullptr;\n@@ -271,1 +275,1 @@\n-  return nullptr;\n+  return vspace;\n@@ -588,2 +592,2 @@\n-      err_msg(\"Unable to allocate \" SIZE_FORMAT \"KB bitmaps for parallel \"\n-      \"garbage collection for the requested \" SIZE_FORMAT \"KB heap.\",\n+      err_msg(\"Unable to allocate %zuKB bitmaps for parallel \"\n+      \"garbage collection for the requested %zuKB heap.\",\n@@ -596,2 +600,2 @@\n-      err_msg(\"Unable to allocate \" SIZE_FORMAT \"KB card tables for parallel \"\n-      \"garbage collection for the requested \" SIZE_FORMAT \"KB heap.\",\n+      err_msg(\"Unable to allocate %zuKB card tables for parallel \"\n+      \"garbage collection for the requested %zuKB heap.\",\n@@ -1086,1 +1090,1 @@\n-      log_trace(gc, ergo)(\"old_gen_capacity: \" SIZE_FORMAT \" young_gen_capacity: \" SIZE_FORMAT,\n+      log_trace(gc, ergo)(\"old_gen_capacity: %zu young_gen_capacity: %zu\",\n@@ -1228,6 +1232,3 @@\n-    oop obj = nullptr;\n-    ObjArrayTask task;\n-    if (ParCompactionManager::steal_objarray(worker_id,  task)) {\n-      cm->follow_array((objArrayOop)task.obj(), task.index());\n-    } else if (ParCompactionManager::steal(worker_id, obj)) {\n-      cm->follow_contents(obj);\n+    ScannerTask task;\n+    if (ParCompactionManager::steal(worker_id, task)) {\n+      cm->follow_contents(task, true);\n@@ -1249,1 +1250,1 @@\n-      _terminator(active_workers, ParCompactionManager::oop_task_queues()),\n+      _terminator(active_workers, ParCompactionManager::marking_stacks()),\n@@ -1287,1 +1288,1 @@\n-      _terminator(_max_workers, ParCompactionManager::oop_task_queues()) {}\n+      _terminator(_max_workers, ParCompactionManager::marking_stacks()) {}\n@@ -1397,2 +1398,1 @@\n-  ParCompactionManager::oop_task_queues()->print_and_reset_taskqueue_stats(\"Oop Queue\");\n-  ParCompactionManager::_objarray_task_queues->print_and_reset_taskqueue_stats(\"ObjArrayOop Queue\");\n+  ParCompactionManager::print_and_reset_taskqueue_stats();\n@@ -1706,1 +1706,1 @@\n-    log.trace(SIZE_FORMAT \" initially fillable regions\", _total_regions);\n+    log.trace(\"%zu initially fillable regions\", _total_regions);\n@@ -1715,1 +1715,1 @@\n-      line.append(\" \" SIZE_FORMAT_W(7), _regions[i]);\n+      line.append(\" %7zu\", _regions[i]);\n@@ -2496,1 +2496,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":28,"deletions":29,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n@@ -490,1 +489,1 @@\n-        \"New generation size \" SIZE_FORMAT \"K->\" SIZE_FORMAT \"K [eden=\" SIZE_FORMAT \"K,survivor=\" SIZE_FORMAT \"K]\",\n+        \"New generation size %zuK->%zuK [eden=%zuK,survivor=%zuK]\",\n@@ -494,1 +493,1 @@\n-        \"  [allowed \" SIZE_FORMAT \"K extra for %d threads]\",\n+        \"  [allowed %zuK extra for %d threads]\",\n@@ -725,1 +724,1 @@\n-  log_debug(gc, promotion)(\"Promotion failure size = \" SIZE_FORMAT \") \", old->size());\n+  log_debug(gc, promotion)(\"Promotion failure size = %zu) \", old->size());\n@@ -850,1 +849,1 @@\n-  st->print(\" total \" SIZE_FORMAT \"K, used \" SIZE_FORMAT \"K\",\n+  st->print(\" total %zuK, used %zuK\",\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -409,1 +408,1 @@\n-                            \" size=\" SIZE_FORMAT, loop_count, word_size);\n+                            \" size=%zu\", loop_count, word_size);\n@@ -485,1 +484,1 @@\n-  assert((int)len >= 0, \"size too large \" SIZE_FORMAT \" becomes %d\", words, (int)len);\n+  assert((int)len >= 0, \"size too large %zu becomes %d\", words, (int)len);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -394,1 +394,1 @@\n-      increment_total_full_collections();\n+      _total_full_collections++;\n@@ -398,2 +398,0 @@\n-  void increment_total_full_collections() { _total_full_collections++; }\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n@@ -104,1 +103,1 @@\n-  log_debug(gc, heap)(\"Minimum heap \" SIZE_FORMAT \"  Initial heap \" SIZE_FORMAT \"  Maximum heap \" SIZE_FORMAT,\n+  log_debug(gc, heap)(\"Minimum heap %zu  Initial heap %zu  Maximum heap %zu\",\n@@ -114,1 +113,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" less than SpaceAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu less than SpaceAlignment: %zu\",\n@@ -117,1 +116,1 @@\n-         \"HeapAlignment: \" SIZE_FORMAT \" not aligned by SpaceAlignment: \" SIZE_FORMAT,\n+         \"HeapAlignment: %zu not aligned by SpaceAlignment: %zu\",\n","filename":"src\/hotspot\/share\/gc\/shared\/gcArguments.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n@@ -364,1 +363,1 @@\n-  assert(index < ARRAY_SIZE(str), \"OOB: \" SIZE_FORMAT \" < \" SIZE_FORMAT, index, ARRAY_SIZE(str));\n+  assert(index < ARRAY_SIZE(str), \"OOB: %zu < %zu\", index, ARRAY_SIZE(str));\n@@ -799,2 +798,2 @@\n-  log_trace(gc, reloc)(\"Young Allocated: \" SIZE_FORMAT \"M\", young_allocated \/ M);\n-  log_trace(gc, reloc)(\"Young Garbage: \" SIZE_FORMAT \"M\", young_garbage \/ M);\n+  log_trace(gc, reloc)(\"Young Allocated: %zuM\", young_allocated \/ M);\n+  log_trace(gc, reloc)(\"Young Garbage: %zuM\", young_garbage \/ M);\n","filename":"src\/hotspot\/share\/gc\/z\/zGeneration.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n@@ -210,4 +209,4 @@\n-  log_info_p(gc, init)(\"Min Capacity: \" SIZE_FORMAT \"M\", min_capacity \/ M);\n-  log_info_p(gc, init)(\"Initial Capacity: \" SIZE_FORMAT \"M\", initial_capacity \/ M);\n-  log_info_p(gc, init)(\"Max Capacity: \" SIZE_FORMAT \"M\", max_capacity \/ M);\n-  log_info_p(gc, init)(\"Soft Max Capacity: \" SIZE_FORMAT \"M\", soft_max_capacity \/ M);\n+  log_info_p(gc, init)(\"Min Capacity: %zuM\", min_capacity \/ M);\n+  log_info_p(gc, init)(\"Initial Capacity: %zuM\", initial_capacity \/ M);\n+  log_info_p(gc, init)(\"Max Capacity: %zuM\", max_capacity \/ M);\n+  log_info_p(gc, init)(\"Soft Max Capacity: %zuM\", soft_max_capacity \/ M);\n@@ -215,1 +214,1 @@\n-    log_info_p(gc, init)(\"Medium Page Size: \" SIZE_FORMAT \"M\", ZPageSizeMedium \/ M);\n+    log_info_p(gc, init)(\"Medium Page Size: %zuM\", ZPageSizeMedium \/ M);\n@@ -380,1 +379,1 @@\n-                    SIZE_FORMAT \"M(%.0f%%) to \" SIZE_FORMAT \"M(%.0f%%)\",\n+                    \"%zuM(%.0f%%) to %zuM(%.0f%%)\",\n@@ -653,1 +652,1 @@\n-    log_debug(gc, heap)(\"Page Cache Flushed: \" SIZE_FORMAT \"M\", flushed \/ M);\n+    log_debug(gc, heap)(\"Page Cache Flushed: %zuM\", flushed \/ M);\n@@ -1063,1 +1062,1 @@\n-    log_info(gc, heap)(\"Uncommitted (cleanup): \" SIZE_FORMAT \"M(%.0f%%)\",\n+    log_info(gc, heap)(\"Uncommitted (cleanup): %zuM(%.0f%%)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zPageAllocator.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zPageCache.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n@@ -83,1 +82,1 @@\n-      log_info(gc, heap)(\"Uncommitted: \" SIZE_FORMAT \"M(%.0f%%)\",\n+      log_info(gc, heap)(\"Uncommitted: %zuM(%.0f%%)\",\n","filename":"src\/hotspot\/share\/gc\/z\/zUncommitter.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-#include \"jvm_md.h\"\n@@ -35,0 +34,1 @@\n+#include \"jvm_md.h\"\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/jfr.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-#include \"utilities\/exceptions.hpp\"\n+#include \"utilities\/exceptions.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/jfr.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethodRegistration.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -114,1 +113,1 @@\n-    \"Thread local allocation (native) for \" SIZE_FORMAT \" bytes failed in JfrUpcalls\", (size_t)new_bytes_length);\n+    \"Thread local allocation (native) for %zu bytes failed in JfrUpcalls\", (size_t)new_bytes_length);\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrUpcalls.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrOSInterface.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrType.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/recorder\/jfrRecorder.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -111,1 +110,1 @@\n-  log_info(logging)(\"AsyncLogBuffer estimates memory use: \" SIZE_FORMAT \" bytes\", size * 2);\n+  log_info(logging)(\"AsyncLogBuffer estimates memory use: %zu bytes\", size * 2);\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,1 +181,1 @@\n-    log_debug(logging, thread)(\"starting AsyncLog Thread tid = \" INTX_FORMAT, os::current_thread_id());\n+    log_debug(logging, thread)(\"starting AsyncLog Thread tid = %zd\", os::current_thread_id());\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n@@ -221,2 +220,2 @@\n-         \"idx must be in range 1 < idx < _n_outputs, but idx = \" SIZE_FORMAT\n-         \" and _n_outputs = \" SIZE_FORMAT, idx, _n_outputs);\n+         \"idx must be in range 1 < idx < _n_outputs, but idx = %zu\"\n+         \" and _n_outputs = %zu\", idx, _n_outputs);\n@@ -247,1 +246,1 @@\n-  assert(idx < _n_outputs, \"Invalid index, idx = \" SIZE_FORMAT \" and _n_outputs = \" SIZE_FORMAT, idx, _n_outputs);\n+  assert(idx < _n_outputs, \"Invalid index, idx = %zu and _n_outputs = %zu\", idx, _n_outputs);\n@@ -358,1 +357,1 @@\n-         \"Too many tags specified! Can only have up to \" SIZE_FORMAT \" tags in a tag set.\", LogTag::MaxTags);\n+         \"Too many tags specified! Can only have up to %zu tags in a tag set.\", LogTag::MaxTags);\n@@ -507,1 +506,1 @@\n-    int ret = sscanf(outputstr + 1, SIZE_FORMAT, &idx);\n+    int ret = sscanf(outputstr + 1, \"%zu\", &idx);\n@@ -573,1 +572,1 @@\n-    out->print(\" #\" SIZE_FORMAT \": \", i);\n+    out->print(\" #%zu: \", i);\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-#include \"precompiled.hpp\"\n@@ -188,1 +187,1 @@\n-                            SIZE_FORMAT \"]\", FileSizeOptionKey, (size_t)SIZE_MAX);\n+                            \"%zu]\", FileSizeOptionKey, (size_t)SIZE_MAX);\n@@ -218,1 +217,1 @@\n-                     \", filesize: \" SIZE_FORMAT \" KiB).\",\n+                     \", filesize: %zu KiB).\",\n@@ -464,1 +463,1 @@\n-  out->print(\",filecount=%u,filesize=\" SIZE_FORMAT \"%s,async=%s\", _file_count,\n+  out->print(\",filecount=%u,filesize=%zu%s,async=%s\", _file_count,\n","filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-#ifndef DONT_USE_PRECOMPILED_HEADER\n-\n@@ -81,2 +79,0 @@\n-\n-#endif \/\/ !DONT_USE_PRECOMPILED_HEADER\n","filename":"src\/hotspot\/share\/precompiled\/precompiled.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -631,10 +630,0 @@\n-  JavaThreadInObjectWaitState jtiows(thread, ms != 0);\n-  if (JvmtiExport::should_post_monitor_wait()) {\n-    JvmtiExport::post_monitor_wait(thread, obj(), ms);\n-\n-    \/\/ The current thread already owns the monitor and it has not yet\n-    \/\/ been added to the wait queue so the current thread cannot be\n-    \/\/ made the successor. This means that the JVMTI_EVENT_MONITOR_WAIT\n-    \/\/ event handler cannot accidentally consume an unpark() meant for\n-    \/\/ the ParkEvent associated with this ObjectMonitor.\n-  }\n@@ -1226,16 +1215,0 @@\n-JVM_ENTRY(jobject, JVM_GetProtectionDomain(JNIEnv *env, jclass cls))\n-  oop mirror = JNIHandles::resolve_non_null(cls);\n-  if (mirror == nullptr) {\n-    THROW_(vmSymbols::java_lang_NullPointerException(), nullptr);\n-  }\n-\n-  if (java_lang_Class::is_primitive(mirror)) {\n-    \/\/ Primitive types does not have a protection domain.\n-    return nullptr;\n-  }\n-\n-  oop pd = java_lang_Class::protection_domain(mirror);\n-  return (jobject) JNIHandles::make_local(THREAD, pd);\n-JVM_END\n-\n-\n@@ -1302,16 +1275,0 @@\n-JVM_ENTRY(jint, JVM_GetClassModifiers(JNIEnv *env, jclass cls))\n-  oop mirror = JNIHandles::resolve_non_null(cls);\n-  if (java_lang_Class::is_primitive(mirror)) {\n-    \/\/ Primitive type\n-    return JVM_ACC_ABSTRACT | JVM_ACC_FINAL | JVM_ACC_PUBLIC;\n-  }\n-\n-  Klass* k = java_lang_Class::as_Klass(mirror);\n-  debug_only(int computed_modifiers = k->compute_modifier_flags());\n-  assert(k->modifier_flags() == computed_modifiers, \"modifiers cache is OK\");\n-  return k->modifier_flags();\n-JVM_END\n-\n-\n-\/\/ Inner class reflection \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\n-\n@@ -1821,1 +1778,1 @@\n-  return k->access_flags().as_int() & JVM_ACC_WRITTEN_FLAGS;\n+  return k->access_flags().as_class_flags();\n@@ -2464,1 +2421,1 @@\n-  return method->access_flags().as_int() & JVM_RECOGNIZED_METHOD_MODIFIERS;\n+  return method->access_flags().as_method_flags();\n@@ -2471,1 +2428,1 @@\n-  return InstanceKlass::cast(k)->field_access_flags(field_index) & JVM_RECOGNIZED_FIELD_MODIFIERS;\n+  return InstanceKlass::cast(k)->field_access_flags(field_index);\n@@ -2661,1 +2618,1 @@\n-          return fs.access_flags().as_short() & JVM_RECOGNIZED_FIELD_MODIFIERS;\n+          return fs.access_flags().as_field_flags();\n@@ -2690,1 +2647,1 @@\n-            return method->access_flags().as_int() & JVM_RECOGNIZED_METHOD_MODIFIERS;\n+            return method->access_flags().as_method_flags();\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":6,"deletions":49,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -315,0 +314,1 @@\n+  static void clear_all_frame_pops(JvmtiEnvThreadState *env_thread);\n@@ -601,1 +601,1 @@\n-  bool is_now_interp = state->is_interp_only_mode();\n+  bool is_now_interp = state->is_interp_only_mode() || state->is_pending_interp_only_mode();\n@@ -957,0 +957,9 @@\n+void\n+JvmtiEventControllerPrivate::clear_all_frame_pops(JvmtiEnvThreadState *ets) {\n+  EC_TRACE((\"[%s] # clear all frame pops\",\n+            JvmtiTrace::safe_get_thread_name(ets->get_thread_or_saved())\n+          ));\n+\n+  ets->get_frame_pops()->clear_all();\n+  recompute_thread_enabled(ets->jvmti_thread_state());\n+}\n@@ -1136,0 +1145,6 @@\n+void\n+JvmtiEventController::clear_all_frame_pops(JvmtiEnvThreadState *ets) {\n+  assert(JvmtiThreadState_lock->is_locked(), \"Must be locked.\");\n+  JvmtiEventControllerPrivate::clear_all_frame_pops(ets);\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -238,0 +238,1 @@\n+  static void clear_all_frame_pops(JvmtiEnvThreadState *env_thread);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -932,2 +931,0 @@\n-    assert(!_thread->is_in_VTMS_transition(), \"CFLH events are not allowed in VTMS transition\");\n-\n@@ -1104,2 +1101,2 @@\n-  if (JavaThread::current()->is_in_VTMS_transition()) {\n-    return false; \/\/ no events should be posted if thread is in VTMS transition\n+  if (JavaThread::current()->should_hide_jvmti_events()) {\n+    return false;\n@@ -1241,2 +1238,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1253,1 +1250,1 @@\n-      EVT_TRACE(JVMTI_EVENT_BREAKPOINT, (\"[%s] Evt Breakpoint sent %s.%s @ \" INTX_FORMAT,\n+      EVT_TRACE(JVMTI_EVENT_BREAKPOINT, (\"[%s] Evt Breakpoint sent %s.%s @ %zd\",\n@@ -1381,2 +1378,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1418,2 +1415,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1756,2 +1753,2 @@\n-  if (javaThread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (javaThread->should_hide_jvmti_events()) {\n+    return;\n@@ -1780,2 +1777,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1823,2 +1820,2 @@\n-  if (mh->jvmti_mount_transition() || thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (mh->jvmti_mount_transition() || thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1915,2 +1912,2 @@\n-  if (mh->jvmti_mount_transition() || thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (mh->jvmti_mount_transition() || thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1972,1 +1969,4 @@\n-          ets->clear_frame_pop(cur_frame_number);\n+          \/\/ Need to recheck the condition as the JVMTI ClearAllFramePops can do its work at a safepoint.\n+          if (ets->is_frame_pop(cur_frame_number)) {\n+            ets->clear_frame_pop(cur_frame_number);\n+          }\n@@ -1991,2 +1991,2 @@\n-  if (mh->jvmti_mount_transition() || thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (mh->jvmti_mount_transition() || thread->should_hide_jvmti_events()) {\n+    return;\n@@ -1999,1 +1999,1 @@\n-      EVT_TRACE(JVMTI_EVENT_SINGLE_STEP, (\"[%s] Evt Single Step sent %s.%s @ \" INTX_FORMAT,\n+      EVT_TRACE(JVMTI_EVENT_SINGLE_STEP, (\"[%s] Evt Single Step sent %s.%s @ %zd\",\n@@ -2033,2 +2033,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2046,1 +2046,1 @@\n-                     (\"[%s] Evt Exception thrown sent %s.%s @ \" INTX_FORMAT,\n+                     (\"[%s] Evt Exception thrown sent %s.%s @ %zd\",\n@@ -2122,1 +2122,1 @@\n-                    (\"[%s] Trg unwind_due_to_exception triggered %s.%s @ %s\" INTX_FORMAT \" - %s\",\n+                    (\"[%s] Trg unwind_due_to_exception triggered %s.%s @ %s%zd - %s\",\n@@ -2155,2 +2155,2 @@\n-      if (mh->jvmti_mount_transition() || thread->is_in_VTMS_transition()) {\n-        return; \/\/ no events should be posted if thread is in VTMS transition\n+      if (mh->jvmti_mount_transition() || thread->should_hide_jvmti_events()) {\n+        return;\n@@ -2162,1 +2162,1 @@\n-                     (\"[%s] Evt ExceptionCatch sent %s.%s @ \" INTX_FORMAT,\n+                     (\"[%s] Evt ExceptionCatch sent %s.%s @ %zd\",\n@@ -2201,2 +2201,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2237,2 +2237,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2246,1 +2246,1 @@\n-      EVT_TRACE(JVMTI_EVENT_FIELD_ACCESS, (\"[%s] Evt Field Access event sent %s.%s @ \" INTX_FORMAT,\n+      EVT_TRACE(JVMTI_EVENT_FIELD_ACCESS, (\"[%s] Evt Field Access event sent %s.%s @ %zd\",\n@@ -2287,2 +2287,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2318,2 +2318,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2393,2 +2393,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2404,1 +2404,1 @@\n-                   (\"[%s] Evt Field Modification event sent %s.%s @ \" INTX_FORMAT,\n+                   (\"[%s] Evt Field Modification event sent %s.%s @ %zd\",\n@@ -2432,2 +2432,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2506,1 +2506,1 @@\n-  assert(!thread->is_in_VTMS_transition(), \"compiled method load events are not allowed in VTMS transition\");\n+  assert(!thread->should_hide_jvmti_events(), \"compiled method load events are not allowed in critical sections\");\n@@ -2529,1 +2529,1 @@\n-  assert(!thread->is_in_VTMS_transition(), \"compiled method load events are not allowed in VTMS transition\");\n+  assert(!thread->should_hide_jvmti_events(), \"compiled method load events are not allowed in critical sections\");\n@@ -2554,1 +2554,1 @@\n-  assert(!thread->is_in_VTMS_transition(), \"dynamic code generated events are not allowed in VTMS transition\");\n+  assert(!thread->should_hide_jvmti_events(), \"dynamic code generated events are not allowed in critical sections\");\n@@ -2602,1 +2602,1 @@\n-  assert(!thread->is_in_VTMS_transition(), \"dynamic code generated events are not allowed in VTMS transition\");\n+  assert(!thread->should_hide_jvmti_events(), \"dynamic code generated events are not allowed in critical sections\");\n@@ -2757,2 +2757,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2790,2 +2790,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2824,2 +2824,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2858,2 +2858,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2900,2 +2900,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n@@ -2937,2 +2937,2 @@\n-  if (thread->is_in_VTMS_transition()) {\n-    return; \/\/ no events should be posted if thread is in VTMS transition\n+  if (thread->should_hide_jvmti_events()) {\n+    return;\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":62,"deletions":62,"binary":false,"changes":124,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiExtensions.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n@@ -110,0 +109,1 @@\n+bool   Arguments::_has_jdwp_agent               = false;\n@@ -1571,2 +1571,2 @@\n-          log_debug(gc, heap, coops)(\"HeapBaseMinAddress must be at least \" SIZE_FORMAT\n-                                     \" (\" SIZE_FORMAT \"G) which is greater than value given \" SIZE_FORMAT,\n+          log_debug(gc, heap, coops)(\"HeapBaseMinAddress must be at least %zu\"\n+                                     \" (%zuG) which is greater than value given %zu\",\n@@ -1597,1 +1597,1 @@\n-            \" max heap \" SIZE_FORMAT \" > compressed oop heap \" SIZE_FORMAT \". \"\n+            \" max heap %zu > compressed oop heap %zu. \"\n@@ -1608,1 +1608,1 @@\n-    log_trace(gc, heap)(\"  Maximum heap size \" SIZE_FORMAT, (size_t) reasonable_max);\n+    log_trace(gc, heap)(\"  Maximum heap size %zu\", (size_t) reasonable_max);\n@@ -1629,1 +1629,1 @@\n-      log_trace(gc, heap)(\"  Initial heap size \" SIZE_FORMAT, InitialHeapSize);\n+      log_trace(gc, heap)(\"  Initial heap size %zu\", InitialHeapSize);\n@@ -1635,1 +1635,1 @@\n-      log_trace(gc, heap)(\"  Minimum heap size \" SIZE_FORMAT, MinHeapSize);\n+      log_trace(gc, heap)(\"  Minimum heap size %zu\", MinHeapSize);\n@@ -1770,1 +1770,1 @@\n-    jio_snprintf(buffer, 1024, \"java.lang.Integer.IntegerCache.high=\" INTX_FORMAT, AutoBoxCacheMax);\n+    jio_snprintf(buffer, 1024, \"java.lang.Integer.IntegerCache.high=%zd\", AutoBoxCacheMax);\n@@ -1824,1 +1824,1 @@\n-                \"not \" SIZE_FORMAT \"\\n\",\n+                \"not %zu\\n\",\n@@ -2047,1 +2047,1 @@\n-#if !INCLUDE_JVMTI\n+#if !INCLUDE_JVMTI || INCLUDE_CDS\n@@ -2429,0 +2429,4 @@\n+#elif INCLUDE_CDS\n+        if (valid_jdwp_agent(name, is_absolute_path)) {\n+          _has_jdwp_agent = true;\n+        }\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -154,1 +154,0 @@\n-  friend class CodeCacheExtensions;\n@@ -258,0 +257,3 @@\n+  \/\/ jdwp\n+  static bool _has_jdwp_agent;\n+\n@@ -517,0 +519,3 @@\n+  \/\/ jdwp\n+  static bool has_jdwp_agent() { return _has_jdwp_agent; }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -24,2 +24,0 @@\n-#include \"precompiled.hpp\"\n-\n","filename":"src\/hotspot\/share\/runtime\/crac.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,2 +24,0 @@\n-#include \"precompiled.hpp\"\n-\n","filename":"src\/hotspot\/share\/runtime\/crac_engine.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -212,1 +211,1 @@\n-      st->print(INTX_FORMAT, get_intx());\n+      st->print(\"%zd\", get_intx());\n@@ -214,1 +213,1 @@\n-      st->print(UINTX_FORMAT, get_uintx());\n+      st->print(\"%zu\", get_uintx());\n@@ -218,1 +217,1 @@\n-      st->print(SIZE_FORMAT, get_size_t());\n+      st->print(\"%zu\", get_size_t());\n@@ -417,1 +416,1 @@\n-    st->print(\"-XX:%s=\" INTX_FORMAT, _name, get_intx());\n+    st->print(\"-XX:%s=%zd\", _name, get_intx());\n@@ -419,1 +418,1 @@\n-    st->print(\"-XX:%s=\" UINTX_FORMAT, _name, get_uintx());\n+    st->print(\"-XX:%s=%zu\", _name, get_uintx());\n@@ -423,1 +422,1 @@\n-    st->print(\"-XX:%s=\" SIZE_FORMAT, _name, get_size_t());\n+    st->print(\"-XX:%s=%zu\", _name, get_size_t());\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -724,0 +724,5 @@\n+  \/\/ Temporarily skip posting JVMTI events for safety reasons when executions is in a critical section:\n+  \/\/ - is in a VTMS transition (_is_in_VTMS_transition)\n+  \/\/ - is in an interruptLock or similar critical section (_is_disable_suspend)\n+  bool should_hide_jvmti_events() const          { return _is_in_VTMS_transition || _is_disable_suspend; }\n+\n","filename":"src\/hotspot\/share\/runtime\/javaThread.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -974,1 +973,1 @@\n-      st->print(\"%016\" FORMAT64_MODIFIER \"x\", value);\n+      st->print(UINT64_FORMAT_0, value);\n@@ -998,1 +997,1 @@\n-      case 8: st->print(\"%016\" FORMAT64_MODIFIER \"x\", (u8)value); break;\n+      case 8: st->print(UINT64_FORMAT_0, (u8)value); break;\n@@ -1188,1 +1187,1 @@\n-    st->print(\"%d cores, \" SIZE_FORMAT \"M, \", processor_count(), mem);\n+    st->print(\"%d cores, %zuM, \", processor_count(), mem);\n@@ -1190,1 +1189,1 @@\n-    st->print(\"%d cores, \" SIZE_FORMAT \"G, \", processor_count(), mem);\n+    st->print(\"%d cores, %zuG, \", processor_count(), mem);\n@@ -1216,2 +1215,1 @@\n-    if (n > 0) {\n-      ::wcstombs(buf, w_buf, buflen);\n+    if (n > 0 && ::wcstombs(buf, w_buf, buflen) != (size_t)-1) {\n@@ -1825,2 +1823,2 @@\n-                     \" min=\" SIZE_FORMAT \"%s\"\n-                     \" max=\" SIZE_FORMAT \"%s\"\n+                     \" min=%zu%s\"\n+                     \" max=%zu%s\"\n@@ -1828,2 +1826,2 @@\n-                     \" size=\" SIZE_FORMAT \"%s\"\n-                     \" page_size=\" SIZE_FORMAT \"%s\",\n+                     \" size=%zu%s\"\n+                     \" page_size=%zu%s\",\n@@ -1846,2 +1844,2 @@\n-                     \" req_size=\" SIZE_FORMAT \"%s\"\n-                     \" req_page_size=\" SIZE_FORMAT \"%s\"\n+                     \" req_size=%zu%s\"\n+                     \" req_page_size=%zu%s\"\n@@ -1849,2 +1847,2 @@\n-                     \" size=\" SIZE_FORMAT \"%s\"\n-                     \" page_size=\" SIZE_FORMAT \"%s\",\n+                     \" size=%zu%s\"\n+                     \" page_size=%zu%s\",\n@@ -1992,1 +1990,1 @@\n-#define ARGSFMT \"range [\" PTR_FORMAT \"-\" PTR_FORMAT \"), size \" SIZE_FORMAT_X \", alignment \" SIZE_FORMAT_X \", randomize: %d\"\n+#define ARGSFMT \"range [\" PTR_FORMAT \"-\" PTR_FORMAT \"), size 0x%zx, alignment 0x%zx, randomize: %d\"\n@@ -2022,1 +2020,1 @@\n-  if ((uintptr_t)hi_end < bytes) {\n+  if ((uintptr_t)hi_end <= bytes) {\n@@ -2206,1 +2204,1 @@\n-    ThreadCritical tc;\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2209,1 +2207,1 @@\n-      MemTracker::record_virtual_memory_uncommit((address)addr, bytes);\n+      MemTracker::record_virtual_memory_uncommit(addr, bytes);\n@@ -2228,1 +2226,1 @@\n-    ThreadCritical tc;\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2231,1 +2229,1 @@\n-      MemTracker::record_virtual_memory_release((address)addr, bytes);\n+      MemTracker::record_virtual_memory_release(addr, bytes);\n@@ -2322,1 +2320,1 @@\n-    ThreadCritical tc;\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2325,1 +2323,1 @@\n-      MemTracker::record_virtual_memory_release((address)addr, bytes);\n+      MemTracker::record_virtual_memory_release(addr, bytes);\n@@ -2361,1 +2359,1 @@\n-    ThreadCritical tc;\n+    MemTracker::NmtVirtualMemoryLocker nvml;\n@@ -2364,1 +2362,1 @@\n-      MemTracker::record_virtual_memory_release((address)addr, bytes);\n+      MemTracker::record_virtual_memory_release(addr, bytes);\n@@ -2388,1 +2386,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2393,1 +2391,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2398,1 +2396,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2407,1 +2405,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: 0x%zx\", page_size);\n@@ -2442,1 +2440,1 @@\n-      st->print(SIZE_FORMAT \"k\", sz \/ K);\n+      st->print(\"%zuk\", sz \/ K);\n@@ -2444,1 +2442,1 @@\n-      st->print(SIZE_FORMAT \"M\", sz \/ M);\n+      st->print(\"%zuM\", sz \/ M);\n@@ -2446,1 +2444,1 @@\n-      st->print(SIZE_FORMAT \"G\", sz \/ G);\n+      st->print(\"%zuG\", sz \/ G);\n@@ -2480,1 +2478,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n@@ -2501,1 +2499,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n@@ -2513,1 +2511,1 @@\n-                  \"Specify at least \" SIZE_FORMAT \"k\",\n+                  \"Specify at least %zuk\",\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":34,"deletions":36,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -1,0 +1,1 @@\n+\n@@ -2,1 +3,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +27,0 @@\n-#include \"precompiled.hpp\"\n@@ -575,0 +575,2 @@\n+  \/\/ Once mutexes and main_thread are ready, we can use NmtVirtualMemoryLocker.\n+  MemTracker::NmtVirtualMemoryLocker::set_safe_to_use();\n@@ -839,6 +841,0 @@\n-#if INCLUDE_JVMCI\n-  if (force_JVMCI_initialization) {\n-    JVMCI::initialize_compiler(CHECK_JNI_ERR);\n-  }\n-#endif\n-\n@@ -859,0 +855,6 @@\n+#if INCLUDE_JVMCI\n+  if (force_JVMCI_initialization) {\n+    JVMCI::initialize_compiler(CHECK_JNI_ERR);\n+  }\n+#endif\n+\n@@ -1200,2 +1202,2 @@\n-         \"%s \" PTR_FORMAT \" has incorrect value \" UINTX_FORMAT \" != \"\n-         UINTX_FORMAT, kind, p2i(t), token, expected);\n+         \"%s \" PTR_FORMAT \" has incorrect value %zu != %zu\",\n+         kind, p2i(t), token, expected);\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -266,1 +265,0 @@\n-  nonstatic_field(Klass,                       _modifier_flags,                               jint)                                  \\\n@@ -1020,1 +1018,1 @@\n-  nonstatic_field(AccessFlags,                 _flags,                                        jint)                                  \\\n+  nonstatic_field(AccessFlags,                 _flags,                                        u2)                                    \\\n@@ -1265,0 +1263,2 @@\n+        DEBUG_ONLY(COMPILER2_OR_JVMCI_PRESENT(                            \\\n+          declare_type(DeoptimizeObjectsALotThread, JavaThread)))         \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -326,1 +325,1 @@\n-                           \"Could not allocate \" SIZE_FORMAT \" bytes for argument.\",\n+                           \"Could not allocate %zu bytes for argument.\",\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -687,1 +686,1 @@\n-    st.print(\"Invalid valid threshold value. Threshold value (\" JLONG_FORMAT \") > max value of size_t (\" UINTX_FORMAT \")\", threshold, max_uintx);\n+    st.print(\"Invalid valid threshold value. Threshold value (\" JLONG_FORMAT \") > max value of size_t (%zu)\", threshold, max_uintx);\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -145,1 +144,1 @@\n-  if (sscanf(arg, INTX_FORMAT, &value) == 1) {\n+  if (sscanf(arg, \"%zd\", &value) == 1) {\n@@ -156,1 +155,1 @@\n-  if (sscanf(arg, UINTX_FORMAT, &value) == 1) {\n+  if (sscanf(arg, \"%zu\", &value) == 1) {\n@@ -178,1 +177,1 @@\n-  if (sscanf(arg, SIZE_FORMAT, &value) == 1) {\n+  if (sscanf(arg, \"%zu\", &value) == 1) {\n","filename":"src\/hotspot\/share\/services\/writeableFlags.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/decoder.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n@@ -133,2 +132,2 @@\n-    warning(\"outputStream::do_vsnprintf output truncated -- buffer length is \" SIZE_FORMAT\n-            \" bytes but \" SIZE_FORMAT \" bytes are needed.\",\n+    warning(\"outputStream::do_vsnprintf output truncated -- buffer length is %zu\"\n+            \" bytes but %zu bytes are needed.\",\n@@ -390,1 +389,1 @@\n-    assert(false, \"bad length? (\" SIZE_FORMAT \")\", len);\n+    assert(false, \"bad length? (%zu)\", len);\n@@ -882,1 +881,1 @@\n-      _log_file->print_cr(\"<writer thread='\" UINTX_FORMAT \"'\/>\", writer_id);\n+      _log_file->print_cr(\"<writer thread='%zu'\/>\", writer_id);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-#include \"precompiled.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/zipLibrary.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -2183,1 +2183,1 @@\n-                return c.protectionDomain();\n+                return c.getProtectionDomain();\n@@ -2214,8 +2214,0 @@\n-            public int getCharsLatin1(long i, int index, byte[] buf) {\n-                return StringLatin1.getChars(i, index, buf);\n-            }\n-\n-            public int getCharsUTF16(long i, int index, byte[] buf) {\n-                return StringUTF16.getChars(i, index, buf);\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -147,1 +147,1 @@\n- *\n+ * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -221,0 +221,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -268,0 +269,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -384,0 +386,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -427,0 +430,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -473,0 +477,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -530,0 +535,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -584,0 +590,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n@@ -638,0 +645,1 @@\n+     * @spec security\/standard-names.html Java Security Standard Algorithm Names\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureRandom.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,8 +204,0 @@\n-    exports jdk.internal.org.objectweb.asm to\n-        jdk.jfr;\n-    exports jdk.internal.org.objectweb.asm.tree to\n-        jdk.jfr;\n-    exports jdk.internal.org.objectweb.asm.util to\n-        jdk.jfr;\n-    exports jdk.internal.org.objectweb.asm.commons to\n-        jdk.jfr;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1994, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1994, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1329,1 +1329,1 @@\n-    pointer of the currently executing method (`-XX:+PreserveFramePointer` . If\n+    pointer of the currently executing method (`-XX:+PreserveFramePointer`). If\n@@ -3998,5 +3998,143 @@\n--   If any of the VM options `--upgrade-module-path`, `--patch-module` or\n-    `--limit-modules` are specified, CDS is disabled. This means that the\n-    JVM will execute without loading any CDS archives. In addition, if\n-    you try to create a CDS archive with any of these 3 options specified,\n-    the JVM will report an error.\n+### Module related options\n+\n+The following module related options are supported by CDS: `--module-path`, `--module`,\n+`--add-modules`, and `--enable-native-access`.\n+\n+The values for these options (if specified), should be identical when creating and using the\n+CDS archive. Otherwise, if there is a mismatch of any of these options, the CDS archive may be\n+partially or completely disabled, leading to lower performance.\n+\n+- If the `AOTClassLinking` option (see below) *was* enabled during CDS archive creation, the CDS archive\n+  cannot be used, and the following error message is printed:\n+\n+  `CDS archive has aot-linked classes. It cannot be used when archived full module graph is not used`\n+\n+- If the `AOTClassLinking` option *was not* enabled during CDS archive creation, the CDS archive\n+  can be used, but the \"archived module graph\" feature will be disabled. This can lead to increased\n+  start-up time.\n+\n+To diagnose problems with the above options, you can add `-Xlog:cds` to the application's VM\n+arguments. For example, if `--add-modules jdk.jconcole` was specified during archive creation\n+and `--add-modules jdk.incubator.vector` is specified during runtime, the following messages will\n+be logged:\n+\n+ `Mismatched values for property jdk.module.addmods`\n+\n+ `runtime jdk.incubator.vector dump time jdk.jconsole`\n+\n+ `subgraph jdk.internal.module.ArchivedBootLayer cannot be used because full module graph is disabled`\n+\n+If any of the VM options `--upgrade-module-path`, `--patch-module` or\n+`--limit-modules` are specified, CDS is disabled. This means that the\n+JVM will execute without loading any CDS archives. In addition, if\n+you try to create a CDS archive with any of these 3 options specified,\n+the JVM will report an error.\n+\n+## Ahead-of-Time Cache\n+\n+The JDK supports ahead-of-time (AOT) optimizations that can be performed before an\n+application is executed. One example is Class Data Sharing (CDS), as described above,\n+that parses classes ahead of time. AOT optimizations can improve the start-up and\n+warm-up performance of Java applications.\n+\n+The Ahead-of-Time Cache (AOT cache) is a container introduced in JDK 24 for\n+storing artifacts produced by AOT optimizations. The AOT cache currently contains\n+Java classes and heap objects. In future JDK releases, the AOT cache may contain additional\n+artifacts, such as execution profiles and compiled methods.\n+\n+An AOT cache is specific to a combination of the following:\n+\n+-   A particular application (as expressed by `-classpath`, `-jar`, or `--module-path`.)\n+-   A particular JDK release.\n+-   A particular OS and CPU architecture.\n+\n+If any of the above changes, you must recreate the AOT cache.\n+\n+The deployment of the AOT cache is divided into three phases:\n+\n+-   **Training:** We execute the application with a representative work-load\n+    to gather statistical data that tell us what artifacts should be included\n+    into the AOT cache. The data are saved in an *AOT Configuration* file.\n+\n+-   **Assembly:** We use the AOT Configuration file to produce an AOT cache.\n+\n+-   **Production:** We execute the application with the AOT cache for better\n+    start-up and warm-up performance.\n+\n+The AOT cache can be used with the following command-line options:\n+\n+`-XX:AOTCache:=`*cachefile*\n+:   Specifies the location of the AOT cache. The standard extension for *cachefile* is `.aot`.\n+    If `-XX:AOTCache` is specified but `-XX:AOTMode` is not specified,\n+    then `AOTMode` will be given the value of `auto`.\n+\n+`-XX:AOTConfiguration:=`*configfile*\n+:   Specifies the AOT Configuration file for the JVM to write to or read from.\n+    This option can be used only with `-XX:AOTMode=record` and `-XX:AOTMode=create`.\n+    The standard extension for *configfile* is `.aotconfig`.\n+\n+`-XX:+AOTMode:=`*mode*\n+:   *mode* must be one of the following: `off`, `record`, `create`, `auto`, or `on`.\n+\n+-   `off`: no AOT cache is used.\n+\n+-   `record`: Execute the application in the Training phase.\n+    `-XX:AOTConfiguration=`*configfile* must be specified. The JVM gathers\n+     statistical data and stores them into *configfile*.\n+\n+-   `create`: Perform the Assembly phase. `-XX:AOTConfiguration=`*configfile*\n+     and `-XX:AOTCache=`*cachefile*  must be specified. The JVM reads the statistical\n+     data from *configfile* and writes the optimization artifacts into *cachefile*.\n+     Note that the application itself is not executed in this phase.\n+\n+-   `auto` or `on`: These modes should be used in the Production phase.\n+     If `-XX:AOTCache=`*cachefile* is specified, the JVM tries to\n+     load *cachefile* as the AOT cache. Otherwise, the JVM tries to load\n+     a *default CDS archive* from the JDK installation directory as the AOT cache.\n+\n+     The loading of an AOT cache can fail for a number of reasons:\n+\n+     - You are trying to use the AOT cache with an incompatible application, JDK release,\n+       or OS\/CPU.\n+\n+     - The specified *cachefile* does not exist or is not accessible.\n+\n+     - Incompatible JVM options are used (for example, certain JVMTI options).\n+\n+       Since the AOT cache is an optimization feature, there's no guarantee that it will be\n+       compatible with all possible JVM options. See [JEP 483](https:\/\/openjdk.org\/jeps\/483),\n+       section **Consistency of training and subsequent runs** for a representative\n+       list of scenarios that may be incompatible with the AOT cache for JDK 24.\n+\n+       These scenarios usually involve arbitrary modification of classes for diagnostic\n+       purposes and are typically not relevant for production environments.\n+\n+     When the AOT cache fails to load:\n+\n+     - If `AOTMode` is `auto`, the JVM will continue execution without using the\n+       AOT cache. This is the recommended mode for production environments, especially\n+       when you may not have complete control of the command-line (e.g., your\n+       application's launch script may allow users to inject options to the command-line).\n+       This allows your application to function correctly, although sometimes it may not\n+       benefit from the AOT cache.\n+\n+     - If `AOTMode` is `on`, the JVM will print an error message and exit immediately. This\n+       mode should be used only as a \"fail-fast\" debugging aid to check if your command-line\n+       options are compatible with the AOT cache. An alternative is to run your application with\n+       `-XX:AOTMode=auto -Xlog:cds` to see if the AOT cache can be used or not.\n+\n+`-XX:+AOTClassLinking`\n+:   If this option is enabled, the JVM will perform more advanced optimizations (such\n+    as ahead-of-time resolution of invokedynamic instructions)\n+    when creating the AOT cache. As a result, the application will see further improvements\n+    in start-up and warm-up performance. However, an AOT cache created with this option\n+    cannot be used when certain command-line parameters are specified in\n+    the Production phase. Please see [JEP 483](https:\/\/openjdk.org\/jeps\/483) for a\n+    detailed discussion of `-XX:+AOTClassLinking` and its restrictions.\n+\n+    When `-XX:AOTMode` *is used* in the command-line, `AOTClassLinking` is automatically\n+    enabled. To disable it, you must explicitly pass the `-XX:-AOTClassLinking` option.\n+\n+    When `-XX:AOTMode` *is not used* in the command-line,  `AOTClassLinking` is disabled by\n+    default to provide full compatibility with traditional CDS options such as `-Xshare:dump.\n+\n","filename":"src\/java.base\/share\/man\/java.md","additions":145,"deletions":7,"binary":false,"changes":152,"status":"modified"},{"patch":"@@ -54,4 +54,0 @@\n-    int margc;\n-    char** margv;\n-    int jargc;\n-    char** jargv;\n@@ -215,4 +211,0 @@\n-    int margc;\n-    char** margv;\n-    int jargc;\n-    char** jargv;\n@@ -221,22 +213,4 @@\n-    {\n-        int i, main_jargc, extra_jargc;\n-        JLI_List list;\n-\n-        main_jargc = (sizeof(const_jargs) \/ sizeof(char *)) > 1\n-            ? sizeof(const_jargs) \/ sizeof(char *)\n-            : 0; \/\/ ignore the null terminator index\n-\n-        extra_jargc = (sizeof(const_extra_jargs) \/ sizeof(char *)) > 1\n-            ? sizeof(const_extra_jargs) \/ sizeof(char *)\n-            : 0; \/\/ ignore the null terminator index\n-        if (main_jargc > 0 && extra_jargc > 0) { \/\/ combine extra java args\n-            jargc = main_jargc + extra_jargc;\n-            list = JLI_List_new(jargc + 1);\n-\n-            for (i = 0 ; i < extra_jargc; i++) {\n-                JLI_List_add(list, JLI_StringDup(const_extra_jargs[i]));\n-            }\n-\n-            for (i = 0 ; i < main_jargc ; i++) {\n-                JLI_List_add(list, JLI_StringDup(const_jargs[i]));\n-            }\n+    int margc;\n+    char** margv;\n+    int jargc;\n+    const char** jargv = const_jargs;\n@@ -245,11 +219,3 @@\n-            \/\/ terminate the list\n-            JLI_List_add(list, NULL);\n-            jargv = list->elements;\n-         } else if (extra_jargc > 0) { \/\/ should never happen\n-            fprintf(stderr, \"EXTRA_JAVA_ARGS defined without JAVA_ARGS\");\n-            abort();\n-         } else { \/\/ no extra args, business as usual\n-            jargc = main_jargc;\n-            jargv = (char **) const_jargs;\n-         }\n-    }\n+    jargc = (sizeof(const_jargs) \/ sizeof(char *)) > 1\n+        ? sizeof(const_jargs) \/ sizeof(char *)\n+        : 0; \/\/ ignore the null terminator index\n@@ -410,1 +376,1 @@\n-                   jargc, (const char**) jargv,\n+                   jargc, jargv,\n","filename":"src\/java.base\/share\/native\/launcher\/main.c","additions":8,"deletions":42,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1022,0 +1022,2 @@\n+    if (s == NULL)\n+        return;\n@@ -1376,0 +1378,2 @@\n+        \/\/ communicate the launcher mode to runtime\n+        AddOption(\"-Dsun.java.launcher.mode=source\", NULL);\n","filename":"src\/java.base\/share\/native\/libjli\/java.c","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n- * Declare library specific JNI_Onload entry if static build\n+ * Declare library specific JNI_Onload entry\n@@ -77,2 +77,0 @@\n-#ifdef STATIC_BUILD\n-#endif\n","filename":"src\/java.base\/share\/native\/libzip\/zip_util.c","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1349,0 +1349,4 @@\n+    if (dbgsysPlatformInit() != 0) {\n+      return JNI_ERR;\n+    }\n+\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libdt_socket\/socketTransport.c","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,9 @@\n+\/* Perform platform specific initialization.\n+ * Returns 0 on success, non-0 on failure *\/\n+int\n+dbgsysPlatformInit()\n+{\n+    \/\/ Not needed on unix\n+    return 0;\n+}\n+\n","filename":"src\/jdk.jdwp.agent\/unix\/native\/libdt_socket\/socket_md.c","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,0 @@\n-                EventWriterKey.ensureEventWriterFactory();\n@@ -128,1 +127,0 @@\n-            EventWriterKey.ensureEventWriterFactory();\n@@ -159,1 +157,3 @@\n-        return SecuritySupport.createRecorderThread(systemThreadGroup, contextClassLoader);\n+        Thread thread = new Thread(systemThreadGroup, \"JFR Recorder Thread\");\n+        thread.setContextClassLoader(contextClassLoader);\n+        return thread;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/JVMUpcalls.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n@@ -52,1 +50,0 @@\n-import java.util.concurrent.CopyOnWriteArrayList;\n@@ -65,2 +62,0 @@\n-import jdk.jfr.internal.SecuritySupport.SafePath;\n-import jdk.jfr.internal.SecuritySupport.SecureRecorderListener;\n@@ -75,1 +70,1 @@\n-    private static final List<SecureRecorderListener> changeListeners = new ArrayList<>();\n+    private static final List<FlightRecorderListener> changeListeners = new ArrayList<>();\n@@ -131,2 +126,2 @@\n-                    WriteableUserPath destination = r.getDestination();\n-                    \/\/ The backup recording has to be moved before creating WriteableUserPath\n+                    WriteablePath destination = r.getDestination();\n+                    \/\/ The backup recording has to be moved before creating WriteablePath\n@@ -135,5 +130,2 @@\n-                        destination.doPrivilegedIO(() -> {\n-                            File destFile = destination.getReal().toFile();\n-                            if (!destFile.exists()) {\n-                                return null;\n-                            }\n+                        File destFile = destination.getReal().toFile();\n+                        if (destFile.exists()) {\n@@ -159,2 +151,1 @@\n-                            return null;\n-                        });\n+                        }\n@@ -165,3 +156,3 @@\n-                        \/\/ We need to invoke WritableUserPath after restore to create the dump file.\n-                        \/\/ Since we're creating another WritableUserPath we can use the original specification\n-                        r.setDestination(new WriteableUserPath(destination.getPotentiallyMaliciousOriginal()));\n+                        \/\/ We need to invoke WriteablePath after restore to create the dump file.\n+                        \/\/ Since we're creating another WriteablePath we can use the original specification\n+                        r.setDestination(new WriteablePath(destination.getPath()));\n@@ -186,3 +177,3 @@\n-        shutdownHook = SecuritySupport.createThreadWitNoPermissions(\"JFR Shutdown Hook\", new ShutdownHook(this));\n-        SecuritySupport.setUncaughtExceptionHandler(shutdownHook, new ShutdownHook.ExceptionHandler());\n-        SecuritySupport.registerShutdownHook(shutdownHook);\n+        shutdownHook = new ShutdownHook(this);\n+        shutdownHook.setUncaughtExceptionHandler(new ShutdownHook.ExceptionHandler());\n+        Runtime.getRuntime().addShutdownHook(shutdownHook);\n@@ -193,16 +184,0 @@\n-\n-    private static Timer createTimer() {\n-        try {\n-            List<Timer> result = new CopyOnWriteArrayList<>();\n-            Thread t = SecuritySupport.createThreadWitNoPermissions(\"Permissionless thread\", ()-> {\n-                result.add(new Timer(\"JFR Recording Scheduler\", true));\n-            });\n-            JVM.exclude(t);\n-            t.start();\n-            t.join();\n-            return result.getFirst();\n-        } catch (InterruptedException e) {\n-            throw new IllegalStateException(\"Not able to create timer task. \" + e.getMessage(), e);\n-        }\n-    }\n-\n@@ -243,3 +218,0 @@\n-        @SuppressWarnings(\"removal\")\n-        AccessControlContext context = AccessController.getContext();\n-        SecureRecorderListener sl = new SecureRecorderListener(context, changeListener);\n@@ -249,1 +221,1 @@\n-            changeListeners.add(sl);\n+            changeListeners.add(changeListener);\n@@ -252,1 +224,1 @@\n-            sl.recorderInitialized(FlightRecorder.getFlightRecorder());\n+            changeListener.recorderInitialized(FlightRecorder.getFlightRecorder());\n@@ -257,7 +229,1 @@\n-        for (SecureRecorderListener s : new ArrayList<>(changeListeners)) {\n-            if (s.getChangeListener() == changeListener) {\n-                changeListeners.remove(s);\n-                return true;\n-            }\n-        }\n-        return false;\n+        return changeListeners.remove(changeListener);\n@@ -272,1 +238,1 @@\n-            timer = createTimer();\n+            timer = new Timer(\"JFR Recording Scheduler\", true);\n@@ -471,1 +437,1 @@\n-        WriteableUserPath dest = recording.getDestination();\n+        WriteablePath dest = recording.getDestination();\n@@ -546,2 +512,2 @@\n-        Thread t = SecuritySupport.createThreadWitNoPermissions(\"JFR Periodic Tasks\", () -> periodicTask());\n-        SecuritySupport.setDaemonThread(t, true);\n+        Thread t = new Thread(() -> periodicTask(), \"JFR Periodic Tasks\");\n+        t.setDaemon(true);\n@@ -577,1 +543,1 @@\n-                    WriteableUserPath path = r.getDestination();\n+                    WriteablePath path = r.getDestination();\n@@ -624,1 +590,1 @@\n-                Logger.log(JFR_SYSTEM, ERROR, \"Error in Periodic task: \" + t.getClass().getName());\n+                Logger.log(JFR_SYSTEM, WARN, \"Error in Periodic task: \" + t.getMessage());\n@@ -765,1 +731,1 @@\n-    public synchronized void migrate(SafePath repo) throws IOException {\n+    public synchronized void migrate(Path repo) throws IOException {\n@@ -784,0 +750,4 @@\n+\n+    public synchronized void flush() {\n+        MetadataRepository.getInstance().flush();\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":27,"deletions":57,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.nio.file.Path;\n@@ -39,4 +40,0 @@\n-import java.security.AccessControlContext;\n-import java.security.AccessController;\n-import java.security.PrivilegedActionException;\n-import java.security.PrivilegedExceptionAction;\n@@ -62,1 +59,0 @@\n-import jdk.jfr.internal.SecuritySupport.SafePath;\n@@ -76,1 +72,1 @@\n-    private WriteableUserPath destination;\n+    private WriteablePath destination;\n@@ -81,1 +77,1 @@\n-    private SafePath dumpDirectory;\n+    private Path dumpDirectory;\n@@ -93,2 +89,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private final AccessControlContext dumpDirectoryControlContext;\n@@ -102,7 +96,0 @@\n-        \/\/ Typically the access control context is taken\n-        \/\/ when you call dump(Path) or setDestination(Path),\n-        \/\/ but if no destination is set and the filename is auto-generated,\n-        \/\/ the control context of the recording is taken when the\n-        \/\/ Recording object is constructed. This works well for\n-        \/\/ -XX:StartFlightRecording and JFR.dump\n-        this.dumpDirectoryControlContext = AccessController.getContext();\n@@ -178,1 +165,1 @@\n-        WriteableUserPath dest = getDestination();\n+        WriteablePath dest = getDestination();\n@@ -198,2 +185,1 @@\n-    @SuppressWarnings(\"removal\")\n-    public WriteableUserPath makeDumpPath() {\n+    public WriteablePath makeDumpPath() {\n@@ -202,17 +188,3 @@\n-            return AccessController.doPrivileged(new PrivilegedExceptionAction<WriteableUserPath>() {\n-                @Override\n-                public WriteableUserPath run() throws Exception {\n-                    SafePath p = dumpDirectory;\n-                    if (p == null) {\n-                        p = new SafePath(\".\");\n-                    }\n-                    return new WriteableUserPath(p.toPath().resolve(name));\n-                }\n-            }, dumpDirectoryControlContext);\n-        } catch (PrivilegedActionException e) {\n-            Throwable t = e.getCause();\n-            if (t instanceof SecurityException) {\n-                Logger.log(LogTag.JFR, LogLevel.WARN, \"Not allowed to create dump path for recording \" + recording.getId() + \" on exit.\");\n-            }\n-            if (t instanceof IOException) {\n-                Logger.log(LogTag.JFR, LogLevel.WARN, \"Could not dump \" + recording.getId() + \" on exit.\");\n+            Path p = dumpDirectory;\n+            if (p == null) {\n+                p = Path.of(\".\");\n@@ -220,1 +192,3 @@\n-            return null;\n+            return new WriteablePath(p.resolve(name));\n+        } catch (IOException e) {\n+            Logger.log(LogTag.JFR, LogLevel.WARN, \"Could not dump \" + recording.getId() + \" on exit. \" + e.getMessage());\n@@ -222,0 +196,1 @@\n+        return null;\n@@ -425,1 +400,1 @@\n-    public void setDestination(WriteableUserPath userSuppliedPath) throws IOException {\n+    public void setDestination(WriteablePath destination) throws IOException {\n@@ -427,2 +402,2 @@\n-            checkSetDestination(userSuppliedPath);\n-            this.destination = userSuppliedPath;\n+            checkSetDestination(destination);\n+            this.destination = destination;\n@@ -432,1 +407,3 @@\n-    public void checkSetDestination(WriteableUserPath userSuppliedPath) throws IOException {\n+    public void checkSetDestination(WriteablePath writeablePath) throws IOException {\n+        \/\/ The writeablePath argument is not checked. It's sufficient that an instance has\n+        \/\/ been created.\n@@ -440,1 +417,1 @@\n-    public WriteableUserPath getDestination() {\n+    public WriteablePath getDestination() {\n@@ -710,2 +687,1 @@\n-                    \/\/ Prevent malicious user to propagate exception callback in the wrong context\n-                    Logger.log(LogTag.JFR, LogLevel.ERROR, \"Could not stop recording.\");\n+                    Logger.log(LogTag.JFR, LogLevel.ERROR, \"Could not stop recording. \" + t.getMessage());\n@@ -740,1 +716,1 @@\n-    public void dump(WriteableUserPath writeableUserPath) throws IOException {\n+    public void dump(WriteablePath writeablePath) throws IOException {\n@@ -743,1 +719,1 @@\n-                p.dumpStopped(writeableUserPath);\n+                p.dumpStopped(writeablePath);\n@@ -748,1 +724,1 @@\n-    public void dumpStopped(WriteableUserPath userPath) throws IOException {\n+    public void dumpStopped(WriteablePath path) throws IOException {\n@@ -750,1 +726,1 @@\n-            transferChunksWithRetry(userPath);\n+            transferChunksWithRetry(path);\n@@ -754,13 +730,10 @@\n-    private void transferChunksWithRetry(WriteableUserPath userPath) throws IOException {\n-        userPath.doPrivilegedIO(() -> {\n-            try {\n-                transferChunks(userPath);\n-            } catch (NoSuchFileException nsfe) {\n-                Logger.log(LogTag.JFR, LogLevel.ERROR, \"Missing chunkfile when writing recording \\\"\" + name + \"\\\" (\" + id + \") to \" + userPath.getRealPathText() + \".\");\n-                \/\/ if one chunkfile was missing, its likely more are missing\n-                removeNonExistantPaths();\n-                \/\/ and try the transfer again\n-                transferChunks(userPath);\n-            }\n-            return null;\n-        });\n+    private void transferChunksWithRetry(WriteablePath path) throws IOException {\n+        try {\n+            transferChunks(path);\n+        } catch (NoSuchFileException nsfe) {\n+            Logger.log(LogTag.JFR, LogLevel.ERROR, \"Missing chunkfile when writing recording \\\"\" + name + \"\\\" (\" + id + \") to \" + path.getRealPathText() + \".\");\n+            \/\/ if one chunkfile was missing, its likely more are missing\n+            removeNonExistantPaths();\n+            \/\/ and try the transfer again\n+            transferChunks(path);\n+        }\n@@ -769,2 +742,2 @@\n-    private void transferChunks(WriteableUserPath userPath) throws IOException {\n-        try (ChunksChannel cc = new ChunksChannel(chunks); FileChannel fc = FileChannel.open(userPath.getReal(), StandardOpenOption.WRITE, StandardOpenOption.APPEND)) {\n+    private void transferChunks(WriteablePath path) throws IOException {\n+        try (ChunksChannel cc = new ChunksChannel(chunks); FileChannel fc = FileChannel.open(path.getReal(), StandardOpenOption.WRITE, StandardOpenOption.APPEND)) {\n@@ -857,1 +830,1 @@\n-    SafePath getDumpDirectory() {\n+    Path getDumpDirectory() {\n@@ -866,1 +839,1 @@\n-    public void setDumpDirectory(SafePath directory) {\n+    public void setDumpDirectory(Path directory) {\n@@ -920,1 +893,1 @@\n-    public void removePath(SafePath path) {\n+    public void removePath(Path path) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecording.java","additions":40,"deletions":67,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-compiler\/vectorapi\/reshape\/TestVectorReinterpret.java 8320897 aix-ppc64,linux-ppc64le\n+compiler\/vectorapi\/reshape\/TestVectorReinterpret.java 8320897,8348519 aix-ppc64,linux-ppc64le,linux-s390x\n@@ -74,0 +74,2 @@\n+compiler\/startup\/StartupOutput.java 8347406 generic-x64\n+\n@@ -99,0 +101,1 @@\n+gc\/shenandoah\/TestEvilSyncBug.java#generational 8345501 generic-all\n@@ -118,1 +121,0 @@\n-runtime\/cds\/appcds\/customLoader\/HelloCustom_JFR.java 8241075 linux-all,windows-x64\n@@ -141,9 +143,7 @@\n-serviceability\/sa\/ClhsdbCDSCore.java              8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/ClhsdbFindPC.java#xcomp-core    8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/ClhsdbFindPC.java#no-xcomp-core 8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/ClhsdbPmap.java#core            8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/ClhsdbPstack.java#core          8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/TestJmapCore.java               8267433,8318754 macosx-x64,macosx-aarch64\n-serviceability\/sa\/TestJmapCoreMetaspace.java      8267433,8318754 macosx-x64,macosx-aarch64\n-\n-serviceability\/attach\/ConcAttachTest.java 8290043 linux-all\n+serviceability\/sa\/ClhsdbCDSCore.java              8318754 macosx-aarch64\n+serviceability\/sa\/ClhsdbFindPC.java#xcomp-core    8318754 macosx-aarch64\n+serviceability\/sa\/ClhsdbFindPC.java#no-xcomp-core 8318754 macosx-aarch64\n+serviceability\/sa\/ClhsdbPmap.java#core            8318754 macosx-aarch64\n+serviceability\/sa\/ClhsdbPstack.java#core          8318754 macosx-aarch64\n+serviceability\/sa\/TestJmapCore.java               8318754 macosx-aarch64\n+serviceability\/sa\/TestJmapCoreMetaspace.java      8318754 macosx-aarch64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-# Copyright (c) 2009, 2024, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2009, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -465,0 +465,1 @@\n+java\/awt\/Headless\/HeadlessMalfunctionTest.java 8349099 generic-all\n@@ -471,1 +472,0 @@\n-java\/awt\/Robot\/ScreenCaptureRobotTest.java 8344581 macosx-all\n@@ -554,3 +554,3 @@\n-sun\/management\/jdp\/JdpDefaultsTest.java                         8308807,8241865 aix-ppc64,macosx-aarch64\n-sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8308807,8241865 aix-ppc64,macosx-aarch64\n-sun\/management\/jdp\/JdpSpecificAddressTest.java                  8308807,8241865 aix-ppc64,macosx-aarch64\n+sun\/management\/jdp\/JdpDefaultsTest.java                         8308807,8241865 aix-ppc64,macosx-all\n+sun\/management\/jdp\/JdpJmxRemoteDynamicPortTest.java             8308807,8241865 aix-ppc64,macosx-all\n+sun\/management\/jdp\/JdpSpecificAddressTest.java                  8308807,8241865 aix-ppc64,macosx-all\n@@ -592,2 +592,0 @@\n-java\/nio\/channels\/AsynchronousSocketChannel\/StressLoopback.java 8211851 aix-ppc64\n-\n@@ -647,2 +645,0 @@\n-sun\/security\/provider\/PolicyFile\/GrantAllPermToExtWhenNoPolicy.java 8039280 generic-all\n-sun\/security\/provider\/PolicyParser\/PrincipalExpansionError.java 8039280 generic-all\n@@ -727,1 +723,0 @@\n-\n@@ -736,2 +731,0 @@\n-com\/sun\/jdi\/ProcessAttachTest.java         8346827 linux-all\n-com\/sun\/jdi\/ReattachStressTest.java        8346827 linux-all\n@@ -813,1 +806,1 @@\n-java\/awt\/print\/PrinterJob\/PrintTextTest.java 8148334 generic-all\n+java\/awt\/print\/PrinterJob\/PrintTextTest.java 8148334 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":6,"deletions":13,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+    @SuppressWarnings(\"unchecked\")\n@@ -102,0 +103,1 @@\n+    @SuppressWarnings(\"unchecked\")\n","filename":"test\/lib\/jdk\/test\/lib\/crac\/CracTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}