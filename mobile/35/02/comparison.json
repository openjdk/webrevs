{"files":[{"patch":"@@ -22,2 +22,2 @@\n-1. Download and unzip pre-built JDK24 to be used as boot JDK\n-2. Download the [support zip](https:\/\/download2.gluonhq.com\/mobile\/mobile-support-20250106.zip) which contains an ios build for libffi and cups. Unzip it in the root directory of the project.\n+1. Download and install JDK24 for macOS. You can use the JDK you just built targeting macOS in the above note instead.\n+2. Download the [support zip](https:\/\/download2.gluonhq.com\/mobile\/mobile-support-20250106.zip) which contains an ios build for libffi and cups. Unzip it in an easy to use location.\n@@ -34,2 +34,2 @@\n-Modify the configure script below so that it has the correct paths to your JDK24 directory,\n-the unzipped 'support' directory, and the correct location of the iPhoneOS.platform.\n+Modify the configure script below so that it has the correct paths to the unzipped 'support'\n+directory, and the correct location of the iPhoneOS.platform.\n@@ -39,1 +39,0 @@\n---with-conf-name=zero-ios-aarch64 \\\n@@ -42,5 +41,3 @@\n---with-boot-jdk=\/Users\/abhinay\/.sdkman\/candidates\/java\/24.ea.29-open \\\n---with-jvm-variants=zero \\\n---with-libffi-include=<support-dir-absolute-path>\/libffi\/include \\\n---with-libffi-lib=<support-dir-absolute-path>\/libffi\/libs \\\n---with-cups-include=<support-dir-absolute-path>\/cups-2.3.6\n+--with-libffi-include=<support-dir-path>\/libffi\/include \\\n+--with-libffi-lib=<support-dir-path>\/libffi\/libs \\\n+--with-cups-include=<support-dir-path>\/cups-2.3.6\n@@ -50,0 +47,10 @@\n+If you need to tell configure the path of your boot JDK, or if configure fails with an error saying\n+it can't find a boot JDK, for instance if you downloaded a JDK in compressed archive form rather\n+than with an installer, you can pass `--with-boot-jdk=<java-directory-path>` to configure:\n+\n+For iOS the default JVM used is Zero, since iOS has no writeable and executable sections. However, if\n+you plan to run the JDK on the simulator for testing purposes, you can use the other JVM variants such\n+as Server. To do this, pass `--with-jvm-variants=server` to configure (Or any other valid option, which\n+are, in no particular order: server, client, minimal, core, zero, custom). Do note that passing zero to\n+this option is redundant since Zero is already the default for iOS.\n+\n@@ -54,1 +61,1 @@\n-make CONF=zero-ios-aarch64 static-libs-image\n+make CONF=ios-aarch64-zero-release static-libs-image\n@@ -57,1 +64,1 @@\n-Once the build is successful, it should have created a directory in `build\/zero-ios-aarch64\/images\/static-libs\/lib\/zero` with a file `libjvm.a`.\n\\ No newline at end of file\n+Once the build is successful, it should have created a directory in `build\/ios-aarch64-zero-release\/images\/static-libs\/lib\/zero` with a file `libjvm.a`.\n","filename":"README.md","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -57,1 +57,5 @@\n-    with_jvm_variants=\"server\"\n+    if test \"x$OPENJDK_TARGET_OS\" = xios; then\n+      with_jvm_variants=\"zero\"\n+    else\n+      with_jvm_variants=\"server\"\n+    fi\n","filename":"make\/autoconf\/hotspot.m4","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}