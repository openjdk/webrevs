{"files":[{"patch":"@@ -42,8 +42,0 @@\n-        *-ios* )\n-            echo $1\n-            exit\n-            ;;\n-        *-android* )\n-            echo $1\n-            exit\n-            ;;\n","filename":"make\/autoconf\/build-aux\/config.sub","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -461,4 +461,0 @@\n-  elif test \"x$OPENJDK_TARGET_OS\" = xios; then\n-    CFLAGS_OS_DEF_JDK=\"-DMACOSX -D_ALLBSD_SOURCE -DTARGET_IOS -D_DARWIN_UNLIMITED_SELECT\"\n-  elif test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n-    CFLAGS_OS_DEF_JDK=\"-target aarch64-linux-android -D__USE_BSD\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -289,9 +289,1 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xios; then\n-    GLOBAL_CPPFLAGS=\"$MACHINE_FLAG $USER_CFLAGS $SYSROOT_CFLAGS\"\n-    AC_SUBST(GLOBAL_CFLAGS)\n-    AC_SUBST(GLOBAL_CXXFLAGS)\n-    AC_SUBST(GLOBAL_LDFLAGS)\n-    AC_SUBST(GLOBAL_CPPFLAGS)\n-  else\n-    GLOBAL_CPPFLAGS=\"$SYSROOT_CFLAGS\"\n-  fi\n+  GLOBAL_CPPFLAGS=\"$SYSROOT_CFLAGS\"\n","filename":"make\/autoconf\/flags.m4","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -106,3 +106,1 @@\n-      test \"x$OPENJDK_TARGET_OS\" != \"xaix\" && \\\n-      test \"x$OPENJDK_TARGET_OS\" != \"xandroid\" && \\\n-      test \"x$OPENJDK_TARGET_OS\" != \"xios\"; then\n+      test \"x$OPENJDK_TARGET_OS\" != \"xaix\"; then\n","filename":"make\/autoconf\/lib-freetype.m4","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,2 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios || test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n-    # No X11 support on windows, macosx, ios or android\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+    # No X11 support on windows or macosx\n@@ -55,2 +55,2 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios || test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n-    # No fontconfig support on windows, macosx, ios or android\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+    # No fontconfig support on windows or macosx\n","filename":"make\/autoconf\/libraries.m4","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -205,4 +205,0 @@\n-    *android*)\n-      VAR_OS=android\n-      VAR_OS_TYPE=unix\n-      ;;\n@@ -213,4 +209,0 @@\n-    *ios*)\n-      VAR_OS=ios\n-      VAR_OS_TYPE=unix\n-      ;;\n","filename":"make\/autoconf\/platform.m4","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-    if test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios ; then\n+    if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n@@ -226,28 +226,0 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = \"xios\" ; then\n-    if test -n \"$XCODEBUILD\"; then\n-      # On Mac OS X, default toolchain to clang after Xcode 5\n-      XCODE_VERSION_OUTPUT=`\"$XCODEBUILD\" -version | $HEAD -n 1`\n-      $ECHO \"$XCODE_VERSION_OUTPUT\" | $GREP \"Xcode \" > \/dev\/null\n-      if test $? -ne 0; then\n-        AC_MSG_NOTICE([xcodebuild output: $XCODE_VERSION_OUTPUT])\n-        AC_MSG_ERROR([Failed to determine Xcode version.])\n-      fi\n-      XCODE_MAJOR_VERSION=`$ECHO $XCODE_VERSION_OUTPUT | \\\n-          $SED -e 's\/^Xcode \\(@<:@1-9@:>@@<:@0-9.@:>@*\\)\/\\1\/' | \\\n-          $CUT -f 1 -d .`\n-      AC_MSG_NOTICE([Xcode major version: $XCODE_MAJOR_VERSION])\n-      if test $XCODE_MAJOR_VERSION -ge 5; then\n-          DEFAULT_TOOLCHAIN=\"clang\"\n-      else\n-          DEFAULT_TOOLCHAIN=\"gcc\"\n-      fi\n-    else\n-      # If Xcode is not installed, but the command line tools are\n-      # then we can't run xcodebuild. On these systems we should\n-      # default to clang\n-      DEFAULT_TOOLCHAIN=\"clang\"\n-    fi\n-  else\n-    # First toolchain type in the list is the default\n-    DEFAULT_TOOLCHAIN=${VALID_TOOLCHAINS%% *}\n-  fi\n@@ -905,7 +877,5 @@\n-    if test \"x$OPENJDK_TARGET_OS\" != \"xandroid\"; then\n-      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n-      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n-      TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n-      TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n-      TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n-    fi\n+    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n+    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n+    TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n+    TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n+    TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n","filename":"make\/autoconf\/toolchain.m4","additions":6,"deletions":36,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -38,12 +38,0 @@\n-ifeq ($(OPENJDK_TARGET_OS), ios)\n-  FindSrcDirsForLib += \\\n-    $(call uniq, $(wildcard \\\n-        $(TOPDIR)\/src\/$(strip $1)\/macosx\/native\/lib$(strip $2)))\n-endif\n-\n-ifeq ($(OPENJDK_TARGET_OS), android)\n-  FindSrcDirsForLib += \\\n-    $(call uniq, $(wildcard \\\n-        $(TOPDIR)\/src\/$(strip $1)\/linux\/native\/lib$(strip $2)))\n-endif\n-\n","filename":"make\/common\/JdkNativeCompilation.gmk","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -86,8 +86,0 @@\n-ifeq ($(OPENJDK_TARGET_OS), ios)\n-  SRC_SUBDIRS += macosx\/classes\n-endif\n-\n-ifeq ($(OPENJDK_TARGET_OS), android)\n-  SRC_SUBDIRS += linux\/classes\n-endif\n-\n","filename":"make\/common\/Modules.gmk","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -38,5 +38,0 @@\n-\n-ifeq ($(call isTargetOs, ios), true)\n-  LAUNCHER_CFLAGS += -I$(TOPDIR)\/src\/java.base\/macosx\/native\/libjli\n-fi\n-\n","filename":"make\/common\/modules\/LauncherCommon.gmk","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-ifeq ($(call isTargetOs, macosx ios), true)\n+ifeq ($(call isTargetOs, macosx), true)\n@@ -122,1 +122,1 @@\n-ifeq ($(call isTargetOs, macosx ios), true)\n+ifeq ($(call isTargetOs, macosx), true)\n@@ -170,1 +170,0 @@\n-    CFLAGS_ios := -I$(TOPDIR)\/src\/java.base\/macosx\/native\/libjli, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#ifndef TARGET_IOS\n@@ -36,12 +35,0 @@\n-#else\n-#include <stdlib.h>\n-#include <string.h>\n-#include <sys\/param.h>\n-#include <objc\/runtime.h>\n-#include <objc\/objc.h>\n-#include <objc\/message.h>\n-#include <CoreFoundation\/CoreFoundation.h>\n-#include <CoreFoundation\/CFlocale.h>\n-\n-#endif\n-\n@@ -50,2 +37,0 @@\n-#ifndef TARGET_IOS\n-\n@@ -510,28 +495,0 @@\n-#else\n-#define LOCALEIDLENGTH  128\n-char *getPosixLocale(int cat) {\n-    char *lc = setlocale(cat, NULL);\n-    if ((lc == NULL) || (strcmp(lc, \"C\") == 0)) {\n-        lc = getenv(\"LANG\");\n-    }\n-    if (lc == NULL) return NULL;\n-    return strdup(lc);\n-  }\n-\n-char *getMacOSXLocale(int cat) {\n-    char localeString[LOCALEIDLENGTH];\n-    \/\/ Get current user locale.\n-    CFLocaleRef loc = CFLocaleCopyCurrent();\n-    char *localstr;\n-    if (CFStringGetCString(CFLocaleGetIdentifier(loc),\n-                           localeString, LOCALEIDLENGTH,\n-                           kCFStringEncodingUTF8))\n-      localstr = strdup(localeString);\n-    else\n-      localstr =  NULL;\n-\n-    CFRelease(loc);\n-    return (localstr);\n-}\n-\n-#endif\n","filename":"src\/java.base\/macosx\/native\/libjava\/java_props_macosx.c","additions":0,"deletions":43,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-#ifndef TARGET_IOS\n@@ -47,1 +46,0 @@\n-#endif\n@@ -218,2 +216,0 @@\n-#elif defined(__arm64__)\n-        preferredJVM = \"zero\";\n@@ -280,3 +276,0 @@\n-#ifdef TARGET_IOS\n-static jboolean awtLoaded = 0;\n-#else\n@@ -284,1 +277,0 @@\n-#endif\n@@ -292,3 +284,0 @@\n-#ifdef TARGET_IOS\n-    awtLoaded = 1;\n-#else\n@@ -296,1 +285,0 @@\n-#endif\n@@ -325,1 +313,0 @@\n-#ifndef TARGET_IOS\n@@ -340,1 +327,0 @@\n-#endif\n@@ -371,1 +357,0 @@\n-#ifndef TARGET_IOS\n@@ -373,1 +358,0 @@\n-#endif\n@@ -956,1 +940,0 @@\n-#ifndef TARGET_IOS\n@@ -987,3 +970,0 @@\n-#else\n-    return ContinueInNewThread(ifn, threadStackSize, argc, argv, mode, what, ret);\n-#endif\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#ifndef TARGET_IOS\n@@ -30,1 +29,0 @@\n-#endif\n","filename":"src\/java.base\/unix\/native\/libnet\/NetworkInterface.c","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-#ifdef ANDROID\n-#include <netinet\/in.h>\n-#endif\n","filename":"src\/java.base\/unix\/native\/libnet\/net_util_md.h","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,0 +81,1 @@\n+import com.sun.source.doctree.SeeTree;\n@@ -154,0 +155,1 @@\n+    private boolean inSee;\n@@ -906,0 +908,10 @@\n+    @Override\n+    public Void visitSee(SeeTree node, Void unused) {\n+        try {\n+            inSee = true;\n+            return super.visitSee(node, unused);\n+        } finally {\n+            inSee = false;\n+        }\n+    }\n+\n@@ -987,0 +999,3 @@\n+        } else if ((inLink || inSee)\n+                && e.getKind() == ElementKind.CLASS && e.asType().getKind() != TypeKind.DECLARED) {\n+            reportBadReference(tree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      8284030 8307377\n+ * @bug      8284030 8307377 8331579\n@@ -91,0 +91,58 @@\n+\n+    @Test\n+    public void testSimpleDocLint(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src, \"\"\"\n+                \/**\n+                 * Comment.\n+                 * Double: {@link double}\n+                 * Void: {@link void}\n+                 * @see int\n+                 *\/\n+                public class C {\\s\n+                    private C() { }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"C.java\").toString());\n+        checkExit(Exit.ERROR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"C.java:3: error: reference not found\",\n+                \"C.java:4: error: reference not found\",\n+                \"C.java:5: error: reference not found\");\n+\n+        checkOutput(\"C.html\", true,\n+                \"\"\"\n+                    <div class=\"block\">Comment.\n+                     Double:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>double<\/code><\/pre>\n+                    <\/details>\n+\n+                     Void:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>void<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>int<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/dd>\"\"\");\n+    }\n+\n@@ -125,0 +183,50 @@\n+\n+    @Test\n+    public void testArrayDocLint(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+\n+        tb.writeJavaFiles(src, \"\"\"\n+                \/**\n+                 * Comment.\n+                 * Double[]: {@link double[]}\n+                 * @see int[]\n+                 *\/\n+                public class C {\\s\n+                    private C() { }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-Xdoclint:reference\",\n+                \"-d\", base.resolve(\"api\").toString(),\n+                \"-sourcepath\", src.toString(),\n+                src.resolve(\"C.java\").toString());\n+        checkExit(Exit.ERROR);\n+\n+        checkOutput(Output.OUT, true,\n+                \"C.java:3: error: reference not found\",\n+                \"C.java:4: error: reference not found\");\n+\n+        checkOutput(\"C.html\", true,\n+                \"\"\"\n+                    <div class=\"block\">Comment.\n+                     Double[]:\\s\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>double[]<\/code><\/pre>\n+                    <\/details>\n+                    <\/div>\n+                    \"\"\",\n+                \"\"\"\n+                    <dt>See Also:<\/dt>\n+                    <dd>\n+                    <ul class=\"tag-list\">\n+                    <li>\n+                    <details class=\"invalid-tag\">\n+                    <summary>invalid reference<\/summary>\n+                    <pre><code>int[]<\/code><\/pre>\n+                    <\/details>\n+                    <\/li>\n+                    <\/ul>\n+                    <\/dd>\n+                    \"\"\");\n+    }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testLinkTaglet\/TestLinkTagletPrimitive.java","additions":110,"deletions":2,"binary":false,"changes":112,"status":"modified"}]}