{"files":[{"patch":"@@ -43,2 +43,2 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n-    # No X11 support on windows or macosx\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios || test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n+    # No X11 support on windows, macosx, ios or android\n@@ -53,2 +53,2 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n-    # No fontconfig support on windows or macosx\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios || test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n+    # No fontconfig support on windows, macosx, ios or android\n","filename":"make\/autoconf\/libraries.m4","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-ifeq ($(call isTargetOs, macosx), true)\n+ifeq ($(call isTargetOs, macosx ios), true)\n@@ -170,1 +170,1 @@\n-ifeq ($(call isTargetOs, macosx), true)\n+ifeq ($(call isTargetOs, macosx ios), true)\n@@ -206,0 +206,1 @@\n+    CFLAGS_ios := -I$(TOPDIR)\/src\/java.base\/macosx\/native\/libjli, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#ifndef TARGET_IOS\n@@ -46,0 +47,1 @@\n+#endif\n@@ -213,0 +215,2 @@\n+#elif defined(__arm64__)\n+        preferredJVM = \"zero\";\n@@ -273,0 +277,3 @@\n+#ifdef TARGET_IOS\n+static jboolean awtLoaded = 0;\n+#else\n@@ -274,0 +281,1 @@\n+#endif\n@@ -281,0 +289,3 @@\n+#ifdef TARGET_IOS\n+    awtLoaded = 1;\n+#else\n@@ -282,0 +293,1 @@\n+#endif\n@@ -310,0 +322,1 @@\n+#ifndef TARGET_IOS\n@@ -324,0 +337,1 @@\n+#endif\n@@ -354,0 +368,1 @@\n+#ifndef TARGET_IOS\n@@ -355,0 +370,1 @@\n+#endif\n@@ -888,0 +904,1 @@\n+#ifndef TARGET_IOS\n@@ -918,0 +935,3 @@\n+#else\n+    return ContinueInNewThread(ifn, threadStackSize, argc, argv, mode, what, ret);\n+#endif\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}