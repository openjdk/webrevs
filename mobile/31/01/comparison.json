{"files":[{"patch":"@@ -2,1 +2,1 @@\n-project=jdk\n+project=mobile\n","filename":".jcheck\/conf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -472,0 +472,6 @@\n+  elif test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n+    CFLAGS_OS_DEF_JVM=\"-target aarch64-linux-android -DLINUX -D_ALLBSD_SOURCE -DANDROID\"\n+    CFLAGS_OS_DEF_JDK=\"-target aarch64-linux-android -DLINUX -D__USE_BSD\"\n+  elif test \"x$OPENJDK_TARGET_OS\" = xios; then\n+    CFLAGS_OS_DEF_JVM=\"-DLINUX -D__IOS__ \"\n+    CFLAGS_OS_DEF_JDK=\"-D_ALLBSD_SOURCE -D__IOS__\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -136,0 +136,3 @@\n+  if test \"x$OPENJDK_TARGET_OS\" = xandroid; then\n+    JVM_BASIC_ASFLAGS=\"-target aarch64-linux-android\"\n+  fi\n","filename":"make\/autoconf\/flags-other.m4","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,0 +108,2 @@\n+      test \"x$OPENJDK_TARGET_OS\" != \"xandroid\" && \\\n+      test \"x$OPENJDK_TARGET_OS\" != \"xios\" && \\\n","filename":"make\/autoconf\/lib-freetype.m4","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xandroid || test \"x$OPENJDK_TARGET_OS\" = xios; then\n@@ -55,1 +55,1 @@\n-  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+  if test \"x$OPENJDK_TARGET_OS\" = xwindows || test \"x$OPENJDK_TARGET_OS\" = xmacosx || test \"x$OPENJDK_TARGET_OS\" = xios; then\n","filename":"make\/autoconf\/libraries.m4","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -201,0 +201,8 @@\n+    *android*)\n+      VAR_OS=android\n+      VAR_OS_TYPE=unix\n+      ;;\n+    *ios*)\n+      VAR_OS=ios\n+      VAR_OS_TYPE=unix\n+      ;;\n","filename":"make\/autoconf\/platform.m4","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -875,5 +875,7 @@\n-    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n-    TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n-    TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n-    TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n-    TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n+    if test \"x$OPENJDK_TARGET_OS\" != \"xandroid\"; then\n+      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])\n+      TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])\n+      TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_], [build ])\n+      TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])\n+      TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])\n+    fi\n","filename":"make\/autoconf\/toolchain.m4","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -44,0 +44,12 @@\n+ifeq ($(OPENJDK_TARGET_OS), android)\n+    FindSrcDirsForComponent += \\\n+        $(call uniq, $(wildcard \\\n+            $(TOPDIR)\/src\/$(strip $1)\/linux\/native\/$(strip $2)))\n+endif\n+\n+ifeq ($(OPENJDK_TARGET_OS), ios)\n+    FindSrcDirsForComponent += \\\n+        $(call uniq, $(wildcard \\\n+            $(TOPDIR)\/src\/$(strip $1)\/macosx\/native\/$(strip $2)))\n+endif\n+\n","filename":"make\/common\/JdkNativeCompilation.gmk","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -91,0 +91,7 @@\n+ifeq ($(OPENJDK_TARGET_OS), android)\n+  SRC_SUBDIRS += linux\/classes\n+endif\n+ifeq ($(OPENJDK_TARGET_OS), ios)\n+  SRC_SUBDIRS += macosx\/classes\n+endif\n+\n","filename":"make\/common\/Modules.gmk","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -216,1 +216,1 @@\n-      ifeq ($(call isTargetOs, macosx aix), true)\n+      ifeq ($(call isTargetOs, macosx ios aix), true)\n","filename":"make\/common\/native\/Paths.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,0 +54,8 @@\n+ifeq ($(call isTargetOs, android ios), true)\n+  JVM_CFLAGS_INCLUDES += \\\n+    -I$(TOPDIR)\/src\/hotspot\/os_cpu\/linux_aarch64 \\\n+    -I$(TOPDIR)\/src\/hotspot\/os\/linux \\\n+    -I$(TOPDIR)\/src\/hotspot\/os\/bsd \\\n+    #\n+endif\n+\n","filename":"make\/hotspot\/lib\/JvmFlags.gmk","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-ifeq ($(call isTargetOs, linux aix), true)\n+ifeq ($(call isTargetOs, linux aix android), true)\n","filename":"make\/modules\/java.desktop\/Gensrc.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-ifeq ($(call isTargetOs, macosx), true)\n+ifeq ($(call isTargetOs, macosx android ios), true)\n","filename":"make\/modules\/java.desktop\/Java.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,4 @@\n-include lib\/AwtLibraries.gmk\n-include lib\/ClientLibraries.gmk\n+ifeq ($(call isTargetOs, android ios), false)\n+  include lib\/AwtLibraries.gmk\n+  include lib\/ClientLibraries.gmk\n+endif\n@@ -41,1 +43,1 @@\n-ifeq ($(call isTargetOs, aix), false)\n+ifeq ($(call isTargetOs, aix android ios), false)\n","filename":"make\/modules\/java.desktop\/Lib.gmk","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,2 +32,2 @@\n-# libprefs on macosx does not use the unix code\n-ifeq ($(call isTargetOs, macosx), true)\n+# libprefs on macosx or ios does not use the unix code\n+ifeq ($(call isTargetOs, macosx ios), true)\n","filename":"make\/modules\/java.prefs\/Lib.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1331,1 +1331,1 @@\n-#if defined(_ALLBSD_SOURCE)\n+#if defined(_ALLBSD_SOURCE) && !defined(ANDROID)\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-#if defined(__APPLE__)\n+#if defined(__APPLE__) && !defined(__IOS__)\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2448,0 +2448,1 @@\n+#ifndef __IOS__\n@@ -2454,0 +2455,1 @@\n+#endif \/\/ IOS\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1017,0 +1017,2 @@\n+#elif defined(__IOS__)\n+  class Linux;\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#if !defined(_WINDOWS) && !defined(__APPLE__)\n+#if !defined(_WINDOWS) && (!defined(__APPLE__) || defined(__IOS__))\n","filename":"src\/hotspot\/share\/utilities\/decoder_elf.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#if !defined(_WINDOWS) && !defined(__APPLE__) && !defined(_AIX)\n+#if !defined(_WINDOWS) && (!defined(__APPLE__) || defined(__IOS__)) && !defined(_AIX)\n","filename":"src\/hotspot\/share\/utilities\/elfFile.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-#ifndef __OpenBSD__\n+#if !defined(__OpenBSD__) && !defined(__IOS__)\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions_gcc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#ifndef __IOS__\n@@ -34,0 +35,10 @@\n+#else\n+#include <stdlib.h>\n+#include <string.h>\n+#include <sys\/param.h>\n+#include <objc\/runtime.h>\n+#include <objc\/objc.h>\n+#include <objc\/message.h>\n+#include <CoreFoundation\/CoreFoundation.h>\n+#include <CoreFoundation\/CFlocale.h>\n+#endif\n@@ -225,0 +236,1 @@\n+#ifndef __IOS__\n@@ -476,0 +488,1 @@\n+#endif\n","filename":"src\/java.base\/macosx\/native\/libjava\/java_props_macosx.c","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#ifndef __IOS__\n@@ -46,0 +47,1 @@\n+#endif\n@@ -240,0 +242,3 @@\n+#ifdef __IOS__\n+static jboolean awtLoaded = 0;\n+#else\n@@ -241,0 +246,1 @@\n+#endif\n@@ -248,0 +254,3 @@\n+#ifdef __IOS__\n+    awtLoaded = 1;\n+#else\n@@ -249,0 +258,1 @@\n+#endif\n@@ -277,0 +287,1 @@\n+#ifndef __IOS__\n@@ -291,0 +302,1 @@\n+#endif\n@@ -324,0 +336,1 @@\n+#ifndef __IOS__\n@@ -325,0 +338,1 @@\n+#endif\n@@ -907,0 +921,1 @@\n+#ifndef __IOS__\n@@ -937,0 +952,3 @@\n+#else\n+  return ContinueInNewThread(ifn, threadStackSize, argc, argv, mode, what, ret);\n+#endif\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -109,0 +109,1 @@\n+#ifndef __IOS__ \/\/ deprecated on ios\n@@ -124,0 +125,1 @@\n+#endif\n","filename":"src\/java.base\/macosx\/native\/libnio\/fs\/UTIFileTypeDetector.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-#if defined(__linux__) || defined(MACOSX)\n+#if defined(__linux__) || defined(MACOSX) || defined(__IOS__)\n","filename":"src\/java.base\/unix\/native\/libjava\/TimeZone_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-#elif defined(MACOSX)\n+#elif defined(MACOSX) || defined(__IOS__)\n@@ -408,1 +408,1 @@\n-#elif defined(MACOSX)\n+#elif defined(MACOSX) || defined(__IOS__)\n","filename":"src\/java.base\/unix\/native\/libjava\/UnixFileSystem_md.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#ifndef __IOS__\n@@ -29,0 +30,1 @@\n+#endif\n","filename":"src\/java.base\/unix\/native\/libnet\/NetworkInterface.c","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,4 @@\n+#ifdef ANDROID\n+#include <netinet\/in.h>\n+#endif\n+\n","filename":"src\/java.base\/unix\/native\/libnet\/net_util_md.h","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -673,1 +673,1 @@\n-#ifndef MACOSX\n+#if !defined(MACOSX) && !defined(__IOS__)\n","filename":"src\/java.base\/unix\/native\/libnio\/fs\/UnixNativeDispatcher.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#ifndef ANDROID\n@@ -39,0 +40,1 @@\n+#endif\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/elfmacros.h","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -187,0 +187,3 @@\n+#ifdef ANDROID\n+    return false;\n+#else\n@@ -246,0 +249,1 @@\n+#endif \/\/ ANDROID\n","filename":"src\/jdk.hotspot.agent\/linux\/native\/libsaproc\/ps_core.c","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#ifndef __IOS__\n@@ -27,0 +28,3 @@\n+#else\n+#include <objc\/message.h>\n+#endif\n@@ -43,0 +47,1 @@\n+#ifndef __IOS__\n@@ -44,0 +49,1 @@\n+#endif\n@@ -842,0 +848,1 @@\n+#ifndef __IOS__\n@@ -849,0 +856,1 @@\n+#endif\n@@ -1213,0 +1221,1 @@\n+#ifndef __IOS__\n@@ -1219,0 +1228,1 @@\n+#endif\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/MacosxDebuggerLocal.m","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#ifndef __IOS__\n@@ -44,0 +45,1 @@\n+#endif\n@@ -274,0 +276,1 @@\n+#ifndef __IOS__\n@@ -317,0 +320,3 @@\n+#else \/\/ IOS\n+    return -1;\n+#endif\n","filename":"src\/jdk.management\/unix\/native\/libmanagement_ext\/OperatingSystemImpl.c","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}