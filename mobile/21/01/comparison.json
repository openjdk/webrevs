{"files":[{"patch":"@@ -934,0 +934,5 @@\n+  # On Windows, we need to copy tzmappings generated by gensrc\n+  ifeq ($(call isTargetOs, windows), true)\n+    java.base-copy: java.base-gensrc\n+  endif\n+\n","filename":"make\/Main.gmk","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -281,0 +281,13 @@\n+  ifeq ($$($1_SRC), )\n+    ifneq ($$(MODULE), )\n+      $1_SRC := $$(call FindSrcDirsForComponent, $$(MODULE), $$($1_NAME))\n+    else\n+      $$(error Must specify SRC in a MODULE free context)\n+    endif\n+  else\n+    $1_SRC := $$(foreach dir, $$($1_SRC), $$(call ProcessDir, $$(dir)))\n+  endif\n+  ifneq ($$($1_EXTRA_SRC), )\n+    $1_SRC += $$(foreach dir, $$($1_EXTRA_SRC), $$(call ProcessDir, $$(dir)))\n+  endif\n+\n@@ -298,0 +311,6 @@\n+  ifneq ($$($1_EXTRA_HEADER_DIRS), )\n+    $1_PROCESSED_EXTRA_HEADER_DIRS := $$(foreach dir, $$($1_EXTRA_HEADER_DIRS), \\\n+        $$(call ProcessDir, $$(dir)))\n+    $1_EXTRA_HEADER_FLAGS := $$(addprefix -I, $$($1_PROCESSED_EXTRA_HEADER_DIRS))\n+  endif\n+\n@@ -306,0 +325,10 @@\n+  ifneq ($$($1_CFLAGS), )\n+    $1_CFLAGS += $$($1_SRC_HEADER_FLAGS) $$($1_EXTRA_HEADER_FLAGS)\n+  endif\n+  ifneq ($$($1_CXXFLAGS), )\n+    $1_CXXFLAGS += $$($1_SRC_HEADER_FLAGS) $$($1_EXTRA_HEADER_FLAGS)\n+  endif\n+  ifeq ($$($1_CFLAGS)$$($1_CXXFLAGS), )\n+    $1_CFLAGS += $$($1_SRC_HEADER_FLAGS) $$($1_EXTRA_HEADER_FLAGS)\n+  endif\n+\n","filename":"make\/common\/JdkNativeCompilation.gmk","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-GTEST_LAUNCHER_SRC := $(TOPDIR)\/test\/hotspot\/gtest\/gtestLauncher.cpp\n@@ -32,1 +31,1 @@\n-  GTEST_LAUNCHER_SRC += $(TOPDIR)\/make\/data\/asan\/asan_default_options.cpp\n+  GTEST_LAUNCHER_EXTRA_FILES += $(TOPDIR)\/make\/data\/asan\/asan_default_options.cpp\n@@ -36,1 +35,1 @@\n-  GTEST_LAUNCHER_SRC += $(TOPDIR)\/make\/data\/lsan\/lsan_default_options.cpp\n+  GTEST_LAUNCHER_EXTRA_FILES += $(TOPDIR)\/make\/data\/lsan\/lsan_default_options.cpp\n@@ -139,1 +138,3 @@\n-    EXTRA_FILES := $(GTEST_LAUNCHER_SRC), \\\n+    SRC := $(TOPDIR)\/test\/hotspot\/gtest, \\\n+    INCLUDE_FILES := gtestLauncher.cpp, \\\n+    EXTRA_FILES := $(GTEST_LAUNCHER_EXTRA_FILES), \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -249,0 +249,12 @@\n+################################################################################\n+# Copy tzmappings file for Windows\n+\n+ifeq ($(call isTargetOs, windows), true)\n+  $(eval $(call SetupCopyFiles, COPY_TZMAPPINGS, \\\n+      FILES := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/windows\/conf\/tzmappings, \\\n+      DEST := $(call FindLibDirForModule, $(MODULE)), \\\n+  ))\n+\n+  TARGETS += $(COPY_TZMAPPINGS)\n+endif\n+\n","filename":"make\/modules\/java.base\/Copy.gmk","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -31,1 +31,2 @@\n-JAVA_VERSION_INFO_RESOURCE := $(TOPDIR)\/src\/java.base\/windows\/native\/launcher\/java.rc\n+JAVA_VERSION_INFO_RESOURCE := \\\n+    $(TOPDIR)\/src\/java.base\/windows\/native\/launcher\/java.rc\n@@ -35,0 +36,2 @@\n+################################################################################\n+## Build java\n@@ -44,0 +47,4 @@\n+################################################################################\n+## Build javaw\n+################################################################################\n+\n@@ -52,0 +59,4 @@\n+################################################################################\n+## Build keytool\n+################################################################################\n+\n@@ -56,2 +67,0 @@\n-################################################################################\n-\n@@ -59,0 +68,4 @@\n+  ##############################################################################\n+  ## Build jexec\n+  ##############################################################################\n+\n@@ -62,1 +75,0 @@\n-      INCLUDE_FILES := jexec.c, \\\n@@ -64,1 +76,1 @@\n-      CFLAGS := -I$(TOPDIR)\/src\/$(MODULE)\/share\/native\/libjli, \\\n+      EXTRA_HEADER_DIRS := libjli, \\\n@@ -73,2 +85,0 @@\n-################################################################################\n-\n@@ -76,0 +86,4 @@\n+  ##############################################################################\n+  ## Build jspawnhelper\n+  ##############################################################################\n+\n@@ -78,1 +92,0 @@\n-      SRC := $(TOPDIR)\/src\/$(MODULE)\/unix\/native\/jspawnhelper, \\\n@@ -80,3 +93,4 @@\n-      CFLAGS := $(VERSION_CFLAGS) \\\n-          -I$(TOPDIR)\/src\/$(MODULE)\/unix\/native\/libjava, \\\n-      EXTRA_OBJECT_FILES := $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libjava\/childproc$(OBJ_SUFFIX), \\\n+      CFLAGS := $(VERSION_CFLAGS), \\\n+      EXTRA_HEADER_DIRS := libjava, \\\n+      EXTRA_OBJECT_FILES := \\\n+          $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libjava\/childproc$(OBJ_SUFFIX), \\\n@@ -89,2 +103,0 @@\n-\n-################################################################################\n","filename":"make\/modules\/java.base\/Launcher.gmk","additions":25,"deletions":13,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -40,1 +40,2 @@\n-# Create the network library\n+## Build libnet\n+################################################################################\n@@ -48,1 +49,2 @@\n-    DISABLED_WARNINGS_clang_aix_DefaultProxySelector.c := deprecated-non-prototype, \\\n+    DISABLED_WARNINGS_clang_aix_DefaultProxySelector.c := \\\n+        deprecated-non-prototype, \\\n@@ -52,1 +54,1 @@\n-    LDFLAGS_windows := -delayload:secur32.dll -delayload:iphlpapi.dll \\\n+    LDFLAGS_windows := -delayload:iphlpapi.dll -delayload:secur32.dll \\\n@@ -54,1 +56,2 @@\n-    LIBS_unix := -ljvm -ljava, \\\n+    JDK_LIBS_unix := -ljava -ljvm, \\\n+    JDK_LIBS_windows := $(WIN_JAVA_LIB) jvm.lib, \\\n@@ -57,3 +60,5 @@\n-    LIBS_windows := ws2_32.lib jvm.lib secur32.lib iphlpapi.lib winhttp.lib \\\n-        delayimp.lib $(WIN_JAVA_LIB) advapi32.lib, \\\n-    LIBS_macosx := -framework CoreFoundation -framework CoreServices, \\\n+    LIBS_windows := advapi32.lib delayimp.lib iphlpapi.lib secur32.lib \\\n+        winhttp.lib ws2_32.lib, \\\n+    LIBS_macosx := \\\n+        -framework CoreFoundation \\\n+        -framework CoreServices, \\\n@@ -67,1 +72,2 @@\n-# Create the nio library\n+## Build libnio\n+################################################################################\n@@ -76,2 +82,4 @@\n-    LIBS_unix := -ljava -lnet, \\\n-    LIBS_linux := -lpthread $(LIBDL), \\\n+    JDK_LIBS_unix := -ljava -lnet, \\\n+    JDK_LIBS_windows := $(WIN_JAVA_LIB) jvm.lib \\\n+        $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libnet\/net.lib, \\\n+    LIBS_linux := $(LIBDL) -lpthread, \\\n@@ -80,4 +88,3 @@\n-        -framework CoreFoundation -framework CoreServices, \\\n-    LIBS_windows := jvm.lib Mswsock.lib ws2_32.lib $(WIN_JAVA_LIB) \\\n-        $(SUPPORT_OUTPUTDIR)\/native\/$(MODULE)\/libnet\/net.lib \\\n-        advapi32.lib, \\\n+        -framework CoreFoundation \\\n+        -framework CoreServices, \\\n+    LIBS_windows := advapi32.lib mswsock.lib ws2_32.lib, \\\n@@ -90,3 +97,0 @@\n-################################################################################\n-# Create the macosx security library\n-\n@@ -94,0 +98,3 @@\n+  ##############################################################################\n+  ## Build libosxsecurity\n+  ##############################################################################\n@@ -100,2 +107,2 @@\n-        LIBS := \\\n-            -lobjc \\\n+        JDK_LIBS := $(JDKLIB_LIBS), \\\n+        LIBS_macosx := -lobjc \\\n@@ -103,1 +110,0 @@\n-            -framework Security \\\n@@ -105,1 +111,1 @@\n-            $(JDKLIB_LIBS), \\\n+            -framework Security, \\\n@@ -111,1 +117,0 @@\n-\n@@ -114,12 +119,12 @@\n-################################################################################\n-# Create the jsig library\n-\n-ifeq ($(call isTargetOsType, unix), true)\n-  ifeq ($(STATIC_BUILD), false)\n-    $(eval $(call SetupJdkLibrary, BUILD_LIBJSIG, \\\n-        NAME := jsig, \\\n-        OPTIMIZATION := LOW, \\\n-        jsig.c_CFLAGS := -DHOTSPOT_VM_DISTRO='\"$(HOTSPOT_VM_DISTRO)\"', \\\n-        LIBS_linux := $(LIBDL), \\\n-        LIBS_aix := $(LIBDL), \\\n-    ))\n+ifeq ($(call isTargetOsType, unix)+$(STATIC_BUILD), true+false)\n+  ##############################################################################\n+  ## Build libjsig\n+  ##############################################################################\n+\n+  $(eval $(call SetupJdkLibrary, BUILD_LIBJSIG, \\\n+      NAME := jsig, \\\n+      OPTIMIZATION := LOW, \\\n+      jsig.c_CFLAGS := -DHOTSPOT_VM_DISTRO='\"$(HOTSPOT_VM_DISTRO)\"', \\\n+      LIBS_linux := $(LIBDL), \\\n+      LIBS_aix := $(LIBDL), \\\n+  ))\n@@ -127,1 +132,1 @@\n-    TARGETS += $(BUILD_LIBJSIG)\n+  TARGETS += $(BUILD_LIBJSIG)\n@@ -129,4 +134,4 @@\n-    ############################################################################\n-    # Create symlinks to libjsig in each JVM variant sub dir\n-    ifneq ($(STATIC_LIBS), true)\n-      LIB_OUTPUTDIR := $(call FindLibDirForModule, java.base)\n+  ##############################################################################\n+  # Create symlinks to libjsig in each JVM variant sub dir\n+  ifneq ($(STATIC_LIBS), true)\n+    LIB_OUTPUTDIR := $(call FindLibDirForModule, java.base)\n@@ -134,5 +139,5 @@\n-      # $1 variant subdir\n-      define CreateSymlinks\n-        # Always symlink from libdir\/variant\/libjsig.so -> ..\/libjsig.so.\n-        $(LIB_OUTPUTDIR)\/$1\/$(call SHARED_LIBRARY,jsig): \\\n-            $(LIB_OUTPUTDIR)\/$(call SHARED_LIBRARY,jsig)\n+    # $1 variant subdir\n+    define CreateSymlinks\n+      # Always symlink from libdir\/variant\/libjsig.so -> ..\/libjsig.so.\n+      $(LIB_OUTPUTDIR)\/$1\/$(call SHARED_LIBRARY,jsig): \\\n+          $(LIB_OUTPUTDIR)\/$(call SHARED_LIBRARY,jsig)\n@@ -143,7 +148,2 @@\n-        TARGETS += $(LIB_OUTPUTDIR)\/$1\/$(call SHARED_LIBRARY,jsig)\n-      endef\n-\n-      # The subdir is the same as the variant\n-      $(foreach v, $(JVM_VARIANTS), $(eval $(call CreateSymlinks,$v)))\n-    endif\n-    ############################################################################\n+      TARGETS += $(LIB_OUTPUTDIR)\/$1\/$(call SHARED_LIBRARY,jsig)\n+    endef\n@@ -151,0 +151,2 @@\n+    # The subdir is the same as the variant\n+    $(foreach v, $(JVM_VARIANTS), $(eval $(call CreateSymlinks,$v)))\n@@ -156,1 +158,0 @@\n-\n@@ -158,0 +159,1 @@\n+  STATIC_SYMBOLS_DIR := $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\n@@ -159,8 +161,8 @@\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)jli.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)java.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)net.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)nio.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)verify.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)zip.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/$(LIBRARY_PREFIX)jimage.symbols \\\n-      $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/server\/$(LIBRARY_PREFIX)jvm.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)jli.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)java.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)net.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)nio.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)verify.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)zip.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/$(LIBRARY_PREFIX)jimage.symbols \\\n+      $(STATIC_SYMBOLS_DIR)\/server\/$(LIBRARY_PREFIX)jvm.symbols \\\n@@ -169,1 +171,1 @@\n-  JAVA_BASE_EXPORT_SYMBOL_FILE := $(SUPPORT_OUTPUTDIR)\/modules_libs\/java.base\/java.base.symbols\n+  JAVA_BASE_EXPORT_SYMBOL_FILE := $(STATIC_SYMBOLS_DIR)\/java.base.symbols\n@@ -184,10 +186,1 @@\n-# Copy tzmappings file for Windows\n-\n-ifeq ($(call isTargetOs, windows), true)\n-  $(eval $(call SetupCopyFiles, COPY_TZMAPPINGS, \\\n-      FILES := $(SUPPORT_OUTPUTDIR)\/gensrc\/java.base\/windows\/conf\/tzmappings, \\\n-      DEST := $(call FindLibDirForModule, $(MODULE)), \\\n-  ))\n-  TARGETS += $(COPY_TZMAPPINGS)\n-endif\n-\n+## Build libsyslookup\n@@ -195,1 +188,0 @@\n-# Create system lookup\n@@ -197,1 +189,1 @@\n-$(eval $(call SetupJdkLibrary, BUILD_SYSLOOKUPLIB, \\\n+$(eval $(call SetupJdkLibrary, BUILD_LIBSYSLOOKUP, \\\n@@ -202,2 +194,2 @@\n-    LIBS_linux := -lm -ldl, \\\n-    LIBS_aix := -lm -ldecNumber, \\\n+    LIBS_linux := $(LIBDL) $(LIBM), \\\n+    LIBS_aix := -ldecNumber $(LIBM), \\\n@@ -206,4 +198,1 @@\n-TARGETS += $(BUILD_SYSLOOKUPLIB)\n-\n-################################################################################\n-# Create fallback linker lib\n+TARGETS += $(BUILD_LIBSYSLOOKUP)\n@@ -212,0 +201,4 @@\n+  ##############################################################################\n+  ## Build libfallbackLinker\n+  ##############################################################################\n+\n@@ -216,1 +209,1 @@\n-      LIBS_windows := $(LIBFFI_LIBS) ws2_32.lib, \\\n+      LIBS_windows := ws2_32.lib, \\\n@@ -222,2 +215,0 @@\n-################################################################################\n-\n@@ -225,1 +216,5 @@\n-  $(eval $(call SetupJdkLibrary, BUILD_LIB_SIMD_SORT, \\\n+  ##############################################################################\n+  ## Build libsimdsort\n+  ##############################################################################\n+\n+  $(eval $(call SetupJdkLibrary, BUILD_LIBSIMD_SORT, \\\n@@ -230,1 +225,1 @@\n-      LIBS_linux := -lm -ldl, \\\n+      LIBS_linux := $(LIBDL) $(LIBM), \\\n@@ -233,1 +228,1 @@\n-  TARGETS += $(BUILD_LIB_SIMD_SORT)\n+  TARGETS += $(BUILD_LIBSIMD_SORT)\n@@ -235,2 +230,0 @@\n-\n-################################################################################\n","filename":"make\/modules\/java.base\/Lib.gmk","additions":80,"deletions":87,"binary":false,"changes":167,"status":"modified"},{"patch":"@@ -26,1 +26,3 @@\n-##########################################################################################\n+################################################################################\n+## Build libverify\n+################################################################################\n@@ -29,4 +31,2 @@\n-ifeq ($(call isTargetOs, linux), true)\n-  ifeq ($(COMPILE_WITH_DEBUG_SYMBOLS), true)\n-    LIBVERIFY_OPTIMIZATION := LOW\n-  endif\n+ifeq ($(call isTargetOs, linux)+$(COMPILE_WITH_DEBUG_SYMBOLS), true+true)\n+  LIBVERIFY_OPTIMIZATION := LOW\n@@ -38,2 +38,2 @@\n-    LIBS_unix := -ljvm, \\\n-    LIBS_windows := jvm.lib, \\\n+    JDK_LIBS_unix := -ljvm, \\\n+    JDK_LIBS_windows := jvm.lib, \\\n@@ -44,1 +44,3 @@\n-##########################################################################################\n+################################################################################\n+## Build libjava\n+################################################################################\n@@ -56,1 +58,2 @@\n-    java_props_md.c_CFLAGS := -DARCHPROPNAME='\"$(OPENJDK_TARGET_CPU_OSARCH)\"', \\\n+    java_props_md.c_CFLAGS := \\\n+        -DARCHPROPNAME='\"$(OPENJDK_TARGET_CPU_OSARCH)\"', \\\n@@ -59,1 +62,2 @@\n-    LIBS_unix := -ljvm, \\\n+    JDK_LIBS_unix := -ljvm, \\\n+    JDK_LIBS_windows := jvm.lib, \\\n@@ -62,1 +66,2 @@\n-    LIBS_macosx := -framework CoreFoundation \\\n+    LIBS_macosx := \\\n+        -framework CoreFoundation \\\n@@ -65,3 +70,1 @@\n-    LIBS_windows := jvm.lib \\\n-        shell32.lib ole32.lib \\\n-        advapi32.lib version.lib, \\\n+    LIBS_windows := advapi32.lib ole32.lib shell32.lib version.lib, \\\n@@ -74,2 +77,3 @@\n-\n-##########################################################################################\n+################################################################################\n+## Build libzip\n+################################################################################\n@@ -95,2 +99,3 @@\n-    LIBS_unix := -ljvm -ljava $(LIBZ_LIBS), \\\n-    LIBS_windows := jvm.lib $(WIN_JAVA_LIB), \\\n+    JDK_LIBS_unix := -ljava -ljvm, \\\n+    JDK_LIBS_windows := $(WIN_JAVA_LIB) jvm.lib, \\\n+    LIBS_unix := $(LIBZ_LIBS), \\\n@@ -103,1 +108,3 @@\n-##########################################################################################\n+################################################################################\n+## Build libjimage\n+################################################################################\n@@ -111,2 +118,3 @@\n-    LIBS_unix := -ljvm -ldl, \\\n-    LIBS_windows := jvm.lib, \\\n+    JDK_LIBS_unix := -ljvm, \\\n+    JDK_LIBS_windows := jvm.lib, \\\n+    LIBS_unix := $(LIBDL), \\\n@@ -119,1 +127,3 @@\n-##########################################################################################\n+################################################################################\n+## Build libjli\n+################################################################################\n@@ -138,2 +148,0 @@\n-LIBJLI_CFLAGS += $(LIBZ_CFLAGS)\n-\n@@ -142,1 +150,2 @@\n-  LIBJLI_EXTRA_FILE_LIST := inflate.c inftrees.c inffast.c zadler32.c zcrc32.c zutil.c\n+  LIBJLI_EXTRA_FILE_LIST := inflate.c inftrees.c inffast.c zadler32.c \\\n+      zcrc32.c zutil.c\n@@ -153,1 +162,2 @@\n-  LIBJLI_STATIC_EXCLUDE_OBJS := $(subst .c,$(OBJ_SUFFIX),$(LIBJLI_EXTRA_FILE_LIST))\n+  LIBJLI_STATIC_EXCLUDE_OBJS := \\\n+      $(subst .c,$(OBJ_SUFFIX),$(LIBJLI_EXTRA_FILE_LIST))\n@@ -158,1 +168,0 @@\n-    OUTPUT_DIR := $(INSTALL_LIBRARIES_HERE), \\\n@@ -162,1 +171,1 @@\n-    CFLAGS := $(LIBJLI_CFLAGS), \\\n+    CFLAGS := $(LIBJLI_CFLAGS) $(LIBZ_CFLAGS), \\\n@@ -169,1 +178,4 @@\n-    LIBS_macosx := -framework Cocoa -framework Security -framework ApplicationServices, \\\n+    LIBS_macosx := \\\n+        -framework ApplicationServices \\\n+        -framework Cocoa \\\n+        -framework Security, \\\n@@ -179,1 +191,2 @@\n-  # AIX also requires a static libjli because the compiler doesn't support '-rpath'\n+  # AIX also requires a static libjli because the compiler doesn't support\n+  # '-rpath'\n@@ -189,2 +202,3 @@\n-          $(addprefix -I, $(LIBJLI_SRC_DIRS)), \\\n-      DISABLED_WARNINGS_clang_aix := format-nonliteral deprecated-non-prototype, \\\n+          $(LIBZ_CFLAGS) (addprefix -I, $(LIBJLI_SRC_DIRS)), \\\n+      DISABLED_WARNINGS_clang_aix := format-nonliteral \\\n+          deprecated-non-prototype, \\\n@@ -195,1 +209,0 @@\n-\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":46,"deletions":33,"binary":false,"changes":79,"status":"modified"}]}