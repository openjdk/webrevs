{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -543,0 +543,63 @@\n+static void populateFontFileNameFromRegistryKey(HKEY regKey,\n+                                                GdiFontMapInfo *fmi,\n+                                                jobject fontToFileMap)\n+{\n+#define MAX_BUFFER (FILENAME_MAX+1)\n+    const wchar_t wname[MAX_BUFFER];\n+    const char data[MAX_BUFFER];\n+\n+    DWORD type;\n+    LONG ret;\n+    HKEY hkeyFonts;\n+    DWORD dwNameSize;\n+    DWORD dwDataValueSize;\n+    DWORD nval;\n+    DWORD dwNumValues, dwMaxValueNameLen, dwMaxValueDataLen;\n+\n+    \/* Use the windows registry to map font names to files *\/\n+    ret = RegOpenKeyEx(regKey,\n+                       FONTKEY_NT, 0L, KEY_READ, &hkeyFonts);\n+    if (ret != ERROR_SUCCESS) {\n+        return;\n+    }\n+\n+    ret = RegQueryInfoKeyW(hkeyFonts, NULL, NULL, NULL, NULL, NULL, NULL,\n+                           &dwNumValues, &dwMaxValueNameLen,\n+                           &dwMaxValueDataLen, NULL, NULL);\n+\n+    if (ret != ERROR_SUCCESS ||\n+        dwMaxValueNameLen >= MAX_BUFFER ||\n+        dwMaxValueDataLen >= MAX_BUFFER) {\n+        RegCloseKey(hkeyFonts);\n+        return;\n+    }\n+    for (nval = 0; nval < dwNumValues; nval++ ) {\n+        dwNameSize = MAX_BUFFER;\n+        dwDataValueSize = MAX_BUFFER;\n+        ret = RegEnumValueW(hkeyFonts, nval, (LPWSTR)wname, &dwNameSize,\n+                            NULL, &type, (LPBYTE)data, &dwDataValueSize);\n+\n+        if (ret != ERROR_SUCCESS) {\n+            break;\n+        }\n+        if (type != REG_SZ) { \/* REG_SZ means a null-terminated string *\/\n+            continue;\n+        }\n+\n+        if (!RegistryToBaseTTNameW((LPWSTR)wname) ) {\n+            \/* If the filename ends with \".ttf\" or \".otf\" also accept it.\n+             * Not expecting to need to do this for .ttc files.\n+             * Also note this code is not mirrored in the \"A\" (win9x) path.\n+             *\/\n+            LPWSTR dot = wcsrchr((LPWSTR)data, L'.');\n+            if (dot == NULL || ((wcsicmp(dot, L\".ttf\") != 0)\n+                                  && (wcsicmp(dot, L\".otf\") != 0))) {\n+                continue;  \/* not a TT font... *\/\n+            }\n+        }\n+        registerFontW(fmi, fontToFileMap, (LPWSTR)wname, (LPWSTR)data);\n+    }\n+\n+    RegCloseKey(hkeyFonts);\n+}\n+\n@@ -641,33 +704,6 @@\n-    \/* Use the windows registry to map font names to files *\/\n-    ret = RegOpenKeyEx(HKEY_LOCAL_MACHINE,\n-                       FONTKEY_NT, 0L, KEY_READ, &hkeyFonts);\n-    if (ret != ERROR_SUCCESS) {\n-        ReleaseDC(NULL, fmi.screenDC);\n-        fmi.screenDC = NULL;\n-        return;\n-    }\n-\n-    ret = RegQueryInfoKeyW(hkeyFonts, NULL, NULL, NULL, NULL, NULL, NULL,\n-                           &dwNumValues, &dwMaxValueNameLen,\n-                           &dwMaxValueDataLen, NULL, NULL);\n-\n-    if (ret != ERROR_SUCCESS ||\n-        dwMaxValueNameLen >= MAX_BUFFER ||\n-        dwMaxValueDataLen >= MAX_BUFFER) {\n-        RegCloseKey(hkeyFonts);\n-        ReleaseDC(NULL, fmi.screenDC);\n-        fmi.screenDC = NULL;\n-        return;\n-    }\n-    for (nval = 0; nval < dwNumValues; nval++ ) {\n-        dwNameSize = MAX_BUFFER;\n-        dwDataValueSize = MAX_BUFFER;\n-        ret = RegEnumValueW(hkeyFonts, nval, (LPWSTR)wname, &dwNameSize,\n-                            NULL, &type, (LPBYTE)data, &dwDataValueSize);\n-\n-        if (ret != ERROR_SUCCESS) {\n-            break;\n-        }\n-        if (type != REG_SZ) { \/* REG_SZ means a null-terminated string *\/\n-            continue;\n-        }\n+    \/* Starting from Windows 10 Preview Build 17704\n+     * fonts are installed into user's home folder by default,\n+     * and are listed in user's registry section\n+     *\/\n+    populateFontFileNameFromRegistryKey(HKEY_CURRENT_USER, &fmi, fontToFileMap);\n+    populateFontFileNameFromRegistryKey(HKEY_LOCAL_MACHINE, &fmi, fontToFileMap);\n@@ -675,16 +711,0 @@\n-        if (!RegistryToBaseTTNameW((LPWSTR)wname) ) {\n-            \/* If the filename ends with \".ttf\" or \".otf\" also accept it.\n-             * REMIND : in fact not accepting .otf's for now as the\n-             * upstream code isn't expecting them.\n-             * Not expecting to need to do this for .ttc files.\n-             * Also note this code is not mirrored in the \"A\" (win9x) path.\n-             *\/\n-            LPWSTR dot = wcsrchr((LPWSTR)data, L'.');\n-            if (dot == NULL || ((wcsicmp(dot, L\".ttf\") != 0)\n-                                \/* && (wcsicmp(dot, L\".otf\") != 0) *\/)) {\n-                continue;  \/* not a TT font... *\/\n-            }\n-        }\n-        registerFontW(&fmi, fontToFileMap, (LPWSTR)wname, (LPWSTR)data);\n-    }\n-    RegCloseKey(hkeyFonts);\n","filename":"modules\/javafx.graphics\/src\/main\/native-font\/fontpath.c","additions":70,"deletions":50,"binary":false,"changes":120,"status":"modified"}]}