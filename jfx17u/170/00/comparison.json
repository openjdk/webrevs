{"files":[{"patch":"@@ -517,3 +517,0 @@\n-static void grab_mouse_device(GdkDevice *device, DeviceGrabContext *context);\n-static void ungrab_mouse_device(GdkDevice *device);\n-\n@@ -538,20 +535,0 @@\n-#ifdef GLASS_GTK3_DISABLED\n-\/\/this GTK 3 approach has synchronization issues covered in JDK-8176844\n-\/\/ As the approach is also deprecated in GTK 3.20+, revert back to using GTK 2 mechanism\n-\n-        if (disableGrab) {\n-            return TRUE;\n-        }\n-        DeviceGrabContext context;\n-        GList *devices = gdk_device_manager_list_devices (\n-                             gdk_display_get_device_manager(\n-                                 gdk_display_get_default()),\n-                                 GDK_DEVICE_TYPE_MASTER);\n-\n-        context.window = gdkWindow;\n-        context.grabbed = FALSE;\n-        g_list_foreach(devices, (GFunc) grab_mouse_device, &context);\n-        g_list_free(devices);\n-\n-        return context.grabbed;\n-#else\n@@ -559,1 +536,0 @@\n-#endif\n@@ -567,0 +543,1 @@\n+\n@@ -583,12 +560,1 @@\n-#ifdef GLASS_GTK3_DISABLED\n-\/\/this GTK 3 approach has synchronization issues covered in JDK-8176844\n-\/\/ As the approach is also deprecated in GTK 3.20+, revert back to using GTK 2 mechanism\n-        GList *devices = gdk_device_manager_list_devices(\n-                             gdk_display_get_device_manager(\n-                                 gdk_display_get_default()),\n-                                 GDK_DEVICE_TYPE_MASTER);\n-        g_list_foreach(devices, (GFunc) ungrab_mouse_device, NULL);\n-        g_list_free(devices);\n-#else\n-        gdk_pointer_ungrab(GDK_CURRENT_TIME);\n-#endif\n+    gdk_pointer_ungrab(GDK_CURRENT_TIME);\n@@ -628,0 +594,1 @@\n+\n@@ -736,43 +703,0 @@\n-static void\n-grab_mouse_device(GdkDevice *device, DeviceGrabContext *context) {\n-    GdkInputSource source = gdk_device_get_source(device);\n-    if (source == GDK_SOURCE_MOUSE) {\n-#ifdef GLASS_GTK3\n-        GdkGrabStatus status = gdk_device_grab(device,\n-                                               context->window,\n-                                               GDK_OWNERSHIP_NONE,\n-                                               TRUE,\n-                                               GDK_FILTERED_EVENTS_MASK,\n-                                               NULL,\n-                                               GDK_CURRENT_TIME);\n-#else\n-        GdkGrabStatus status = GDK_GRAB_SUCCESS;\n-\/* FIXME reachable by 2?\n-        GdkGrabStatus status = gdk_device_grab(device,\n-                                               context->window,\n-                                               GDK_OWNERSHIP_NONE,\n-                                               TRUE,\n-                                               GDK_FILTERED_EVENTS_MASK,\n-                                               NULL,\n-                                               GDK_CURRENT_TIME);\n-                                       *\/\n-#endif\n-        if (status == GDK_GRAB_SUCCESS) {\n-            context->grabbed = TRUE;\n-        }\n-    }\n-}\n-\n-static void\n-ungrab_mouse_device(GdkDevice *device) {\n-#ifdef GLASS_GTK3\n-    GdkInputSource source = gdk_device_get_source(device);\n-    if (source == GDK_SOURCE_MOUSE) {\n-        gdk_device_ungrab(device, GDK_CURRENT_TIME);\n-    }\n-#else\n-    (void) device;\n-    \/\/ not used on the GTK2 path\n-#endif\n-}\n-\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_general.cpp","additions":3,"deletions":79,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -136,3 +136,0 @@\n-    if (!event->in && WindowContextBase::sm_mouse_drag_window == this) {\n-        ungrab_mouse_drag_focus();\n-    }\n@@ -306,9 +303,2 @@\n-    \/\/ Upper layers expects from us Windows behavior:\n-    \/\/ all mouse events should be delivered to window where drag begins\n-    \/\/ and no exit\/enter event should be reported during this drag.\n-    \/\/ We can grab mouse pointer for these needs.\n-    if (press) {\n-        grab_mouse_drag_focus();\n-    } else {\n-        if ((event->state & MOUSE_BUTTONS_MASK)\n-            && !(state & MOUSE_BUTTONS_MASK)) { \/\/ all buttons released\n+    if (!press) {\n+        if ((event->state & MOUSE_BUTTONS_MASK) && !(state & MOUSE_BUTTONS_MASK)) { \/\/ all buttons released\n@@ -358,0 +348,8 @@\n+    if (isDrag && WindowContextBase::sm_mouse_drag_window == NULL) {\n+        \/\/ Upper layers expects from us Windows behavior:\n+        \/\/ all mouse events should be delivered to window where drag begins\n+        \/\/ and no exit\/enter event should be reported during this drag.\n+        \/\/ We can grab mouse pointer for these needs.\n+        grab_mouse_drag_focus();\n+    }\n+\n","filename":"modules\/javafx.graphics\/src\/main\/native-glass\/gtk\/glass_window.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"}]}