{"files":[{"patch":"@@ -77,0 +77,1 @@\n+                    \/\/in json mode, see FIXME lower\n@@ -85,0 +86,1 @@\n+                    \/\/in json mode, see FIXME lower\n@@ -106,0 +108,1 @@\n+                    \/\/in json mode, see FIXME lower\n@@ -145,1 +148,1 @@\n-            jcstress.out.println(\"\\\"toal\\\": \" + testsToPrint.size() + \", \\\"list\\\": {\");\n+            jcstress.out.println(\"\\\"toal\\\": \" + testsToPrint.size() + \", \\\"list\\\": [\");\n@@ -147,1 +150,4 @@\n-        for (Map.Entry<String, Object> test : testsToPrint.entrySet()) {\n+        Set<Map.Entry<String, Object>> entries = testsToPrint.entrySet();\n+        int counter = entries.size();\n+        for (Map.Entry<String, Object> test : entries) {\n+            counter--;\n@@ -149,1 +155,6 @@\n-                jcstress.out.println(test.getKey());\n+                if (jcstress.opts.listingType().toString().startsWith(\"JSON_\")) {\n+                    jcstress.out.print(\"\\\"\" + test.getKey() + \"\\\"\");\n+                    jsonArrayDelimiter(counter);\n+                } else {\n+                    jcstress.out.println(test.getKey());\n+                }\n@@ -152,1 +163,11 @@\n-                    jcstress.out.println(test.getValue() + \" \" + test.getKey());\n+                    \/\/\"[publish, consume], spinLoopStyle: Thread.onSpinWait(), threads: 2, forkId: 2, maxFootprintMB: 64, compileMode: 8, shClass: (PG 0, CG 0), (PG 0, CG 1), strideSize: 256, strideCount: 40, cpuMap: null, [-XX:+UseBiasedLocking, -XX:+StressLCM, -XX:+StressGCM, -XX:+StressIGVN,\n+                    \/\/ -XX:+StressCCP, -XX:StressSeed=yyyyyyyy]\": 1\n+                    \/\/x\n+                    \/\/ \"org.openjdk.jcstress.tests.unsafe.UnsafeAddLong1\": 96\n+                    \/\/FIXME, refactor the first, long one, so individual parts are json elements\n+                    if (jcstress.opts.listingType().toString().startsWith(\"JSON_\")) {\n+                        jcstress.out.println(\"{\\\"\" + test.getKey() + \"\\\": \" + test.getValue() + \"}\");\n+                        jsonArrayDelimiter(counter);\n+                    } else {\n+                        jcstress.out.println(test.getValue() + \" \" + test.getKey());\n+                    }\n@@ -154,3 +175,16 @@\n-                    jcstress.out.println(test.getKey() + \" \" + ((Collection) test.getValue()).size());\n-                    for (Object item : (Collection) test.getValue()) {\n-                        jcstress.out.println(\"    \" + item);\n+                    \/\/FIXME, same as above\n+                    if (jcstress.opts.listingType().toString().startsWith(\"JSON_\")) {\n+                        jcstress.out.println(\"{\\\"\" + test.getKey() + \"\\\": [\");\n+                        int subcounter = ((Collection) test.getValue()).size();\n+                        for (Object item : (Collection) test.getValue()) {\n+                            subcounter--;\n+                            jcstress.out.println(\"\\\"\" + item + \"\\\"\");\n+                            jsonArrayDelimiter(subcounter);\n+                        }\n+                        jcstress.out.println(\"]}\");\n+                        jsonArrayDelimiter(counter);\n+                    } else {\n+                        jcstress.out.println(test.getKey() + \" \" + ((Collection) test.getValue()).size());\n+                        for (Object item : (Collection) test.getValue()) {\n+                            jcstress.out.println(\"    \" + item);\n+                        }\n@@ -164,1 +198,1 @@\n-            jcstress.out.println(\"}}\");\n+            jcstress.out.println(\"]}\");\n@@ -169,0 +203,8 @@\n+    private void jsonArrayDelimiter(int counter) {\n+        if (counter != 0) {\n+            jcstress.out.println(\",\");\n+        } else {\n+            jcstress.out.println();\n+        }\n+    }\n+\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestListing.java","additions":50,"deletions":8,"binary":false,"changes":58,"status":"modified"}]}