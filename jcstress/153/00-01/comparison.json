{"files":[{"patch":"@@ -24,0 +24,1 @@\n+\n@@ -28,0 +29,3 @@\n+\n+import java.util.Collection;\n+import java.util.Map;\n@@ -29,0 +33,1 @@\n+import java.util.TreeMap;\n@@ -34,1 +39,3 @@\n-        NONE, ALL, ALL_MATCHING, ALL_MATCHING_COMBINATIONS;\n+        NONE, ALL, ALL_MATCHING, ALL_MATCHING_COMBINATIONS,\n+        MATCHING_GROUPS, MATCHING_GROUPS_COUNT,\n+        MATCHING_IGROUPS, MATCHING_IGROUPS_COUNT;\n@@ -40,2 +47,5 @@\n-                    + ALL_MATCHING_COMBINATIONS + \" all real combinations which will run in this setup.\" +\n-                    \" Defaults to \" + ALL_MATCHING + \" if none provided.\";\n+                    + ALL_MATCHING_COMBINATIONS + \" all real combinations which will run in this setup.\"\n+                    + MATCHING_GROUPS + \" similar to above but the shared part is printed only once\"\n+                    + MATCHING_GROUPS_COUNT + \" same as above, only instead of lsiting, just count is used\"\n+                    + MATCHING_IGROUPS + \", \" + MATCHING_IGROUPS_COUNT + \" same as above, only inverted\"\n+                    + \" Defaults to \" + ALL_MATCHING + \" if none provided.\";\n@@ -51,0 +61,1 @@\n+    @SuppressWarnings(\"unchecked\")\n@@ -53,1 +64,1 @@\n-        Set<String> testsToPrint = new TreeSet<>();\n+        Map<String, Object> testsToPrint = new TreeMap<>();\n@@ -57,1 +68,1 @@\n-                    testsToPrint.add(test.toDetailedTest());\n+                    testsToPrint.put(test.toDetailedTest(), null);\n@@ -61,0 +72,32 @@\n+            case MATCHING_GROUPS_COUNT:\n+                for (TestConfig test : configsWithScheduler.configs) {\n+                    Integer counter = (Integer) testsToPrint.getOrDefault(test.getTestVariant(false), 0);\n+                    counter++;\n+                    testsToPrint.put(test.getTestVariant(false), counter);\n+                }\n+                jcstress.out.println(\"All existing combinations (each with count of test) \" + testsToPrint.size());\n+                break;\n+            case MATCHING_IGROUPS_COUNT:\n+                for (TestConfig test : configsWithScheduler.configs) {\n+                    Integer counter = (Integer) testsToPrint.getOrDefault(test.name, 0);\n+                    counter++;\n+                    testsToPrint.put(test.name, counter);\n+                }\n+                jcstress.out.println(\"All matching tests (each with count of combinations) \" + testsToPrint.size());\n+                break;\n+            case MATCHING_GROUPS:\n+                for (TestConfig test : configsWithScheduler.configs) {\n+                    Set<String> items = (Set<String>) testsToPrint.getOrDefault(test.getTestVariant(false), new TreeSet<String>());\n+                    items.add(test.name);\n+                    testsToPrint.put(test.getTestVariant(false), items);\n+                }\n+                jcstress.out.println(\"All existing combinations \" + testsToPrint.size());\n+                break;\n+            case MATCHING_IGROUPS:\n+                for (TestConfig test : configsWithScheduler.configs) {\n+                    Set<String> items = (Set<String>) (testsToPrint.getOrDefault(test.name, new TreeSet<String>()));\n+                    items.add(test.getTestVariant(false));\n+                    testsToPrint.put(test.name, items);\n+                }\n+                jcstress.out.println(\"All matching tests\" + testsToPrint.size());\n+                break;\n@@ -63,1 +106,1 @@\n-                    testsToPrint.add(test.name);\n+                    testsToPrint.put(test.name, null);\n@@ -69,1 +112,1 @@\n-                    testsToPrint.add(test);\n+                    testsToPrint.put(test, null);\n@@ -76,2 +119,15 @@\n-        for (String test : testsToPrint) {\n-            jcstress.out.println(test);\n+        for (Map.Entry<String, Object> test : testsToPrint.entrySet()) {\n+            if (test.getValue() == null) {\n+                jcstress.out.println(test.getKey());\n+            } else {\n+                if (test.getValue() instanceof Integer) {\n+                    jcstress.out.println(test.getValue() + \" \" + test.getKey());\n+                } else if (test.getValue() instanceof Collection) {\n+                    jcstress.out.println(test.getKey() + \" \" + ((Collection) test.getValue()).size());\n+                    for (Object item : (Collection) test.getValue()) {\n+                        jcstress.out.println(\"    \" + item);\n+                    }\n+                } else {\n+                    jcstress.out.println(test.getKey() + \"=?=\" + test.getValue());\n+                }\n+            }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestListing.java","additions":65,"deletions":9,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.ArrayList;\n@@ -249,1 +250,1 @@\n-    public String toDetailedTest() {\n+    public String getTestVariant(boolean seed) {\n@@ -253,3 +254,2 @@\n-        StringBuilder verboseOutput = new StringBuilder(name);\n-        verboseOutput.append(\" {\")\n-                .append(actorNames)\n+        StringBuilder idString = new StringBuilder();\n+        idString.append(actorNames)\n@@ -265,1 +265,20 @@\n-                .append(\", \").append(jvmArgs)\n+                .append(\", \").append(seed ? jvmArgs : maskSeed(jvmArgs));\n+        return idString.toString();\n+    }\n+\n+    private List<String> maskSeed(List<String> jvmArgs) {\n+        List<String> argsCopy = new ArrayList<>(jvmArgs.size());\n+        for (String arg : jvmArgs) {\n+            if (arg.startsWith(\"-XX:StressSeed=\")) {\n+                argsCopy.add(arg.replaceAll(\"[0-9]+\", \"yyyyyyyy\"));\n+            } else {\n+                argsCopy.add(arg);\n+            }\n+        }\n+        return argsCopy;\n+    }\n+\n+    public String toDetailedTest() {\n+        StringBuilder verboseOutput = new StringBuilder(name);\n+        verboseOutput.append(\" {\")\n+                .append(getTestVariant(true))\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/TestConfig.java","additions":24,"deletions":5,"binary":false,"changes":29,"status":"modified"}]}