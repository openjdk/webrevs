{"files":[{"patch":"@@ -137,1 +137,1 @@\n-            printOvertimeWarning();\n+            printOvertimeWarning(out);\n@@ -148,1 +148,1 @@\n-    private boolean printOvertimeWarning() {\n+    private boolean printOvertimeWarning(PrintStream out) {\n@@ -152,1 +152,1 @@\n-            System.out.println(\" + +++ FATAL - your tests will never finish as expected. They will run much longer \");\n+            out.println(\" + +++ FATAL - your tests will never finish as expected. They will run much longer \");\n@@ -156,1 +156,1 @@\n-            System.out.println(\" + +++ WARNING - your time budget will not be used. Tests will end much sooner.\");\n+            out.println(\" + +++ WARNING - your time budget will not be used. Tests will end much sooner.\");\n@@ -160,1 +160,1 @@\n-            System.out.println(\" | For \" + expectedTests + \" with concurrency factor of \" + getConcurentTestsFactor()\n+            out.println(\" | For \" + expectedTests + \" with concurrency factor of \" + getConcurentTestsFactor()\n@@ -162,3 +162,3 @@\n-            System.out.println(\" | That is ~\" + budget.milliseconds() \/ expectedTests + \" ms per test\");\n-            System.out.println(\" + +++ However the real time will be converging to: \" + ReportUtils.getNiceMsTimeDate(expectedPerTest) + \" +++\");\n-            System.out.println(\" | You can play with internal properties name(value\/eta):\\n\"\n+            out.println(\" | That is ~\" + budget.milliseconds() \/ expectedTests + \" ms per test\");\n+            out.println(\" + +++ However the real time will be converging to: \" + ReportUtils.getNiceMsTimeDate(expectedPerTest) + \" +++\");\n+            out.println(\" | You can play with internal properties name(value\/eta):\\n\"\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TimeBudget.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}