{"files":[{"patch":"@@ -59,0 +59,29 @@\n+        ConfigsWithScheduler configsWithScheduler = getConfigs();\n+        if (configsWithScheduler == null) return;\n+\n+        TimeBudget timeBudget = new TimeBudget(configsWithScheduler.configs.size(), opts.timeBudget());\n+        timeBudget.printOn(out);\n+\n+        ConsoleReportPrinter printer = new ConsoleReportPrinter(opts, new PrintWriter(out, true), configsWithScheduler.configs.size(), timeBudget);\n+        DiskWriteCollector diskCollector = new DiskWriteCollector(opts.getResultFile());\n+        TestResultCollector mux = MuxCollector.of(printer, diskCollector);\n+        SerializedBufferCollector sink = new SerializedBufferCollector(mux);\n+\n+        TestExecutor executor = new TestExecutor(opts.verbosity(), sink, configsWithScheduler.scheduler, timeBudget);\n+        printer.setExecutor(executor);\n+\n+        executor.runAll(configsWithScheduler.configs);\n+\n+        sink.close();\n+        diskCollector.close();\n+\n+        printer.printFinishLine();\n+\n+        out.println();\n+        out.println();\n+\n+        parseResults();\n+    }\n+\n+\n+    public ConfigsWithScheduler getConfigs() {\n@@ -66,1 +95,1 @@\n-            return;\n+            return null;\n@@ -86,1 +115,1 @@\n-            return;\n+            return null;\n@@ -88,0 +117,3 @@\n+        ConfigsWithScheduler configsWithScheduler = new ConfigsWithScheduler(scheduler, configs);\n+        return configsWithScheduler;\n+    }\n@@ -89,20 +121,3 @@\n-        TimeBudget timeBudget = new TimeBudget(configs.size(), opts.timeBudget());\n-        timeBudget.printOn(out);\n-\n-        ConsoleReportPrinter printer = new ConsoleReportPrinter(opts, new PrintWriter(out, true), configs.size(), timeBudget);\n-        DiskWriteCollector diskCollector = new DiskWriteCollector(opts.getResultFile());\n-        TestResultCollector mux = MuxCollector.of(printer, diskCollector);\n-        SerializedBufferCollector sink = new SerializedBufferCollector(mux);\n-\n-        TestExecutor executor = new TestExecutor(opts.verbosity(), sink, scheduler, timeBudget);\n-        printer.setExecutor(executor);\n-\n-        executor.runAll(configs);\n-\n-        sink.close();\n-        diskCollector.close();\n-\n-        printer.printFinishLine();\n-\n-        out.println();\n-        out.println();\n+    public static class ConfigsWithScheduler {\n+        public final Scheduler scheduler;\n+        public final List<TestConfig> configs;\n@@ -110,1 +125,4 @@\n-        parseResults();\n+        public ConfigsWithScheduler(Scheduler scheduler, List<TestConfig> configs) {\n+            this.scheduler = scheduler;\n+            this.configs = configs;\n+        }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/JCStress.java","additions":41,"deletions":23,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jcstress.infra.runners.TestConfig;\n+\n@@ -31,0 +33,2 @@\n+import java.util.Set;\n+import java.util.TreeSet;\n@@ -54,1 +58,15 @@\n-            for (String test : jcstress.getTests()) {\n+            JCStress.ConfigsWithScheduler configsWithScheduler = jcstress.getConfigs();\n+            Set<String> testsToPrint = new TreeSet<>();\n+            for (TestConfig test : configsWithScheduler.configs) {\n+                if (opts.verbosity().printAllTests()) {\n+                    testsToPrint.add(test.toDetailedTest());\n+                } else {\n+                    testsToPrint.add(test.name);\n+                }\n+            }\n+            if (opts.verbosity().printAllTests()) {\n+                System.out.println(\"All matching tests combinations - \" + testsToPrint.size());\n+            } else {\n+                System.out.println(\"All matching tests - \" + testsToPrint.size());\n+            }\n+            for (String test : testsToPrint) {\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/Main.java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.util.concurrent.TimeUnit;\n@@ -85,1 +84,2 @@\n-        OptionSpec<Boolean> list = parser.accepts(\"l\", \"List the available tests matching the requested settings.\")\n+        OptionSpec<Boolean> list = parser.accepts(\"l\", \"List the available tests matching the requested settings, \" +\n+                        \"after all filters (like CPU count) are applied. In verbose mode it prints all real combinations which will run.\")\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/Options.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import java.util.stream.Collectors;\n@@ -282,1 +283,1 @@\n-                command.addAll(task.jvmArgs);\n+                command.addAll(task.jvmArgs.stream().filter(s -> !s.startsWith(\"-agentlib\")).collect(Collectors.toList()));\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/TestExecutor.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import java.util.stream.Collectors;\n@@ -247,0 +248,19 @@\n+\n+\n+    public String toDetailedTest() {\n+        \/\/binaryName have correct $ instead of . in name; omitted\n+        \/\/generatedRunnerName name with suffix (usually _Test_jcstress) omitted\n+        \/\/super.toString() as TestConfig@hash - omitted\n+        return name +\n+                \" {\" + actorNames +\n+                \", spinLoopStyle=\" + spinLoopStyle +\n+                \", threads=\" + threads +\n+                \", forkId=\" + forkId +\n+                \", maxFootprintMB=\" + maxFootprintMB +\n+                \", compileMode=\" + compileMode +\n+                \", shClass=\" + shClass +\n+                \", strideSize=\" + strideSize +\n+                \", strideCount=\" + strideCount +\n+                \", cpuMap=\" + cpuMap +\n+                \", \" + jvmArgs.stream().filter(s -> !s.startsWith(\"-agentlib\")).collect(Collectors.toList()) + \"}\";\n+    }\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/infra\/runners\/TestConfig.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -464,0 +464,1 @@\n+            args = args.stream().filter(s -> !s.startsWith(\"-agentlib\")).collect(Collectors.toList());\n","filename":"jcstress-core\/src\/main\/java\/org\/openjdk\/jcstress\/vm\/VMSupport.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}