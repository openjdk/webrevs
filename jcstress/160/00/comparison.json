{"files":[{"patch":"@@ -47,1 +47,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/accessAtomic\/X-VarHandleByteArrayViewAtomicityTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    int off = buf.alignmentOffset(0, 8);\n+    int off = buf.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/accessAtomic\/X-VarHandleDirectByteBufferViewAtomicityTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    int off = buf.alignmentOffset(0, 8);\n+    int off = buf.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/accessAtomic\/X-VarHandleHeapByteBufferViewAtomicityTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/acqrel\/X-VarHandleByteArrayViewAcqRelTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    int off = g.alignmentOffset(0, 8);\n+    int off = g.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/acqrel\/X-VarHandleDirectByteBufferViewAcqRelTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    int off = g.alignmentOffset(0, 8);\n+    int off = g.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/acqrel\/X-VarHandleHeapByteBufferViewAcqRelTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/coherence\/X-VarHandleByteArrayViewCoherenceTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    int off = buf.alignmentOffset(0, 8);\n+    int off = buf.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/coherence\/X-VarHandleDirectByteBufferViewCoherenceTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    int off = buf.alignmentOffset(0, 8);\n+    int off = buf.alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/coherence\/X-VarHandleHeapByteBufferViewCoherenceTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-CAETest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-CASTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-GetAndAddTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-GetAndSetTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-WeakCASContendStrongTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 8);\n+    static final int OFF = ByteBuffer.wrap(new byte[128]).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteArray\/X-WeakCASTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-CAETest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-CASTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-GetAndAddTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-GetAndSetTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-WeakCASContendStrongTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 8);\n+    static final int OFF = $buffer_allocate$(128).alignmentOffset(0, 1);\n","filename":"jcstress-test-gen\/src\/main\/resources\/operationAtomic\/byteBuffer\/X-WeakCASTest.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}