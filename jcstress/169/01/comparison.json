{"files":[{"patch":"@@ -43,1 +43,1 @@\n-      run: java -jar tests-custom\/target\/jcstress.jar -t UnfencedDekker -tb 1m\n+      run: java -jar tests-custom\/target\/jcstress.jar -t RelaxedDekkerTest -tb 1m\n","filename":".github\/workflows\/pre-integration.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress.tests.varhandles;\n+package org.openjdk.jcstress.tests.dekker;\n@@ -35,1 +35,0 @@\n-import static org.openjdk.jcstress.annotations.Expect.FORBIDDEN;\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/DekkerRelaxation1Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/varhandles\/DekkerRelaxation1Test.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress.tests.varhandles;\n+package org.openjdk.jcstress.tests.dekker;\n@@ -35,1 +35,0 @@\n-import static org.openjdk.jcstress.annotations.Expect.FORBIDDEN;\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/DekkerRelaxation2Test.java","additions":1,"deletions":2,"binary":false,"changes":3,"previous_filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/varhandles\/DekkerRelaxation2Test.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress.tests.fences;\n+package org.openjdk.jcstress.tests.dekker;\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/FencedDekkerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/FencedDekkerTest.java","status":"renamed"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.jcstress.tests.dekker;\n+\n+import org.openjdk.jcstress.annotations.*;\n+import org.openjdk.jcstress.infra.results.LL_Result;\n+\n+import static org.openjdk.jcstress.annotations.Expect.ACCEPTABLE;\n+import static org.openjdk.jcstress.annotations.Expect.FORBIDDEN;\n+\n+@JCStressTest\n+@Outcome(id = {\"null, A\", \"B, null\", \"B, A\"}, expect = ACCEPTABLE, desc = \"Trivial under sequential consistency\")\n+@Outcome(id = \"null, null\",                   expect = FORBIDDEN,  desc = \"Violates sequential consistency\")\n+@State\n+@Ref(\"https:\/\/bugs.openjdk.org\/browse\/JDK-8351997\")\n+public class RefDekkerTest {\n+    volatile Object a;\n+    volatile Object b;\n+\n+    @Actor\n+    public void actor1(LL_Result r) {\n+        a = \"A\";\n+        r.r1 = b;\n+    }\n+\n+    @Actor\n+    public void actor2(LL_Result r) {\n+        b = \"B\";\n+        r.r2 = a;\n+    }\n+}\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/RefDekkerTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress.tests.fences;\n+package org.openjdk.jcstress.tests.dekker;\n@@ -46,1 +46,1 @@\n-public class UnfencedDekkerTest {\n+public class RelaxedDekkerTest {\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/RelaxedDekkerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/fences\/UnfencedDekkerTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package org.openjdk.jcstress.tests.volatiles;\n+package org.openjdk.jcstress.tests.dekker;\n@@ -45,1 +45,1 @@\n-public class DekkerTest {\n+public class VolatileDekkerTest {\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/dekker\/VolatileDekkerTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/volatiles\/DekkerTest.java","status":"renamed"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package org.openjdk.jcstress.tests.varhandles;\n-\n-import org.openjdk.jcstress.annotations.*;\n-import org.openjdk.jcstress.infra.results.II_Result;\n-\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.VarHandle;\n-\n-import static org.openjdk.jcstress.annotations.Expect.ACCEPTABLE;\n-import static org.openjdk.jcstress.annotations.Expect.FORBIDDEN;\n-\n-@JCStressTest\n-@Description(\"Tests Dekker-lock-style idioms\")\n-@Outcome(id = {\"0, 1\", \"1, 0\", \"1, 1\"}, expect = ACCEPTABLE, desc = \"Trivial under sequential consistency\")\n-@Outcome(id = \"0, 0\",                   expect = FORBIDDEN,  desc = \"Violates sequential consistency\")\n-@State\n-public class DekkerTest {\n-\n-    static final VarHandle VH_A, VH_B;\n-\n-    static {\n-        try {\n-            VH_A = MethodHandles.lookup().findVarHandle(DekkerTest.class, \"a\", int.class);\n-            VH_B = MethodHandles.lookup().findVarHandle(DekkerTest.class, \"b\", int.class);\n-        } catch (NoSuchFieldException | IllegalAccessException e) {\n-            throw new IllegalStateException(e);\n-        }\n-    }\n-\n-    volatile int a;\n-    volatile int b;\n-\n-    @Actor\n-    public void actor1(II_Result r) {\n-        VH_A.setVolatile(this, 1);\n-        r.r1 = (int) VH_B.getVolatile(this);\n-    }\n-\n-    @Actor\n-    public void actor2(II_Result r) {\n-        VH_B.setVolatile(this, 1);\n-        r.r2 = (int) VH_A.getVolatile(this);\n-    }\n-}\n","filename":"tests-custom\/src\/main\/java\/org\/openjdk\/jcstress\/tests\/varhandles\/DekkerTest.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"}]}