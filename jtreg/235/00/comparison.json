{"files":[{"patch":"@@ -54,0 +54,2 @@\n+import java.util.Iterator;\n+import java.util.ServiceLoader;\n@@ -82,0 +84,2 @@\n+import com.sun.javatest.regtest.exec.StatusTransformer;\n+\n@@ -331,0 +335,52 @@\n+    \/**\n+     * Contains list of {@link StatusTransformer} that transform the test result status, or {@code null}\n+     * if no transformer service was found.\n+     *\/\n+    private static final List<StatusTransformer> STATUS_TRANSFORMERS = loadStatusTransformers();\n+\n+    \/**\n+     * This method runs the statusTransformers stored in the private variable. In case the statusTransformer is null\n+     * it returns the original status.\n+     * @param originalStatus - original status of the testrun\n+     * @param td - description of the test\n+     * @return status after modification (the originalStatus by default)\n+     *\/\n+    @Override\n+    protected void setTestResultStatus(TestResult testResultToFill, Status execStatus) {\n+        Status newStatus = execStatus;\n+        try {\n+            TestDescription td = testResultToFill.getDescription();\n+        }\n+        catch(TestResult.Fault f){\n+            newStatus = new Status(Status.ERROR, \"Invalid state during testing. - test description missin.\");\n+            testResultToFill.setStatus(newStatus);\n+            return;\n+        }\n+        for ( StatusTransformer st : STATUS_TRANSFORMERS) {\n+            newStatus = st.transform(newStatus, td);\n+            \/\/in case the status has been modified by this function we want to log it for any user controlling the results.\n+            newStatus = new Status(newStatus.getType(), newStatus.getReason() +\n+                    \" - The status of this test result has been modified by external code - \" +\n+                st.getClass().getName());\n+        }\n+        testResultToFill.setStatus(newStatus);\n+    }\n+\n+    \/**\n+     * This method tries to search for alternative implementations of StatusTransformer. If no implementation is found\n+     * returns an empty list.\n+     * @return List<StatusTransformer> if some implementations are found and empty list if no implementation has been found.\n+     *\/\n+    private static synchronized List<StatusTransformer> loadStatusTransformers(){\n+        ServiceLoader<StatusTransformer> loader = ServiceLoader.load(StatusTransformer.class);\n+\n+        Iterator<StatusTransformer> iterator = loader.iterator();\n+        List<StatusTransformer> services = new ArrayList<>();\n+\n+        while (iterator.hasNext()) {\n+            services.add(iterator.next());\n+        }\n+\n+        return services;\n+    }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package com.sun.javatest.regtest.exec;\n+\n+import com.sun.javatest.Status;\n+import com.sun.javatest.TestDescription;\n+\n+\/**\n+ * Enables users to create their own status modifications for purposes of different testing strategies.\n+ * This allows user to omit certain kinds of failures or pinpoint tests that passed even though the jvm\n+ * crashed in the process without being intended to.\n+ *\/\n+public interface StatusTransformer {\n+    public Status transform(Status originalStatus, TestDescription td);\n+}\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/StatusTransformer.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}