{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import com.intellij.openapi.projectRoots.JdkUtil;\n+import com.intellij.openapi.ui.ComboBox;\n@@ -35,0 +37,1 @@\n+import com.intellij.ui.components.JBTextField;\n@@ -41,0 +44,2 @@\n+import java.util.Objects;\n+import java.util.stream.IntStream;\n@@ -43,1 +48,1 @@\n- * This class models the dialog associated with the (project-wide) jtreg tool settings.\n+ * This class models the \"Run\/Debug Configurations\" dialog for the JTReg tool settings.\n@@ -48,1 +53,0 @@\n-    private TextFieldWithBrowseButton jtregDir;\n@@ -66,0 +70,4 @@\n+    \/**\n+     * Gets called for each JTReg configuration entry\n+     * when it appears in the \"Run\/Debug Configurations\" window.\n+     *\/\n@@ -68,2 +76,0 @@\n-        jtregDir = new TextFieldWithBrowseButton();\n-        jtregDir.addBrowseFolderListener(\"Directory with Strategies\", null, project, FileChooserDescriptorFactory.createSingleFolderDescriptor());\n@@ -86,0 +92,5 @@\n+    \/**\n+     * Gets frequently called to retrieve data from the form.\n+     *\n+     * @param configuration JTReg configuration to be populated.\n+     *\/\n@@ -87,3 +98,3 @@\n-    public void applyEditorTo(final JTRegConfiguration configuration) {\n-        configuration.setAlternativeJrePath(jrePathEditor.getJrePathOrName());\n-        configuration.setAlternativeJrePathEnabled(jrePathEditor.isAlternativeJreSelected());\n+    public void applyEditorTo(@NotNull final JTRegConfiguration configuration) {\n+        applyEditorJrePathTo(configuration);\n+\n@@ -100,0 +111,57 @@\n+    \/**\n+     * Retrieves the raw string value from the JRE Path Editor,\n+     * checks whether it is present in the list of the JRE Path Editor.\n+     * If it is in the list, the value is retrieved as usual.\n+     * Otherwise, the method checks if the value is a valid JDK path,\n+     * and if so, adds it to the JRE Path Editor list.\n+     * <p>\n+     * If the user manually selects the JRE path, it is always considered \"alternative\".\n+     * <p>\n+     * Resolves the window freeze issue when the user specifies a JRE path\n+     * that is missing from the project's SDK list.\n+     * <p>\n+     * <b>Note:<\/b> Using the methods\n+     * {@link JrePathEditor#getJrePathOrName} and {@link JrePathEditor#isAlternativeJreSelected}\n+     * is resource-intensive when the selected path corresponds to the valid Java home,\n+     * but this path is not present in the JrePathEditor list.\n+     *\n+     * @param configuration the JTReg configuration\n+     *                      whose fields {@code alternativeJrePath} and {@code isAlternativeJre}\n+     *                      need to be populated.\n+     * @see com.intellij.execution.ui.JreComboboxEditor#getItem()\n+     * @see org.jetbrains.jps.model.java.impl.JdkVersionDetectorImpl#detectJdkVersionInfo\n+     *\/\n+    private void applyEditorJrePathTo(@NotNull JTRegConfiguration configuration) {\n+        final ComboBox<JrePathEditor.JreComboBoxItem> jreComboBox = jrePathEditor.getComponent();\n+        final ComboBoxEditor jreComboBoxEditor = jreComboBox.getEditor();\n+        final JBTextField jreTextField = (JBTextField) jreComboBoxEditor.getEditorComponent();\n+\n+        final String jrePathOrNameText = jreTextField.getText().trim();\n+        final boolean inList = IntStream.range(0, jreComboBox.getItemCount())\n+                .mapToObj(jreComboBox::getItemAt)\n+                .map(JrePathEditor.JreComboBoxItem::getPresentableText)\n+                .filter(Objects::nonNull)\n+                .anyMatch(pathOrName -> pathOrName.equals(jrePathOrNameText));\n+\n+        final String alternativeJrePath;\n+        final boolean alternativeJREPathEnabled;\n+        if (inList) { \/\/ safe to get item from JRE path editor\n+            alternativeJrePath = jrePathEditor.getJrePathOrName();\n+            alternativeJREPathEnabled = jrePathEditor.isAlternativeJreSelected();\n+        } else { \/\/ JRE path editor would be time-consuming\n+            alternativeJrePath = FileUtil.toSystemIndependentName(jrePathOrNameText); \/\/ The value here should always be the path, not the name.\n+            alternativeJREPathEnabled = true;\n+            if (JdkUtil.checkForJdk(alternativeJrePath)) {\n+                \/\/ If the path is a valid JDK, add it to the ComboBox list.\n+                jrePathEditor.setPathOrName(alternativeJrePath, true);\n+            }\n+        }\n+        configuration.setAlternativeJrePath(alternativeJrePath);\n+        configuration.setAlternativeJrePathEnabled(alternativeJREPathEnabled);\n+    }\n+\n+    \/**\n+     * Gets called to populate the fields in the form from the stored JTReg configuration.\n+     *\n+     * @param configuration JTReg stored configuration.\n+     *\/\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.java","additions":75,"deletions":7,"binary":false,"changes":82,"status":"modified"}]}