{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @build *\n+ * @build TestUsingAllLibraries NoProperties WithPreview WithoutPreview\n","filename":"test\/libPropertiesEnablePreview\/TestUsingAllLibraries.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @build *\n+ * @build TestUsingPreviewLibrary WithPreview\n","filename":"test\/libPropertiesEnablePreview\/TestUsingPreviewLibrary.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 7903813\n+ * @enablePreview false\n+ * @library lib-with-preview\n+ * @build TestWithDisabledPreview WithPreview\n+ * @run main TestWithDisabledPreview\n+ *\/\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.DataInputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+public class TestWithDisabledPreview {\n+    public static void main(String... args) throws Exception {\n+        var location = TestWithDisabledPreview.class.getProtectionDomain().getCodeSource().getLocation();\n+        var classFile = Path.of(location.toURI()).resolve(TestWithDisabledPreview.class.getSimpleName() + \".class\");\n+        try (var dis = new DataInputStream(new ByteArrayInputStream(Files.readAllBytes(classFile)))) {\n+            dis.skipBytes(4); \/\/ 0xCAFEBABE\n+            var minor = dis.readUnsignedShort();\n+            if (minor != 0) throw new AssertionError(\"Unexpected minor version: \" + minor);\n+        }\n+    }\n+}\n","filename":"test\/libPropertiesEnablePreview\/TestWithDisabledPreview.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -28,1 +28,1 @@\n- * @build *\n+ * @build TestWithEnablePreview WithoutPreview\n","filename":"test\/libPropertiesEnablePreview\/TestWithEnablePreview.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}