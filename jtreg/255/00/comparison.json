{"files":[{"patch":"@@ -366,5 +366,1 @@\n-        if (runJavac\n-                && !script.disablePreview()\n-                && !seenEnablePreview\n-                && (script.enablePreview())\n-                && (libLocn == null || libLocn.isTest())) {\n+        if (runJavac && script.enablePreview() && !seenEnablePreview) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/CompileAction.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-enablePreview = true\n","filename":"test\/libBuildArgs\/lib\/LIBRARY.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-ifdef JDK14HOME\n-\n@@ -36,1 +34,2 @@\n-\t\t-jdk:$(JDK14HOME) \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-javacoptions:-XDforcePreview \\\n@@ -49,1 +48,2 @@\n-\t\t-jdk:$(JDK14HOME) \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-javacoptions:-XDforcePreview \\\n@@ -59,2 +59,0 @@\n-\n-endif\n","filename":"test\/preview\/PreviewTest.gmk","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,4 @@\n+#\n+# Run `jtreg` with `-javacoptions:-XDforcePreview` to not rely JDK-specific preview features\n+#\n+\n","filename":"test\/preview\/TEST.ROOT","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,3 @@\n+#\n+# Run `jtreg` with `-javacoptions:-XDforcePreview` to not rely JDK-specific preview features\n+#\n","filename":"test\/previewLeaking\/TEST.ROOT","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+#\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+#----------------------------------------------------------------------\n+#\n+# Verify preview flag leaks into library class compilation\n+\n+$(BUILDTESTDIR)\/PreviewLeakingTest.ok: \\\n+\t    $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t    $(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t-javacoptions:-XDforcePreview \\\n+\t\t-va \\\n+\t\t$(TESTDIR)\/previewLeaking\/\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += $(BUILDTESTDIR)\/PreviewLeakingTest.ok\n","filename":"test\/previewLeaking\/TestPreviewLeaking.gmk","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/\/ no tests\n+record Lib() {}\n","filename":"test\/previewLeaking\/lib\/Lib.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/groups\/d4\/NoTests.java","status":"copied"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @enablePreview\n+ * @library \/lib\n+ * @build Lib PreviewTest\n+ * @run main PreviewTest\n+ *\/\n+\n+import java.io.DataInputStream;\n+\n+public record PreviewTest() {\n+  public static void main(String... args) {\n+    assertUsesPreviewFeature(PreviewTest.class);\n+    assertUsesPreviewFeature(Lib.class);\n+  }\n+\n+  static void assertUsesPreviewFeature(Class<?> type) {\n+    var minor = minorVersion(type);\n+    if (minor != 65535) {\n+      throw new AssertionError(type + \" doesn't use preview features. Minor version is \" + minor);\n+    }\n+  }\n+\n+  static int minorVersion(Class<?> type) {\n+    var name = type.getName().replace('.', '\/') + \".class\";\n+    try (var in = type.getClassLoader().getResourceAsStream(name)) {\n+      if (in == null) throw new RuntimeException(\"Resource not found: \" + name);\n+      var dis = new DataInputStream(in);\n+      dis.skipBytes(4); \/\/ 0xCAFEBABE\n+      return dis.readUnsignedShort();\n+    } catch (Exception exception) {\n+      throw new RuntimeException(\"Reading resource failed: \" + name, exception);\n+    }\n+  }\n+}\n","filename":"test\/previewLeaking\/tag\/PreviewTest.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}