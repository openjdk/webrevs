{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.io.IOException;\n@@ -45,0 +46,1 @@\n+import java.util.Optional;\n@@ -470,2 +472,0 @@\n-    private static final Pattern namePattern = Pattern.compile(\"\\\\$\\\\{([A-Za-z0-9._]+)}\");\n-\n@@ -474,1 +474,1 @@\n-        Matcher m = namePattern.matcher(arg);\n+        Matcher m = SMART_ACTION_NAME_PATTERN.matcher(arg);\n@@ -1143,0 +1143,1 @@\n+        computeMainClassNameFromTestFile().ifPresent(name -> p.put(\"test.main.class\", name));\n@@ -1178,1 +1179,1 @@\n-    \/\/ where\n+\n@@ -1184,6 +1185,21 @@\n-\/\/    \/\/ where\n-\/\/    private String toString(List<File> files) {\n-\/\/        return files.stream()\n-\/\/                .map(File::getPath)\n-\/\/                .collect(Collectors.joining(File.pathSeparator));\n-\/\/    }\n+\n+    private Optional<String> computeMainClassNameFromTestFile() {\n+        Path file = locations.absTestFile();\n+        \/\/ Take file name as basis for class name.\n+        String fileName = file.getFileName().toString();\n+        int fileNameLength = fileName.length(); \/\/ including \".java\".length() = 5\n+        if (fileNameLength <= 5 && !fileName.endsWith(\".java\")) {\n+            return Optional.empty();\n+        }\n+        String className = fileName.substring(0, fileNameLength - 5);\n+        \/\/ Scan .java file for \"package NAME;\" without taking comments into account.\n+        try {\n+            \/\/ Assume non-large files in UTF-8 encoding.\n+            String charContent = Files.readString(file);\n+            Matcher packageMatcher = PACKAGE_NAME_PATTERN.matcher(charContent);\n+            String packageName = packageMatcher.find() ? packageMatcher.group(1) + \".\" : \"\";\n+            return Optional.of(packageName + className);\n+        } catch (IOException ignored) {\n+            return Optional.empty();\n+        }\n+    }\n@@ -1329,0 +1345,4 @@\n+    private static final Pattern\n+        SMART_ACTION_NAME_PATTERN = Pattern.compile(\"\\\\$\\\\{([A-Za-z0-9._]+)}\"),\n+        PACKAGE_NAME_PATTERN = Pattern.compile(\"package\\\\s+([\\\\w.]+);\");\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":30,"deletions":10,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2006, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2006, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -1252,0 +1252,9 @@\n+<tr>\n+<td><code>test.main.class<\/code>\n+<td><i>Not Available<\/i>\n+<td>The computed name of the main entry-point of the current Java source file.\n+It is based on the simple <code>test.file<\/code> name without the <code>.java<\/code>\n+extension; prepended with an optional package name parsed from the source file.\n+Therefore, non-Java files aren't supported nor inner classes are detected.\n+It can be used in action tags, for example:<code>@run main ${test.main.class}<\/code>\n+\n","filename":"src\/share\/doc\/javatest\/regtest\/tag-spec.html","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-\t$(MKDIR) $(@:%.ok=%)\n+\t$(MKDIR) -p $(@:%.ok=%)\n@@ -37,2 +37,4 @@\n-\t\t\t> $(@:%.ok=%\/jt.log)\n-\t$(GREP) -s 'Test results: passed: 6' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1 || \\\n+\t\ttrue \"non-zero exit code from JavaTest intentionally ignored\"\n+\t$(GREP) -s 'Test results: passed: 8; error: 1' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(GREP) -s 'Bad classname provided for .build.: ${test.main.class}' $(@:%.ok=%\/work\/optOut\/Test3.jtr)  > \/dev\/null\n","filename":"test\/smartActionArgs\/SmartActionArgs.gmk","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @run main Test ${os.name} --os=${os.name} x${os.name}x${os.version}x\n+ * @run main ${test.main.class} ${os.name} --os=${os.name} x${os.name}x${os.version}x\n","filename":"test\/smartActionArgs\/optAuto\/Test.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @run main Test2 --test.src ${test.src}\n+ * @run main ${test.main.class} --test.src ${test.src}\n","filename":"test\/smartActionArgs\/optAuto\/Test2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package optAuto;\n+\n+\/*\n+ * @test\n+ * @run main ${test.main.class}\n+ *\/\n+\n+public class Test3 {\n+    public static void main(String... args) {\n+        String expected = \"optAuto\";\n+        String actual = Test3.class.getPackage().getName();\n+        if (!expected.equals(actual)) {\n+            throw new AssertionError(\"Expected package name \" + expected + \", but got: \" + actual);\n+        }\n+    }\n+}\n","filename":"test\/smartActionArgs\/optAuto\/Test3.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package optIn;\n+\n+\/*\n+ * @test\n+ * @run main ${test.main.class}\n+ *\/\n+\n+public class Test3 {\n+    public static void main(String... args) {\n+        String expected = \"optIn\";\n+        String actual = Test3.class.getPackage().getName();\n+        if (!expected.equals(actual)) {\n+            throw new AssertionError(\"Expected package name \" + expected + \", but got: \" + actual);\n+        }\n+    }\n+}\n","filename":"test\/smartActionArgs\/optIn\/Test3.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package optOut;\n+\n+\/*\n+ * @test\n+ * @run main ${test.main.class}\n+ *\/\n+\n+public class Test3 {\n+    public static void main(String... args) {\n+        throw new AssertionError(\"Should not be here: smart action args are disabled\");\n+    }\n+}\n","filename":"test\/smartActionArgs\/optOut\/Test3.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"}]}