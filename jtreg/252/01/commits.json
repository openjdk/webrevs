[{"commit":{"message":"JTRegClassConfigurationProducer: add `null` check for `setRunClass` case"},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java"}],"sha":"3a3f10197c0670da4489d13b66cbabca10873b77"},{"commit":{"message":"Fix typo: \"left\" -> \"rest of the\""},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java"}],"sha":"b7ff142290026c6ee42e0713a8ca8dba1e54a7cd"},{"commit":{"message":"Remove `final` from local variables"},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java"},{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java"},{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/JTRegUtils.java"}],"sha":"a1350eb9ed33e626ffeab2518f656b226e5a1b96"},{"commit":{"message":"JTRegConfigurationProducer.java:\n- Fix logic in `isConfigurationFromContext` for checking if two configurations are identical:\n-- Replace the use of the current PSI element for queries with the exact element intended for execution.\n- Compare string-typed configuration parameters using a \"not-nullify\" approach (`null == \"\"`).\n- Implement `findExactRunElement` to locate the specific PSI element for execution among the current element’s parents.\n- Add a JUnit check to the `shouldReplace` method."},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java"}],"sha":"a66ceee22b6368952a5e7f94cf64f5f96c581ea1"},{"commit":{"message":"JTRegConfigurationProducer.java:\n- Fix logic in `isConfigurationFromContext` for checking if two configurations are identical:\n-- Replace the use of the current PSI element for queries with the exact element intended for execution.\n- Compare string-typed configuration parameters using a \"not-nullify\" approach (`null == \"\"`).\n- Implement `findExactRunElement` to locate the specific PSI element for execution among the current element’s parents.\n- Add a JUnit check to the `shouldReplace` method."},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java"}],"sha":"1e4e4ee73836a6ef6559a78368019247c6fe1969"},{"commit":{"message":"JTRegUtils.java:\n- Simplified method \"isInJTRegRoot\" in order to remove code check warning."},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/JTRegUtils.java"}],"sha":"e4c4f7f29b055bc919b85584b5326bd23e6531e2"},{"commit":{"message":"JTRegUtils.java:\n- Add a predicate to compare two strings using a \"not-nullify\" approach (`null == \"\"`).\n- Add predicates to determine whether a PSI method or class is a TestNG or JUnit element.\n- Add predicates to check if a PSI element is a file or a directory.\n- Extract and refactor code from `JTRegClassConfigurationProducer.java` into a method `isRunnableByJTReg`."},"files":[{"filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/util\/JTRegUtils.java"}],"sha":"066c22aed90f860c763e3be21b8a4d43a523a723"},{"commit":{"message":"Add JUnit plugin into dependencies:\n- build.gradle\n- plugin.xml"},"files":[{"filename":"plugins\/idea\/build.gradle"},{"filename":"plugins\/idea\/src\/main\/resources\/META-INF\/plugin.xml"}],"sha":"5e390e7094bc38b1cd647d4542e19c927fbd73c3"}]