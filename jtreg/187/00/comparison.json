{"files":[{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.agent;\n+\n+import java.util.Scanner;\n+import java.util.regex.MatchResult;\n+\n+public final class AgentVerbose {\n+    public enum Mode { NONE, DEFAULT, SUMMARY, BRIEF, FULL }\n+\n+    \/**\n+     * Returns a verbose instance.\n+     *\n+     * @param s string-representation to parse\n+     * @return DEFAULT or a verbose instance parsed from the input string\n+     *\/\n+    public static AgentVerbose ofStringRepresentation(String s) {\n+        if (s == null || s.trim().isEmpty()) return new AgentVerbose(Mode.DEFAULT);\n+        try (Scanner scanner = new Scanner(s)) {\n+            scanner.findInLine(\"Verbose\\\\[p=(.+),f=(.+),e=(.+),t=(.+),m=(.+)]\");\n+            MatchResult result = scanner.match();\n+            Mode p = Mode.valueOf(result.group(1));\n+            Mode f = Mode.valueOf(result.group(2));\n+            Mode e = Mode.valueOf(result.group(3));\n+            boolean t = Boolean.parseBoolean(result.group(4));\n+            boolean m = Boolean.parseBoolean(result.group(5));\n+            return new AgentVerbose(p, f, e, t, m);\n+        }\n+    }\n+\n+    private AgentVerbose(Mode mode) {\n+        this(mode, mode, mode, false, false);\n+    }\n+\n+    private AgentVerbose(Mode passMode, Mode failMode, Mode errorMode, boolean time, boolean multiRun) {\n+        this.passMode = passMode;\n+        this.failMode = failMode;\n+        this.errorMode = errorMode;\n+        this.time = time;\n+        this.multiRun = multiRun;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Verbose[p=\" + passMode + \",f=\" + failMode + \",e=\" + errorMode + \",t=\" + time + \",m=\" + multiRun + \"]\";\n+    }\n+\n+    public final Mode passMode;\n+    public final Mode failMode;\n+    public final Mode errorMode;\n+    public final boolean time;\n+    public final boolean multiRun;\n+}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/AgentVerbose.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,0 +136,2 @@\n+            AgentVerbose verbose = AgentVerbose.ofStringRepresentation(System.getProperty(\"test.verbose\"));\n+\n@@ -137,1 +139,1 @@\n-                .addTestExecutionListeners(new PrintingListener(System.err))\n+                .addTestExecutionListeners(new PrintingListener(System.err, verbose))\n@@ -190,0 +192,1 @@\n+        final AgentVerbose verbose;\n@@ -191,2 +194,2 @@\n-        PrintingListener(PrintStream stream) {\n-            this(new PrintWriter(stream, true));\n+        PrintingListener(PrintStream stream, AgentVerbose verbose) {\n+            this(new PrintWriter(stream, true), verbose);\n@@ -195,1 +198,1 @@\n-        PrintingListener(PrintWriter printer) {\n+        PrintingListener(PrintWriter printer, AgentVerbose verbose) {\n@@ -198,0 +201,1 @@\n+            this.verbose = verbose;\n@@ -202,0 +206,1 @@\n+            if (verbose.passMode == AgentVerbose.Mode.NONE) return;\n@@ -218,0 +223,1 @@\n+            if (verbose.passMode == AgentVerbose.Mode.NONE) return;\n@@ -234,0 +240,4 @@\n+            TestExecutionResult.Status status = result.getStatus();\n+            if (status == TestExecutionResult.Status.SUCCESSFUL) {\n+                if (verbose.passMode == AgentVerbose.Mode.NONE) return;\n+            }\n@@ -236,1 +246,0 @@\n-                TestExecutionResult.Status status = result.getStatus();\n@@ -256,0 +265,1 @@\n+            if (verbose.passMode == AgentVerbose.Mode.NONE) return;\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/JUnitRunner.java","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+import com.sun.javatest.regtest.report.Verbose;\n@@ -643,0 +644,1 @@\n+    private static final String TEST_VERBOSE = \".testVerbose\";\n@@ -745,0 +747,5 @@\n+            v = data.get(prefix + TEST_VERBOSE);\n+            if (v != null) {\n+                setVerbose(Verbose.decode(v));\n+            }\n+\n@@ -832,0 +839,4 @@\n+\n+        if (verbose != null) {\n+            data.put(prefix + TEST_VERBOSE, verbose.toString());\n+        }\n@@ -1321,0 +1332,12 @@\n+    public void setVerbose(Verbose verbose) {\n+        this.verbose = verbose;\n+    }\n+\n+    public Verbose getVerbose() {\n+        return verbose;\n+    }\n+\n+    private Verbose verbose;\n+\n+    \/\/---------------------------------------------------------------------\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/RegressionParameters.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,0 +78,1 @@\n+import com.sun.javatest.regtest.report.Verbose;\n@@ -1142,0 +1143,4 @@\n+        Verbose verbose = params.getVerbose();\n+        if (verbose != null) {\n+            p.put(\"test.verbose\", verbose.toString());\n+        }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -76,7 +76,6 @@\n-        if (in == null) {\n-            throw new Error(\"Can't find jars.properties\");\n-        }\n-        try (InputStreamReader r = new InputStreamReader(in)) {\n-            props.load(r);\n-        } catch (IOException e) {\n-            throw new Error(\"problem reading jars.properties\");\n+        if (in != null) {\n+            try (InputStreamReader r = new InputStreamReader(in)) {\n+                props.load(r);\n+            } catch (IOException e) {\n+                throw new Error(\"problem reading jars.properties\");\n+            }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/JarManager.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1847,0 +1847,2 @@\n+            rp.setVerbose(verbose);\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}