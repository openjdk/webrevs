{"files":[{"patch":"@@ -1,46 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Checks the value of System.getProperty(\"os.version\") against an expected value.\n- * For more info, see\n- * JDK-8253702: BigSur version number reported as 10.16, should be 11.nn\n- * https:\/\/bugs.openjdk.org\/browse\/JDK-8253702\n- *\/\n-public class CheckJavaOSVersion {\n-    public static void main(String... args) {\n-        checkJavaOSVersion(args[0]);\n-    }\n-\n-    private static void checkJavaOSVersion(String expectVersion) {\n-        String osVersion = System.getProperty(\"os.version\");\n-        if (!osVersion.startsWith(expectVersion)) {\n-            System.err.println(\"The version of JDK you are using does not report the OS version correctly.\");\n-            System.err.println(\"    java.home:    \" + System.getProperty(\"java.home\"));\n-            System.err.println(\"    java.version: \" + System.getProperty(\"java.version\"));\n-            System.err.println(\"    os.version:   \" + osVersion + \"  (expected: \" + expectVersion + \")\");\n-            System.err.println(\"Use a more recent update of this version of JDK, or a newer version of JDK.\");\n-            System.exit(1);\n-        }\n-    }\n-}\n","filename":"make\/CheckJavaOSVersion.java","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -45,1 +45,1 @@\n-test: checkJavaOSVersion $(BUILDTESTDIR) $(INITIAL_TESTS) $(TESTS) $(FINAL_TESTS)\n+test: $(BUILDTESTDIR) $(INITIAL_TESTS) $(TESTS) $(FINAL_TESTS)\n@@ -70,1 +70,1 @@\n-quick-test: checkJavaOSVersion $(BUILDTESTDIR) $(INITIAL_TESTS)\n+quick-test: $(BUILDTESTDIR) $(INITIAL_TESTS)\n@@ -136,8 +136,0 @@\n-checkJavaOSVersion:\n-ifeq ($(OS_NAME), macosx)\n-\t$(JDKJAVA) CheckJavaOSVersion.java $(OS_VERSION)\n-endif\n-\n-#----------------------------------------------------------------------\n-\n-\n","filename":"make\/Makefile","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -401,12 +401,0 @@\n-checkJavaOSVersion() {\n-  # This checks that the value in the Java \"os.version\" system property\n-  # is as expected.  While it is OK to *build* jtreg with a JDK with this bug,\n-  # some of the `jtreg` self-tests will fail: notably, test\/problemList.\n-  # See https:\/\/bugs.openjdk.org\/browse\/JDK-8253702\n-  case `uname` in\n-    Darwin )\n-      OS_VERSION=`defaults read loginwindow SystemVersionStampAsString`\n-      ${JAVA_HOME}\/bin\/java ${mydir}\/CheckJavaOSVersion.java ${OS_VERSION}\n-  esac\n-}\n-\n@@ -415,1 +403,0 @@\n-#checkJavaOSVersion   #temp: check for presence of the JDK os.version bug (JDK-8253702)\n","filename":"make\/build.sh","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import java.io.InputStreamReader;\n@@ -49,1 +48,0 @@\n-import java.nio.file.Paths;\n@@ -83,1 +81,0 @@\n-import com.sun.javatest.TestDescription;\n@@ -86,1 +83,0 @@\n-import com.sun.javatest.TestFinder;\n@@ -145,1 +141,0 @@\n-        checkJavaOSVersion();\n@@ -189,43 +184,0 @@\n-    private static void checkJavaOSVersion() {\n-        String osName = System.getProperty(\"os.name\");\n-        if (osName != null && osName.equals(\"Mac OS X\")) {\n-            var command = List.of(\"sw_vers\", \"-productVersion\");\n-            try {\n-                String expectVersion;\n-                Process p = new ProcessBuilder(command)\n-                        .redirectErrorStream(true)\n-                        .start();\n-                try (InputStream in = p.getInputStream();\n-                    BufferedReader r = new BufferedReader(new InputStreamReader(in))) {\n-                    expectVersion = r.lines().collect(Collectors.joining());\n-                }\n-                p.waitFor();\n-                int rc = p.exitValue();\n-                if (rc != 0) {\n-                    System.err.println(\"Error getting OS version: \"\n-                            + String.join(\" \", command) + \": rc=\" + rc);\n-                    System.exit(99);\n-                }\n-\n-                checkJavaOSVersion(expectVersion);\n-\n-            } catch (IOException | InterruptedException e) {\n-                System.err.println(\"Error getting OS version: \"\n-                        + String.join(\" \", command) + \": \" + e);\n-                System.exit(99);\n-            }\n-        }\n-    }\n-\n-    private static void checkJavaOSVersion(String expectVersion) {\n-        String osVersion = System.getProperty(\"os.version\");\n-        if (!osVersion.startsWith(expectVersion)) {\n-            System.err.println(\"The version of JDK you are using to run jtreg does not report the OS version correctly.\");\n-            System.err.println(\"    java.home:    \" + System.getProperty(\"java.home\"));\n-            System.err.println(\"    java.version: \" + System.getProperty(\"java.version\"));\n-            System.err.println(\"    os.version:   \" + osVersion + \"  (expected: \" + expectVersion + \")\");\n-            System.err.println(\"Use a more recent update of this version of JDK, or a newer version of JDK.\");\n-            System.exit(1);\n-        }\n-    }\n-\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":1,"deletions":49,"binary":false,"changes":50,"status":"modified"}]}