{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -714,0 +714,1 @@\n+        LOG_EXCLUSIVE_ACCESS_TIME = \"exclusiveAccess wait time (seconds): \",\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/Action.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import java.time.Duration;\n@@ -341,2 +342,6 @@\n-            if (lock != null) lock.lock();\n-\n+            long exclusiveAccessWaitMillis = 0;\n+            if (lock != null) {\n+                long startNanos = System.nanoTime();\n+                lock.lock();\n+                exclusiveAccessWaitMillis = Duration.ofNanos(System.nanoTime() - startNanos).toMillis();\n+            }\n@@ -345,1 +350,6 @@\n-\n+            if (lock != null) {\n+                \/\/ print the duration we waited for acquiring a lock due to\n+                \/\/ exclusiveAccess.dir\n+                section.getMessageWriter().println(LOG_EXCLUSIVE_ACCESS_TIME\n+                        + ((double) exclusiveAccessWaitMillis \/ 1000.0));\n+            }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/MainAction.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.time.Duration;\n@@ -285,1 +286,7 @@\n-            if (lock != null) lock.lock();\n+            if (lock != null) {\n+                long startNanos = System.nanoTime();\n+                lock.lock();\n+                long durationMillis = Duration.ofNanos(System.nanoTime() - startNanos).toMillis();\n+                section.getMessageWriter().println(LOG_EXCLUSIVE_ACCESS_TIME\n+                        + ((double) durationMillis\/1000.0));\n+            }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/ShellAction.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-\t\t-conc:4 \\\n+\t\t-conc:5 \\\n@@ -41,1 +41,2 @@\n-\t$(GREP) -s 'Test results: passed: 4' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(GREP) -s 'Test results: passed: 5' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(GREP) -s 'exclusiveAccess wait time' -R $(@:%.ok=%\/work\/)  > \/dev\/null\n","filename":"test\/exclusive\/ExclusiveAccessTest.gmk","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.Date;\n+\n+\/*\n+ * @test\n+ * @run main Test\n+ *\/\n+public class Test {\n+\n+    public static void main(final String[] args) throws Exception {\n+        System.out.println(\"test run at \" + new Date());\n+    }\n+}\n","filename":"test\/exclusive\/dir\/Test.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"}]}