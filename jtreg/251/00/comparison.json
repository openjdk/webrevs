{"files":[{"patch":"@@ -87,1 +87,1 @@\n-    public void setEnvs(Map<String, String> map) {\n+    public void setEnvs(@NotNull Map<String, String> map) {\n@@ -123,1 +123,1 @@\n-    public void readExternal(Element element) throws InvalidDataException {\n+    public void readExternal(@NotNull Element element) throws InvalidDataException {\n@@ -130,1 +130,1 @@\n-    public void writeExternal(Element element) throws WriteExternalException {\n+    public void writeExternal(@NotNull Element element) throws WriteExternalException {\n@@ -155,1 +155,1 @@\n-    public SMTRunnerConsoleProperties createTestConsoleProperties(Executor executor) {\n+    public @NotNull SMTRunnerConsoleProperties createTestConsoleProperties(@NotNull Executor executor) {\n@@ -196,1 +196,6 @@\n-    String getJDKString() {\n+    \/**\n+     * Returns the path to the JDK used by JTReg.\n+     *\n+     * @return the JDK path, or {@code null} if no JDK is selected or if it is invalid.\n+     *\/\n+    @Nullable String getJDKString() {\n@@ -198,7 +203,17 @@\n-        if (isAlternativeJrePathEnabled()) {\n-            String jdkPathString = getAlternativeJrePath();\n-            Sdk sdk = ProjectJdkTable.getInstance().findJdk(jdkPathString);\n-            if (sdk != null) {\n-                jdkString = sdk.getHomePath();\n-            } else if (JdkUtil.checkForJdk(jdkPathString)) {\n-                jdkString = jdkPathString;\n+        final ProjectJdkTable projectJdkTable = ProjectJdkTable.getInstance();\n+        if (alternativeJrePathEnabled) {\n+            if (null != alternativeJrePath) {\n+                final Sdk sdk = projectJdkTable.findJdk(alternativeJrePath);\n+                if (null != sdk) {\n+                    jdkString = sdk.getHomePath();\n+                } else if (JdkUtil.checkForJdk(alternativeJrePath)) {\n+                    jdkString = alternativeJrePath;\n+                }\n+            }\n+        } else { \/\/ Default SDK is chosen\n+            final String defaultJDKName = DefaultJreSelector.projectSdk(getProject()).getNameAndDescription().first;\n+            if (null != defaultJDKName) {\n+                final Sdk projectSDK = projectJdkTable.findJdk(defaultJDKName);\n+                if (null != projectSDK) {\n+                    jdkString = projectSDK.getHomePath();\n+                }\n@@ -206,3 +221,0 @@\n-        } else {\n-            String defaultJdk = DefaultJreSelector.projectSdk(getProject()).getNameAndDescription().first;\n-            jdkString = ProjectJdkTable.getInstance().findJdk(defaultJdk).getHomePath();\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfiguration.java","additions":27,"deletions":15,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-class JTRegConfigurationRunnableState extends JavaTestFrameworkRunnableState<JTRegConfiguration> {\n+public class JTRegConfigurationRunnableState extends JavaTestFrameworkRunnableState<JTRegConfiguration> {\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationRunnableState.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}