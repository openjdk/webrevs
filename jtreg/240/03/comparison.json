{"files":[{"patch":"@@ -14,1 +14,1 @@\n-      - uses: gradle\/wrapper-validation-action@v3\n+      - uses: gradle\/actions\/wrapper-validation@v4\n","filename":".github\/workflows\/gradle-wrapper-validation.yml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -10,1 +10,1 @@\n-<li>CODETOOLS-7903744: Update various versions used by jtreg IDEA plugin<\/li>\\\n+<li>CODETOOLS-7903934: Add support for query strings to the IntelliJ plugin<\/li>\\\n","filename":"plugins\/idea\/gradle.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,0 +73,1 @@\n+    private String query;\n@@ -221,0 +222,8 @@\n+    public String getQuery() {\n+        return query;\n+    }\n+\n+    public void setQuery(String query) {\n+        this.query = query;\n+    }\n+\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfiguration.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import com.intellij.execution.configurations.RuntimeConfigurationError;\n@@ -40,1 +39,0 @@\n-import com.intellij.execution.ui.DefaultJreSelector;\n@@ -42,3 +40,0 @@\n-import com.intellij.openapi.projectRoots.JdkUtil;\n-import com.intellij.openapi.projectRoots.ProjectJdkTable;\n-import com.intellij.openapi.projectRoots.Sdk;\n@@ -49,1 +44,0 @@\n-import com.oracle.plugin.jtreg.runtime.JTRegTestListener;\n@@ -151,1 +145,5 @@\n-            javaParameters.getProgramParametersList().add(getConfiguration().getRunClass());\n+            if (getConfiguration().getQuery() != null && !getConfiguration().getQuery().isEmpty()) {\n+                javaParameters.getProgramParametersList().add(getConfiguration().getRunClass() + \"?\" + getConfiguration().getQuery());\n+            } else {\n+                javaParameters.getProgramParametersList().add(getConfiguration().getRunClass());\n+            }\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/JTRegConfigurationRunnableState.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import com.intellij.lang.ant.config.AntConfiguration;\n@@ -37,2 +36,0 @@\n-import com.oracle.plugin.jtreg.configuration.JTRegConfiguration;\n-import com.oracle.plugin.jtreg.service.JTRegService;\n@@ -47,1 +44,1 @@\n-        final Location contextLocation = context.getLocation();\n+        final Location<PsiElement> contextLocation = context.getLocation();\n@@ -49,0 +46,2 @@\n+        final PsiElement element = contextLocation.getPsiElement();\n+\n@@ -62,1 +61,4 @@\n-        configuration.setName(psiFile.getName());\n+\n+        configuration.setQuery(getQuery(element));\n+        configuration.setName(nameForElement(element));\n+\n@@ -66,0 +68,13 @@\n+\n+    private static String nameForElement(PsiElement element) {\n+        if (element instanceof PsiIdentifier\n+                && element.getParent() instanceof PsiMethod method) {\n+            String className = ((PsiClass) method.getParent()).getQualifiedName();\n+            return className + \"::\" + method.getName();\n+        } else if (element instanceof PsiIdentifier\n+                && element.getParent() instanceof PsiClass cls) {\n+            return cls.getQualifiedName();\n+        } else {\n+            return element.getContainingFile().getName();\n+        }\n+    }\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegClassConfigurationProducer.java","additions":20,"deletions":5,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-import com.intellij.psi.PsiFile;\n+import com.intellij.psi.*;\n@@ -43,0 +43,1 @@\n+import com.oracle.plugin.jtreg.util.JTRegUtils;\n@@ -46,0 +47,1 @@\n+import java.util.StringJoiner;\n@@ -68,4 +70,89 @@\n-        PsiFile testClass = location.getPsiElement().getContainingFile();\n-        final String runClass = unitConfiguration.getRunClass();\n-        return runClass != null && testClass != null && testClass.getVirtualFile() != null &&\n-                runClass.equals(testClass.getVirtualFile().getPath());\n+\n+        PsiElement element = location.getPsiElement();\n+        String query = getQuery(element);\n+        PsiFile contextFile = element.getContainingFile();\n+        final String configFile = unitConfiguration.getRunClass();\n+        return configFile != null && contextFile != null && contextFile.getVirtualFile() != null &&\n+                configFile.equals(contextFile.getVirtualFile().getPath())\n+                && query.equals(unitConfiguration.getQuery());\n+    }\n+\n+    protected static String getQuery(PsiElement element) {\n+        boolean isJUnit = JTRegUtils.isJUnitTestData(element.getContainingFile());\n+        boolean isTestNG = JTRegUtils.isTestNGTestData(element.getContainingFile());\n+        if (element instanceof PsiIdentifier\n+                && element.getParent() instanceof PsiMethod method) {\n+            if (isJUnit) {\n+                return \"junit-select:method:\" + getJUnitMethodQuery(method);\n+            } else if (isTestNG) {\n+                \/\/ just the method name for TestNG\n+                return method.getName();\n+            }\n+        } else if (isJUnit && element instanceof PsiIdentifier\n+                && element.getParent() instanceof PsiClass cls) {\n+            return \"junit-select:class:\" + binaryNameFor(cls);\n+        }\n+        return \"\";\n+    }\n+\n+    private static String getJUnitMethodQuery(PsiMethod method) {\n+        StringJoiner paramTypeNames = new StringJoiner(\",\");\n+        PsiParameterList params = method.getParameterList();\n+        for (int i = 0; i < params.getParametersCount(); i++) {\n+            PsiParameter param = params.getParameter(i);\n+            PsiType type = param.getType();\n+            paramTypeNames.add(binaryNameFor(type));\n+        }\n+        String className = binaryNameFor(((PsiClass) method.getParent()));\n+        return className + \"#\" + method.getName() + '(' + paramTypeNames + ')';\n+    }\n+\n+    private static String binaryNameFor(PsiType type) {\n+        if (type instanceof PsiPrimitiveType) {\n+            return type.getCanonicalText();\n+        } else if (type instanceof PsiClassType clsType) {\n+            return binaryNameFor(clsType.resolve());\n+        } else if (type instanceof PsiArrayType arrayType) {\n+            return binaryNameFor(arrayType);\n+        } else {\n+            return type.getCanonicalText();\n+        }\n+    }\n+\n+    private static String binaryNameFor(PsiClass cls) {\n+        \/\/ handle nested classes. Convert '.' to '$'\n+        String nestedName = cls.getName();\n+        PsiClass current = cls;\n+        while ((current = current.getContainingClass()) != null) {\n+            nestedName = current.getName() + \".\" + nestedName;\n+        }\n+        String qualName = cls.getQualifiedName();\n+        String packageName = qualName.substring(0, qualName.length() - nestedName.length());\n+        return packageName + nestedName.replace('.', '$');\n+    }\n+\n+    private static String binaryNameFor(PsiArrayType arrayType) {\n+        PsiType component = arrayType.getDeepComponentType();\n+        String componentName;\n+        if (component instanceof PsiPrimitiveType primitiveType) {\n+            componentName = descriptorFor(primitiveType);\n+        } else if (component instanceof PsiClassType clsType) {\n+            componentName = \"L\" + binaryNameFor(clsType.resolve()) + \";\";\n+        } else {\n+            componentName = component.getCanonicalText();\n+        }\n+        return \"[\".repeat(arrayType.getArrayDimensions()) + componentName;\n+    }\n+\n+    private static String descriptorFor(PsiPrimitiveType primitiveType) {\n+        return switch (primitiveType.getCanonicalText()) {\n+            case \"boolean\" -> \"Z\";\n+            case \"byte\" -> \"B\";\n+            case \"char\" -> \"C\";\n+            case \"short\" -> \"S\";\n+            case \"int\" -> \"I\";\n+            case \"long\" -> \"J\";\n+            case \"float\" -> \"F\";\n+            case \"double\" -> \"D\";\n+            default -> primitiveType.getCanonicalText();\n+        };\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/producers\/JTRegConfigurationProducer.java","additions":92,"deletions":5,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n-  <grid id=\"27dc6\" binding=\"mainPane\" layout-manager=\"GridLayoutManager\" row-count=\"6\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n+  <grid id=\"27dc6\" binding=\"mainPane\" layout-manager=\"GridLayoutManager\" row-count=\"7\" column-count=\"2\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\n@@ -6,1 +6,1 @@\n-      <xy x=\"20\" y=\"20\" width=\"418\" height=\"227\"\/>\n+      <xy x=\"20\" y=\"20\" width=\"418\" height=\"253\"\/>\n@@ -13,1 +13,1 @@\n-          <grid row=\"3\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n+          <grid row=\"4\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n@@ -19,1 +19,1 @@\n-          <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n+          <grid row=\"3\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n@@ -27,1 +27,1 @@\n-          <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n+          <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n@@ -33,1 +33,1 @@\n-          <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" indent=\"0\" use-parent-layout=\"false\"\/>\n+          <grid row=\"6\" column=\"0\" row-span=\"1\" col-span=\"2\" vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" indent=\"0\" use-parent-layout=\"false\"\/>\n@@ -44,1 +44,1 @@\n-          <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n+          <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"\/>\n@@ -50,1 +50,1 @@\n-          <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n+          <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n@@ -60,1 +60,1 @@\n-          <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n+          <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n@@ -80,1 +80,1 @@\n-          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n+          <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\">\n@@ -88,0 +88,16 @@\n+      <component id=\"7994\" class=\"javax.swing.JTextField\" binding=\"jtregQuery\">\n+        <constraints>\n+          <grid row=\"1\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\">\n+            <preferred-size width=\"150\" height=\"-1\"\/>\n+          <\/grid>\n+        <\/constraints>\n+        <properties\/>\n+      <\/component>\n+      <component id=\"4cee6\" class=\"javax.swing.JLabel\">\n+        <constraints>\n+          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"\/>\n+        <\/constraints>\n+        <properties>\n+          <text value=\"Query string\"\/>\n+        <\/properties>\n+      <\/component>\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.form","additions":26,"deletions":10,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+    private JTextField jtregQuery;\n@@ -81,0 +82,1 @@\n+        jtregQuery.setEnabled(fileRadioButton.isSelected());\n@@ -93,0 +95,1 @@\n+        configuration.setQuery(jtregQuery.getText().trim());\n@@ -110,0 +113,1 @@\n+        jtregQuery.setText(configuration.getQuery());\n","filename":"plugins\/idea\/src\/main\/java\/com\/oracle\/plugin\/jtreg\/configuration\/ui\/JTRegConfigurable.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}