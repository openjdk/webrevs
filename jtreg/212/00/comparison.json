{"files":[{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2024, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.javatest.regtest.config;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Properties;\n+\n+\/**\n+ * Provide access to properties defined in LIBRARY.properties files.\n+ *\/\n+public final class LibraryProperties {\n+    private final boolean enablePreview;\n+\n+    public LibraryProperties(boolean enablePreview) {\n+        this.enablePreview = enablePreview;\n+    }\n+\n+    public static LibraryProperties of(Locations.LibLocn libLocn) throws UncheckedIOException {\n+        \/\/ default values being used when no LIBRARY.properties is present\n+        boolean enablePreview = false;\n+\n+        \/\/ read LIBRARY.properties file and initialize fields accordingly\n+        Path root = libLocn.absSrcDir;\n+        if (root != null && Files.isDirectory(root)) {\n+            Path file = root.resolve(\"LIBRARY.properties\");\n+            if (Files.exists(file)) {\n+                var properties = new Properties();\n+                try (var stream = Files.newInputStream(file)) {\n+                    properties.load(stream);\n+                } catch (IOException exception) {\n+                    throw new UncheckedIOException(\"Reading from file failed: \" + file.toUri(), exception);\n+                }\n+                enablePreview = initEnablePreview(properties);\n+            }\n+        }\n+        return new LibraryProperties(enablePreview);\n+    }\n+\n+    private static boolean initEnablePreview(Properties properties) {\n+        return Boolean.parseBoolean(properties.getProperty(\"enablePreview\", \"false\"));\n+    }\n+\n+    public boolean isEnablePreview() {\n+        return enablePreview;\n+    }\n+}\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/LibraryProperties.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -86,0 +86,8 @@\n+        public boolean isLibrary() {\n+            return name != null;\n+        }\n+\n+        public boolean isTest() {\n+            return name == null;\n+        }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/Locations.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2024, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.UncheckedIOException;\n@@ -42,0 +43,1 @@\n+import com.sun.javatest.regtest.config.LibraryProperties;\n@@ -227,1 +229,1 @@\n-                if (e.getKey().name != null) {\n+                if (e.getKey().isLibrary()) {\n@@ -239,1 +241,1 @@\n-                    if (e.getKey().name == null) {\n+                    if (e.getKey().isTest()) {\n@@ -304,0 +306,13 @@\n+        \/\/ read and add library-specific compilation properties\n+        if (libLocn.isLibrary()) {\n+            try {\n+                var properties = LibraryProperties.of(libLocn);\n+                if (properties.isEnablePreview()) {\n+                    compArgs.add(\"--enable-preview\");\n+                    compArgs.add(\"--release=\" + script.getTestJDKVersion().major);\n+                }\n+            } catch (UncheckedIOException exception) {\n+                throw new TestRunException(\"Reading library properties failed: \" + libLocn, exception);\n+            }\n+        }\n+\n@@ -322,1 +337,1 @@\n-        if (lib.name == null) {\n+        if (lib.isTest()) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/BuildAction.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -62,0 +62,1 @@\n+import com.sun.javatest.regtest.config.LibraryProperties;\n@@ -366,1 +367,3 @@\n-        if (runJavac && script.enablePreview() && !seenEnablePreview) {\n+        var needsEnablePreview = script.enablePreview() || usesLibraryCompiledWithPreviewEnabled();\n+\n+        if (runJavac && needsEnablePreview && !seenEnablePreview && libLocn.isTest()) {\n@@ -419,0 +422,7 @@\n+    private boolean usesLibraryCompiledWithPreviewEnabled() {\n+        return script.locations.getLibs().stream()\n+                .filter(LibLocn::isLibrary)\n+                .map(LibraryProperties::of) \/\/ cache library properties object in LibLocn ?\n+                .anyMatch(LibraryProperties::isEnablePreview);\n+    }\n+\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/CompileAction.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -784,1 +784,1 @@\n-        if (libLocn == null || libLocn.name == null) {\n+        if (libLocn == null || libLocn.isTest()) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/exec\/RegressionScript.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1939,3 +1939,3 @@\n-Tests that use preview features must use the `--enable-preview` to compile\n-and run the code.  In addition, to compile the code you must also specify the\n-appropriate source level.\n+Tests that use [preview features](https:\/\/openjdk.org\/jeps\/12) must use the \n+`--enable-preview` to compile and run the code.  In addition, to compile the \n+code you must also specify the appropriate source level.\n@@ -1957,0 +1957,8 @@\n+### My library uses \"preview features\": how do I specify the necessary options?\n+\n+Set `enablePreview=true` in the `LIBRARY.properties` file in the root directory\n+of the library (the directory specified in the `@library` tag.)\n+\n+Note that if a library uses preview features, any tests that use the library\n+will be assumed to need preview features enabled as well.\n+\n","filename":"src\/share\/doc\/javatest\/regtest\/faq.md","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -248,0 +248,7 @@\n+\n+<p>Configuration information for a library may be specified in a file named\n+<a href=\"LIBRARY_PROPERTIES\">LIBRARY.properties<\/a> in the root directory of\n+the library. A library may be specified to use preview features,\n+in which case the appropriate compile-time and runtime options will be\n+provided automatically. This extends to any tests that may use the library.\n+\n@@ -376,0 +383,3 @@\n+<p>If a test uses any libraries that use preview features,\n+the test will be assumed to also use preview features.\n+\n@@ -884,1 +894,1 @@\n-\n+<h3 id=\"TEST_ROOT_PROPERTIES\">TEST.ROOT and TEST.properties<\/h3>\n@@ -1023,0 +1033,13 @@\n+<h3 id=\"LIBRARY_PROPERTIES\">LIBRARY.properties<\/h3>\n+\n+Configuration properties for a library may be in a file named LIBRARY.properties\n+in the root directory of the library (that is, the directory specified in a\n+<code>@library<\/code> tag.\n+\n+The following property is available:\n+\n+<dl>\n+<dt id=\"library-enablePreview\"><code>enablePreview <var>&lt;true|false&gt;<\/var><\/code>\n+<dd>Specify whether the classes in this library use preview features and that\n+the necessary compile-time and run-time options should be provided automatically.\n+<\/dl>\n","filename":"src\/share\/doc\/javatest\/regtest\/tag-spec.html","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"},{"patch":"","filename":"test\/libBuildArgs\/lib\/LIBRARY.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/preview\/preview\/TEST.properties","status":"copied"}]}