{"files":[{"patch":"@@ -106,1 +106,1 @@\n-        private static Pattern pattern = Pattern.compile(\"\\\\S+\\\\s+\" + commalist + \"\\\\s\" + commalist + \".*\");\n+        private static Pattern pattern = Pattern.compile(\"\\\\S+\\\\s+\" + commalist + \"\\\\s+\" + commalist + \".*\");\n@@ -124,1 +124,1 @@\n-            return \"The fully qualified test must exists.\";\n+            return \"The fully qualified test must exist.\";\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/ExcludeFileVerifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,0 +83,1 @@\n+import com.sun.javatest.TestDescription;\n@@ -85,0 +86,1 @@\n+import com.sun.javatest.TestFinder;\n@@ -1297,1 +1299,1 @@\n-            verifyExcludeLists(testManager);\n+            verifyExcludeLists(testManager, baseDir);\n@@ -1422,1 +1424,8 @@\n-    void verifyExcludeLists(TestManager testManager) throws BadArgs, Fault, Harness.Fault, InterruptedException  {\n+    void verifyExcludeLists(TestManager testManager, Path baseDir) throws BadArgs, Fault, Harness.Fault, InterruptedException  {\n+        \/\/ dummy manager with an \"all\" spec for each suite\n+        TestManager dummyTestManager = new TestManager(new PrintWriter(System.out, true), baseDir, Tool.this::error);\n+        dummyTestManager.setWorkDirectory(testManager.getWorkDirectory()); \/\/ Without this, nullpointer happens in createparameters\n+        dummyTestManager.addTestSpecs(testManager.getTestSuites().stream()\n+            .map(ts -> TestManager.TestSpec.of(ts.getRootDir().toString()))\n+            .collect(Collectors.toList()));\n+\n@@ -1424,3 +1433,9 @@\n-        List<File> excludeFiles = new ArrayList<File>();\n-        for (RegressionTestSuite ts: testManager.getTestSuites()) {\n-            RegressionParameters params = createParameters(testManager, ts);\n+        for (RegressionTestSuite ts: dummyTestManager.getTestSuites()) {\n+            if (verbose != null)  {\n+                out.println(i18n.getString(\"main.tests.suite\", ts.getRootDir()));\n+                if (verbose == Verbose.ALL)  {\n+                    out.println(i18n.getString(\"main.tests.allrecognizedtests\"));\n+                }\n+            }\n+\n+            RegressionParameters params = createParameters(dummyTestManager, ts);\n@@ -1429,1 +1444,0 @@\n-                out.println(tr.getTestName());\n@@ -1431,0 +1445,3 @@\n+                if (verbose == Verbose.ALL)  {\n+                    out.println(tr.getTestName());\n+                }\n@@ -1432,0 +1449,5 @@\n+        }\n+\n+        List<File> excludeOrMatchFiles = new ArrayList<File>();\n+        for (RegressionTestSuite ts: testManager.getTestSuites()) {\n+            RegressionParameters params = createParameters(testManager, ts);\n@@ -1433,1 +1455,1 @@\n-                excludeFiles.add(f);\n+                excludeOrMatchFiles.add(f);\n@@ -1436,1 +1458,1 @@\n-                excludeFiles.add(p.toFile());\n+                excludeOrMatchFiles.add(p.toFile());\n@@ -1439,0 +1461,1 @@\n+\n@@ -1440,1 +1463,1 @@\n-        for(File plf : excludeFiles) {\n+        for(File plf : excludeOrMatchFiles) {\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/Tool.java","additions":32,"deletions":9,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -508,0 +508,1 @@\n+main.tests.allrecognizedtests=All recognized tests:\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/tool\/i18n.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+p\/Pass.java   123  \tx   \t\n","filename":"test\/verifyexclude\/ProblemList\/format.whitespace.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+group1 = p\/g\n","filename":"test\/verifyexclude\/TEST.groups","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -45,1 +45,1 @@\n-\t$(GREP) -s \"The fully qualified test must exists.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n+\t$(GREP) -s \"The fully qualified test must exist.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n@@ -65,1 +65,1 @@\n-\t$(GREP) -s \"The fully qualified test must exists.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n+\t$(GREP) -s \"The fully qualified test must exist.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n@@ -85,1 +85,1 @@\n-\t$(GREP) -s \"The fully qualified test must exists.\" $(@:%.ok=%\/log)\n+\t$(GREP) -s \"The fully qualified test must exist.\" $(@:%.ok=%\/log)\n@@ -104,1 +104,18 @@\n-\t$(GREP) -s \"The fully qualified test must exists.\" $(@:%.ok=%\/log)\n+\t$(GREP) -s \"The fully qualified test must exist.\" $(@:%.ok=%\/log)\n+\techo $@ passed at `date` > $@\n+\n+$(BUILDTESTDIR)\/verifyexclude.format.whitespace.ok: \\\n+                $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/javatest.jar\n+\t$(RM) $(@:%.ok=%\/work) $(@:%.ok=%\/report)\n+\t$(MKDIR) -p $(@:%.ok=%)\n+\t$(JDKHOME)\/bin\/java \\\n+\t\t-Djavatest.regtest.showCmd=true \\\n+\t\t-jar $(JTREG_IMAGEJARDIR)\/jtreg.jar \\\n+\t\t-w:$(@:%.ok=%\/work) \\\n+\t\t-r:$(@:%.ok=%\/report) \\\n+\t\t-exclude:$(TESTDIR)\/verifyexclude\/ProblemList\/format.whitespace.txt \\\n+\t\t--verify-exclude \\\n+\t\t$(TESTDIR)\/verifyexclude \\\n+\t\t> $(@:%.ok=%\/log) \\\n+\t    || (cat $(@:%.ok=%\/log) ; exit 1)\n@@ -160,1 +177,1 @@\n-\t$(GREP) -s \"The fully qualified test must exists.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n+\t$(GREP) -s \"The fully qualified test must exist.\" $(@:%.ok=%\/log) && exit 1 || exit 0\n@@ -182,0 +199,72 @@\n+$(BUILDTESTDIR)\/verifyexclude.good.invoke.direct.ok: \\\n+                $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/javatest.jar\n+\t$(RM) $(@:%.ok=%\/work) $(@:%.ok=%\/report)\n+\t$(MKDIR) -p $(@:%.ok=%)\n+\t$(JDKHOME)\/bin\/java \\\n+\t\t-Djavatest.regtest.showCmd=true \\\n+\t\t-jar $(JTREG_IMAGEJARDIR)\/jtreg.jar \\\n+\t\t-w:$(@:%.ok=%\/work) \\\n+\t\t-r:$(@:%.ok=%\/report) \\\n+\t\t-exclude:$(TESTDIR)\/verifyexclude\/ProblemList\/good.txt \\\n+\t\t--verify-exclude \\\n+\t\t$(TESTDIR)\/verifyexclude\/p\/Pass.java \\\n+\t\t> $(@:%.ok=%\/log) \\\n+\t    || (cat $(@:%.ok=%\/log) ; exit 1)\n+\techo $@ passed at `date` > $@\n+\n+$(BUILDTESTDIR)\/verifyexclude.good.invoke.group.ok: \\\n+                $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/javatest.jar\n+\t$(RM) $(@:%.ok=%\/work) $(@:%.ok=%\/report)\n+\t$(MKDIR) -p $(@:%.ok=%)\n+\t$(JDKHOME)\/bin\/java \\\n+\t\t-Djavatest.regtest.showCmd=true \\\n+\t\t-jar $(JTREG_IMAGEJARDIR)\/jtreg.jar \\\n+\t\t-w:$(@:%.ok=%\/work) \\\n+\t\t-r:$(@:%.ok=%\/report) \\\n+\t\t-exclude:$(TESTDIR)\/verifyexclude\/ProblemList\/good.txt \\\n+\t\t--verify-exclude \\\n+\t\t$(TESTDIR)\/verifyexclude:group1 \\\n+\t\t> $(@:%.ok=%\/log) \\\n+\t    || (cat $(@:%.ok=%\/log) ; exit 1)\n+\techo $@ passed at `date` > $@\n+\n+$(BUILDTESTDIR)\/verifyexclude.good.verbose.ok: \\\n+                $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/javatest.jar\n+\t$(RM) $(@:%.ok=%\/work) $(@:%.ok=%\/report)\n+\t$(MKDIR) -p $(@:%.ok=%)\n+\t$(JDKHOME)\/bin\/java \\\n+\t\t-Djavatest.regtest.showCmd=true \\\n+\t\t-jar $(JTREG_IMAGEJARDIR)\/jtreg.jar \\\n+\t\t-w:$(@:%.ok=%\/work) \\\n+\t\t-r:$(@:%.ok=%\/report) \\\n+\t\t-v \\\n+\t\t-exclude:$(TESTDIR)\/verifyexclude\/ProblemList\/good.txt \\\n+\t\t--verify-exclude \\\n+\t\t$(TESTDIR)\/verifyexclude \\\n+\t\t> $(@:%.ok=%\/log) \\\n+\t    || (cat $(@:%.ok=%\/log) ; exit 1)\n+\t$(GREP) -s \"Testsuite:\" $(@:%.ok=%\/log)\n+\techo $@ passed at `date` > $@\n+\n+$(BUILDTESTDIR)\/verifyexclude.good.verbose.all.ok: \\\n+                $(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t\t$(JTREG_IMAGEDIR)\/lib\/javatest.jar\n+\t$(RM) $(@:%.ok=%\/work) $(@:%.ok=%\/report)\n+\t$(MKDIR) -p $(@:%.ok=%)\n+\t$(JDKHOME)\/bin\/java \\\n+\t\t-Djavatest.regtest.showCmd=true \\\n+\t\t-jar $(JTREG_IMAGEJARDIR)\/jtreg.jar \\\n+\t\t-w:$(@:%.ok=%\/work) \\\n+\t\t-r:$(@:%.ok=%\/report) \\\n+\t\t-va \\\n+\t\t-exclude:$(TESTDIR)\/verifyexclude\/ProblemList\/good.txt \\\n+\t\t--verify-exclude \\\n+\t\t$(TESTDIR)\/verifyexclude \\\n+\t\t> $(@:%.ok=%\/log) \\\n+\t    || (cat $(@:%.ok=%\/log) ; exit 1)\n+\t$(GREP) -s \"All recognized tests:\" $(@:%.ok=%\/log)\n+\techo $@ passed at `date` > $@\n+\n@@ -190,1 +279,4 @@\n-\t$(BUILDTESTDIR)\/verifyexclude.shortform.ok\n+\t$(BUILDTESTDIR)\/verifyexclude.shortform.ok \\\n+\t$(BUILDTESTDIR)\/verifyexclude.good.invoke.direct.ok \\\n+\t$(BUILDTESTDIR)\/verifyexclude.good.verbose.all.ok \\\n+\t$(BUILDTESTDIR)\/verifyexclude.good.verbose.ok\n","filename":"test\/verifyexclude\/VerifyExcludeTest.gmk","additions":98,"deletions":6,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-public class Pass {\n+public class Pass3 {\n","filename":"test\/verifyexclude\/p\/g\/Pass3.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/verifyexclude\/p\/Pass.java","status":"copied"}]}