{"files":[{"patch":"@@ -28,0 +28,5 @@\n+import org.junit.jupiter.api.extension.AnnotatedElementContext;\n+import org.junit.jupiter.api.extension.ExtensionContext;\n+import org.junit.jupiter.api.io.CleanupMode;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.junit.jupiter.api.io.TempDirFactory;\n@@ -49,0 +54,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -150,0 +158,2 @@\n+                    .configurationParameter(TempDir.DEFAULT_CLEANUP_MODE_PROPERTY_NAME, CleanupMode.NEVER.name())\n+                    .configurationParameter(TempDir.DEFAULT_FACTORY_PROPERTY_NAME, ScratchAsTemporaryDirectory.class.getName())\n@@ -312,0 +322,16 @@\n+\n+    \/**\n+     * Custom temporary directory factory for JUnit Jupiter tests.\n+     * <p>\n+     * When jtreg executes a test, the current directory for the test is set\n+     * to a scratch directory so that the test can easily write any temporary\n+     * files. This implementation ensures JUnit's standard factory follows\n+     * that rule.\n+     *\/\n+    static class ScratchAsTemporaryDirectory implements TempDirFactory {\n+        @Override\n+        public Path createTempDirectory(AnnotatedElementContext context, ExtensionContext extensionContext) throws Exception {\n+            Path scratchDirectory = Paths.get(\"\").toAbsolutePath();\n+            return Files.createTempDirectory(scratchDirectory, \"junit-\");\n+        }\n+    }\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/agent\/JUnitRunner.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-\t$(GREP) -s 'Test results: passed: 2; failed: 2' $(@:%.ok=%\/jt.log)  > \/dev\/null\n+\t$(GREP) -s 'Test results: passed: 3; failed: 2' $(@:%.ok=%\/jt.log)  > \/dev\/null\n","filename":"test\/junitTrace\/JUnitTrace.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+\/*\n+ * @test\n+ * @bug 7903953\n+ * @run junit JupiterTempDir\n+ *\/\n+class JupiterTempDir {\n+    @Test\n+    void currentWorkingDirectoryIsParentOfTemporaryDirectory(@TempDir Path temporary) {\n+        assumeTrue(System.getProperty(\"test.file\") != null, \"jtreg not running\");\n+\n+        assertTrue(Files.isDirectory(temporary), \"temporary directory expected\");\n+\n+        var currentWorkingDirectory = Path.of(\"\");\n+        var expected = currentWorkingDirectory.toAbsolutePath().toString();\n+        var actual = temporary.getParent().toAbsolutePath().toString();\n+\n+        assertEquals(expected, actual, \"unexpected parent directory for temporary files\");\n+    }\n+}\n","filename":"test\/junitTrace\/JupiterTempDir.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}