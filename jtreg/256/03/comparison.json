{"files":[{"patch":"@@ -251,1 +251,1 @@\n-                return createLibLocn(lib, absBaseSrcDir, absBaseClsDir);\n+                return createLibLocn(lib, absBaseSrcDir, absTestClsDir);\n@@ -259,1 +259,1 @@\n-                            return createLibLocn(lib, extRoot, absBaseClsDir);\n+                            return createLibLocn(lib, extRoot, absTestClsDir);\n@@ -286,1 +286,1 @@\n-                return createLibLocn(lib, absTestSrcDir, absBaseClsDir.resolve(relLibDir));\n+                return createLibLocn(lib, absTestSrcDir, absTestClsDir.resolve(relLibDir));\n","filename":"src\/share\/classes\/com\/sun\/javatest\/regtest\/config\/Locations.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -257,5 +257,8 @@\n-those classes. A test that relies upon library classes should contain appropriate\n-<code>@build<\/code> directives to ensure that the classes will be compiled.\n-It is strongly recommended that tests do not rely on the use of implicit compilation\n-by the Java compiler. Such an approach is generally fragile, and may lead to\n-incomplete recompilation when a test or library code has been modified.\n+those classes. The library directory is used as additional sourcepath for test compilation.\n+So jtreg impliitly compiles all test dependcies that are located in library directory.\n+A test that relies upon library classes might contain appropriate\n+<code>@build<\/code> directives to explictily point classes to be compiled.\n+This might be useful when test depends on linbrary classes during runtime only.\n+\n+<p>\n+The implicit usage might cause incomplete recompilation when a test or library code has been modified.\n","filename":"src\/share\/doc\/javatest\/regtest\/tag-spec.html","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main Test Test A LA\n+ * @run main Test Test A LA lib.LA\n@@ -33,1 +33,1 @@\n- * @run main Test Test A B C LA LB LC\n+ * @run main Test Test A B C LA LB LC lib.LA lib.LB lib.LC\n@@ -35,1 +35,1 @@\n- * @run main Test Test A B C LA LB LC p.PA p.LPA\n+ * @run main Test Test A B C LA LB LC p.PA p.LPA lib.LC lib.LA lib.LB lib.p.LPA\n@@ -37,1 +37,1 @@\n- * @run main Test Test A B C LA LB LC p.PA p.PB p.PC p.LPA p.LPB p.LPC\n+ * @run main Test Test A B C LA LB LC p.PA p.PB p.PC p.LPA p.LPB p.LPC lib.LA lib.LB lib.LC lib.p.LPA lib.p.LPB lib.p.LPC\n","filename":"test\/build-wildcards\/tests\/Test.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,2 +75,4 @@\n-            \"lib\/p\/Lib1.class\",\n-            \"lib\/p\/Lib2.class\",\n+            \"std\/Test1.d\/lib\/p\/Lib1.class\",\n+            \"std\/Test1.d\/lib\/p\/Lib2.class\",\n+            \"std\/Test2.d\/lib\/p\/Lib1.class\",\n+            \"std\/Test2.d\/lib\/p\/Lib2.class\",\n@@ -95,2 +97,4 @@\n-            \"lib\/p\/Lib1.class\",\n-            \"lib\/p\/Lib2.class\",\n+            \"std\/Test1.d\/lib\/p\/Lib1.class\",\n+            \"std\/Test1.d\/lib\/p\/Lib2.class\",\n+            \"std\/Test2.d\/lib\/p\/Lib1.class\",\n+            \"std\/Test2.d\/lib\/p\/Lib2.class\",\n@@ -136,2 +140,2 @@\n-            \"lib\/p\/Lib1.class\",\n-            \"lib\/p\/Lib2.class\",\n+            \"testng\/lib\/p\/Lib1.class\",\n+            \"testng\/lib\/p\/Lib2.class\",\n@@ -157,2 +161,4 @@\n-            \"lib\/p\/Lib1.class\",\n-            \"lib\/p\/Lib2.class\",\n+            \"std\/Test1.d\/p\/Lib1.class\",\n+            \"std\/Test1.d\/p\/Lib2.class\",\n+            \"std\/Test2.d\/p\/Lib1.class\",\n+            \"std\/Test2.d\/p\/Lib2.class\",\n@@ -161,0 +167,2 @@\n+            \"testng\/lib\/p\/Lib1.class\",\n+            \"testng\/lib\/p\/Lib2.class\",\n@@ -180,2 +188,2 @@\n-            \"lib\/p\/Lib1.class\",\n-            \"lib\/p\/Lib2.class\",\n+            \"testng\/lib\/p\/Lib1.class\",\n+            \"testng\/lib\/p\/Lib2.class\",\n","filename":"test\/classDirs\/ClassDirsTest.java","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,2 +23,0 @@\n-\n-JUnit.dirs = .\n\\ No newline at end of file\n","filename":"test\/libs-build-implicit\/TEST.ROOT","additions":1,"deletions":3,"binary":false,"changes":4,"previous_filename":"test\/junitQueryTest\/a\/b\/c\/TEST.properties","status":"copied"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+public class LibA {\n+\n+    public static void name() {\n+       \/\/ do nothing\n+     throw new RuntimeException();\n+    }\n+\n+}\n","filename":"test\/libs-build-implicit\/lib\/LibA.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,1 @@\n+\n@@ -22,0 +23,1 @@\n+ *\n@@ -24,1 +26,2 @@\n-package java\/io;\n+public class LibB extends LibA {\n+  public static void main(String args[]) {\n@@ -26,4 +29,2 @@\n-public class IOHelper2\n-    version 58:0\n-{\n-} \/\/ end class IOHelper2\n+  }\n+}\n","filename":"test\/libs-build-implicit\/lib\/LibB.java","additions":6,"deletions":5,"binary":false,"changes":11,"previous_filename":"test\/modlibs\/compileAction\/patch\/java.base\/java\/io\/IOHelper2.jasm","status":"copied"},{"patch":"@@ -0,0 +1,39 @@\n+#\n+# Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+\n+$(BUILDTESTDIR)\/libsBuildImplicit.ok: \\\n+\t$(JTREG_IMAGEDIR)\/lib\/jtreg.jar \\\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg\n+\t$(RM) $(@:%.ok=%) ; $(MKDIR) $(@:%.ok=%)\n+\t$(JTREG_IMAGEDIR)\/bin\/jtreg $(JTREG_OPTS) \\\n+\t\t-w:$(@:%.ok=%)\/work -r:$(@:%.ok=%)\/report \\\n+\t\t-jdk:$(JDKHOME) \\\n+\t\t$(TESTDIR)\/libs-build-implicit \\\n+\t\t\t> $(@:%.ok=%\/jt.log) 2>&1\n+\techo \"test passed at `date`\" > $@\n+\n+TESTS.jtreg += \\\n+\t$(BUILDTESTDIR)\/libsBuildImplicit.ok\n","filename":"test\/libs-build-implicit\/libsBuildImplicit.gmk","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary This test tries to build LibA implicitly and LibB explictitly.\n+ * @library \/lib\n+ * @build Test1\n+ * @run main LibB\n+ * @run main Test1\n+ *\/\n+\n+public class Test1 extends LibA {\n+  public static void main(String args[]) {\n+\n+\n+  }\n+}\n","filename":"test\/libs-build-implicit\/test\/Test1.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2025, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\n+\/*\n+ * @test\n+ * @summary Test executes LibB that should have been build in 2 steps by Test1\n+ * @library \/lib\n+ * @run main LibB\n+ * @run main Test2\n+ *\/\n+\n+public class Test2 {\n+  public static void main(String args[]) {\n+\n+\n+  }\n+}\n","filename":"test\/libs-build-implicit\/test\/Test2.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -0,0 +1,8 @@\n+.\/classes\/buildAction\/BuildLibPatch.d\/libs\/patchmods\/java.base\/java\/util\/streams\/StreamsHelper.class\n+.\/classes\/buildAction\/BuildLibPkg.d\/libs\/packages\/lp\/lp_C.class\n+.\/classes\/buildAction\/BuildLibUserModClass.d\/libs\/usermods\/lum1\/lum1_p1\/lum1_p1_C.class\n+.\/classes\/buildAction\/BuildLibUserModClass.d\/libs\/usermods\/lum1\/module-info.class\n+.\/classes\/buildAction\/BuildLibUserModClasses.d\/libs\/usermods\/lum2\/lum2_p1\/lum2_p1_C.class\n+.\/classes\/buildAction\/BuildLibUserModClasses.d\/libs\/usermods\/lum2\/module-info.class\n+.\/classes\/buildAction\/BuildLibUserModClasses.d\/libs\/usermods\/lum3\/lum3_p1\/lum3_p1_C.class\n+.\/classes\/buildAction\/BuildLibUserModClasses.d\/libs\/usermods\/lum3\/module-info.class\n@@ -26,8 +34,0 @@\n-.\/classes\/libs\/packages\/lp\/lp_C.class\n-.\/classes\/libs\/patchmods\/java.base\/java\/util\/streams\/StreamsHelper.class\n-.\/classes\/libs\/usermods\/lum1\/lum1_p1\/lum1_p1_C.class\n-.\/classes\/libs\/usermods\/lum1\/module-info.class\n-.\/classes\/libs\/usermods\/lum2\/lum2_p1\/lum2_p1_C.class\n-.\/classes\/libs\/usermods\/lum2\/module-info.class\n-.\/classes\/libs\/usermods\/lum3\/lum3_p1\/lum3_p1_C.class\n-.\/classes\/libs\/usermods\/lum3\/module-info.class\n@@ -38,0 +38,2 @@\n+.\/classes\/mainAction\/usermods\/UseUserModAsLib.d\/libs\/usermods\/lum1\/lum1_p1\/lum1_p1_C.class\n+.\/classes\/mainAction\/usermods\/UseUserModAsLib.d\/libs\/usermods\/lum1\/module-info.class\n","filename":"test\/modlibs\/expect-classes.txt","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}